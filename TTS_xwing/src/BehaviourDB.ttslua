-- ~~~~~~
-- Script by shiprib
-- Issues, history at: https://github.com/JohnnyCheese/TTS_X-Wing2.0
--
-- Module for storing different AI behaviour engines and individual ship
-- behaviours
-- ~~~~~~

BehaviourDB = {}
BehaviourDB.GetRuleSet = function()
    return BehaviourDB.rule_sets[1]
end

BehaviourDB.rule_sets = {}

--[[ A "rule set" is an AI ruleset that fits with the HotAC template defined by
the 0.7 version of Heroes of the Aturi Cluster by Josh Derksen:
http://dockingbay416.com/campaign/
HotAC 0.7 is for v1 of X-Wing however there have been several v2 adaptations
published.
]]

--[[ Each behaviour set is represented by a table in the following format:
name: String used to identify which set this is. This should contain the
    author and the date of last publication
usesBullseyeArc: A boolean, true if this behaviour set uses the bullseye arc.
degreesToArc: A function that the AI calls to convert the angle from its ship
    to its target into the name of the arc in its maneuver lookup table. This
    is here, rather than generalised, because different behaviour sets have
    different numbers of arcs.
    It takes a single argument (float), which is the angle from the AI ship to
    its target. Sample parameter values are:
        -180: directly behind
        -135: behind and to the left
        -90: directly to the left
        0: directly ahead
        90: directly to the right
        180: directly behind (identical to -180)
    It returns a table with the following keys:
        target_arc: String, the name of the arc. This can be anything, as long
            as it matches the arc names in the ship lookup tables.
        arc_parts: Table of strings, one or two of "front", "back", "left", or
            "right". These correspond to the sides of the AI ship that we needs
            to do range-checking from. These should be the two closest sides to
            the target arc.
flipArc: A function that takes one arc and flips it left-to-right. HotAC AI
    tables typically only cover the right half of the arc spectrum and rely
    on flipping the right arcs when the target is to the left.
    Takes a single argument (string), the name of the arc to flip
    Returns a string, which is the opposite of the specified arc.
targetSelectionFunctions: A table containing custom target selection functions.
    TODO: This has not been implemented yet!
ships: A table containing the AI data for each ship. This table is keyed with
the ID numbers found in the Datapad Lua script. The format for ships is below.
]]

--[[ Each ship is represted by a table with the following format:
target_selection: An ordered table containing the function names used for
    choosing a target, sorted by priority. There is a base set of functions
    defined in the core AI module, these are:
        'ClosestInArc': selects the closest ship, in the front arc, at range 1-3
        'Closest': selects the closest ship. Treats range 0 as range 1 directly
            behind.
move_table: A table containing the ship's move data, organised into arcs and
    distances.
    The first depth of tbe table, the arc, is defined by the ruleset in
        the function "degreesToArc". The only one specified by the underlying
        system is 'bullseye', which is only used if 'usesBullseyeArc' is true.
    The second depth of the table, the distance, is one of four:
        'near': the target is at range 0 or 1, or at range 2 and is moving
            towards the AI ship.
        'far': the target is at range 3, or at range 2 and is moving away from
            the AI ship.
        'distant': the target is at range 4 or beyond.
        'stress': the AI ship is stressed, and the target's range is irrelevant.
]]

-- This is the upgrade of the HotAC-style AI to X-wing v2, ultimately published
-- by Justin Gan. The AIs cover all three Rebellion-era factions and are made
-- for the broader Flight Group Alpha ruleset.
-- see: https://www.facebook.com/groups/872507722883025/permalink/1970166016450518/
BehaviourDB.rule_sets[1] = {}
BehaviourDB.rule_sets[1]['name'] = 'XW-v2-FGA-v7-Gan-2020-04-07'
BehaviourDB.rule_sets[1]['usesBullseyeArc'] = true
BehaviourDB.rule_sets[1]['degreesToArc'] = function(angle_to_target)
    result = {}
    if angle_to_target < -135 then
        result.target_arc = 'back_left'
        result.arc_parts = {'back', 'left'}
    elseif angle_to_target < -90 then
        result.target_arc = 'left_back'
        result.arc_parts = {'left', 'back'}
    elseif angle_to_target < -45 then
        result.target_arc = 'left_front'
        result.arc_parts = {'left', 'front'}
    elseif angle_to_target < 0 then
        result.target_arc = 'front_left'
        result.arc_parts = {'front', 'left'}
    elseif angle_to_target < 45 then
        result.target_arc = 'front_right'
        result.arc_parts = {'front', 'right'}
    elseif angle_to_target < 90 then
        result.target_arc = 'right_front'
        result.arc_parts = {'right', 'front'}
    elseif angle_to_target < 135 then
        result.target_arc = 'right_back'
        result.arc_parts = {'right', 'back'}
    else
        result.target_arc = 'back_right'
        result.arc_parts = {'back', 'right'}
    end

    return result;
end
BehaviourDB.rule_sets[1]['flipArc'] = function(arc)
    if string.find(arc, 'left') then
        arc = string.gsub(arc, 'left', 'right')
    elseif string.find(targetArc, 'right') then
        arc = string.gsub(arc, 'right', 'left')
    end

    return arc
end

BehaviourDB.rule_sets[1].ships = {}
-- TIE/ln Fighter
BehaviourDB.rule_sets[1].ships[11] = {}
BehaviourDB.rule_sets[1].ships[11].target_selection = {[1]='ClosestInArc', [2]='Closest'}
BehaviourDB.rule_sets[1].ships[11].move_table = {
    ['bullseye'] = {
        ['near'] = {[1] = 'k4', [3] = 'bl2', [4] = 'br2', [5] = 's2'},
        ['far'] = {[1] = 's2', [5] = 's3'},
        ['distant'] = {[1] = 's4', [2] = 's5'},
        ['stress'] = {[1] = 'bl2', [3] = 'br2', [5] = 's2'}
    },
    ['front_right'] = {
        ['near'] = {[1] = 'k4', [3] = 'tr1', [5] = 'br2'},
        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},
        ['distant'] = {[1] = 'br3', [5] = 's4'},
        ['stress'] = {[1] = 'br2', [4] = 's2', [6] = 's3'}
    },
    ['right_front'] = {
        ['near'] = {[1] = 'k4', [2] = 'tr1', [4] = 'tr2'},
        ['far'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},
        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},
        ['stress'] = {[1] = 'tr1', [2] = 'br2'}
    },
    ['right_back'] = {
        ['near'] = {[1] = 'k3', [2] = 'tr1', [5] = 'tr2'},
        ['far'] = {[1] = 'k3', [3] = 'tr1', [5] = 'tr2'},
        ['distant'] = {[1] = 'k3', [4] = 'tr1'},
        ['stress'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2'}
    },
    ['back_right'] = {
        ['near'] = {[1] = 'k4', [3] = 'k3', [5] = 'tr2'},
        ['far'] = {[1] = 'k3', [3] = 'tr1', [4] = 'tr3'},
        ['distant'] = {[1] = 'k3', [5] = 'tr1'},
        ['stress'] = {[1] = 'br2', [6] = 'tr3'}
    }
}
BehaviourDB.rule_sets[1].ships[11].action_selection = {
    [1] = { -- Barrel roll to avoid target's arc and still get a shot
        ['description'] = {['text'] = "%s barrel rolled to avoid %s's arc and still get a shot.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},
        ['action'] = 'barrelRoll',
        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}
    },
    [2] = { -- Barrel roll to get a shot
        ['description'] = "%s barrel rolled to get a shot.",
        ['preconditions'] = {['hasShot'] = false},
        ['action'] = 'barrelRoll',
        ['postconditions'] = {['hasShot'] = true},
    },
    [3] = { -- Focus if you have a shot
        ['description'] = "%s has a shot so focused.",
        ['preconditions'] = {['hasShot'] = true},
        ['action'] = 'focus'
    },
    [4] = { -- Barrel roll to avoid target's arc
        ['description'] = {['text'] = "%s barrel rolled to avoid %s's arc.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['inTargetsArc'] = true},
        ['action'] = 'barrelRoll',
        ['postconditions'] = {['inTargetsArc'] = false},
    },
    [5] = { -- Evade
        ['description'] = "%s evaded.",
        ['action'] = 'evade'
    }
}

-- TIE/in Interceptor
BehaviourDB.rule_sets[1].ships[41] = {}
BehaviourDB.rule_sets[1].ships[41].target_selection = {[1]='ClosestInArc', [2]='Closest'}
BehaviourDB.rule_sets[1].ships[41].move_table = {
    ['bullseye'] = {
        ['near'] = {[1] = 'k4', [2] = 'br3s', [4] = 'bl3s', [6] = 's2'},
        ['far'] = {[1] = 's2', [4] = 's3'},
        ['distant'] = {[1] = 's4', [2] = 's5'},
        ['stress'] = {[1] = 'tl2', [2] = 'tr2', [3] = 's2'},
    },
    ['front_right'] = {
        ['near'] = {[1] = 'bl3s', [3] = 'tr1', [5] = 'br2'},
        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},
        ['distant'] = {[1] = 'br3', [5] = 's4'},
        ['stress'] = {[1] = 'bl2', [2] = 'br2', [4] = 's2', [6] = 's4'},
    },
    ['right_front'] = {
        ['near'] = {[1] = 'k4', [2] = 'bl3s', [5] = 'tr1'},
        ['far'] = {[1] = 'tr2', [3] = 'br2', [5] = 'tr3'},
        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},
        ['stress'] = {[1] = 'tr2', [3] = 'bl2', [4] = 'br2', [6] = 's4'},
    },
    ['right_back'] = {
        ['near'] = {[1] = 'bl3s', [4] = 'tr1', [5] = 'tr2'},
        ['far'] = {[1] = 'k4', [2] = 'bl3s', [5] = 'tr2'},
        ['distant'] = {[1] = 'bl3s', [4] = 'tr1'},
        ['stress'] = {[1] = 'tl2', [2] = 'tr2', [5] = 'bl2', [6] = 's4'},
    },
    ['back_right'] = {
        ['near'] = {[1] = 'k4', [3] = 'bl3s', [5] = 'tr2'},
        ['far'] = {[1] = 'br3s', [3] = 'bl3s'},
        ['distant'] = {[1] = 'bl3s', [4] = 'tr1'},
        ['stress'] = {[1] = 'tl2', [4] = 'tr2', [6] = 's4'},
    },
}
BehaviourDB.rule_sets[1].ships[41].action_selection = {
    [1] = { -- Focus > boost or focus > barrel roll to avoid target's arc and still get a shot
        ['description'] = {['text'] = "%s barrel rolled/boosted and focused to avoid %s's arc and still get a shot.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},
        ['action'] = {
            [1] = {['focus'] = false, ['boost'] = true},
            [2] = {['focus'] = false, ['barrelRoll'] = true}
        },
        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}
    },
    [2] = { -- Boost > barrel roll or barrel roll > boost to get a shot
        ['description'] = "%s barrel rolled/boosted to get a shot.",
        ['preconditions'] = {['hasShot'] = false},
        ['action'] = {
            [1] = {['boost'] = false, ['barrelRoll'] = true},
            [2] = {['barrelRoll'] = false, ['boost'] = true}
        },
        ['postconditions'] = {['hasShot'] = true},
    },
    [3] = { -- Focus if you have a shot
        ['description'] = "%s has a shot so focused.",
        ['preconditions'] = {['hasShot'] = true},
        ['action'] = 'focus'
    },
    [4] = { -- Boost > barrel roll or barrel roll > boost to avoid target's arc
        ['description'] = {['text'] = "%s barrel rolled/boosted to avoid %s's arc.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['inTargetsArc'] = true},
        ['action'] = {
            [1] = {['boost'] = false, ['barrelRoll'] = true},
            [2] = {['barrelRoll'] = false, ['boost'] = true}
        },
        ['postconditions'] = {['inTargetsArc'] = false},
    },
    [5] = { -- Evade
        ['description'] = "%s evaded.",
        ['action'] = 'evade'
    }
}

-- TIE Advanced x1
BehaviourDB.rule_sets[1].ships[13] = {}
BehaviourDB.rule_sets[1].ships[13].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}
BehaviourDB.rule_sets[1].ships[13].move_table = {
    ['bullseye'] = {
        ['near'] = {[1] = 'k4', [3] = 's1', [5] = 's2'},
        ['far'] = {[1] = 's1', [3] = 's2', [6] = 's3'},
        ['distant'] = {[1] = 's4', [2] = 's5'},
        ['stress'] = {[1] = 'bl1', [2] = 'br2', [3] = 's2'},
    },
    ['front_right'] = {
        ['near'] = {[1] = 'k4', [3] = 'br1', [6] = 'br2'},
        ['far'] = {[1] = 'br1', [3] = 'br2', [6] = 's3'},
        ['distant'] = {[1] = 'br3', [5] = 's4'},
        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},
    },
    ['right_front'] = {
        ['near'] = {[1] = 'k4', [2] = 'tr3t', [4] = 'tr2'},
        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},
        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},
        ['stress'] = {[1] = 'br1', [3] = 'tr2', [4] = 'br2'},
    },
    ['right_back'] = {
        ['near'] = {[1] = 'tr3t', [4] = 'br1', [5] = 'tr2'},
        ['far'] = {[1] = 'k4', [2] = 'tr3t', [5] = 'tr2'},
        ['distant'] = {[1] = 'tr3t', [4] = 'tr3'},
        ['stress'] = {[1] = 'br1', [2] = 'tr2', [4] = 'br2'},
    },
    ['back_right'] = {
        ['near'] = {[1] = 'k4', [3] = 'tr3t', [5] = 'tr2'},
        ['far'] = {[1] = 'tl3t', [3] = 'tr3t'},
        ['distant'] = {[1] = 'tr3t', [4] = 'tr2'},
        ['stress'] = {[1] = 'br1', [4] = 'br2', [6] = 'tr3'},
    },
}
BehaviourDB.rule_sets[1].ships[13].action_selection = {
    [1] = { -- (target not moved) Target lock if not in target's arc
        ['description'] = {['text'] = "%s target locked %s.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inTargetsArc'] = false, ['targetWithinRange'] = true},
        ['action'] = 'targetLock'
    },
    [2] = { -- (target moved) Target lock
        ['description'] = {['text'] = "%s target locked %s.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},
        ['action'] = 'targetLock'
    },
    [3] = { -- (target moved) Focus > barrel roll to avoid target's arc and still get a shot
        ['description'] = {['text'] = "%s focused and barrel rolled to avoid %s's arc and still get a shot.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = true, ['inTargetsArc'] = true},
        ['action'] = {['focus'] = false, ['barrelRoll'] = true},
        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}
    },
    [4] = { -- (target moved) Focus > barrel roll to get a shot
        ['description'] = {['text'] = "%s focused and barrel rolled to get a shot.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},
        ['action'] = {['focus'] = false, ['barrelRoll'] = true},
        ['postconditions'] = {['hasShot'] = true},
    },
    [5] = { -- (target moved) Barrel roll to avoid target's arc
        ['description'] = {['text'] = "%s barrel rolled to avoid %s's arc.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetMoved'] = true, ['inTargetsArc'] = true},
        ['action'] = 'barrelRoll',
        ['postconditions'] = {['inTargetsArc'] = false},
    },
    [6] = { -- Focus
        ['description'] = "%s focused.",
        ['action'] = 'focus'
    }
}

-- TIE/sa Bomber
BehaviourDB.rule_sets[1].ships[19] = {}
BehaviourDB.rule_sets[1].ships[19].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}
BehaviourDB.rule_sets[1].ships[19].move_table = {
    ['bullseye'] = {
        ['near'] = {[1] = 'k5', [3] = 's1', [5] = 's2'},
        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},
        ['distant'] = {[1] = 's3', [2] = 's4'},
        ['stress'] = {[1] = 's1', [4] = 's2'},
    },
    ['front_right'] = {
        ['near'] = {[1] = 'k5', [3] = 'br1', [6] = 'br2'},
        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},
        ['distant'] = {[1] = 'br3', [5] = 's4'},
        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},
    },
    ['right_front'] = {
        ['near'] = {[1] = 'k5', [2] = 'k3', [4] = 'tr2'},
        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},
        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},
        ['stress'] = {[1] = 'br1', [3] = 'tr2', [4] = 'br2'},
    },
    ['right_back'] = {
        ['near'] = {[1] = 'k3', [4] = 'br1', [5] = 'tr2'},
        ['far'] = {[1] = 'k5', [2] = 'k3', [5] = 'tr2'}, -- On the card 1 is a k4. This is impossible for this ship so I've changed it to an k5.
        ['distant'] = {[1] = 'k3', [4] = 'tr2'},
        ['stress'] = {[1] = 'br1', [2] = 'tr2', [4] = 'br2'},
    },
    ['back_right'] = {
        ['near'] = {[1] = 'k5', [3] = 'k3', [5] = 'tr3'},
        ['far'] = {[1] = 'k3', [4] = 'tr2'},
        ['distant'] = {[1] = 'k3', [4] = 'tr2'},
        ['stress'] = {[1] = 'br1', [4] = 'br2', [6] = 'tr3'},
    },
}
BehaviourDB.rule_sets[1].ships[19].action_selection = {
    [1] = { --  Reload ordnance if no charges left
        ['pass_through'] = true,
        ['description'] = "If %s has no charges on its missile or torpedo upgrades, then undo the following action and take a red reload action.",
    },
    [2] = { --  Barrel roll > target lock to avoid target arc and still get a shot (with the > target lock)
        ['description'] = {['text'] = "%s barrel rolled and target locked to avoid %s's arc and still get a shot.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['inTargetsArc'] = true, ['hasShot'] = true, ['targetLocked'] = false},
        ['action'] = {['barrelRoll'] = false, ['targetLock'] = true},
        ['postconditions'] = {['inTargetsArc'] = false, ['hasShot'] = true, ['targetWithinRange'] = true},
    },
    [3] = { --  Barrel roll > target lock to avoid target arc and still get a shot (without the > target lock)
        ['description'] = {['text'] = "%s barrel rolled to avoid %s's arc and still get a shot.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['inTargetsArc'] = true, ['hasShot'] = true, ['targetLocked'] = true},
        ['action'] = {['barrelRoll'] = false},
        ['postconditions'] = {['inTargetsArc'] = false, ['hasShot'] = true},
    },
    [4] = { --  Barrel roll > target lock to get a shot (with the > target lock)
        ['description'] = "%s barrel rolled and target locked to get a shot.",
        ['preconditions'] = {['hasShot'] = false, ['targetLocked'] = false},
        ['action'] = {['barrelRoll'] = false, ['targetLock'] = true},
        ['postconditions'] = {['hasShot'] = true, ['targetWithinRange'] = true},
    },
    [5] = { --  Barrel roll > target lock to get a shot (without the > target lock)
        ['description'] = "%s barrel rolled to get a shot.",
        ['preconditions'] = {['hasShot'] = false, ['targetLocked'] = true},
        ['action'] = {['barrelRoll'] = false},
        ['postconditions'] = {['hasShot'] = true},
    },
    [6] = { -- Target lock
        ['description'] = {['text'] = "%s target locked %s.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},
        ['action'] = 'targetLock'
    },
    [7] = { -- Barrel roll to avoid target's arc
        ['description'] = {['text'] = "%s barrel rolled to avoid %s's arc.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['inTargetsArc'] = true},
        ['action'] = 'barrelRoll',
        ['postconditions'] = {['inTargetsArc'] = false},
    },
    [8] = { -- Focus
        ['description'] = "%s focused.",
        ['action'] = 'focus'
    }
}

-- TIE/de Defender
BehaviourDB.rule_sets[1].ships[18] = {}
BehaviourDB.rule_sets[1].ships[18].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}
BehaviourDB.rule_sets[1].ships[18].action_selection = {}
BehaviourDB.rule_sets[1].ships[18].move_table = {
    ['bullseye'] = {
        ['near'] = {[1] = 'k4', [3] = 'bl1', [4] = 'br1', [5] = 's2'},
        ['far'] = {[1] = 's2', [4] = 's3'},
        ['distant'] = {[1] = 's4', [2] = 's5'},
        ['stress'] = {[1] = 'bl1', [2] = 'br1', [3] = 's2'},
    },
    ['front_right'] = {
        ['near'] = {[1] = 'k4', [3] = 'br1', [6] = 'br2'},
        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},
        ['distant'] = {[1] = 'br3', [5] = 's4'},
        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},
    },
    ['right_front'] = {
        ['near'] = {[1] = 'k4', [4] = 'tr1', [6] = 'tr2'},
        ['far'] = {[1] = 'tr1', [2] = 'br2', [4] = 'tr3'},
        ['distant'] = {[1] = 'tr1', [2] = 'tr3'},
        ['stress'] = {[1] = 'br1', [4] = 's2', [5] = 'tr3'},
    },
    ['right_back'] = {
        ['near'] = {[1] = 'k4', [4] = 'br1', [5] = 'tr2'},
        ['far'] = {[1] = 'k4', [2] = 'tr2', [5] = 'tr3'},
        ['distant'] = {[1] = 'tr1', [3] = 'tr3'},
        ['stress'] = {[1] = 'br1', [5] = 'tr3'},
    },
    ['back_right'] = {
        ['near'] = {[1] = 'k4', [5] = 'tr3'},
        ['far'] = {[1] = 'k4', [5] = 'tr1'},
        ['distant'] = {[1] = 'tr1', [4] = 'tr3'},
        ['stress'] = {[1] = 'br1', [5] = 's2', [6] = 'tr3'},
    },
}
BehaviourDB.rule_sets[1].ships[18].action_selection = {
    [1] = { -- (target moved) Target lock
        ['description'] = {['text'] = "%s target locked %s.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},
        ['action'] = 'targetLock'
    },
    [2] = { -- (target moved) Boost or barrel roll to get a shot at range 1
        ['description'] = "%s barrel rolled/boosted to get a close range shot.",
        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = false}},
        ['action'] = {
            [1] = {['boost'] = false},
            [2] = {['barrelRoll'] = false}
        },
        ['postconditions'] = {['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = true}},
    },
    [3] = { -- (target moved) Boost or barrel roll to get a shot
        ['description'] = "%s barrel rolled/boosted to get a shot.",
        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},
        ['action'] = {
            [1] = {['boost'] = false},
            [2] = {['barrelRoll'] = false}
        },
        ['postconditions'] = {['hasShot'] = true},
    },
    [4] = { -- Barrel roll or boost to avoid target's arc
        ['description'] = {['text'] = "%s barrel roll/boosted to avoid %s's arc.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['inTargetsArc'] = true},
        ['action'] = {
            [1] = {['boost'] = false},
            [2] = {['barrelRoll'] = false}
        },
        ['postconditions'] = {['inTargetsArc'] = false},
    },
    [5] = { -- Evade, if not already
        ['description'] = "%s evaded.",
        ['preconditions'] = {['evading'] = false},
        ['action'] = 'evade'
    },
    [6] = { -- Focus
        ['description'] = "%s focused.",
        ['action'] = 'focus'
    }
}
BehaviourDB.rule_sets[1].ships[18].special_rules = {'fullThrottle'}

-- TIE/ph Phantom
BehaviourDB.rule_sets[1].ships[27] = {}
-- Need to add decloaking in the system phase
BehaviourDB.rule_sets[1].ships[27].target_selection = {[1]='ClosestInArc', [2]='Closest'}
BehaviourDB.rule_sets[1].ships[27].action_selection = {}
BehaviourDB.rule_sets[1].ships[27].move_table = {
    ['bullseye'] = {
        ['near'] = {[1] = 'k4', [4] = 'bl1', [5] = 'br1', [6] = 's2'},
        ['far'] = {[1] = 's2', [5] = 's3'},
        ['distant'] = {[1] = 's3', [2] = 's4'},
        ['stress'] = {[1] = 'bl2', [3] = 'br2', [5] = 's2'},
    },
    ['front_right'] = {
        ['near'] = {[1] = 'k4', [3] = 'br1', [5] = 'br2'},
        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},
        ['distant'] = {[1] = 'br3', [5] = 's4'},
        ['stress'] = {[1] = 'br2', [3] = 's2', [5] = 's3'},
    },
    ['right_front'] = {
        ['near'] = {[1] = 'k4', [3] = 'tr1', [5] = 'tr2'},
        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},
        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},
        ['stress'] = {[1] = 'tr1', [2] = 'br2'},
    },
    ['right_back'] = {
        ['near'] = {[1] = 'k4', [2] = 'tr1', [5] = 'tr2'},
        ['far'] = {[1] = 'k4', [2] = 'k3', [4] = 'tr2'},
        ['distant'] = {[1] = 'k3', [4] = 'tr1'},
        ['stress'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2'},
    },
    ['back_right'] = {
        ['near'] = {[1] = 'k4', [3] = 'k3', [5] = 'tr2'},
        ['far'] = {[1] = 'k4', [3] = 'k3'},
        ['distant'] = {[1] = 'k3', [4] = 'tr1'},
        ['stress'] = {[1] = 'br2', [5] = 's2', [6] = 'tr3'},
    },
}
BehaviourDB.rule_sets[1].ships[27].action_selection = {
    [1] = { -- Cloak if no shot
        ['description'] = "%s cloaked.",
        ['preconditions'] = {['hasShot'] = false},
        ['action'] = 'cloak'
    },
    [2] = { -- Evade if not already evading
        ['description'] = "%s evaded.",
        ['preconditions'] = {['evading'] = false},
        ['action'] = 'evade'
    },
    [3] = { -- Barrel roll to avoid target's arc and still get a shot
        ['description'] = {['text'] = "%s barrel rolled to avoid %s's arc and still get a shot.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},
        ['action'] = 'barrelRoll',
        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false},
    },
    [4] = { -- Focus
        ['description'] = "%s focused.",
        ['action'] = 'focus'
    }
}

-- T-4a Lambda-class Shuttle
BehaviourDB.rule_sets[1].ships[26] = {}
BehaviourDB.rule_sets[1].ships[26].target_selection = {[1]='ClosestInArc', [2]='Closest'}
BehaviourDB.rule_sets[1].ships[26].action_selection = {}
BehaviourDB.rule_sets[1].ships[26].move_table = {
    ['bullseye'] = {
        ['near'] = {[1] = 's0', [4] = 'bl1', [5] = 'br1', [6] = 's1'},
        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},
        ['distant'] = {[1] = 's2', [2] = 's3'},
        ['stress'] = {[1] = 's1', [4] = 's2'},
    },
    ['front_right'] = {
        ['near'] = {[1] = 's0', [3] = 'br1', [5] = 's1', [6] = 'tr2'},
        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},
        ['distant'] = {[1] = 'br3', [5] = 's3'}, -- On the card 5-6 is an s4. This is impossible for this ship so I've changed it to an s3.
        ['stress'] = {[1] = 'br1', [5] = 's1', [6] = 's2'},
    },
    ['right_front'] = {
        ['near'] = {[1] = 's0', [2] = 'br1', [4] = 'tr2'},
        ['far'] = {[1] = 'br1', [3] = 'tr2', [4] = 'br2'},
        ['distant'] = {[1] = 'tr2', [2] = 'br2'},
        ['stress'] = {[1] = 'br1', [5] = 's1'},
    },
    ['right_back'] = {
        ['near'] = {[1] = 's0', [2] = 'br1', [4] = 'tr2'},
        ['far'] = {[1] = 'br1', [3] = 'tr2'},
        ['distant'] = {[1] = 'br1', [3] = 'tr2'},
        ['stress'] = {[1] = 'br1', [6] = 's1'},
    },
    ['back_right'] = {
        ['near'] = {[1] = 's0', [3] = 'br1', [4] = 'tr2', [5] = 'br2'},
        ['far'] = {[1] = 'br1', [3] = 'tr2'},
        ['distant'] = {[1] = 'br1', [3] = 'tr2'},
        ['stress'] = {[1] = 'br1', [6] = 's1'},
    },
}
BehaviourDB.rule_sets[1].ships[26].action_selection = {
    [1] = { -- Focus if have a shot
        ['description'] = "%s has a shot so focused.",
        ['preconditions'] = {['hasShot'] = true},
        ['action'] = 'focus'
    },
    [2] = { -- Reinforce the fore if within arc of two or more enemies in that full arc
        ['description'] = "%s reinforced fore.",
        ['preconditions'] = {['inEnemyArc'] = {['arguments'] = {['arc'] = 'fullfront', ['enemyCount'] = 2}, ['requiredResult'] = true}},
        ['action'] = 'reinforceFore'
    },
    [3] = { -- Reinforce the aft if within arc of two or more enemies in that full arc
        ['description'] = "%s reinforced aft.",
        ['preconditions'] = {['inEnemyArc'] = {['arguments'] = {['arc'] = 'fullback', ['enemyCount'] = 2}, ['requiredResult'] = true}},
        ['action'] = 'reinforceAft'
    },
    [4] = { -- Coordinate the nearest friendly (unstressed) ship
        ['description'] = {['text'] = "%s coordinated %s.", ['strings'] = {'ship', 'coordinate'}},
        ['preconditions'] = {['hasCoordinateTarget'] = true},
        ['action'] = 'coordinate'
    },
    [5] = { -- Jam the target
        ['description'] = {['text'] = "%s jammed %s.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetWithinRange'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = true}},
        ['action'] = {['jam'] = true},
    },
    [6] = { -- Focus
        ['description'] = "%s focused.",
        ['action'] = 'focus'
    },
}

-- VT-49 Decimator
BehaviourDB.rule_sets[1].ships[28] = {}
BehaviourDB.rule_sets[1].ships[28].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}
BehaviourDB.rule_sets[1].ships[28].action_selection = {}
BehaviourDB.rule_sets[1].ships[28].move_table = {
    ['bullseye'] = {
        ['near'] = {[1] = 'tl2', [3] = 'tr2', [5] = 'tl3', [6] = 'tr3'},
        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},
        ['distant'] = {[1] = 's3', [2] = 's4'},
        ['stress'] = {[1] = 's1', [4] = 's2'},
    },
    ['front_right'] = {
        ['near'] = {[1] = 'bl1', [3] = 'tl2', [6] = 'bl2'},
        ['far'] = {[1] = 'br1', [4] = 'br2', [6] = 's3'},
        ['distant'] = {[1] = 'br3', [5] = 's3'},
        ['stress'] = {[1] = 'bl1', [2] = 'br1', [5] = 's2'},
    },
    ['right_front'] = {
        ['near'] = {[1] = 'bl1', [2] = 'br2', [4] = 's2'},
        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},
        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},
        ['stress'] = {[1] = 'br1', [5] = 'tr2'},
    },
    ['right_back'] = {
        ['near'] = {[1] = 'tr1', [4] = 'br1', [5] = 'tr2'},
        ['far'] = {[1] = 'tr1', [2] = 'tr2', [5] = 'tr3'},
        ['distant'] = {[1] = 'tr1', [3] = 'tr2'},
        ['stress'] = {[1] = 'br1', [4] = 'br2'},
    },
    ['back_right'] = {
        ['near'] = {[1] = 'br1', [3] = 'tr2', [5] = 'tr3'},
        ['far'] = {[1] = 'tl2', [3] = 'tr2'},
        ['distant'] = {[1] = 'tl2', [2] = 'tr3'},
        ['stress'] = {[1] = 'br1', [4] = 's1', [6] = 'tr3'},
    },
}
BehaviourDB.rule_sets[1].ships[28].action_selection = {
    [1] = { -- Rotate turret to get a shot
        ['description'] = "%s rotated its turret to get a shot.",
        ['preconditions'] = {['hasShot'] = {['arguments'] = {['includeArcs'] = {'front'}}, ['requiredResult'] = false}},
        ['action'] = {['rotateTurret'] = {['mount'] = 'main'}},
        ['postconditions'] = {['hasShot'] = {['arguments'] = {['includeArcs'] = {'front'}}, ['requiredResult'] = true}},
    },
    [2] = { -- (target not moved) Target lock if not in any arcs
        ['description'] = {['text'] = "%s target locked %s.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},
        ['action'] = 'targetLock'
    },
    [3] = { -- (target moved) Target lock
        ['description'] = {['text'] = "%s target locked %s.", ['strings'] = {'ship', 'target'}},
        ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},
        ['action'] = 'targetLock'
    },
    [4] = { -- Reinforce the fore if within arc of two or more enemies in that full arc
        ['description'] = "%s reinforced fore.",
        ['preconditions'] = {['inEnemyArc'] = {['arguments'] = {['arc'] = 'fullfront', ['enemyCount'] = 2}, ['requiredResult'] = true}},
        ['action'] = 'reinforceFore'
    },
    [5] = { -- Reinforce the aft if within arc of two or more enemies in that full arc
        ['description'] = "%s reinforced aft.",
        ['preconditions'] = {['inEnemyArc'] = {['arguments'] = {['arc'] = 'fullback', ['enemyCount'] = 2}, ['requiredResult'] = true}},
        ['action'] = 'reinforceAft'
    },
    [6] = { -- Focus
        ['description'] = "%s focused.",
        ['action'] = 'focus'
    },
}
