{
    "SaveName": " X-Wing Dev",
    "EpochTime": 1624949945,
    "Date": "6/28/2021 11:59:05 PM",
    "VersionNumber": "v13.1.1",
    "GameMode": "X-Wing 2.0",
    "GameType": "",
    "GameComplexity": "Medium Complexity",
    "PlayingTime": [
      0,
      90
    ],
    "PlayerCounts": [
      2,
      8
    ],
    "Tags": [
      "Miniature Games",
      "Strategy Games",
      "Thematic Games",
      "Dice Games",
      "Board Games",
      "Cards",
      "Components",
      "Dice",
      "Figurines",
      "Scripting",
      "Scripting: Automated"
    ],
    "Gravity": 0.5,
    "PlayArea": 0.5,
    "Table": "Table_Custom",
    "TableURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/table.jpg",
    "Sky": "Sky_Museum",
    "SkyURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/sky.jpg",
    "Note": "[44aaff]TTS X-Wing Discord:[-]\n[999999](text/voice chat, help, LFG)[-]\nhttps://discord.gg/WHKXDBD\n[i]Info on recently added features\ncan be found in the notebook[/i]\n\nVersion 1.11.11\n- The new dial assignment module will announce if all assigned dials have been set properly\n- Dial now use the onFlip event\n- Dial now unsets previously selected manouver after performing a move\n- Changing textures of ships with configs (x-wings / b-wings and such) now forces a reload of attached config parts.\n\nOriginal script - Dzikakulka \nAdapted script - Johnny Cheese\nMaintained by - Flipppster\nAditional scripting - Shiprib, vitreuz\nModelling and more - FabioOtto, CrazyVulcan",
    "TabStates": {
      "17": {
        "title": "Playmats",
        "body": "To change a playmat image, use the 'NEXT PLAYMAT' button on the very side of the board\n\nTo add an image to the available set, open Host-> Scripting menu, choose the \"[side] Playmat\" tab, and refer to first lines of the script.\nAlternatively, contact the author about what you would like to add.\n\nThe 'CHANGE MAT TYPE' button allows you to have clear rectangle mat but at the expense of plastic click sound on colision with it.\nThis is how built-in TTS object types (custom board and custom tile) work, can't change their properties.\n",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 17
      },
      "14": {
        "title": "Rules",
        "body": "**The rules have all setup info**\nRules PDF: \nhttps://images-cdn.fantasyflightgames.com/filer_public/40/b4/40b44d5f-7a06-406c-ae6e-183c5297e796/swx36_rulesreference.pdf\n\nMost Recent FAQ:\nhttps://images-cdn.fantasyflightgames.com/filer_public/3a/d1/3ad18ffb-443d-45d1-837e-b542bc1ffe2f/x-wing_faq_v411.pdf\n\nStep by Step tutorial:\nhttps://www.reddit.com/r/XWingTMG/comments/4bk3jw/pic_tutorial_for_xwing_on_tabletop_simulator_step/\n\n\r\n",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 14
      },
      "13": {
        "title": "Movement",
        "body": "Everything you need to know about this mod is avialble at its wiki page(s):\n\nhttps://github.com/tjakubo2/TTS_xwing/wiki\n\nThis below is a quick rundown:\n\nAny models that are loaded into the map will have the script running.\n\r\nTo use \"commands\" there are 3 simple steps:\r\n1. Right click the model you intend to move\r\n2. Under ship name, there will be an empty text box (dim \"Description\" label visible), enter your command there\r\r\n3. Click anywhere on the map (closing the context menu)\n\r\nBoom! Your ship will automatically move.\r\n\nIf your ship model is not standard (didn't came from the Collection  or Squad Builder), to make it move like a large base ship you have to add 'LGS' anywhere in its name.\n\r\nMove List (# = speed of the move: 1-5)\nexamples\r\n3 bank left = bl3 (or be3)\r\n2 turn right = tr2\n\r\ns# = straight # \r\nk# = koiogran turn #\r\nbr# = bank right #\r\ntr# = turn right #\r\nbl# = bank left #\r\ntl# = turn left #\r\n\r\nAlternative left moves:\r\nbe# = bank left #\r\nte# = turn left #\r\n\r\nbl#s = Segnor's loop left #\nbr#s = Segnor's loop right #\n\ntl#t = Talon roll left #\ntr#t = Talon roll right #\n\ntl#z = Slip turn left #\ntr#z = Slip turn right #\n\nbl#z = Slip bank left #\nbr#z = Slip bank right #\n\nbl#r  = Reverse bank left #\nbr#r = Reverse bank right #\ns#r = Reverse #\n\nrl2 = Barrel Roll left\nrr2 = Barrel Roll right\nrl1 = Barrel Roll left forward\nrr1 = Barrel Roll right forward\nrl3 = Barrel Roll left back\nrr3 = Barrel Roll right back\n\ncs = decloak straight\ncl1 = decloak left forward\ncl2 = decloak left\ncl3 = decloak left back\ncr1 = decloak right forward\ncr2 = decloak right\ncr3 = decloak right back\n\nEcho decloaking available with the decloack token (drop the token on the ship and the appropriate buttons will appear\n\nr = range/arc ruler \n\nr (on a bomb token) = range 1 template\n\nq/undo = Undo the ship position to last saved one. Positions are automatically saved before/after a move and can be saved manually (refer to 'keep')\r\n\nz/redo = Redo ship position if you undid ('q/undo') accidentally\n\nkeep = Save a ship's location.  After using the keep command you can pick up and move the ship around then use 'q' to return the ship to the saved location.\n\nFor more advanced commands, check:\nhttps://github.com/tjakubo2/TTS_xwing/wiki/Doc%3A-Commands\n\nNote: Ships automatically lock after auto movement.  You can right click on the ship to manually enter moves (ie barrel roll after movement).  You can also unlock the ship to move it for any reason.\n\nAUTO DIALS GUIDE:\nPlace your ship models in your hiden zone and click \"Assign Dials\". If you have more than 6, right click the adjacent zone with zone tool (F4) and change it to your color, then use the button next to it.\r\n",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 13
      },
      "19": {
        "title": "Source",
        "body": "The mod current mod database:\nhttps://github.com/JohnnyCheese/TTS_X-Wing2.0/\n\n\nDzikakulka origitnal mod database:\nhttps://github.com/tjakubo2/TTS_xwing/\n",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 19
      },
      "23": {
        "title": "SV rolls",
        "body": "AS OF 1.1.9\n\n[b]StarViper Mk.II rolls:[/b]\n\nWhen Spawning a StarViper ship, there will be a special token beside the ship.\n\nDrop the token that spawned with the upgrade near its ship.\n\n(you can then move it away and use when neccesary)\n\nThe token will show the appropriate buttons to perform SV rolls.",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 23
      },
      "24": {
        "title": "New rulers",
        "body": "AS OF 1.1.12\n\nRuler commands and dial buttons changed\n\n[b]ON A DIAL:[/b]\n \n - Click 1/2/3 to spawn appropriate range rings\n - Click Front, Right, Left or Rear to spawn appropriate arc ruler\n\n[b]NEW COMMANDS:[/b]\n\n\nr1 = spawn range 1 ring\nr2 = spawn range 1 ring\nr3 = spawn range 1 ring\nr = spawn 1-3 range rulers\nf = spawn f arc ruler\nff = spawn front 180 arc ruler\nsr = spawn right arc ruler\nsl = spawn left arc ruler\nb = spawn rear arc ruler\nfb = spawn full 180 back arc ruler\n\n",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 24
      },
      "25": {
        "title": "Bomb drop",
        "body": "AS OF 1.1.21\n\nYou can drop bombs easily using comamnds or \"Bomb drop token\" spawned with your squad using Squad Builder.\n\n[b]USING THE BOMB TOKEN:[/b]\n\nIt will spawn with your ship if it has any bomb upgrades. Will be ready to use and configured with extra drop otpion pilots/upgrades allow.\nYou can also grab a universal one from near bomb tokens sources.\n\n1. Pick it up and drop near your ship with boms to assign (only once, probably will happen by itself when you move squad from the tray to your side)\n\n2. Click 'Drop bomb\" when you want to drop one\n\n3. Click a button representing template which you want to use ('s1' - straight 1 and so on, if it has 'r' on its end it goes out of the front) - a template will spawn\n\n4. Pick up appropriate bomb token and drop it near where it should be - it will snap to correct position\n\n5. Click 'OK' over the template to finish\n\n(6). If you click 'Unassign', you can pick and drop the token again to change dropping ship\n\nFull docs on the token: [i]Wiki page: \"Helper tokens\"[/i]\n\n[b]USING COMMANDS:[/b]\n\nCommand 'b:[code]', where [code] is a move code, will let you drop a bomb using [code] template out of your back. Add 'r' at the end to make it out of the front.\n\nE.g.: \n[i]'b:s1'[/i] will spawn a bomb drop using straight 1 template out of the back.\n[i]'b:tr3'[/i] will spawn a bomb drop using turn right 3 template out of the back.\n[i]'b:s2r'[/i] will spawn a bomb drop using straight 2 template out of the front.\n\nFull docs on commands: [i]Wiki page: \"Doc: Commands\"[/i]\n",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 25
      },
      "26": {
        "title": "Dial Peeking",
        "body": "AS OF 1.9.3\n\n[b]Manouver Dial peeking:[/b]\n\nIn order to know what you dialed in, you can now use the peek functionality (alt + shift, while hoovering over an object) on the dials. This will report in the chat, what the selected manouver is.",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 26
      },
      "27": {
        "title": "ArcChecks",
        "body": "AS OF 1.9.3\n\n[b]Arc Checks:[/b]\n\nAutomatic shortest point calculations, and obstruction checks can be performed on any ship in the game.\n\nRight click the ship you want to check arcs from, and choose one of the available ArcCheck options.\n\nAll targets in arc will be reported in the chat.\n\nOld arc indicators are removed if you trigger it again for the same ship, or if you check a new arc.\n\n[3030ff]Blue[999999] - Unobstructed shot\n[FFFF30]Yellow[999999] - Obstructed shot\n[FF30FF]Purple[999999] - Unobstructed bullseye shot\n[FF8800]Orange[999999] - Obstructed bullseye shot\n",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 27
      },
      "28": {
        "title": "Ship ID",
        "body": "All ships, dials and pilot cards now spawn with tintable ship identifiers.\n\nIf your ship includes several ships of the same ship type, each of these ships will receive an automatic predefined color value.\n\nIf you want to alter the color of a ships identifiers, you simply set the tint color of the corresponding pilot card to a value.\n\n[b]1[/b] Right click pilot card, and select [b]\"Color tint\"[/b]\n[b]2[/b] Select from predefined colors by selecting a coloured square\n[b]3[/b] Click apply\n\nIf you define your own color, remember to set the alpha value (the gradient bar on the right side) to a visible value. \n\nIf you don't want to remove the identifiers, simply tint the pilot card with the alpha value set to 0.",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 28
      },
      "29": {
        "title": "AI",
        "body": "AS OF 1.10.5a\n\n[b]Artifical Intelligence:[/b]\r\n\r\nSome ships can fly themselves using the AI rules from Heroes of the Aturi Cluster.\r\n\r\nTo enable AI features on a ship, right-click on it and set its description to \"ai\". This will create two context menu items: \"AI move and action\", and \"AI move\".\r\n\r\nWhen selecting a target the ship will treat all ships not assigned to its color as enemies. If none can be found it will say so in the chat and not move.\r\n\r\nOnce the target it selected it will select a maneuver from its AI table based on range, facing, and stress. It will avoid obstacles (but not ships) if possible.\r\n\r\nIf you have selected \"AI move and action\" it will then immediately run through its action list in priority order and execute the first applicable.\r\n\r\n[b]Current features:[/b]\r\n- Movement tables for all Imperial ships: TIE Fighter, TIE Interceptor, TIE Advanced x1, TIE Bomber, TIE Defender, TIE Phantom, Lambda Shuttle, Decimator.\r\n- Action tables for the TIE Fighter.\r\n- Handles stress, ion, and target locks.\r\n- Avoid obstacles if possible.\r\n\r\n[b]Planned features:[/b]\r\n- Action tables for all Imperial ships\r\n- Board edge avoidance\r\n- AI types (Strike, Defend, Scan, etc)\r\n- Rebel and Scum & Villainy AI\r\n- Formations\r\n- Handling cloak and strain tokens.\r\n\r\n[b]Links:[/b]\r\n- Heroes of the Aturi Cluster 0.7 rules (for X-Wing v1): http://dockingbay416.com/campaign/\r\n- Flight Group Alpha (updated AI for X-Wing 2.0): https://www.boardgamegeek.com/filepage/161035/flight-group-alpha-imperial-co-operative-campaign",
        "color": "Grey",
        "visibleColor": {
          "r": 0.5,
          "g": 0.5,
          "b": 0.5
        },
        "id": 29
      }
    },
    "MusicPlayer": {
      "RepeatSong": false,
      "PlaylistEntry": 3,
      "CurrentAudioTitle": "Death",
      "CurrentAudioURL": "http://cloud-3.steamusercontent.com/ugc/792010997184374182/B0FF76DCB3D979C6A3A630F45A9FD58E7390D6C6/",
      "AudioLibrary": [
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184359809/DA27CF611C537C0C6A94893C0330B24358296475/",
          "Item2": "Awakening"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184371128/145B47EC47D331B4AE1CB59FDE75E0116E10280D/",
          "Item2": "Calm"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184371906/F8E4FC7CBD21DD2430F906F77055819AD0474996/",
          "Item2": "Day Travel"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184374182/B0FF76DCB3D979C6A3A630F45A9FD58E7390D6C6/",
          "Item2": "Death"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184376716/0407BB616E681D199DDEC384058B3CBF3DD3FEAD/",
          "Item2": "Epilude"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184379961/314F9E57AF4CF475B86BAF58AD5A006DB16CE86D/",
          "Item2": "Goblin Combat"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184385296/1A83AFF3AF0959546E8444D9A3F4174BC35E5336/",
          "Item2": "Human Combat 1"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184387091/0554504FC54BACCAA83CAB542EB33FC41C87346B/",
          "Item2": "Human Combat 2"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184389261/F753ACB43BA28C799B808388D6A6E4A71BDB78CB/",
          "Item2": "Intrigue"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184392871/C1ACD1C3E628B836F6DEFF643B618418A339EECC/",
          "Item2": "Map"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184394727/6212F5FF59B6D980AA95CCF1B06BE32F8DFF3366/",
          "Item2": "Mistique"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184397131/B462582B327D41981E3A3893AED045C9DFA37D68/",
          "Item2": "Night Travel"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184398544/F8246EDA891BDFDE3CE9183A139D514F78A582CF/",
          "Item2": "Orc Combat 1"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184400189/F25ADB6B0FA920C0D9F6A67546DAD85C70C9504E/",
          "Item2": "Orc Combat 2"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184402108/415A2E2F690E8241A23FBBAFB8D9BAB0D469F8F4/",
          "Item2": "Prelude"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184404898/8956C1A3A9A41B0F54B4DE400EC76F7723332310/",
          "Item2": "Reflective"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184406070/21B923240147A1785E49CAE3AFA27C045405694C/",
          "Item2": "Setting Up"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184407878/A2458FAB2EE78A3AA4B26271485982FA02665FDA/",
          "Item2": "Tension"
        },
        {
          "Item1": "http://cloud-3.steamusercontent.com/ugc/792010997184409426/32FB9FCA1D2DD24CF88150A31E16108CEB21559D/",
          "Item2": "Undead Combat"
        }
      ]
    },
    "Grid": {
      "Type": 0,
      "Lines": false,
      "Color": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Opacity": 0.75,
      "ThickLines": false,
      "Snapping": false,
      "Offset": false,
      "BothSnapping": false,
      "xSize": 0.5,
      "ySize": 0.5,
      "PosOffset": {
        "x": 0.0,
        "y": 1.0,
        "z": 0.0
      }
    },
    "Lighting": {
      "LightIntensity": 0.54,
      "LightColor": {
        "r": 1.0,
        "g": 0.9804,
        "b": 0.8902
      },
      "AmbientIntensity": 1.3,
      "AmbientType": 0,
      "AmbientSkyColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "AmbientEquatorColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "AmbientGroundColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "ReflectionIntensity": 0.3880001,
      "LutIndex": 0,
      "LutContribution": 1.0,
      "LutURL": ""
    },
    "Hands": {
      "Enable": false,
      "DisableUnused": false,
      "Hiding": 0
    },
    "ComponentTags": {
      "labels": [
        {
          "displayed": "ProxyInstance",
          "normalized": "proxyinstance"
        },
        {
          "displayed": "TempLayoutElement",
          "normalized": "templayoutelement"
        },
        {
          "displayed": "ConfigCard",
          "normalized": "configcard"
        },
        {
          "displayed": "Ship",
          "normalized": "ship"
        },
        {
          "displayed": "FlipToken",
          "normalized": "fliptoken"
        },
        {
          "displayed": "Flippable",
          "normalized": "flippable"
        }
      ]
    },
    "Turns": {
      "Enable": false,
      "Type": 0,
      "TurnOrder": [],
      "Reverse": false,
      "SkipEmpty": false,
      "DisableInteractions": false,
      "PassTurns": true,
      "TurnColor": ""
    },
    "DecalPallet": [
      {
        "Name": "White",
        "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/cffd023cdec4684b5530e663260fbd3a82fe1822/assets/textures/decals/white.png",
        "Size": 1.0
      },
      {
        "Name": "Blue",
        "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/cffd023cdec4684b5530e663260fbd3a82fe1822/assets/textures/decals/blue.png",
        "Size": 1.0
      },
      {
        "Name": "Cyan",
        "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/cffd023cdec4684b5530e663260fbd3a82fe1822/assets/textures/decals/cyan.png",
        "Size": 1.0
      },
      {
        "Name": "Green",
        "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/cffd023cdec4684b5530e663260fbd3a82fe1822/assets/textures/decals/green.png",
        "Size": 1.0
      },
      {
        "Name": "Purple",
        "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/cffd023cdec4684b5530e663260fbd3a82fe1822/assets/textures/decals/purple.png",
        "Size": 1.0
      },
      {
        "Name": "Red",
        "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/cffd023cdec4684b5530e663260fbd3a82fe1822/assets/textures/decals/red.png",
        "Size": 1.0
      },
      {
        "Name": "Yellow",
        "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/cffd023cdec4684b5530e663260fbd3a82fe1822/assets/textures/decals/yellow.png",
        "Size": 1.0
      }
    ],
    "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Based on a work of: Flolania, Hera Vertigo\r\n-- ~~~~~~\r\n\r\n-- ~~~~~~\r\n-- Code contributions\r\n--  - Characted width data: Indimeco\r\n--  - http://github.com/Indimeco/Tabletop-Simulator-Misc\r\n-- ~~~~~~\r\n\r\n-- Should the code execute print functions or skip them?\r\n-- This should be set to false on every release\r\nprint_debug = false\r\ncast_debug = false\r\n\r\nTTS_print = print\r\nfunction print(...)\r\n    if print_debug == true then\r\n        TTS_print(table.unpack({...}))\r\n    end\r\nend\r\n\r\n-- Vector manipulation\r\n----#include TTS_lib/Vector/Vector\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Library for all vector-related operations\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['Vector'] then\r\n    Vect = {}\r\n    package.loaded['Vector'] = Vect\r\n\r\n    -- Sum of two vectors (of any size)\r\n    Vect.Sum = function(vec1, vec2)\r\n        assert(type(vec1) == 'table', 'Vect.Sum: arg#1 not a table!')\r\n        assert(type(vec2) == 'table', 'Vect.Sum: arg#2 not a table!')\r\n        local out = {}\r\n        local k = 1\r\n        while vec1[k] ~= nil and vec2[k] ~= nil do\r\n            out[k] = vec1[k]+vec2[k]\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Inverse of a vector\r\n    Vect.Inverse = function(vector)\r\n        assert(type(vector) == 'table', 'Vect.Inverse: arg#1 not a table!')\r\n        local out = {}\r\n        local k = 1\r\n        while vector[k] ~= nil do\r\n            out[k] = 1/vector[k]\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Multiply each element of a vector by a factor\r\n    Vect.Scale = function(vector, factor)\r\n        assert(type(vector) == 'table', 'Vect.Scale: arg#1 not a table!')\r\n        assert(type(factor) == 'number', 'Vect.Scale: arg#2 not a number!')\r\n        local out = {}\r\n        local k = 1\r\n        while vector[k] ~= nil do\r\n            out[k] = vector[k]*factor\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Multiply each element of a vector by an element from factor vector\r\n    -- (element-wise vector multiplication)\r\n    Vect.ScaleEach = function(vector, factorVec)\r\n        assert(type(vector) == 'table', 'Vect.ScaleEach: arg#1 not a table!')\r\n        assert(type(factorVec) == 'table', 'Vect.ScaleEach: arg#2 not a table!')\r\n        local out = {}\r\n        local k = 1\r\n        while vector[k] ~= nil and factorVec[k] ~= nil do\r\n            out[k] = vector[k]*factorVec[k]\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n\r\n    -- Length of  vector on X-Z plane (ignoring height)\r\n    Vect.Length = function(vector)\r\n        assert(type(vector) == 'table', 'Vect.Length: arg#1 not a table!')\r\n        return math.sqrt(vector[1]*vector[1] + vector[3]*vector[3])\r\n    end\r\n\r\n    -- Rotation of a 3D vector over its second element axis, arg in radians\r\n    -- Elements past 3rd are copied\r\n    Vect.RotateRad = function(vector, radRotation)\r\n        assert(type(vector) == 'table', 'Vect.RotateRad: arg#1 not a table!')\r\n        assert(type(radRotation) == 'number', 'Vect.RotateRad: arg#2 not a number!')\r\n        local newX = math.cos(radRotation) * vector[1] + math.sin(radRotation) * vector[3]\r\n        local newZ = math.sin(radRotation) * vector[1] * -1 + math.cos(radRotation) * vector[3]\r\n        local out = {newX, vector[2], newZ}\r\n        local k=4\r\n        while vector[k] ~= nil do\r\n            table.insert(out, vector[k])\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Distance between two points\r\n    -- Points as vectors or objects (their positions)\r\n    Vect.Distance = function(pos1, pos2)\r\n        assert(type(pos1) == 'table' or type(pos1) == 'userdata', 'Vect.Distance: arg#1 not a table/object!')\r\n        assert(type(pos2) == 'table' or type(pos2) == 'userdata', 'Vect.Distance: arg#2 not a table/object!')\r\n        if type(pos1) == 'userdata' then\r\n            pos1 = pos1.getPosition()\r\n        end\r\n        if type(pos2) == 'userdata' then\r\n            pos2 = pos2.getPosition()\r\n        end\r\n        return Vect.Length(Vect.Between(pos1, pos2))\r\n    end\r\n\r\n    -- Print vector elements\r\n    Vect.Print = function(vec, name)\r\n        assert(type(vec) == 'table', 'Vect.Print: arg#1 not a table!')\r\n        local out = '['\r\n        if name then\r\n            out = name .. ' => ' .. out\r\n        end\r\n        local k = 1\r\n        while vec[k] ~= nil do\r\n            out = out .. math.round(vec[k], 3) .. ' : '\r\n            k = k+1\r\n        end\r\n        out = out:sub(1,-3) .. ']'\r\n        print(out)\r\n    end\r\n    -- Round to decPlaces decimal places\r\n    -- if decPlaces nil round to nearest integer\r\n    math.round = function(arg, decPlaces)\r\n        if decPlaces == nil then decPlaces = 0 end\r\n        if decPlaces == 0 then\r\n            frac = arg - math.floor(arg)\r\n            if frac >= 0.5 then\r\n                return math.ceil(arg)\r\n            else\r\n                return math.floor(arg)\r\n            end\r\n        else\r\n            local mult = 10^(decPlaces or 0)\r\n            return math.floor(arg * mult + 0.5) / mult\r\n        end\r\n    end\r\n\r\n    -- Dot product\r\n    Vect.DotProd = function(vec1, vec2)\r\n        assert(type(vec1) == 'table', 'Vect.DotProd: arg#1 not a table!')\r\n        assert(type(vec2) == 'table', 'Vect.DotProd: arg#2 not a table!')\r\n        local sum = 0\r\n        local k = 1\r\n        while vec1[k] ~= nil and vec2[k] ~= nil do\r\n            sum = sum + vec1[k]*vec2[k]\r\n            k = k+1\r\n        end\r\n        return sum\r\n    end\r\n\r\n    -- Element-by-element comparison\r\n    -- Fails if length uneven\r\n    Vect.Compare = function(vec1, vec2)\r\n        assert(type(vec1) == 'table', 'Vect.Compare: arg#1 not a table!')\r\n        assert(type(vec2) == 'table', 'Vect.Compare: arg#2 not a table!')\r\n        if #vec1 ~= #vec2 then\r\n            return false\r\n        end\r\n        local k = 1\r\n        while vec1[k] ~= nil and vec2[k] ~= nil do\r\n            if vec1[k] ~= vec2[k] then\r\n                return false\r\n            end\r\n            k = k+1\r\n        end\r\n        return true\r\n    end\r\n\r\n    -- Euclidean norm\r\n    Vect.Norm = function(vec)\r\n        local selfDot = Vect.DotProd(vec, vec)\r\n        return math.sqrt(selfDot)\r\n    end\r\n\r\n    -- Convert a vector to unit vector in the same direction\r\n    -- Return zero vector for zero vector\r\n    Vect.ToUnit = function(vec)\r\n        if Vect.Norm(vec) == 0 then\r\n            return vec\r\n        end\r\n        return Vect.Scale(vec, 1/Vect.Norm(vec))\r\n    end\r\n\r\n    -- Angle between vectors in radians\r\n    -- If second argument not provided, calculate typical angle (from [1, 0, 0, ...] )\r\n    Vect.Angle = function(vec1, vec2)\r\n        if vec2 == nil then\r\n            vec2 = {1}\r\n            for k = 2, #vec1, 1 do\r\n                table.insert(vec2, 0)\r\n            end\r\n        end\r\n        return math.acos( Vect.DotProd(vec1, vec2) / (Vect.Norm(vec1)*Vect.Norm(vec2)) )\r\n    end\r\n\r\n    -- Angle between vectors in radians, in plane\r\n    -- If second argument not provided, calculate typical angle (from [1, 0, 0, ...] )\r\n    Vect.Angle2D = function(vec1, vec2)\r\n        if vec2 == nil then\r\n            vec2 = {1}\r\n            for k = 2, #vec1, 1 do\r\n                table.insert(vec2, 0)\r\n            end\r\n        end\r\n        return ( math.atan2(vec2[3], vec2[1]) - math.atan2(vec1[3], vec1[1]) )\r\n    end\r\n\r\n    -- Same as Vect.Angle but in degrees\r\n    Vect.AngleDeg = function(vec1, vec2)\r\n        return math.deg(Vect.Angle(vec1, vec2))\r\n    end\r\n\r\n    -- Same as Vect.Angle2D but in degrees\r\n    Vect.AngleDeg2D = function(vec1, vec2)\r\n        return math.deg(Vect.Angle2D(vec1, vec2))\r\n    end\r\n\r\n    -- Vector pointing from one position to another\r\n    Vect.Between = function(fromVec, toVec)\r\n        return Vect.Sum(toVec, Vect.Scale(fromVec, -1))\r\n    end\r\n\r\n    -- Vector pointing between two points\r\n    Vect.Middle = function(p1, p2)\r\n        return Vect.Sum(p1, Vect.Scale(Vect.Between(p1, p2), 0.5))\r\n    end\r\n\r\n    -- Subtract vector from another\r\n    Vect.Sub = function(vec1, vec2)\r\n        return Vect.Sum(vec1, Vect.Scale(vec2, -1))\r\n    end\r\n\r\n    -- Opposite of a vector\r\n    Vect.Opposite = function(vector)\r\n        return Vect.Scale(vector, -1)\r\n    end\r\n\r\n    -- Rotation of a 3D vector over its second element axis, arg in degrees\r\n    -- Elements past 3rd are copied\r\n    Vect.RotateDeg = function(vector, degRotation)\r\n        local radRotation = math.rad(degRotation)\r\n        return Vect.RotateRad(vector, radRotation)\r\n    end\r\n\r\n    -- Scale the vector to have set length\r\n    -- Negative \"length\" - opposite of set length\r\n    Vect.SetLength = function(vector, len)\r\n        return Vect.Scale(vector, len/Vect.Length(vector))\r\n    end\r\nend\r\n\n----#include TTS_lib/Vector/Vector\n\r\n-- Standard libraries extentions\r\n----#include TTS_lib/Util/Util\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Misc functions for extending Lua functionality\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['Util'] then\r\n\r\n    package.loaded['Util'] = true\r\n\r\n    -- Return value limited by min and max bounds\r\n    math.clamp = function(var, min, max)\r\n        if min and var < min then\r\n            return min\r\n        elseif max and var > max then\r\n            return max\r\n        end\r\n        return var\r\n    end\r\n\r\n    -- Sign function, zero for zero\r\n    math.sgn = function(arg)\r\n        if arg < 0 then\r\n            return -1\r\n        elseif arg > 0 then\r\n            return 1\r\n        end\r\n        return 0\r\n    end\r\n\r\n    -- Round to decPlaces decimal places\r\n    -- if decPlaces nil round to nearest integer\r\n    math.round = function(arg, decPlaces)\r\n        if decPlaces == nil then decPlaces = 0 end\r\n        if decPlaces == 0 then\r\n            frac = arg - math.floor(arg)\r\n            if frac >= 0.5 then\r\n                return math.ceil(arg)\r\n            else\r\n                return math.floor(arg)\r\n            end\r\n        else\r\n            local mult = 10^(decPlaces or 0)\r\n            return math.floor(arg * mult + 0.5) / mult\r\n        end\r\n    end\r\n\r\n    -- Check if table is empty\r\n    table.empty = function(tab)\r\n        return (next(tab) == nil)\r\n    end\r\n\r\n    -- Mash together two tables\r\n    table.join = function(tab1, tab2)\r\n        local out = {}\r\n        for k=1,#tab1 do\r\n            out[k] = tab1[k]\r\n        end\r\n        local off = #tab1\r\n        for k=1,#tab2 do\r\n            out[k+off] = tab2[k]\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Shallow table copy\r\n    -- Does not include metatables\r\n    table.shallowcopy = function(orig)\r\n        local orig_type = type(orig)\r\n        local copy\r\n        if orig_type == 'table' then\r\n            copy = {}\r\n            for orig_key, orig_value in pairs(orig) do\r\n                copy[orig_key] = orig_value\r\n            end\r\n        else\r\n            copy = orig\r\n        end\r\n        return copy\r\n    end\r\n\r\n    -- Deep table copy\r\n    -- Includes metatables, avoids __pairs, recursive\r\n    table.deepcopy = function(orig)\r\n        local orig_type = type(orig)\r\n        local copy\r\n        if orig_type == 'table' then\r\n            copy = {}\r\n            for orig_key, orig_value in next, orig, nil do\r\n                copy[table.deepcopy(orig_key)] = table.deepcopy(orig_value)\r\n            end\r\n            if getmetatable(orig) then\r\n                setmetatable(copy, table.deepcopy(getmetatable(orig)))\r\n            end\r\n        else\r\n            copy = orig\r\n        end\r\n        return copy\r\n    end\r\n\r\n    -- Elements count\r\n    -- Unlike #table, also counts non-number keyed values\r\n    table.size = function(tab)\r\n        local count = 0\r\n        for _ in pairs(tab) do\r\n            count = count + 1\r\n        end\r\n        return count\r\n    end\r\n\r\n    -- Return the element that return minimal value from eval function\r\n    -- Only iterates through numeric keys part\r\n    table.min = function(tab, eval)\r\n        if not tab[1] then return end\r\n        local min = { el = tab[1], val = eval(tab[1]) }\r\n        for k=2,#tab do\r\n            local val = eval(tab[k])\r\n            if val < min.val then\r\n                min.val = val\r\n                min.el = tab[k]\r\n            end\r\n        end\r\n        return min.el, min.val\r\n    end\r\n\r\n    -- Same as table.min, but takes the maximum\r\n    table.max = function(tab, eval)\r\n        local function invEval(el)\r\n            return -1*eval(el)\r\n        end\r\n        local el, min = table.min(tab, invEval)\r\n        return el, -1*min\r\n    end\r\n\r\n    -- Return those values in tab that return true from valid function\r\n    table.sieve = function(tab, valid)\r\n        local passed = {}\r\n        local rejected = {}\r\n        for k,v in ipairs(tab) do\r\n            if valid(v) then\r\n                if type(k) == 'number' then\r\n                    table.insert(passed, v)\r\n                else\r\n                    passed[k] = v\r\n                end\r\n            else\r\n                if type(k) == 'number' then\r\n                    table.insert(rejected, v)\r\n                else\r\n                    rejected[k] = v\r\n                end\r\n            end\r\n        end\r\n        return passed, rejected\r\n    end\r\n\r\n    -- Try to find en element in the table, return key if found, nil otherwise\r\n    table.find = function(tab, el)\r\n        for k,v in pairs(tab) do\r\n            if v == el then\r\n                return k\r\n            end\r\n        end\r\n    end\r\n\r\n    -- Shallow table print\r\n    table.print = function(tab, prefix)\r\n        prefix = prefix or 'Table'\r\n        print(prefix .. ':')\r\n        local function stringify(v)\r\n            local str = tostring(v)\r\n            if type(v) == 'string' then\r\n                str = '\\'' .. str .. '\\''\r\n            end\r\n            return str\r\n        end\r\n        for k,v in pairs(tab) do\r\n            print('   [' .. stringify(k) .. '] -> ' .. stringify(v))\r\n        end\r\n        print('')\r\n    end\r\n\r\n    -- Deep table print (sensitive to cycles!)\r\n    table.print_r = function(tab, prefix, indent)\r\n        prefix = prefix or 'Table'\r\n        local indent = indent or 1\r\n        print(prefix .. ':')\r\n        local function stringify(v)\r\n            local str = tostring(v)\r\n            if type(v) == 'string' then\r\n                str = '\\'' .. str .. '\\''\r\n            end\r\n            return str\r\n        end\r\n        local indentStr = string.rep('    ', indent)\r\n        for k,v in pairs(tab) do\r\n            print(indentStr .. '[' .. stringify(k) .. '] -> ' .. stringify(v))\r\n            if type(v) == 'table' then\r\n                table.print_r(v, indentStr .. stringify(v), indent+1)\r\n            end\r\n        end\r\n        if indent == 1 then\r\n            print('')\r\n        end\r\n    end\r\n\r\n    -- Apply a function on each table element\r\n    table.process = function(tab, fcn)\r\n        local out = {}\r\n        for k,v in pairs(tab) do\r\n            out[k] = fcn(v)\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Returns a copy of a table with the elements in a random order.\r\n    table.shuffle = function(tab)\r\n        local shuffled_table = {}\r\n        for i = 1, #tab do\r\n            shuffled_table[i] = tab[i]\r\n        end\r\n        for i = #shuffled_table, 2, -1 do\r\n            local j = math.random(i)\r\n            shuffled_table[i], shuffled_table[j] = shuffled_table[j], shuffled_table[i]\r\n        end\r\n        return shuffled_table\r\n    end\r\n\r\n    -- Check if string begins with the argument (no regex)\r\n    string.beginswith = function(str, prefix)\r\n        return (str:sub(1, prefix:len()) == prefix)\r\n    end\r\n    string.startswith = string.beginswith\r\n\r\n    -- Check if the string ends with the argument (no regex)\r\n    string.endswith = function(str, prefix)\r\n        return (str:sub(-1*prefix:len(), -1) == prefix)\r\n    end\r\n\r\n    -- CHeck if string contains argument anywhere in it (no regex)\r\n    string.contains = function(str, query)\r\n        return (str:find(query, 1, true) ~= nil)\r\n    end\r\n\r\nend\r\n\n----#include TTS_lib/Util/Util\n\r\n-- Standard event handling\r\n----#include TTS_lib/EventSub/EventSub\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Simple framework for adding many subscribers of default events (onLoad, update, onChat etc)\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['EventSub'] then\r\n\r\n    EventSub = {}\r\n    package.loaded['EventSub'] = EventSub\r\n    event_sub = EventSub -- alias\r\n\r\n    -- Table mapping event names to table of handler functions\r\n    EventSub.subs = {}\r\n\r\n    -- Initialize subscriber table for given event function, save current one if exists\r\n    EventSub.AddEvent = function(eventName)\r\n        EventSub.subs[eventName] = {}\r\n        if type(_G[eventName]) == 'function' then\r\n            table.insert(EventSub.subs[eventName], _G[eventName])\r\n        end\r\n        -- Set the global event function to call each handler pasing its parameters\r\n        _G[eventName] = function(...)\r\n            for _,handler in ipairs(EventSub.subs[eventName]) do\r\n                handler(table.unpack({...}))\r\n            end\r\n        end\r\n    end\r\n    -- Method for adding subscribers\r\n    EventSub.Register = function(eventName, handler)\r\n        assert(type(eventName) == 'string', 'EventSub.Register: Provided event name not a string!')\r\n        assert(type(handler) == 'function', 'EventSub.Register: Provided handler not a function!')\r\n        if not EventSub.subs[eventName] then\r\n            EventSub.AddEvent(eventName)\r\n        end\r\n        table.insert(EventSub.subs[eventName], handler)\r\n    end\r\nend\r\n\n----#include TTS_lib/EventSub/EventSub\n\r\n-- Object type abstraction\r\n----#include TTS_lib/ObjType/ObjType\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Package for easy object \"type\" definitions and searching nearby things\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['ObjType'] then\r\n\r\n    if not package.loaded['Vector'] then\r\n        error('ObjType package: depends on Vector package (not loaded)')\r\n    end\r\n    if not package.loaded['Util'] then\r\n        error('ObjType package: depends on Util package (not loaded)')\r\n    end\r\n\r\n    ObjType = {}\r\n    package.loaded['ObjType'] = ObjType\r\n\r\n    ObjType.types = {}\r\n    -- Add a type definition\r\n    ObjType.AddType = function(typeName, fcn)\r\n        ObjType.types[typeName] = fcn\r\n    end\r\n    ObjType.AddType('any', function() return true end)\r\n\r\n    -- Return true if object matches type\r\n    ObjType.IsOfType = function(obj, typeName)\r\n        if not typeName or not ObjType.types[typeName] then\r\n            error('ObjType.IsOfType: queried type \\'' .. typeName .. '\\' not defined')\r\n        end\r\n        return ObjType.types[typeName](obj)\r\n    end\r\n    -- Return a table of all type this object matches\r\n    ObjType.GetTypes = function(obj)\r\n        local types = {}\r\n        for type, typeFcn in pairs(ObjType.types) do\r\n            if typeFcn(obj) then\r\n                types[type] = true\r\n            end\r\n        end\r\n        return types\r\n    end\r\n\r\n    -- Cast a regular sphere and return hit objects\r\n    ObjType.SphereCast = function(center, distance)\r\n        local hits = Physics.cast({\r\n            origin = Vect.Sum(center, {0, -1.1*distance, 0}),\r\n            direction = {0, distance/500, 0},\r\n            type = 2,\r\n            size = {distance*2, distance*2, distance*2},\r\n            debug = false\r\n        })\r\n        local nearData = {}\r\n        for k, hitData in pairs(hits) do\r\n            table.insert(nearData, hitData.hit_object)\r\n            --table.insert(nearData, {obj = hitData.hit_object, dist=Vect.Distance(hitData.point, center)})\r\n        end\r\n        return nearData\r\n    end\r\n    -- Cast a box of given size and orientation and return hit objects\r\n    ObjType.BoxCast = function(center, orientation, size)\r\n        local hits = Physics.cast({\r\n            origin = Vect.Sum(center, {0, -1.1*size[2], 0}),\r\n            direction = {0, size[2]/200, 0},\r\n            type = 3,\r\n            size = size,\r\n            orientation = orientation,\r\n            debug = false\r\n        })\r\n        local nearData = {}\r\n        for k, hitData in pairs(hits) do\r\n            table.insert(nearData, hitData.hit_object)\r\n            --table.insert(nearData, {obj = hitData.hit_object, dist=Vect.Distance(hitData.point, center)})\r\n        end\r\n        return nearData\r\n    end\r\n\r\n    -- Get the object matching provided type, nearest to position/object in some radius\r\n    -- Args:\r\n    --      centerPosObj    <- Center position (vector) or object\r\n    --      maxDist         <- Max distance to check in\r\n    --      objType         <- Required type of the nearest object\r\n    --      excl            <- Table of objects excluded from search\r\n    -- Return: nearestObject, distance\r\n    ObjType.GetNearestOfType = function(centerPosObj, maxDist, objType, excl)\r\n        local centerPos = centerPosObj\r\n        if type(centerPosObj) == 'userdata' then\r\n            excl[centerPosObj] = true\r\n            centerPos = centerPosObj.getPosition()\r\n        end\r\n        local nearOfType = ObjType.GetNearOfType(centerPos, objType, maxDist, excl)\r\n        return table.min(nearOfType, function(obj) return Vect.Distance(cenerPos, obj) end)\r\n    end\r\n\r\n    -- Get all objects in given radius matching given type\r\n    -- Args identical like in ObjType.GetNearestOfType\r\n    -- Return: table of objects\r\n    ObjType.GetNearOfType = function(centerPosObj, maxDist, objType, excl)\r\n        excl = excl or {}\r\n        for k,v in ipairs(excl) do\r\n            excl[v] = true\r\n            excl[k] = nil\r\n        end\r\n        maxDist = maxDist or 100\r\n        assert(type(objType) == 'string', 'Obj.GetNearOfType: search type not provided')\r\n        local centerPos = centerPosObj\r\n        if type(centerPosObj) == 'userdata' then\r\n            excl[centerPosObj] = true\r\n            centerPos = centerPosObj.getPosition()\r\n        end\r\n        local nearData = ObjType.SphereCast(centerPos, maxDist)\r\n        nearData = table.sieve(nearData, function(obj) return (not excl[obj] and ObjType.IsOfType(obj, objType)) end)\r\n        return nearData\r\n    end\r\n\r\n    -- Get the all objects inside a box matching given type\r\n    -- Args:\r\n    --      centerPosObj    <- Center position (vector) or object\r\n    --      orient          <- Box orientation (vector)\r\n    --      size            <- Box size (vector)\r\n    --      objType         <- Required type of the nearest object\r\n    --      excl            <- Table of objects excluded from search\r\n    -- Return: table of objects\r\n    ObjType.GetBoxOfType = function(centerPosObj, orient, size, objType, excl)\r\n        excl = excl or {}\r\n        for k,v in ipairs(excl) do\r\n            excl[v] = true\r\n            excl[k] = nil\r\n        end\r\n        assert(type(objType) == 'string', 'Obj.GetNearOfType: search type not provided')\r\n        local centerPos = centerPosObj\r\n        if type(centerPosObj) == 'userdata' then\r\n            excl[centerPosObj] = true\r\n            centerPos = centerPosObj.getPosition()\r\n        end\r\n        local boxData = ObjType.BoxCast(centerPos, orient, size)\r\n        boxData = table.sieve(boxData, function(obj) return (not excl[obj] and ObjType.IsOfType(obj, objType)) end)\r\n        return boxData\r\n    end\r\nend\r\n\n----#include TTS_lib/ObjType/ObjType\n\r\n\r\n-- Save/load management\r\n----#include TTS_lib/SaveManager/SaveManager\nif not package.loaded['SaveManager'] then\r\n\r\n    -- Require EventSub so we can hook into onLoad\r\n    if not package.loaded['EventSub'] then\r\n        error('SaveManager package: depends on EventSub package (not loaded)')\r\n    end\r\n    local ES = package.loaded['EventSub']\r\n\r\n    SaveManager = {}\r\n    package.loaded['SaveManager'] = SaveManager\r\n\r\n    SaveManager.moduleList = {}\r\n    SaveManager.Register = function(key, saveFcn, restoreFcn)\r\n        assert(type(key) == 'string', 'SaveManager.Register: No table key provided!')\r\n        assert(type(saveFcn) == 'function', 'SaveManager.Register: No save function provided!')\r\n        assert(type(restoreFcn) == 'function', 'SaveManager.Register: No restore function provided!')\r\n\r\n        if SaveManager.moduleList[key] then\r\n            error('SaveManager.Register: Key \\'' .. key .. '\\' already reserved!')\r\n        end\r\n        SaveManager.moduleList[key] = {save = saveFcn, restore = restoreFcn}\r\n    end\r\n\r\n    SaveManager.onLoad = function(saveData)\r\n        local saveTable = SaveManager.Decode(saveData)\r\n        if type(saveTable) ~= 'table' then print('skip') return end\r\n        local responses = {}\r\n        for key,module in pairs(SaveManager.moduleList) do\r\n            if saveTable[key] and (not table.empty(saveTable[key]) ) then\r\n                local response = module.restore(saveTable[key])\r\n                if type(response) == 'string' then\r\n                    table.insert(responses, response)\r\n                end\r\n            end\r\n        end\r\n        if not table.empty(responses) then\r\n            table.insert(responses, 1, 'Attempting to restore state...')\r\n        end\r\n        SaveManager.Notify(responses)\r\n    end\r\n    ES.Register('onLoad', SaveManager.onLoad)\r\n\r\n    if type(onSave) == 'function' then\r\n        error('SaveManager: onSave event trigger already defined!')\r\n    end\r\n    function onSave()\r\n        local saveData = {}\r\n        for key,module in pairs(SaveManager.moduleList) do\r\n            local moduleSave = module.save()\r\n            if type(moduleSave) == 'table' and (not table.empty(moduleSave)) then\r\n                saveData[key] = moduleSave\r\n            end\r\n        end\r\n        return SaveManager.Encode(saveData)\r\n    end\r\n\r\n    SaveManager.Encode = function(dataTable)\r\n        return JSON.encode(dataTable)\r\n    end\r\n\r\n    SaveManager.Decode = function(encodedData)\r\n        return JSON.decode(encodedData)\r\n    end\r\n\r\n    SaveManager.Notify = function(responses)\r\n        if not table.empty(responses) then\r\n            printToAll(table.concat(responses, '\\n'), {0.8, 0.1, 0.8})\r\n        end\r\n    end\r\n\r\nend\r\n\n----#include TTS_lib/SaveManager/SaveManager\n\r\n-- Component sizes, unit conversion methods\r\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\r\n-- AI behaviour sets\r\n----#include TTS_xwing/src/BehaviourDB\n-- ~~~~~~\r\n-- Script by shiprib\r\n-- Issues, history at: https://github.com/JohnnyCheese/TTS_X-Wing2.0\r\n--\r\n-- Module for storing different AI behaviour engines and individual ship\r\n-- behaviours\r\n-- ~~~~~~\r\n\r\nBehaviourDB = {}\r\nBehaviourDB.GetRuleSet = function()\r\n    return BehaviourDB.rule_sets[1]\r\nend\r\n\r\nBehaviourDB.rule_sets = {}\r\n\r\n--[[ A \"rule set\" is an AI ruleset that fits with the HotAC template defined by\r\nthe 0.7 version of Heroes of the Aturi Cluster by Josh Derksen:\r\nhttp://dockingbay416.com/campaign/\r\nHotAC 0.7 is for v1 of X-Wing however there have been several v2 adaptations\r\npublished.\r\n]]\r\n\r\n--[[ Each behaviour set is represented by a table in the following format:\r\nname: String used to identify which set this is. This should contain the\r\n    author and the date of last publication\r\nusesBullseyeArc: A boolean, true if this behaviour set uses the bullseye arc.\r\ndegreesToArc: A function that the AI calls to convert the angle from its ship\r\n    to its target into the name of the arc in its maneuver lookup table. This\r\n    is here, rather than generalised, because different behaviour sets have\r\n    different numbers of arcs.\r\n    It takes a single argument (float), which is the angle from the AI ship to\r\n    its target. Sample parameter values are:\r\n        -180: directly behind\r\n        -135: behind and to the left\r\n        -90: directly to the left\r\n        0: directly ahead\r\n        90: directly to the right\r\n        180: directly behind (identical to -180)\r\n    It returns a table with the following keys:\r\n        target_arc: String, the name of the arc. This can be anything, as long\r\n            as it matches the arc names in the ship lookup tables.\r\n        arc_parts: Table of strings, one or two of \"front\", \"back\", \"left\", or\r\n            \"right\". These correspond to the sides of the AI ship that we needs\r\n            to do range-checking from. These should be the two closest sides to\r\n            the target arc.\r\nflipArc: A function that takes one arc and flips it left-to-right. HotAC AI\r\n    tables typically only cover the right half of the arc spectrum and rely\r\n    on flipping the right arcs when the target is to the left.\r\n    Takes a single argument (string), the name of the arc to flip\r\n    Returns a string, which is the opposite of the specified arc.\r\ntargetSelectionFunctions: A table containing custom target selection functions.\r\n    TODO: This has not been implemented yet!\r\nships: A table containing the AI data for each ship. This table is keyed with\r\nthe ID numbers found in the Datapad Lua script. The format for ships is below.\r\n]]\r\n\r\n--[[ Each ship is represted by a table with the following format:\r\ntarget_selection: An ordered table containing the function names used for\r\n    choosing a target, sorted by priority. There is a base set of functions\r\n    defined in the core AI module, these are:\r\n        'ClosestInArc': selects the closest ship, in the front arc, at range 1-3\r\n        'Closest': selects the closest ship. Treats range 0 as range 1 directly\r\n            behind.\r\nmove_table: A table containing the ship's move data, organised into arcs and\r\n    distances.\r\n    The first depth of tbe table, the arc, is defined by the ruleset in\r\n        the function \"degreesToArc\". The only one specified by the underlying\r\n        system is 'bullseye', which is only used if 'usesBullseyeArc' is true.\r\n    The second depth of the table, the distance, is one of four:\r\n        'near': the target is at range 0 or 1, or at range 2 and is moving\r\n            towards the AI ship.\r\n        'far': the target is at range 3, or at range 2 and is moving away from\r\n            the AI ship.\r\n        'distant': the target is at range 4 or beyond.\r\n        'stress': the AI ship is stressed, and the target's range is irrelevant.\r\n]]\r\n\r\n-- This is the upgrade of the HotAC-style AI to X-wing v2, ultimately published\r\n-- by Justin Gan. The AIs cover all three Rebellion-era factions and are made\r\n-- for the broader Flight Group Alpha ruleset.\r\n-- see: https://www.facebook.com/groups/872507722883025/permalink/1970166016450518/\r\nBehaviourDB.rule_sets[1] = {}\r\nBehaviourDB.rule_sets[1]['name'] = 'XW-v2-FGA-v7-Gan-2020-04-07'\r\nBehaviourDB.rule_sets[1]['usesBullseyeArc'] = true\r\nBehaviourDB.rule_sets[1]['degreesToArc'] = function(angle_to_target)\r\n    result = {}\r\n    if angle_to_target < -135 then\r\n        result.target_arc = 'back_left'\r\n        result.arc_parts = {'back', 'left'}\r\n    elseif angle_to_target < -90 then\r\n        result.target_arc = 'left_back'\r\n        result.arc_parts = {'left', 'back'}\r\n    elseif angle_to_target < -45 then\r\n        result.target_arc = 'left_front'\r\n        result.arc_parts = {'left', 'front'}\r\n    elseif angle_to_target < 0 then\r\n        result.target_arc = 'front_left'\r\n        result.arc_parts = {'front', 'left'}\r\n    elseif angle_to_target < 45 then\r\n        result.target_arc = 'front_right'\r\n        result.arc_parts = {'front', 'right'}\r\n    elseif angle_to_target < 90 then\r\n        result.target_arc = 'right_front'\r\n        result.arc_parts = {'right', 'front'}\r\n    elseif angle_to_target < 135 then\r\n        result.target_arc = 'right_back'\r\n        result.arc_parts = {'right', 'back'}\r\n    else\r\n        result.target_arc = 'back_right'\r\n        result.arc_parts = {'back', 'right'}\r\n    end\r\n\r\n    return result;\r\nend\r\nBehaviourDB.rule_sets[1]['flipArc'] = function(arc)\r\n    if string.find(arc, 'left') then\r\n        arc = string.gsub(arc, 'left', 'right')\r\n    elseif string.find(targetArc, 'right') then\r\n        arc = string.gsub(arc, 'right', 'left')\r\n    end\r\n\r\n    return arc\r\nend\r\n\r\nBehaviourDB.rule_sets[1]['GetShipBehaviour'] = function(ship)\r\n    return BehaviourDB.rule_sets[1].GetShipBehaviourById(ship.getTable('Data')['shipId'], ship.getTable('Data')['Faction'])\r\nend\r\n\r\nBehaviourDB.rule_sets[1]['GetShipBehaviourById'] = function(ship_id, faction_id)\r\n    ship_behaviour = BehaviourDB.rule_sets[1].ships[ship_id]\r\n\r\n    if ship_behaviour == nil or ship_behaviour.factions == nil then\r\n        return ship_behaviour\r\n    else\r\n        return ship_behaviour.factions[faction_id]\r\n    end\r\nend\r\n\r\nBehaviourDB.rule_sets[1].ships = {}\r\n-- TIE/ln Fighter\r\nBehaviourDB.rule_sets[1].ships[11] = {}\r\nBehaviourDB.rule_sets[1].ships[11].target_selection = {[1]='ClosestInArc', [2]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[11].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'bl2', [4] = 'br2', [5] = 's2'},\r\n        ['far'] = {[1] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 'bl2', [3] = 'br2', [5] = 's2'}\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr1', [5] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br2', [4] = 's2', [6] = 's3'}\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'tr1', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'br2'}\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k3', [2] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k3', [3] = 'tr1', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2'}\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'k3', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k3', [3] = 'tr1', [4] = 'tr3'},\r\n        ['distant'] = {[1] = 'k3', [5] = 'tr1'},\r\n        ['stress'] = {[1] = 'br2', [6] = 'tr3'}\r\n    }\r\n}\r\nBehaviourDB.rule_sets[1].ships[11].action_selection = {\r\n    [1] = { -- Barrel roll to avoid target's arc and still get a shot\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n    },\r\n    [2] = { -- Barrel roll to get a shot\r\n        ['description'] = \"%s barrel rolled to get a shot.\",\r\n        ['preconditions'] = {['hasShot'] = false},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['hasShot'] = true},\r\n    },\r\n    [3] = { -- Focus if you have a shot\r\n        ['description'] = \"%s has a shot so focused.\",\r\n        ['preconditions'] = {['hasShot'] = true},\r\n        ['action'] = 'focus'\r\n    },\r\n    [4] = { -- Barrel roll to avoid target's arc\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['inTargetsArc'] = true},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['inTargetsArc'] = false},\r\n    },\r\n    [5] = { -- Evade\r\n        ['description'] = \"%s evaded.\",\r\n        ['action'] = 'evade'\r\n    }\r\n}\r\n\r\n-- TIE/in Interceptor\r\nBehaviourDB.rule_sets[1].ships[41] = {}\r\nBehaviourDB.rule_sets[1].ships[41].target_selection = {[1]='ClosestInArc', [2]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[41].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'br3s', [4] = 'bl3s', [6] = 's2'},\r\n        ['far'] = {[1] = 's2', [4] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 'tl2', [2] = 'tr2', [3] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'bl3s', [3] = 'tr1', [5] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'bl2', [2] = 'br2', [4] = 's2', [6] = 's4'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'bl3s', [5] = 'tr1'},\r\n        ['far'] = {[1] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [3] = 'bl2', [4] = 'br2', [6] = 's4'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'bl3s', [4] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'bl3s', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'bl3s', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tl2', [2] = 'tr2', [5] = 'bl2', [6] = 's4'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'bl3s', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'br3s', [3] = 'bl3s'},\r\n        ['distant'] = {[1] = 'bl3s', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tl2', [4] = 'tr2', [6] = 's4'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[41].action_selection = {\r\n    [1] = { -- Focus > boost or focus > barrel roll to avoid target's arc and still get a shot\r\n        ['description'] = {['text'] = \"%s barrel rolled/boosted and focused to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},\r\n        ['action'] = {\r\n            [1] = {['focus'] = false, ['boost'] = true},\r\n            [2] = {['focus'] = false, ['barrelRoll'] = true}\r\n        },\r\n        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n    },\r\n    [2] = { -- Boost > barrel roll or barrel roll > boost to get a shot\r\n        ['description'] = \"%s barrel rolled/boosted to get a shot.\",\r\n        ['preconditions'] = {['hasShot'] = false},\r\n        ['action'] = {\r\n            [1] = {['boost'] = false, ['barrelRoll'] = true},\r\n            [2] = {['barrelRoll'] = false, ['boost'] = true}\r\n        },\r\n        ['postconditions'] = {['hasShot'] = true},\r\n    },\r\n    [3] = { -- Focus if you have a shot\r\n        ['description'] = \"%s has a shot so focused.\",\r\n        ['preconditions'] = {['hasShot'] = true},\r\n        ['action'] = 'focus'\r\n    },\r\n    [4] = { -- Boost > barrel roll or barrel roll > boost to avoid target's arc\r\n        ['description'] = {['text'] = \"%s barrel rolled/boosted to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['inTargetsArc'] = true},\r\n        ['action'] = {\r\n            [1] = {['boost'] = false, ['barrelRoll'] = true},\r\n            [2] = {['barrelRoll'] = false, ['boost'] = true}\r\n        },\r\n        ['postconditions'] = {['inTargetsArc'] = false},\r\n    },\r\n    [5] = { -- Evade\r\n        ['description'] = \"%s evaded.\",\r\n        ['action'] = 'evade'\r\n    }\r\n}\r\n\r\n-- TIE Advanced x1\r\nBehaviourDB.rule_sets[1].ships[13] = {}\r\nBehaviourDB.rule_sets[1].ships[13].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[13].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [3] = 's2', [6] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 'bl1', [2] = 'br2', [3] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br1', [3] = 'br2', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'tr3t', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'tr3t', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'tr3t', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr3t', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [2] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr3t', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'tl3t', [3] = 'tr3t'},\r\n        ['distant'] = {[1] = 'tr3t', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'br2', [6] = 'tr3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[13].action_selection = {\r\n    [1] = { -- (target not moved) Target lock if not in target's arc\r\n        ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inTargetsArc'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [2] = { -- (target moved) Target lock\r\n        ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [3] = { -- (target moved) Focus > barrel roll to avoid target's arc and still get a shot\r\n        ['description'] = {['text'] = \"%s focused and barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = true, ['inTargetsArc'] = true},\r\n        ['action'] = {['focus'] = false, ['barrelRoll'] = true},\r\n        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n    },\r\n    [4] = { -- (target moved) Focus > barrel roll to get a shot\r\n        ['description'] = {['text'] = \"%s focused and barrel rolled to get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},\r\n        ['action'] = {['focus'] = false, ['barrelRoll'] = true},\r\n        ['postconditions'] = {['hasShot'] = true},\r\n    },\r\n    [5] = { -- (target moved) Barrel roll to avoid target's arc\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['inTargetsArc'] = true},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['inTargetsArc'] = false},\r\n    },\r\n    [6] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    }\r\n}\r\n\r\n-- TIE/sa Bomber\r\nBehaviourDB.rule_sets[1].ships[19] = {}\r\nBehaviourDB.rule_sets[1].ships[19].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[19].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k5', [3] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k5', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k5', [2] = 'k3', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k3', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k5', [2] = 'k3', [5] = 'tr2'}, -- On the card 1 is a k4. This is impossible for this ship so I've changed it to an k5.\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [2] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k5', [3] = 'k3', [5] = 'tr3'},\r\n        ['far'] = {[1] = 'k3', [4] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'br2', [6] = 'tr3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[19].action_selection = {\r\n    [1] = { --  Reload ordnance if no charges left\r\n        ['pass_through'] = true,\r\n        ['description'] = \"If %s has no charges on its missile or torpedo upgrades, then undo the following action and take a red reload action.\",\r\n    },\r\n    [2] = { --  Barrel roll > target lock to avoid target arc and still get a shot (with the > target lock)\r\n        ['description'] = {['text'] = \"%s barrel rolled and target locked to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['inTargetsArc'] = true, ['hasShot'] = true, ['targetLocked'] = false},\r\n        ['action'] = {['barrelRoll'] = false, ['targetLock'] = true},\r\n        ['postconditions'] = {['inTargetsArc'] = false, ['hasShot'] = true, ['targetWithinRange'] = true},\r\n    },\r\n    [3] = { --  Barrel roll > target lock to avoid target arc and still get a shot (without the > target lock)\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['inTargetsArc'] = true, ['hasShot'] = true, ['targetLocked'] = true},\r\n        ['action'] = {['barrelRoll'] = false},\r\n        ['postconditions'] = {['inTargetsArc'] = false, ['hasShot'] = true},\r\n    },\r\n    [4] = { --  Barrel roll > target lock to get a shot (with the > target lock)\r\n        ['description'] = \"%s barrel rolled and target locked to get a shot.\",\r\n        ['preconditions'] = {['hasShot'] = false, ['targetLocked'] = false},\r\n        ['action'] = {['barrelRoll'] = false, ['targetLock'] = true},\r\n        ['postconditions'] = {['hasShot'] = true, ['targetWithinRange'] = true},\r\n    },\r\n    [5] = { --  Barrel roll > target lock to get a shot (without the > target lock)\r\n        ['description'] = \"%s barrel rolled to get a shot.\",\r\n        ['preconditions'] = {['hasShot'] = false, ['targetLocked'] = true},\r\n        ['action'] = {['barrelRoll'] = false},\r\n        ['postconditions'] = {['hasShot'] = true},\r\n    },\r\n    [6] = { -- Target lock\r\n        ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [7] = { -- Barrel roll to avoid target's arc\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['inTargetsArc'] = true},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['inTargetsArc'] = false},\r\n    },\r\n    [8] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    }\r\n}\r\n\r\n-- TIE/de Defender\r\nBehaviourDB.rule_sets[1].ships[18] = {}\r\nBehaviourDB.rule_sets[1].ships[18].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[18].action_selection = {}\r\nBehaviourDB.rule_sets[1].ships[18].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'bl1', [4] = 'br1', [5] = 's2'},\r\n        ['far'] = {[1] = 's2', [4] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 'bl1', [2] = 'br1', [3] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [4] = 'tr1', [6] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'br2', [4] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr1', [2] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [4] = 's2', [5] = 'tr3'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k4', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'tr2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr1', [3] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [5] = 'tr3'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [5] = 'tr3'},\r\n        ['far'] = {[1] = 'k4', [5] = 'tr1'},\r\n        ['distant'] = {[1] = 'tr1', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [5] = 's2', [6] = 'tr3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[18].action_selection = {\r\n    [1] = { -- (target moved) Target lock\r\n        ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [2] = { -- (target moved) Boost or barrel roll to get a shot at range 1\r\n        ['description'] = \"%s barrel rolled/boosted to get a close range shot.\",\r\n        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = false}},\r\n        ['action'] = {\r\n            [1] = {['boost'] = false},\r\n            [2] = {['barrelRoll'] = false}\r\n        },\r\n        ['postconditions'] = {['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = true}},\r\n    },\r\n    [3] = { -- (target moved) Boost or barrel roll to get a shot\r\n        ['description'] = \"%s barrel rolled/boosted to get a shot.\",\r\n        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},\r\n        ['action'] = {\r\n            [1] = {['boost'] = false},\r\n            [2] = {['barrelRoll'] = false}\r\n        },\r\n        ['postconditions'] = {['hasShot'] = true},\r\n    },\r\n    [4] = { -- Barrel roll or boost to avoid target's arc\r\n        ['description'] = {['text'] = \"%s barrel roll/boosted to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['inTargetsArc'] = true},\r\n        ['action'] = {\r\n            [1] = {['boost'] = false},\r\n            [2] = {['barrelRoll'] = false}\r\n        },\r\n        ['postconditions'] = {['inTargetsArc'] = false},\r\n    },\r\n    [5] = { -- Evade, if not already\r\n        ['description'] = \"%s evaded.\",\r\n        ['preconditions'] = {['evading'] = false},\r\n        ['action'] = 'evade'\r\n    },\r\n    [6] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    }\r\n}\r\nBehaviourDB.rule_sets[1].ships[18].special_rules = {'fullThrottle'}\r\n\r\n-- TIE/ph Phantom\r\nBehaviourDB.rule_sets[1].ships[27] = {}\r\n-- Need to add decloaking in the system phase\r\nBehaviourDB.rule_sets[1].ships[27].target_selection = {[1]='ClosestInArc', [2]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[27].action_selection = {}\r\nBehaviourDB.rule_sets[1].ships[27].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [4] = 'bl1', [5] = 'br1', [6] = 's2'},\r\n        ['far'] = {[1] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 'bl2', [3] = 'br2', [5] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'br1', [5] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br2', [3] = 's2', [5] = 's3'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'k3', [4] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'k3', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [3] = 'k3'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'br2', [5] = 's2', [6] = 'tr3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[27].action_selection = {\r\n    [1] = { -- Cloak if no shot\r\n        ['description'] = \"%s cloaked.\",\r\n        ['preconditions'] = {['hasShot'] = false},\r\n        ['action'] = 'cloak'\r\n    },\r\n    [2] = { -- Evade if not already evading\r\n        ['description'] = \"%s evaded.\",\r\n        ['preconditions'] = {['evading'] = false},\r\n        ['action'] = 'evade'\r\n    },\r\n    [3] = { -- Barrel roll to avoid target's arc and still get a shot\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false},\r\n    },\r\n    [4] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    }\r\n}\r\n\r\n-- T-4a Lambda-class Shuttle\r\nBehaviourDB.rule_sets[1].ships[26] = {}\r\nBehaviourDB.rule_sets[1].ships[26].target_selection = {[1]='ClosestInArc', [2]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[26].action_selection = {}\r\nBehaviourDB.rule_sets[1].ships[26].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 's0', [4] = 'bl1', [5] = 'br1', [6] = 's1'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's2', [2] = 's3'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 's0', [3] = 'br1', [5] = 's1', [6] = 'tr2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's3'}, -- On the card 5-6 is an s4. This is impossible for this ship so I've changed it to an s3.\r\n        ['stress'] = {[1] = 'br1', [5] = 's1', [6] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 's0', [2] = 'br1', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [3] = 'tr2', [4] = 'br2'},\r\n        ['distant'] = {[1] = 'tr2', [2] = 'br2'},\r\n        ['stress'] = {[1] = 'br1', [5] = 's1'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 's0', [2] = 'br1', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'br1', [3] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [6] = 's1'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 's0', [3] = 'br1', [4] = 'tr2', [5] = 'br2'},\r\n        ['far'] = {[1] = 'br1', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'br1', [3] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [6] = 's1'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[26].action_selection = {\r\n    [1] = { -- Focus if have a shot\r\n        ['description'] = \"%s has a shot so focused.\",\r\n        ['preconditions'] = {['hasShot'] = true},\r\n        ['action'] = 'focus'\r\n    },\r\n    [2] = { -- Reinforce the fore if within arc of two or more enemies in that full arc\r\n        ['description'] = \"%s reinforced fore.\",\r\n        ['preconditions'] = {['inEnemyArc'] = {['arguments'] = {['arc'] = 'fullfront', ['enemyCount'] = 2}, ['requiredResult'] = true}},\r\n        ['action'] = 'reinforceFore'\r\n    },\r\n    [3] = { -- Reinforce the aft if within arc of two or more enemies in that full arc\r\n        ['description'] = \"%s reinforced aft.\",\r\n        ['preconditions'] = {['inEnemyArc'] = {['arguments'] = {['arc'] = 'fullback', ['enemyCount'] = 2}, ['requiredResult'] = true}},\r\n        ['action'] = 'reinforceAft'\r\n    },\r\n    [4] = { -- Coordinate the nearest friendly (unstressed) ship\r\n        ['description'] = {['text'] = \"%s coordinated %s.\", ['strings'] = {'ship', 'coordinate'}},\r\n        ['preconditions'] = {['hasCoordinateTarget'] = true},\r\n        ['action'] = 'coordinate'\r\n    },\r\n    [5] = { -- Jam the target\r\n        ['description'] = {['text'] = \"%s jammed %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetWithinRange'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = true}},\r\n        ['action'] = {['jam'] = true},\r\n    },\r\n    [6] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    },\r\n}\r\n\r\n-- VT-49 Decimator\r\nBehaviourDB.rule_sets[1].ships[28] = {}\r\nBehaviourDB.rule_sets[1].ships[28].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[28].action_selection = {}\r\nBehaviourDB.rule_sets[1].ships[28].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'tl2', [3] = 'tr2', [5] = 'tl3', [6] = 'tr3'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'bl1', [3] = 'tl2', [6] = 'bl2'},\r\n        ['far'] = {[1] = 'br1', [4] = 'br2', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's3'},\r\n        ['stress'] = {[1] = 'bl1', [2] = 'br1', [5] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'bl1', [2] = 'br2', [4] = 's2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [5] = 'tr2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'tr1', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'tr2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr1', [3] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'br1', [3] = 'tr2', [5] = 'tr3'},\r\n        ['far'] = {[1] = 'tl2', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'tl2', [2] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [4] = 's1', [6] = 'tr3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[28].action_selection = {\r\n    [1] = { -- Rotate turret to get a shot\r\n        ['description'] = \"%s rotated its turret to get a shot.\",\r\n        ['preconditions'] = {['hasShot'] = {['arguments'] = {['includeArcs'] = {'front'}}, ['requiredResult'] = false}},\r\n        ['action'] = {['rotateTurret'] = {['mount'] = 'main'}},\r\n        ['postconditions'] = {['hasShot'] = {['arguments'] = {['includeArcs'] = {'front'}}, ['requiredResult'] = true}},\r\n    },\r\n    [2] = { -- (target not moved) Target lock if not in any arcs\r\n        ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [3] = { -- (target moved) Target lock\r\n        ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [4] = { -- Reinforce the fore if within arc of two or more enemies in that full arc\r\n        ['description'] = \"%s reinforced fore.\",\r\n        ['preconditions'] = {['inEnemyArc'] = {['arguments'] = {['arc'] = 'fullfront', ['enemyCount'] = 2}, ['requiredResult'] = true}},\r\n        ['action'] = 'reinforceFore'\r\n    },\r\n    [5] = { -- Reinforce the aft if within arc of two or more enemies in that full arc\r\n        ['description'] = \"%s reinforced aft.\",\r\n        ['preconditions'] = {['inEnemyArc'] = {['arguments'] = {['arc'] = 'fullback', ['enemyCount'] = 2}, ['requiredResult'] = true}},\r\n        ['action'] = 'reinforceAft'\r\n    },\r\n    [6] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    },\r\n}\r\n\r\n-----------------\r\n-- Rebel Ships --\r\n-----------------\r\n\r\n-- Z-95-AF4 Headhunter. This is split by faction because the Rebel and S&V Z-95s\r\n-- have slightly different tables.\r\nBehaviourDB.rule_sets[1].ships[38] = {}\r\nBehaviourDB.rule_sets[1].ships[38].factions = {}\r\nBehaviourDB.rule_sets[1].ships[38].factions[1] = {}\r\nBehaviourDB.rule_sets[1].ships[38].factions[1].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[38].factions[1].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k3', [3] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'k3', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k3', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'k3', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [3] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'k3', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k3', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 's1', [3] = 'br2', [6] = 'tr3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[38].factions[1].action_selection = {\r\n    [1] = { -- Target lock if not in enemy's arc\r\n        ['description'] = {['text'] = \"%s target locked %s outside target's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [2] = { -- Barrel roll (stress) to avoid target's arc and still get a shot\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},\r\n        ['action'] = {['barrelRoll'] = true},\r\n        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n    },\r\n    [3] = { -- Focus if you have a shot\r\n        ['description'] = \"%s has a shot so focused.\",\r\n        ['preconditions'] = {['hasShot'] = true},\r\n        ['action'] = 'focus'\r\n    },\r\n    [4] = { -- Barrel roll (stress) to get a shot\r\n        ['description'] = \"%s barrel rolled to get a shot.\",\r\n        ['preconditions'] = {['hasShot'] = false},\r\n        ['action'] = {['barrelRoll'] = true},\r\n        ['postconditions'] = {['hasShot'] = true},\r\n    },\r\n    [5] = { -- Barrel roll (stress) to avoid target's arc\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['inTargetsArc'] = true},\r\n        ['action'] = {['barrelRoll'] = true},\r\n        ['postconditions'] = {['inTargetsArc'] = false},\r\n    },\r\n    [6] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    }\r\n}\r\n\r\n-- T-65 X-Wing\r\nBehaviourDB.rule_sets[1].ships[33] = {}\r\nBehaviourDB.rule_sets[1].ships[33].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[33].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'tr3t', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'tr3t', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'tr3t', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr3t', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [2] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr3t', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'tl3t', [3] = 'tr3t'},\r\n        ['distant'] = {[1] = 'tr3t', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'br2', [6] = 'tr3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[33].action_selection = {\r\n    [1] = { -- (target not moved) Target lock if not in any arcs\r\n        ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [2] = { -- (target moved) Target lock\r\n        ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [3] = { -- (target moved) Barrel roll to avoid target's arc and still get a shot\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = true, ['inTargetsArc'] = true},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n    },\r\n    [4] = { -- (target moved) Barrel roll to get a shot\r\n        ['description'] = \"%s barrel rolled to get a shot.\",\r\n        ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['hasShot'] = true},\r\n    },\r\n    [5] = { -- (target moved) Barrel roll to avoid target's arc\r\n        ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetMoved'] = true, ['inTargetsArc'] = true},\r\n        ['action'] = 'barrelRoll',\r\n        ['postconditions'] = {['inTargetsArc'] = false},\r\n    },\r\n    [6] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    }\r\n}\r\n\r\n-- BTL-A4 Y-Wing\r\nBehaviourDB.rule_sets[1].ships[12] = {}\r\nBehaviourDB.rule_sets[1].ships[12].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[12].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [4] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'br1', [5] = 'bl2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's3'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'br2', [5] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'bl1', [2] = 'bl2', [5] = 's2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [5] = 'br2', [6] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [5] = 'tr3'},\r\n        ['stress'] = {[1] = 'br2', [5] = 'tr2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr2', [6] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'tr2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 's1', [3] = 'tr2', [5] = 's2'},\r\n        ['far'] = {[1] = 'br1', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'k4', [3] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [4] = 's1', [6] = 'tr2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[12].action_selection = {\r\n  [1] = { -- Target lock if charges left\r\n      ['description'] = {['text'] = \"%s target locked %s. If %s has no charges on its missile or torpedo upgrades, then undo this action and perform it manually.\", ['strings'] = {'ship', 'target', 'ship'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- Rotate turret to get a shot\r\n      ['description'] = \"%s rotated its turret to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = {['arguments'] = {['includeArcs'] = {'front'}}, ['requiredResult'] = false}},\r\n      ['action'] = {['rotateTurret'] = {['mount'] = 'main'}},\r\n      ['postconditions'] = {['hasShot'] = {['arguments'] = {['includeArcs'] = {'front'}}, ['requiredResult'] = true}},\r\n  },\r\n  [3] = { -- Focus if you have a shot\r\n      ['description'] = \"%s has a shot so focused.\",\r\n      ['preconditions'] = {['hasShot'] = true},\r\n      ['action'] = 'focus'\r\n  },\r\n  [4] = { -- Barrel roll (stress) to get a shot\r\n      ['description'] = \"%s barrel rolled to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {['barrelRoll'] = true},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [5] = { --  Reload ordnance (stress) if no charges left\r\n      ['pass_through'] = true,\r\n      ['description'] = \"If %s has no charges on its missile or torpedo upgrades, then undo the following action and take a red reload action.\",\r\n  },\r\n  [6] = { -- Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- RZ-1 A-Wing\r\nBehaviourDB.rule_sets[1].ships[35] = {}\r\nBehaviourDB.rule_sets[1].ships[35].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[35].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k5', [2] = 'br3s', [4] = 'bl3s', [6] = 's2'},\r\n        ['far'] = {[1] = 's2', [3] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 's2', [5] = 's3'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'bl3s', [4] = 'tr1', [5] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'tr2', [2] = 'br2', [5] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k5', [2] = 'bl3s', [4] = 'tr1'},\r\n        ['far'] = {[1] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [4] = 'br2', [6] = 'tr3'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'bl3s', [4] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'br3s', [3] = 'bl3s', [4] = 'tr2'},\r\n        ['distant'] = {[1] = 'bl3s', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k5', [3] = 'bl3s', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'bl3s', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'bl3s', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr2', [5] = 'tr3', [6] = 's5'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[35].action_selection = {\r\n  [1] = { -- (target not moved) Target lock if not in any arcs\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- (target not moved) Focus if you have a shot\r\n      ['description'] = \"%s has a shot so focused.\",\r\n      ['preconditions'] = {['targetMoved'] = false, ['hasShot'] = true},\r\n      ['action'] = 'focus'\r\n  },\r\n  [3] = { -- (target not moved) Evade\r\n      ['description'] = \"%s evaded.\",\r\n      ['preconditions'] = {['targetMoved'] = false, ['evading'] = false},\r\n      ['action'] = 'evade'\r\n  },\r\n  [4] = { -- (target moved) Boost or barrel roll to get a shot\r\n      ['description'] = \"%s barrel rolled/boosted to get a shot.\",\r\n      ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},\r\n      ['action'] = {\r\n          [1] = {['boost'] = false},\r\n          [2] = {['barrelRoll'] = false}\r\n      },\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [5] = { -- (target moved) Focus > Boost (stress) to get a shot at range 1\r\n      ['description'] = \"%s focused into a boost (stress) to get a close range shot.\",\r\n      ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = false}},\r\n      ['action'] = {['focus'] = false, ['boost'] = true},\r\n      ['postconditions'] = {['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = true}},\r\n  },\r\n  [6] = { -- (target moved) Barrel roll or boost to avoid target's arc\r\n      ['description'] = {['text'] = \"%s barrel roll/boosted to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = {\r\n          [1] = {['boost'] = false},\r\n          [2] = {['barrelRoll'] = false}\r\n      },\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [7] = { -- (target moved) Target lock if charges left\r\n      ['description'] = {['text'] = \"%s target locked %s. If %s has no charges on its missile upgrade, then undo this action and perform it manually.\", ['strings'] = {'ship', 'target', 'ship'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [8] = { -- (target moved) Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['precondition'] = {['targetMoved'] = true},\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- B-Wing\r\nBehaviourDB.rule_sets[1].ships[17] = {}\r\nBehaviourDB.rule_sets[1].ships[17].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[17].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k2', [2] = 'br1', [6] = 'bl2'},\r\n        ['far'] = {[1] = 'br1', [4] = 'br2', [6] = 'br3'},\r\n        ['distant'] = {[1] = 'br2', [5] = 'br3'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'br2', [5] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'tr1', [3] = 'br1', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [6] = 'br2'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'br2'},\r\n        ['stress'] = {[1] = 'br1', [5] = 'tr2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k2', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k2', [2] = 'tr1t', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr1t', [3] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'tr2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k2', [3] = 'tl1t', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k2', [3] = 'tr1t'},\r\n        ['distant'] = {[1] = 'tr1t', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [5] = 's1', [6] = 's2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[17].action_selection = {\r\n  [1] = { -- (target not moved) Target lock if not in any arcs\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- (target moved) Target lock\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [3] = { -- (target moved) Focus > barrel roll (stress) to avoid target's arc and still get a shot\r\n      ['description'] = {['text'] = \"%s focused and barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = {['focus'] = false, ['barrelRoll'] = true},\r\n      ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n  },\r\n  [4] = { -- (target moved) Focus > barrel roll (stress) to get a shot\r\n      ['description'] = {['text'] = \"%s focused and barrel rolled to get a shot.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},\r\n      ['action'] = {['focus'] = false, ['barrelRoll'] = true},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [5] = { -- (target moved) Barrel roll to avoid target's arc\r\n      ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [6] = { -- Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- YT-2400 Light Freighter\r\nBehaviourDB.rule_sets[1].ships[5] = {}\r\nBehaviourDB.rule_sets[1].ships[5].target_selection = {[1]='LockedInRange',  [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[5].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tl2', [5] = 'tr2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [6] = 's3'},\r\n        ['distant'] = {[1] = 's3', [3] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'bl1', [3] = 'tl2', [6] = 'bl2'},\r\n        ['far'] = {[1] = 'br1', [4] = 'br2', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's3'},\r\n        ['stress'] = {[1] = 'br1', [3] = 's1', [5] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'bl1', [2] = 'bl2', [4] = 's2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'br1', [3] = 'br2', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'br1', [6] = 's1'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 's1', [4] = 'bl1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'tr1', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'k4', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'br1', [6] = 'tr2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr1', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr1', [3] = 'br1'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[5].action_selection = {\r\n  [1] = { -- Rotate turret if target is not in turret arc\r\n      ['description'] = \"%s rotated its turret to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {['rotateTurret'] = {['mount'] = 'main'}},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [2] = { -- (target moved) Target lock if target is in turret arc at range 2\r\n      ['description'] = \"%s target locked target at range 2 in turret arc.\",\r\n      ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = {['arguments'] = {['maxRange'] = 2}, {['minRange'] = 2}, ['requiredResult'] = true}, ['hasShot'] = {['arguments'] = {['maxRange'] = 2}, ['requiredResult'] = true}},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [3] = { -- (target moved) Barrel roll (stress) to get target at range 2 and in turret arc\r\n      ['description'] = \"%s barrel rolled to get target in turret arc at range 2.\",\r\n      ['preconditions'] = {['targetMoved'] = true, ['targetWithinRange'] = {['arguments'] = {['maxRange'] = 2}, {['minRange'] = 2}, ['requiredResult'] = false}},\r\n      ['action'] = {['barrelRoll'] = true},\r\n      ['postconditions'] = {['targetWithinRange'] = {['arguments'] = {['maxRange'] = 2}, {['minRange'] = 2}, ['requiredResult'] = true}, ['hasShot'] = {['arguments'] = {['maxRange'] = 2}, ['requiredResult'] = true}},\r\n  },\r\n  [4] = { -- Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- Modified YT-1300\r\nBehaviourDB.rule_sets[1].ships[1] = {}\r\nBehaviourDB.rule_sets[1].ships[1].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[1].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'tl2', [3] = 'tr2', [5] = 'tl3', [6] = 'tr3'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'bl1', [3] = 'tl2', [6] = 'bl2'},\r\n        ['far'] = {[1] = 'br1', [4] = 'br2', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [2] = 'bl2', [3] = 'br2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'bl1', [2] = 'bl2', [4] = 's2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [2] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'bl3s', [3] = 'br1', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'bl3s', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'bl3s', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr2', [3] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'bl3s', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br3s', [3] = 'bl3s'},\r\n        ['distant'] = {[1] = 'bl3s', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr2', [4] = 'br2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[1].action_selection = {\r\n  [1] = { -- Rotate turret if target is not in turret arc\r\n      ['description'] = \"%s rotated its turret to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {['rotateTurret'] = {['mount'] = 'main'}},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [2] = { -- Boost (stress) to get a shot\r\n      ['description'] = \"%s boosted to get a shot.\",\r\n      ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},\r\n      ['action'] = {['boost'] = true},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [3] = { -- Target lock\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [4] = { -- Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- VCX-100\r\nBehaviourDB.rule_sets[1].ships[23] = {}\r\nBehaviourDB.rule_sets[1].ships[23].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[23].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 's1', [3] = 'tl2', [5] = 'tr2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'br1', [3] = 'bl2', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [2] = 'bl2', [3] = 'br2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'bl2', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [4] = 'br2', [6] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr1', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr2', [2] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k4', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'tr1', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'k4', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr2', [3] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tl2', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'k4', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr2', [4] = 'br2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[23].action_selection = {\r\n  [1] = { -- Rotate turret to get a shot\r\n      ['description'] = \"%s rotated its turret to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {['rotateTurret'] = {['mount'] = 'main'}},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [2] = { -- Target lock\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [3] = { -- Focus if you have a shot\r\n      ['description'] = \"%s has a shot so focused.\",\r\n      ['preconditions'] = {['hasShot'] = true},\r\n      ['action'] = 'focus'\r\n  },\r\n  [4] = { -- Reinforce the fore if target is within that full arc\r\n      ['description'] = \"%s reinforced fore.\",\r\n      ['preconditions'] = {['inTargetsArc'] = {['arguments'] = {['arc'] = 'fullfront'}, ['requiredResult'] = true}},\r\n      ['action'] = 'reinforceFore'\r\n  },\r\n  [5] = { -- Reinforce the aft if within arc of two or more enemies in that full arc\r\n      ['description'] = \"%s reinforced aft.\",\r\n      ['preconditions'] = {['inTargetsArc'] = {['arguments'] = {['arc'] = 'fullback'}, ['requiredResult'] = true}},\r\n      ['action'] = 'reinforceAft'\r\n  },\r\n  [6] = { -- Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n----------------\r\n-- Scum Ships --\r\n----------------\r\n\r\n-- The Z-95 Scum has slightly different AI from the Rebel one (less self-preservation)\r\n-- Z-95-AF4 Headhunter. This is already defined in the Rebel section, so we have\r\n-- to add a new faction to the existing one.\r\nBehaviourDB.rule_sets[1].ships[38].factions[3] = {}\r\nBehaviourDB.rule_sets[1].ships[38].factions[3].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[38].factions[3].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k3', [3] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'k3', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k3', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'k3', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [3] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'k3', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k3', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 's1', [3] = 'br2', [6] = 'tr3'},\r\n    },\r\n}\r\n\r\nBehaviourDB.rule_sets[1].ships[38].factions[3].action_selection = {\r\n    [1] = { -- Target lock if not in enemy's arc\r\n        ['description'] = {['text'] = \"%s target locked %s outside target's arc.\", ['strings'] = {'ship', 'target'}},\r\n        ['preconditions'] = {['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n        ['action'] = 'targetLock'\r\n    },\r\n    [2] = { -- Focus if you have a shot\r\n        ['description'] = \"%s has a shot so focused.\",\r\n        ['preconditions'] = {['hasShot'] = true},\r\n        ['action'] = 'focus'\r\n    },\r\n    [3] = { -- Barrel roll (stress) to get a shot\r\n        ['description'] = \"%s barrel rolled to get a shot.\",\r\n        ['preconditions'] = {['hasShot'] = false},\r\n        ['action'] = {['barrelRoll'] = true},\r\n        ['postconditions'] = {['hasShot'] = true},\r\n    },\r\n    [4] = { -- Focus\r\n        ['description'] = \"%s focused.\",\r\n        ['action'] = 'focus'\r\n    }\r\n}\r\n\r\n-- M3-A Interceptor\r\nBehaviourDB.rule_sets[1].ships[44] = {}\r\nBehaviourDB.rule_sets[1].ships[44].target_selection = {[1]='ClosestInArc', [2]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[44].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k5', [3] = 'k3', [5] = 'bl1', [6] = 'br1'},\r\n        ['far'] = {[1] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 's2', [5] = 's3'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k3', [4] = 'tr1', [6] = 'br1'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [4] = 's2', [6] = 's3'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k5', [3] = 'tr1', [6] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'br1', [3] = 'tr2', [6] = 'br2'},\r\n        ['distant'] = {[1] = 'tr1', [3] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'br1'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k5', [2] = 'k3', [4] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k3', [3] = 'tr1', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [3] = 'br1'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k5', [3] = 'k3', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k3', [4] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [5] = 'tr1'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'tr2', [5] = 's3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[44].action_selection = {\r\n  [1] = { -- Target lock if charges left\r\n      ['description'] = {['text'] = \"%s target locked %s. If %s has no charges on its missile or torpedo upgrades, then undo this action and perform it manually.\", ['strings'] = {'ship', 'target', 'ship'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- Barrel roll to get a shot\r\n      ['description'] = \"%s barrel rolled to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {['barrelRoll'] = false},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [3] = { -- Focus if you have a shot\r\n      ['description'] = \"%s has a shot so focused.\",\r\n      ['preconditions'] = {['hasShot'] = true},\r\n      ['action'] = 'focus'\r\n  },\r\n  [4] = { -- Evade\r\n      ['description'] = \"%s evades.\",\r\n      ['action'] = 'evade'\r\n  }\r\n}\r\n\r\n-- Khiraxz Fighter\r\nBehaviourDB.rule_sets[1].ships[7] = {}\r\nBehaviourDB.rule_sets[1].ships[7].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[7].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'bl1', [5] = 'br1'},\r\n        ['far'] = {[1] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's2', [5] = 's3'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [4] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'tr2t', [4] = 'tr1'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'br1', [3] = 'br2', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr1', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr1', [3] = 'br1', [4] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr2t', [4] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'tr2t', [5] = 'tr1'},\r\n        ['distant'] = {[1] = 'tr2t', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'br1', [4] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr2t', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'tl2t', [3] = 'tr2t'},\r\n        ['distant'] = {[1] = 'tr2t', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'br1', [4] = 'br2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[7].action_selection = {\r\n  [1] = { -- (target not moved) Target lock if not in any arcs\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- (target moved) Target lock\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [3] = { -- (target moved) Barrel roll to avoid target's arc and still get a shot\r\n      ['description'] = {['text'] = \"%s focused and barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = {['barrelRoll'] = false},\r\n      ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n  },\r\n  [4] = { -- (target moved) Focus if you have a shot\r\n      ['description'] = \"%s has a shot so focused.\",\r\n      ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = true},\r\n      ['action'] = 'focus'\r\n  },\r\n  [5] = { -- (target moved) Barrel roll to avoid target's arc\r\n      ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [6] = { -- Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- StarViper\r\nBehaviourDB.rule_sets[1].ships[3] = {}\r\nBehaviourDB.rule_sets[1].ships[3].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[3].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'br3s', [2] = 'bl3s', [3] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'bl3s', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'bl3s', [3] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'tr2', [6] = 'br2'},\r\n        ['distant'] = {[1] = 'tr1', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'bl3s', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'br3s', [2] = 'bl3s', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'br3s', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [2] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'br3s', [3] = 'bl3s', [5] = 'tr1'},\r\n        ['far'] = {[1] = 'br3s', [3] = 'bl3s'},\r\n        ['distant'] = {[1] = 'br3s', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'tr2', [5] = 'br2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[3].action_selection = {\r\n  [1] = { -- Target lock\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- Boost or barrel roll > Focus (stress) to avoid Target arc and still get a shot\r\n      ['description'] = \"%s barrel rolled/boosted into a focus (stress) to avoid target's arc and still get a shot.\",\r\n      ['preconditions'] = {['inTargetsArc'] = true},\r\n      ['action'] = {\r\n        [1] = {['boost'] = false, ['focus'] = true},\r\n        [2] = {['barrelRoll'] = false, ['focus'] = true}\r\n      },\r\n      ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false},\r\n  },\r\n  [3] = { -- Boost or barrel roll > Focus (stress) to get a shot at range 1\r\n      ['description'] = \"%s barrel rolled/boosted into a focus (stress) to get a close range shot.\",\r\n      ['preconditions'] = {['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = false}},\r\n      ['action'] = {\r\n        [1] = {['boost'] = false, ['focus'] = true},\r\n        [2] = {['barrelRoll'] = false, ['focus'] = true}\r\n      },\r\n      ['postconditions'] = {['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = true}},\r\n  },\r\n  [4] = { -- Boost or barrel roll > Focus (stress) to get a shot\r\n      ['description'] = \"%s barrel rolled/boosted into a focus (stress) to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {\r\n        [1] = {['boost'] = false, ['focus'] = true},\r\n        [2] = {['barrelRoll'] = false, ['focus'] = true}\r\n      },\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [5] = { -- Barrel roll or boost to avoid target's arc\r\n      ['description'] = {['text'] = \"%s barrel roll/boosted to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['inTargetsArc'] = true},\r\n      ['action'] = {\r\n        [1] = {['boost'] = false},\r\n        [2] = {['barrelRoll'] = false}\r\n      },\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [6] = { -- (target moved) Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['precondition'] = {['targetMoved'] = true},\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- Fang Fighter\r\nBehaviourDB.rule_sets[1].ships[36] = {}\r\nBehaviourDB.rule_sets[1].ships[36].target_selection = {[1]='LockedInRange', [2]='ClosestInArcLowerInitiative', [3]='ClosestInArc', [4]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[36].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'bl2', [4] = 'br2', [5] = 's2'},\r\n        ['far'] = {[1] = 's2', [4] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 'bl2', [2] = 'br2', [3] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr1', [5] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br2', [4] = 's2', [5] = 's3'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'tr2', [4] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr2t', [4] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'tr2t', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr2t', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr2', [5] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'tl2t', [3] = 'tr2t', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'tl2t', [3] = 'tr2t'},\r\n        ['distant'] = {[1] = 'tr2t', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr2', [4] = 'br2', [6] = 's2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[36].action_selection = {\r\n  [1] = { -- Target lock\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- Boost or barrel roll > Focus (stress) to avoid Target arc and still get a shot\r\n      ['description'] = \"%s barrel rolled/boosted into a focus (stress) to avoid target's arc and still get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = {\r\n          [1] = {['boost'] = false, ['focus'] = true},\r\n          [2] = {['barrelRoll'] = false, ['focus'] = true}\r\n      },\r\n      ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false},\r\n  },\r\n  [3] = { -- Boost or barrel roll > Focus (stress) to get a shot at range 1\r\n      ['description'] = \"%s barrel rolled/boosted into a focus (stress) to get a close range shot.\",\r\n      ['preconditions'] = {['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = false}},\r\n      ['action'] = {\r\n          [1] = {['boost'] = false, ['focus'] = true},\r\n          [2] = {['barrelRoll'] = false, ['focus'] = true}\r\n      },\r\n      ['postconditions'] = {['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = true}},\r\n  },\r\n  [4] = { -- Boost or barrel roll > Focus (stress) to get a shot\r\n      ['description'] = \"%s barrel rolled/boosted into a focus (stress) to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {\r\n          [1] = {['boost'] = false, ['focus'] = true},\r\n          [2] = {['barrelRoll'] = false, ['focus'] = true}\r\n      },\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [5] = { -- Barrel roll or boost to avoid target's arc\r\n      ['description'] = {['text'] = \"%s barrel roll/boosted to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['inTargetsArc'] = true},\r\n      ['action'] = {\r\n          [1] = {['boost'] = false},\r\n          [2] = {['barrelRoll'] = false}\r\n      },\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [6] = { -- (target moved) Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['precondition'] = {['targetMoved'] = true},\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- HWK-290 Light Freighter\r\n---- This logic is shared between Scum and Rebel. See Z-95 for an example on how to split them if necessary.\r\nBehaviourDB.rule_sets[1].ships[34] = {}\r\nBehaviourDB.rule_sets[1].ships[34].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[34].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 's0', [4] = 'bl1', [5] = 'br1', [6] = 's1'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 's0', [3] = 's1', [5] = 'br1', [6] = 'tl2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'bl1', [2] = 'tr2', [4] = 'bl2'},\r\n        ['far'] = {[1] = 'br1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [6] = 'tr2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 's0', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'br1', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'br1', [3] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [5] = 'tr2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 's0', [3] = 'br1', [5] = 'tr2', [6] = 'br3'},\r\n        ['far'] = {[1] = 'br1', [3] = 'tr2'},\r\n        ['distant'] = {[1] = 'br1', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [5] = 's1', [6] = 'tr2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[34].action_selection = {\r\n  [1] = { -- Target lock\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- Rotate turret to get a shot\r\n      ['description'] = \"%s rotated its turret to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {['rotateTurret'] = {['mount'] = 'main'}},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [3] = { -- Boost (stress) to get a shot\r\n      ['description'] = \"%s boosted to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = {['boost'] = true},\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [4] = { -- Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- Firespray-Class Patrol Craft\r\nBehaviourDB.rule_sets[1].ships[10] = {}\r\nBehaviourDB.rule_sets[1].ships[10].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[10].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's1', [2] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's3', [2] = 's4'},\r\n        ['stress'] = {[1] = 's1', [4] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 's1', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [3] = 'br2', [4] = 's2'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [2] = 'tr3t', [4] = 'tr1'},\r\n        ['far'] = {[1] = 'tr1', [3] = 'br1', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr1', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'bl1', [4] = 'br1'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'tr3t', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'tr3t', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'tr3t', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'bl1', [3] = 'br1', [5] = 'tr2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'tr3t', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'tl3t', [3] = 'tr3t'},\r\n        ['distant'] = {[1] = 'tr3t', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'bl1', [3] = 'br1', [6] = 'tr2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[10].action_selection = {\r\n  [1] = { -- (target not moved) Target lock if not in any arcs\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = false, ['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- (target moved) Target lock\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['targetLocked'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [3] = { -- (target moved) Boost to get a shot\r\n      ['description'] = {['text'] = \"%s boosted to get a shot.\", ['strings'] = {'ship'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['hasShot'] = false},\r\n      ['action'] = {['boost'] = false},\r\n      ['postconditions'] = {['hasShot'] = true}\r\n  },\r\n  [4] = { -- (target moved) Boost to get within Range 1 and still get a shot\r\n      ['description'] = \"%s boosted to get a close range shot.\",\r\n      ['preconditions'] = {['hasShot'] = {['arguments'] = {['minRange'] = 2}, ['requiredResult'] = true}},\r\n      ['action'] = {['boost'] = false},\r\n      ['postconditions'] = {['hasShot'] = {['arguments'] = {['maxRange'] = 1}, ['requiredResult'] = true}},\r\n  },\r\n  [5] = { -- (target moved) Boost to avoid target's arc\r\n      ['description'] = {['text'] = \"%s boosted to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetMoved'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = 'boost',\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [6] = { -- Focus\r\n      ['description'] = \"%s focused.\",\r\n      ['action'] = 'focus'\r\n  }\r\n}\r\n\r\n-- Modified TIE/Ln Fighter (Mining Guild)\r\nBehaviourDB.rule_sets[1].ships[56] = {}\r\nBehaviourDB.rule_sets[1].ships[56].target_selection = {[1]='LockedInRange', [2]='ClosestInArc', [3]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[56].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k3', [3] = 'bl2', [4] = 'br2', [5] = 's2'},\r\n        ['far'] = {[1] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's4', [6] = 's5'},\r\n        ['stress'] = {[1] = 'bl2', [3] = 'br2', [5] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'k3', [3] = 'tr1', [5] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br2', [4] = 's2', [6] = 's3'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k3', [2] = 'tr1', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'br2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'k3', [2] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k3', [3] = 'tr1', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'k3', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k3', [4] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k3', [3] = 'tr1', [4] = 'tr3'},\r\n        ['distant'] = {[1] = 'k3', [5] = 'tr1'},\r\n        ['stress'] = {[1] = 'br2', [6] = 'tr3'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[56].action_selection = {\r\n  [1] = { -- Barrel roll to avoid target's arc and still get a shot\r\n      ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n  },\r\n  [2] = { -- Barrel roll to get a shot\r\n      ['description'] = \"%s barrel rolled to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [3] = { -- Focus if you have a shot\r\n      ['description'] = \"%s has a shot so focused.\",\r\n      ['preconditions'] = {['hasShot'] = true},\r\n      ['action'] = 'focus'\r\n  },\r\n  [4] = { -- Barrel roll to avoid target's arc\r\n      ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['inTargetsArc'] = true},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [5] = { -- Evade\r\n      ['description'] = \"%s evades.\",\r\n      ['action'] = 'evade'\r\n  }\r\n}\r\n\r\n--------------\r\n-- FO Ships --\r\n--------------\r\n\r\n-- TIE/fo Fighter\r\nBehaviourDB.rule_sets[1].ships[49] = {}\r\nBehaviourDB.rule_sets[1].ships[49].target_selection = {[1]='ClosestInArc', [2]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[49].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'bl2', [4] = 'br2', [5] = 's2'},\r\n        ['far'] = {[1] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 'bl2', [3] = 'br2', [5] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'bl2s', [3] = 'tr1', [5] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br2', [4] = 's2', [6] = 's3'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'bl2s', [5] = 'tr1'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'tr2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'bl2s', [4] = 'tr1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'k4', [2] = 'bl2s', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'bl2s', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tr1', [2] = 'tr2', [6] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'k4', [3] = 'bl2s', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'br2s', [3] = 'bl2s'},\r\n        ['distant'] = {[1] = 'bl2s', [4] = 'tr1'},\r\n        ['stress'] = {[1] = 'tl2', [4] = 'tr2', [6] = 's4'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[49].action_selection = {\r\n  [1] = { -- Target lock if not in any arcs\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- Barrel roll to avoid target's arc and still get a shot\r\n      ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n  },\r\n  [3] = { -- Focus if you have a shot\r\n      ['description'] = \"%s has a shot so focused.\",\r\n      ['preconditions'] = {['hasShot'] = true},\r\n      ['action'] = 'focus'\r\n  },\r\n  [4] = { -- Barrel roll to get a shot\r\n      ['description'] = \"%s barrel rolled to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [5] = { -- Barrel roll to avoid target's arc\r\n      ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['inTargetsArc'] = true},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [5] = { -- Evade\r\n      ['description'] = \"%s evades.\",\r\n      ['action'] = 'evade'\r\n  }\r\n}\r\n\r\n-- TIE/sf Fighter\r\nBehaviourDB.rule_sets[1].ships[50] = {}\r\nBehaviourDB.rule_sets[1].ships[50].target_selection = {[1]='ClosestInArc', [2]='Closest'}\r\nBehaviourDB.rule_sets[1].ships[50].move_table = {\r\n    ['bullseye'] = {\r\n        ['near'] = {[1] = 'br3s', [2] = 'bl3s', [3] = 's1', [5] = 's2'},\r\n        ['far'] = {[1] = 's2', [5] = 's3'},\r\n        ['distant'] = {[1] = 's4', [2] = 's5'},\r\n        ['stress'] = {[1] = 'bl1', [3] = 'br1', [5] = 's2'},\r\n    },\r\n    ['front_right'] = {\r\n        ['near'] = {[1] = 'bl3s', [3] = 'br1', [6] = 'br2'},\r\n        ['far'] = {[1] = 'br2', [4] = 'br3', [6] = 's3'},\r\n        ['distant'] = {[1] = 'br3', [5] = 's4'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'br2', [6] = 's3'},\r\n    },\r\n    ['right_front'] = {\r\n        ['near'] = {[1] = 'bl3s', [3] = 'tr1', [4] = 'tr2'},\r\n        ['far'] = {[1] = 'tr1', [2] = 'tr2', [3] = 'br2', [5] = 'tr3'},\r\n        ['distant'] = {[1] = 'tr2', [4] = 'tr3'},\r\n        ['stress'] = {[1] = 'br1', [5] = 'tr2'},\r\n    },\r\n    ['right_back'] = {\r\n        ['near'] = {[1] = 'bl3s', [4] = 'br1', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'br3s', [2] = 'bl3s', [5] = 'tr2'},\r\n        ['distant'] = {[1] = 'br3s', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [2] = 'tr2', [4] = 'br2'},\r\n    },\r\n    ['back_right'] = {\r\n        ['near'] = {[1] = 'br3s', [3] = 'bl3s', [5] = 'tr2'},\r\n        ['far'] = {[1] = 'br3s', [3] = 'bl3s'},\r\n        ['distant'] = {[1] = 'br3s', [4] = 'tr2'},\r\n        ['stress'] = {[1] = 'br1', [4] = 'tr2', [5] = 'br2'},\r\n    },\r\n}\r\nBehaviourDB.rule_sets[1].ships[50].action_selection = {\r\n  [1] = { -- Target lock if not in any arcs\r\n      ['description'] = {['text'] = \"%s target locked %s.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['targetLocked'] = false, ['inEnemyArc'] = false, ['targetWithinRange'] = true},\r\n      ['action'] = 'targetLock'\r\n  },\r\n  [2] = { -- Barrel roll to avoid target's arc and still get a shot\r\n      ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc and still get a shot.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['hasShot'] = true, ['inTargetsArc'] = true},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['hasShot'] = true, ['inTargetsArc'] = false}\r\n  },\r\n  [3] = { -- Focus if you have a shot\r\n      ['description'] = \"%s has a shot so focused.\",\r\n      ['preconditions'] = {['hasShot'] = true},\r\n      ['action'] = 'focus'\r\n  },\r\n  [4] = { -- Barrel roll to get a shot\r\n      ['description'] = \"%s barrel rolled to get a shot.\",\r\n      ['preconditions'] = {['hasShot'] = false},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['hasShot'] = true},\r\n  },\r\n  [5] = { -- Barrel roll to avoid target's arc\r\n      ['description'] = {['text'] = \"%s barrel rolled to avoid %s's arc.\", ['strings'] = {'ship', 'target'}},\r\n      ['preconditions'] = {['inTargetsArc'] = true},\r\n      ['action'] = 'barrelRoll',\r\n      ['postconditions'] = {['inTargetsArc'] = false},\r\n  },\r\n  [5] = { -- Evade\r\n      ['description'] = \"%s evades.\",\r\n      ['action'] = 'evade'\r\n  }\r\n}\r\n\n----#include TTS_xwing/src/BehaviourDB\n\r\n-- Dice control and dice_statistics\r\n----#include TTS_xwing/src/DiceControl\n\r\n-- ~~~~~~\r\n-- Script by Eirik 'Flippster' Munthe\r\n--\r\n--\r\n-- X-Wing dice control module,\r\n-- Prevents dice tampering, and presents dice results.\r\n-- Stores and presents dice statistics\r\n-- ~~~~~~\r\n\r\nDiceControlModule = {}\r\nDiceControlModule.dice_statistics = {}\r\nDiceControlModule.rolled_dice = {}\r\nDiceControlModule.dice_roller_state = {}\r\n\r\nDiceControlModule.enabled = true\r\n\r\nDiceControlModule.error_color = color(1.0,0.2,0.1)\r\nDiceControlModule.info_color = color(0.7,0.7,0.4)\r\nDiceControlModule.highlight_color = \"[FFFF55]\"\r\n\r\nDiceControlModule.test_mode = false\r\n\r\n\r\n\r\nDiceControlModule.dice_types = {\r\n    Red = {\r\n        color = \"[FF0000]\",\r\n        luck_values = {\r\n            Crit = { expected = 1/8,\r\n                    luck = 1.25},\r\n            Hit  =  { expected = 3/8,\r\n                     luck = 1},\r\n            Eye  = { expected = 2/8,\r\n                     luck = 0.5},\r\n            Blank = { expected = 2/8,\r\n                     luck = 0}\r\n             },\r\n         result_order = {\"Crit\", \"Hit\", \"Eye\"}\r\n         },\r\n    Green = {\r\n        color = \"[00FF00]\",\r\n        luck_values = {\r\n            Evade = { expected = 3/8,\r\n                     luck =  1},\r\n            Eye = { expected = 2/8,\r\n                     luck = 0.75},\r\n            Blank = { expected = 3/8,\r\n                     luck = 0}\r\n             },\r\n            result_order = {\"Evade\", \"Eye\"}\r\n         },\r\n     RedTest = {\r\n         color = \"[FFFFFF]\",\r\n         luck_values = {\r\n             Crit ={expected = 1/8,\r\n                    luck = 1.25},\r\n             Hit1 = { expected = 1/8,\r\n                      luck =  1},\r\n             Hit2 = { expected = 1/8,\r\n                      luck =  1},\r\n            Hit3 = { expected = 1/8,\r\n                      luck =  1},\r\n            Eye1 = { expected = 1/8,\r\n                      luck = 0.5},\r\n            Eye2 = { expected = 1/8,\r\n                      luck = 0.5},\r\n             Blank1 = { expected = 1/8,\r\n                      luck = 0},\r\n            Blank2 = { expected = 1/8,\r\n                     luck = 0}\r\n              },\r\n             result_order = {\"Crit\", \"Hit1\", \"Hit2\", \"Hit3\", \"Eye1\",\"Eye2\",\"Blank1\",\"Blank2\"}\r\n          },\r\n     Default = {\r\n         color = \"[777777]\"\r\n              }\r\n          }\r\n\r\nDiceControlModule.GetDefaultDiceStats = function(dicecolor)\r\n  def= {Total = 0}\r\n  if DiceControlModule.dice_types[dicecolor] and DiceControlModule.dice_types[dicecolor].luck_values then\r\n    for result, value in pairs(DiceControlModule.dice_types[dicecolor].luck_values) do\r\n      def[result] = 0\r\n    end\r\n  end\r\n  return def\r\nend\r\n\r\nDiceControlModule.onLoad = function()\r\n\r\n    addContextMenuItem(\"Toggle dice control\",\r\n        function()\r\n            if DiceControlModule.enabled then\r\n                DiceControlModule.enabled = false\r\n                printToAll(\"Dice control is now DISABLED\", DiceControlModule.info_color)\r\n            else\r\n                DiceControlModule.enabled = true\r\n                printToAll(\"Dice control is now ENABLED\", DiceControlModule.info_color)\r\n            end\r\n        end, false, false)\r\n    addContextMenuItem(\"Present dice statistics\", DiceControlModule.presentStatistics, false)\r\n    addContextMenuItem(\"Reset dice statistics\", function() DiceControlModule.dice_statistics = {} end, false)\r\n    DiceControlModule.dicecontainer = DiceControlModule.findByGMNotes(\"dicebag1\") -- you probably want findByGMNotes(gmnoteToFind) here\r\nend\r\n\r\nEventSub.Register('onLoad', DiceControlModule.onLoad)\r\n\r\n\r\nDiceControlModule.presentStatistics = function()\r\n    for player, types in pairs(DiceControlModule.dice_statistics) do\r\n        local total = 0\r\n        printToAll(\"[\" .. Color.fromString(player.color):toHex() .. \"]\" ..  player.steam_name .. \"[-] have rolled:\" , DiceControlModule.info_color)\r\n        local playerluck = nil\r\n        for type, results in pairs(types) do\r\n            local typetotal = results.Total\r\n            total = total + typetotal\r\n            local luck = 0\r\n            local typecolor =  DiceControlModule.dice_types[type].color or \"[#FFFFFF]\"\r\n            for result, number in pairs(results) do\r\n                local percentage = tostring(math.floor(number / typetotal * 1000) / 10)\r\n                local luckvalue = DiceControlModule.dice_types[type].luck_values\r\n                local luckstring = \"\"\r\n                if luckvalue ~= nil and luckvalue[result] ~= nil then\r\n                    luckstring = \" - Expected: \" .. tostring(luckvalue[result].expected * typetotal)\r\n                    luck = luck + ((number - (luckvalue[result].expected * typetotal)) *  luckvalue[result].luck)\r\n                end\r\n                printToAll(typecolor .. type .. \"[-] \" .. result .. \": \" .. DiceControlModule.highlight_color .. tostring(number) .. \"[-] (\".. percentage .. \"%)\" .. luckstring, DiceControlModule.info_color)\r\n            end\r\n            if DiceControlModule.dice_types[type] ~= nil then\r\n                printToAll(typecolor .. type .. \"[-] dice luck score: \" .. DiceControlModule.highlight_color ..  tostring(luck) .. \"[-]\", DiceControlModule.info_color)\r\n                playerluck = (playerluck or 0) + luck\r\n            end\r\n        end\r\n        if playerluck ~= nil then\r\n            printToAll(\"Total luck score: \" .. DiceControlModule.highlight_color .. tostring(playerluck) .. \"[-]\", DiceControlModule.info_color)\r\n        end\r\n    end\r\nend\r\n\r\nfunction onPlayerAction(player, action, targets)\r\n  if action == Player.Action.Randomize then\r\n      if DiceControlModule.enabled then\r\n        for _, object in pairs(targets) do\r\n          DiceControlModule.onObjectRandomize(object, player)\r\n        end\r\n      end\r\n  end\r\nend\r\n\r\n\r\nDiceControlModule.onObjectRandomize = function(object, player)\r\n    if DiceControlModule.enabled and (object.tag == \"Dice\")  and (object.held_by_color == nil) then\r\n        DiceControlModule.dice_roller_state[player] = DiceControlModule.dice_roller_state[player] or \"idle\"\r\n        if DiceControlModule.dice_roller_state[player] == \"idle\" then\r\n            if object.held_by_color ~= nil then\r\n                DiceControlModule.dice_roller_state[player]  = \"error\"\r\n                Wait.frames(function() DiceControlModule.dice_roller_state[player]  = \"idle\" end, 1)\r\n                return\r\n            end\r\n            DiceControlModule.rolled_dice[player] = {}\r\n\r\n            if not DiceControlModule.PrepareDice(object, player) then\r\n                return\r\n            end\r\n            DiceControlModule.dice_roller_state[player]  = \"starting\"\r\n            Wait.time(\r\n            function()\r\n                if #DiceControlModule.rolled_dice[player] ~= 0 then\r\n                    DiceControlModule.dice_roller_state[player]  = \"waiting\"\r\n                end\r\n\r\n            end, 0.8,0)\r\n            Wait.condition(function() DiceControlModule.PresentDiceRollerResult(player) end, function() return DiceControlModule.UntilRolledDiceAreStill(player) end, 6, function() DiceControlModule.RollTimeout(player) end)\r\n        elseif DiceControlModule.dice_roller_state[player]  == \"starting\" then\r\n            for i, dice in pairs(DiceControlModule.rolled_dice[player]) do\r\n                if dice == object then\r\n                    return\r\n                end\r\n            end\r\n            DiceControlModule.PrepareDice(object, player)\r\n        elseif DiceControlModule.dice_roller_state[player]  == \"waiting\" then\r\n            for i, dice in pairs(DiceControlModule.rolled_dice[player]) do\r\n                if dice == object then\r\n                    return\r\n                end\r\n            end\r\n            printToAll(\"Please don't start new rolls while waiting for the result of another\", DiceControlModule.error_color)\r\n            destroyObject(object)\r\n        end\r\n    end\r\nend\r\n\r\n--EventSub.Register('onObjectRandomize', DiceControlModule.onObjectRandomize)\r\n\r\nDiceControlModule.PrepareDice = function(die, player)\r\n    if not die.isSmoothMoving() then\r\n        die.roll()\r\n        Wait.time(function() die.roll() end, 0.1, int)\r\n        die.interactable = false\r\n        players = die.getSelectingPlayers()\r\n        for j, player in pairs(players) do\r\n            die.removeFromPlayerSelection(player)\r\n        end\r\n        table.insert(DiceControlModule.rolled_dice[player], die)\r\n        return true\r\n    else\r\n        printToAll(\"Please don't roll flipping dice\", DiceControlModule.error_color)\r\n        destroyObject(die)\r\n        return false\r\n    end\r\nend\r\n\r\nDiceControlModule.RollTimeout = function(player)\r\n    printToAll(\"Roll timed out, please try again\", DiceControlModule.error_color)\r\n    for k, dice in pairs(DiceControlModule.rolled_dice[player]) do\r\n        dice.interactable = true\r\n    end\r\n    DiceControlModule.dice_roller_state[player]  = \"idle\"\r\nend\r\n\r\nDiceControlModule.PresentDiceRollerResult = function(player)\r\n\r\n    local resultTable = {}\r\n    for k, dice in pairs(DiceControlModule.rolled_dice[player]) do\r\n        dice.interactable = true\r\n    end\r\n\r\n    for k, dice in pairs(DiceControlModule.rolled_dice[player]) do\r\n        local dicecolor = dice.getVar(\"dicecolor\") or \"Default\"\r\n        local result = dice.getRotationValue()\r\n        resultTable[dicecolor] = resultTable[dicecolor] or {}\r\n        resultTable[dicecolor][result] = (resultTable[dicecolor][result] or 0) + 1\r\n        local playerstats = DiceControlModule.dice_statistics[player] or {}\r\n        playerstats[dicecolor] = playerstats[dicecolor] or DiceControlModule.GetDefaultDiceStats(dicecolor)\r\n        playerstats[dicecolor].Total = (playerstats[dicecolor].Total or 0) + 1\r\n        playerstats[dicecolor][result] = (playerstats[dicecolor][result] or 0) + 1\r\n        DiceControlModule.dice_statistics[player] = playerstats\r\n    end\r\n    local any_result = false\r\n    local resulttext = \"[\" .. Color.fromString(player.color):toHex() .. \"]\" ..  player.steam_name .. \"[-] rolled \" .. DiceControlModule.highlight_color .. tostring(#DiceControlModule.rolled_dice[player]) .. \"[-] dice and got \"\r\n    local resulttexts = {}\r\n    for dice_color, results in pairs(resultTable) do\r\n        if DiceControlModule.dice_types[dice_color].result_order ~= nil then\r\n            for i, result in pairs(DiceControlModule.dice_types[dice_color].result_order) do\r\n                if results[result] ~= nil then\r\n                    local plural_s = \"\"\r\n                    if results[result] > 1 then\r\n                        plural_s = \"s\"\r\n                    end\r\n                    any_result = true\r\n                    table.insert(resulttexts, DiceControlModule.highlight_color .. tostring(results[result])..\"[-] \".. DiceControlModule.dice_types[dice_color].color .. result..plural_s.. \"[-] \")\r\n                end\r\n            end\r\n        else\r\n            for res, num in pairs(results) do\r\n                resulttext = resulttext ..  DiceControlModule.highlight_color .. tostring(num)..\"[-]x\".. DiceControlModule.dice_types[dice_color].color .. res.. \"[-] \"\r\n            end\r\n        end\r\n    end\r\n    if any_result == false then\r\n        resulttext = resulttext ..  DiceControlModule.highlight_color .. \"Got nothing![-]\"\r\n    else\r\n        for i = 1,#resulttexts,1 do\r\n            resulttext = resulttext .. resulttexts[i]\r\n            if #resulttexts - i > 1 then\r\n                resulttext = resulttext .. \", \"\r\n            elseif #resulttexts - i == 1 then\r\n                resulttext = resulttext .. \" and \"\r\n            end\r\n        end\r\n    end\r\n    printToAll(resulttext, DiceControlModule.info_color)\r\n    DiceControlModule.dice_roller_state[player]  = \"idle\"\r\n\r\n    if DiceControlModule.test_mode then\r\n      for k, dice in pairs(DiceControlModule.rolled_dice[player]) do\r\n          dice.setRotation(vector(326.26, 179.99, 90.00))\r\n      end\r\n      Wait.time(\r\n      function()\r\n        for k, dice in pairs(DiceControlModule.rolled_dice[player]) do\r\n            if dice then\r\n              dice.randomize(player)\r\n            end\r\n        end\r\n      end, 0.8,0)\r\n\r\n\r\n    end\r\nend\r\n\r\nDiceControlModule.UntilRolledDiceAreStill = function(player)\r\n    local result = true\r\n    for k=#DiceControlModule.rolled_dice[player], 1, -1 do\r\n        local dice = DiceControlModule.rolled_dice[player][k]\r\n        if dice == nil then\r\n            printToAll(\"A dice dissapeared while rolling!\", DiceControlModule.error_color)\r\n            table.remove(DiceControlModule.rolled_dice[player], k)\r\n        elseif dice.held_by_color ~= nil then\r\n            printToAll(\"Please don't grab dice that are being rolled!\", DiceControlModule.error_color)\r\n            table.remove(DiceControlModule.rolled_dice[player], k)\r\n            destroyObject(dice)\r\n        elseif not dice.resting then\r\n            result = false\r\n        end\r\n    end\r\n    return result\r\nend\r\n\r\n-- [[ Following is addtion for changing dice looks by Snake3y3s]]\r\nDiceControlModule.platformToBag = {\r\n    [\"atkPlat01\"] = \"atkOG1\",\r\n    [\"atkPlat02\"] = \"atkBLACK1\",\r\n    [\"atkPlat03\"] = \"atkWHITE1\",\r\n    [\"atkPlat04\"] = \"atkGOLD1\",\r\n    [\"atkPlat05\"] = \"atkSPARKLY1\",\r\n    [\"atkPlat06\"] = \"atkMARBLE1\",\r\n    [\"defPlat01\"] = \"defOG1\",\r\n    [\"defPlat02\"] = \"defBLACK1\",\r\n    [\"defPlat03\"] = \"defWHITE1\",\r\n    [\"defPlat04\"] = \"defSILVER1\",\r\n    [\"defPlat05\"] = \"defSPARKLY1\",\r\n    [\"defPlat06\"] = \"defMARBLE1\",\r\n}\r\n\r\nDiceControlModule.upCast = function(obj,dist,offset,multi)\r\n    local dist = dist or 1\r\n    local offset = offset or 0\r\n    local multi = multi or 1\r\n    local oPos = obj.getPosition()\r\n    local oBounds = obj.getBoundsNormalized()\r\n    local oRot = obj.getRotation()\r\n    local orig = {oPos[1],oPos[2]+offset,oPos[3]}\r\n    local siz = {oBounds.size.x*multi,dist,oBounds.size.z*multi}\r\n    local orient = {oRot[1],oRot[2],oRot[3]}\r\n    local hits = Physics.cast({\r\n        origin       = orig,\r\n        direction    = {0,1,0},\r\n        type         = 3,\r\n        size         = siz,\r\n        orientation  = orient,\r\n        max_distance = 0,\r\n        debug        = false,\r\n    })\r\n    local hitObjects = {}\r\n    for i,v in pairs(hits) do\r\n        if v.hit_object ~= obj then table.insert(hitObjects,v.hit_object) end\r\n    end\r\n    return hitObjects\r\nend\r\n\r\n\r\nDiceControlModule.getObjectInContainerByGMNote = function(container, gmnoteToFind)   -- most of the script here to find out if, and if so which, item is in the container\r\n\r\n    local takenObject = nil -- keep the scope local outside of the loop\r\n    for i, c in ipairs (container.getObjects()) do\r\n    if c.gm_notes == gmnoteToFind then\r\n\t\ttakenObject = container.takeObject({ -- correct call syntax, use .takeObject() on your container\r\n\t\tindex = c.index,  -- c.index to get the correct index always\r\n\t\tposition = Vector(0,0,0),\r\n\t\tsmooth = false,\r\n\t\tcallback_function = function(newBag) -- executes when newBag finished spawning\r\n\t\t\tnewBag.translate(Vector(0,0.08,0)) -- moves it 1 unit striaght down\r\n\t\tend\r\n\t\t}) -- position correctly spelled and correct case\r\n\t\ttakenObject.setLock(true)-- locks it\r\n      end\r\n    end\r\n  return takenObject\r\nend\r\n\r\nDiceControlModule.findByGMNotes = function(gmnotes) -- finds an object in the game whose .getGMNotes9) matches the gmnotes parameter\r\n    for _,obj in pairs(getAllObjects()) do\r\n        if obj.getGMNotes() == gmnotes then return obj end\r\n    end\r\nend\r\n\r\nDiceControlModule.onObjectStateChange = function(object, old_guid) -- object is the _new_ state\r\n    -- clear the bag on top\r\n\tfor _,foundObject in ipairs(DiceControlModule.upCast(object)) do -- for each object in the platform scripting zone..\r\n\t\tif foundObject.tag == \"Infinite\" then -- if an infinite bag\r\n\t\t\tlocal gmnotes = foundObject.getGMNotes()\r\n            if gmnotes  and gmnotes != \"\" then\r\n                DiceControlModule.dicecontainer.putObject(foundObject)\r\n    \t\t\tlocal lastNumber = tonumber(string.sub(gmnotes,-1)) or 0 -- gives us the very last character in our gmnotes - in our example \"Platform 1\" would give \"1\"\r\n    \t\t\tfoundObject.setPosition(Vector(-24,1,10) + Vector(lastNumber * 4, 0, 0)) -- sets the bag starting at 0,2,10, and adding 4 to x, multiplied by the lastNumber - so they all line up.\r\n            end\r\n        end\r\n    end\r\n    -- figure out which is the new bag\r\n    local gmnotes = object.getGMNotes() -- get the gm notes of the new state\r\n    local infiniteBagString = DiceControlModule.platformToBag[gmnotes] -- get the infiniteBagString from platformToBag e.g. \"Platform 1\" will give us \"InfiniteBag 1\"\r\n    if not infiniteBagString then return end -- if the object's gm notes is not a key in platformToBag then we don't want to run any more code\r\n\r\n    local newBag = DiceControlModule.getObjectInContainerByGMNote(DiceControlModule.dicecontainer, infiniteBagString) -- a simple function to find an object that matches the infiniteBagString (see below)\r\n\r\n    if not newBag then log(\"Error: No associated bag found - has it been deleted?\") return end --\r\n\r\n    newBag.setPosition(object.getPosition() + Vector(0,0.08,0)) -- put the new bag 2 units above the platform\r\nend\r\n\r\nEventSub.Register('onObjectStateChange', DiceControlModule.onObjectStateChange)\r\n\n----#include TTS_xwing/src/DiceControl\n\r\n-- Arc checks\r\n----#include TTS_xwing/src/ArcCheck\nArcCheck = {}\r\nArcCheck.initialized = false\r\nArcCheck.arc_check_rulers = {}\r\nArcCheck.current_arc = \"none\"\r\n\r\nArcCheck.arc_line_segments = {}\r\nArcCheck.arc_line_segments.small = {}\r\nArcCheck.arc_line_segments.medium = {}\r\nArcCheck.arc_line_segments.large = {}\r\nArcCheck.arc_line_segments.huge = {}\r\n\r\nArcCheck.bullseye_data =\r\n{\r\n    pos={\r\n        small=vector(0,0,Convert_mm_igu(170)),\r\n        medium=vector(0,0,Convert_mm_igu(180)),\r\n        large=vector(0,0,Convert_mm_igu(190)),\r\n        huge=vector(0,0,Convert_mm_igu(110.5))\r\n    },\r\n    size=vector(Convert_mm_igu(14), 0.1, Convert_mm_igu(300))\r\n}\r\n\r\nArcCheck.Initialize = function() -- Arc values based on Muon's assesments (vassal)\r\n     if ArcCheck.initialized == false then\r\n         ArcCheck.CalculateArcLineSegments(ArcCheck.arc_line_segments.small, 81.24, 20, 20)\r\n         ArcCheck.CalculateArcLineSegments(ArcCheck.arc_line_segments.medium, 82.8, 30, 30)\r\n         ArcCheck.CalculateArcLineSegments(ArcCheck.arc_line_segments.large, 83.52, 40, 40)\r\n         ArcCheck.CalculateArcLineSegments(ArcCheck.arc_line_segments.huge, 82.9, 40, 110.5 )\r\n         ArcCheck.initialized = true\r\n     end\r\n end\r\n\r\n--[[ArcCheck.Initialize = function() -- Arc values matching TTS ruler objects\r\n    if ArcCheck.initialized == false then\r\n        ArcCheck.CalculateArcLineSegments(ArcCheck.arc_line_segments.small, 79.1, 20, 20)\r\n        ArcCheck.CalculateArcLineSegments(ArcCheck.arc_line_segments.medium, 82.35, 30, 30)\r\n        ArcCheck.CalculateArcLineSegments(ArcCheck.arc_line_segments.large, 82.9, 40, 40)\r\n        ArcCheck.CalculateArcLineSegments(ArcCheck.arc_line_segments.huge, 82.9, 40, 110.5 )\r\n        ArcCheck.initialized = true\r\n    end\r\nend]]\r\n\r\n\r\nArcCheck.CalculateArcLineSegments = function(table, degree, size_w, size_l)\r\n    size_w = Convert_mm_igu(size_w)\r\n    size_l = Convert_mm_igu(size_l)\r\n    local edge_arc = Vect.AngleDeg2D({-size_w, 0, size_l}, {size_w, 0,size_l})\r\n    --print(\"Size_W:\" .. tostring(size_w) .. \" size_l:\"..size_l .. \" edge_arc=\".. tostring(edge_arc))\r\n    if size_w == size_l then -- Rectangular base sizes (small, medium and large ships)\r\n        --print(\"Rectangular:\".. tostring(size_w)..\",\"..tostring(size_l))\r\n        local r = math.rad(degree/2)\r\n        local a = math.tan(r) * size_l\r\n        table.front =    {   segments={ {vector(-a, 0, size_l), vector(a, 0, size_l)} },-- Front segment\r\n                                degrees={direction=0, spread=degree/2}\r\n                            }\r\n        table.back =     {   segments={ {vector(-a, 0, -size_l), vector(a, 0, -size_l)} }, -- Front segment\r\n                                degrees={direction=180, spread=degree/2}\r\n                            }\r\n        table.left =     {   segments={ {vector(-a, 0, -size_l), vector(-size_w, 0, -size_l)},   -- back segment\r\n                                           {vector(-size_w, 0, -size_l), vector(-size_w, 0, size_l)}, -- left edge\r\n                                           {vector(-size_w, 0, size_l), vector(-a, 0, size_l)}  -- front segment\r\n                                       },\r\n                                degrees={direction=-90, spread=(180-degree)/2}\r\n                            }\r\n        table.right =    {   segments={ {vector(a, 0, -size_l), vector(size_w, 0, -size_l)},   -- back segment\r\n                                           {vector(size_w, 0, -size_l), vector(size_w, 0, size_l)}, -- right edge\r\n                                           {vector(size_w, 0, size_l), vector(a, 0, size_l)}  -- front segment\r\n                                       },\r\n                                degrees={direction=90, spread=(180-degree)/2}\r\n                            }\r\n\r\n    else -- Long base size (huge ships)\r\n        --print(\"Long:\".. tostring(size_w)..\",\"..tostring(size_l))\r\n        local r = math.rad(90 - degree/2)\r\n        local a = math.tan(r) * size_w\r\n        table.front =    {   segments={  {vector(-size_w, 0, a), vector(-size_w, 0, size_l)}, -- left segment\r\n                                            {vector(-size_w, 0, size_l), vector(size_w, 0, size_l)}, -- front edge\r\n                                            {vector(size_w, 0, size_l), vector(size_w, 0, a)} },-- right segment\r\n                                degrees={direction=0, spread=degree/2}\r\n                            }\r\n        table.back =    {   segments={  {vector(-size_w, 0, -a), vector(-size_w, 0, -size_l)}, -- left segment\r\n                                            {vector(-size_w, 0, -size_l), vector(size_w, 0, -size_l)}, -- back edge\r\n                                            {vector(size_w, 0, -size_l), vector(size_w, 0, -a)} },-- right segment\r\n                                degrees={direction=180, spread=degree/2}\r\n                            }\r\n        table.left =     {   segments={ {vector(-size_w, 0, -a), vector(-size_w, 0, a)}}, -- left segment\r\n                                degrees={direction=-90, spread=(180-degree)/2}\r\n                            }\r\n        table.right =    {   segments={ {vector(size_w, 0, -a), vector(size_w, 0, a)}}, -- right segment\r\n                                degrees={direction=90, spread=(180-degree)/2}\r\n                            }\r\n    end\r\n    table.bullseye = {   segments={ {vector(-ArcCheck.bullseye_data.size[1]/2, 0, size_l), vector(ArcCheck.bullseye_data.size[1]/2, 0, size_l)} }, -- Bullseye segments\r\n                            degrees={direction=0, spread=0, bullseye=true}\r\n                        }\r\n    table.fullfront = {  segments={ {vector(-size_w, 0, 0), vector(-size_w, 0, size_l)},   -- left segment\r\n                                        {vector(-size_w, 0, size_l), vector(size_w, 0, size_l)}, -- front edge\r\n                                        {vector(size_w, 0, size_l), vector(size_w, 0, 0)}  -- right segment\r\n                                       },\r\n                            degrees={direction=0, spread=90}\r\n                        }\r\n    table.fullback = {  segments={ {vector(-size_w, 0, 0), vector(-size_w, 0, -size_l)},   -- left segment\r\n                                       {vector(-size_w, 0, -size_l), vector(size_w, 0, -size_l)}, -- back edge\r\n                                       {vector(size_w, 0, -size_l), vector(size_w, 0, 0)}  -- right segment\r\n                                   },\r\n                            degrees={direction=180, spread=90}\r\n                        }\r\n     table.full =    {   segments={ {vector(-size_w, 0, size_l), vector(size_w, 0, size_l)},   -- front edge\r\n                                       {vector(size_w, 0, size_l), vector(size_w, 0, -size_l)}, -- right edge\r\n                                       {vector(size_w, 0, -size_l), vector(-size_w, 0, -size_l)},  -- back edge\r\n                                       {vector(-size_w, 0, -size_l), vector(-size_w, 0, size_l)}  -- left edge\r\n                                   },\r\n                            degrees={direction=0, spread=180}\r\n                        }\r\nend\r\n\r\nfunction CheckArc(args)\r\n    -- Remove player selection to prevent accidental deletion.\r\n    local playerColors = args.ship.getSelectingPlayers()\r\n    for _, player in ipairs(playerColors) do\r\n        args.ship.removeFromPlayerSelection(player)\r\n    end\r\n\r\n    range = args.range or 3\r\n    -- Iterate over the potential targets and display their statuses.\r\n    local spawnedRulers = {}\r\n    if args.arctype ~= \"full\" then\r\n        printToAll(args.ship.getName() .. ' checks for targets in the ' .. args.arctype .. ' arc:', color(1.0, 1.0, 0.2, 0.9))\r\n    end\r\n    targets = ArcCheck.GetTargetsInRelationToArc(args.ship, args.arctype, nil, range, args.include_friendly_ships)\r\n    table.sort(targets, ArcCheck.SortTargetsByDesirability)\r\n    local found = false\r\n    for i, target in pairs(targets) do\r\n        ship = target.ship\r\n        if target.in_arc == false then\r\n            --printToAll(' - ' .. ship.getName() .. ' not in arc')\r\n        elseif target.closest.range > range then\r\n            --printToAll(' - ' .. ship.getName() .. ' not in range')\r\n        else\r\n            found = true\r\n            ship.setLock(true)\r\n            table.insert(spawnedRulers, ArcCheck.SpawnObstructionRuler(target.closest))\r\n            if target.other_closest ~= nil then\r\n                table.insert(spawnedRulers, ArcCheck.SpawnObstructionRuler(target.other_closest))\r\n            end\r\n\r\n            if args.arctype == \"full\" then\r\n                printToAll(\" - \" .. ship.getName().. \" in range\", color(1.0, 1.0, 0.2, 0.9))\r\n            else\r\n\r\n                obstructedtext = ' is'\r\n                if (target.obstructed == 'likely_unobstructed') then\r\n                    obstructedtext = ' is most likely UNOBSTRUCTED'\r\n                elseif (target.obstructed == 'obstructed') then\r\n                    obstructedtext = ' is OBSTRUCTED'\r\n                elseif (target.obstructed == 'likely_obstructed') then\r\n                    obstructedtext = ' is most likely OBSTRUCTED'\r\n                elseif (target.obstructed == 'chosen_obstructed') then\r\n                    obstructedtext = ' can be chosen to be OBSTRUCTED'\r\n                end\r\n\r\n                multipletext = ''\r\n                if target.multiple_points == true then\r\n                    multipletext = ' has multiple closest points and'\r\n                end\r\n\r\n                bullseyetext = ''\r\n                if target.bullseye == true then\r\n                    bullseyetext = ' in bullseye'\r\n                end\r\n                printToAll(\" - \" .. ship.getName().. multipletext .. obstructedtext .. ' at range ' ..tostring(target.closest.range) .. bullseyetext, color(1.0, 1.0, 0.2, 0.9))\r\n            end\r\n        end\r\n    end\r\n\r\n    if found == false then\r\n        printToAll(' - No valid targets', color(1.0, 1.0, 0.2, 0.9))\r\n    end\r\n    return spawnedRulers\r\nend\r\n\r\n--[[ GetTargetsInRelationToArc\r\nThis function returns a table containing all non-friendly ships within 900mm and\r\ninformation based on the provided arc type for each one.\r\n\r\nship: TTS Object, the ship whose arc will be tested.\r\narc: Table or String. The arc/s of the ship being tested. If a string, it is an\r\n    arc description such as 'front', 'bullseye', etc. See DataPad for full list.\r\n    If a table, it is a list of arc descriptions. Note that a single string\r\n    is expanded (so \"frontback\" becomes \"front\", \"back\"), but table entries are\r\n    not.\r\nfixed_targets: [optional]A list of TTS Objects, if passed in these are the only\r\n    ships that will be checked.\r\n\r\nreturns a table of targets, each containing the following:\r\n    ship: TTS Object, the ship being targetted\r\n    bullseye: Boolean, true if the target is in the ship's bullseye\r\n    closest: Table, the closest points and the range between the ship and the\r\n        target. See ArcCheck.GetDistanceBetweenLineSegments\r\n    in_arc: Boolean, true if the target is in the specified arc.\r\n    obstructed: String, the state of the obstruction between the ship and the\r\n        target. One of:\r\n        - 'unobstructed' (no obstruction)\r\n        - 'obstructed' (definite obstruction)\r\n        - 'likely_unobstructed' (multiple points, but none are obstructed)\r\n        - 'likely_obstructed' (multiple points, but both are obstructed)\r\n        - 'chosen_obstructed' (multiple points, but only one is obstructed)\r\n    multiple_points: Boolean, true if there is more than one closest point.\r\n        This occurs when the two ships have the same rotation. I this is true,\r\n        then 'other_closest' will be non-nil.\r\n    other_closest: Table, the other closest point. See 'closest' and\r\n        'multiple_points'. This is nil if only one closest point.\r\n--]]\r\nArcCheck.GetTargetsInRelationToArc = function(ship, arc, fixed_targets, range, include_friendly_ships)\r\n    if ArcCheck.initialized == false then\r\n        ArcCheck.Initialize()\r\n    end\r\n\r\n    range = range or 3\r\n\r\n    local arc_parts = arc\r\n    if type(arc) == 'string' then\r\n        arc_parts = {arc}\r\n        if arc == \"frontback\" then\r\n            arc_parts = {\"front\", \"back\"}\r\n        elseif arc == \"leftright\" then\r\n            arc_parts = {\"left\", \"right\"}\r\n        elseif arc == \"all\" then\r\n            arc_parts = {\"front\", \"back\", \"left\", \"right\"}\r\n        end\r\n    end\r\n    ship.setLock(true)\r\n    local shipSize = ship.getTable(\"Data\").Size or 'small'\r\n\r\n    local potential_targets = fixed_targets or ArcCheck.GetPotentialTargets(ship, nil, true, include_friendly_ships or false)\r\n    local bullseye_targets = ArcCheck.GetBullseyeTargets(ship, ArcCheck.bullseye_data.pos[shipSize])\r\n\r\n    local own_line_segments = {}\r\n    for i, arc in ipairs(arc_parts) do\r\n        local segments = ArcCheck.GetOwnArcLineSegments(ship, ArcCheck.arc_line_segments[shipSize][arc][\"segments\"])\r\n        for k, segment in ipairs(segments) do\r\n            table.insert(own_line_segments, segment)\r\n        end\r\n    end\r\n\r\n    targets = {}\r\n    local found = false\r\n    for k, pt in pairs(potential_targets) do\r\n        target = {['ship'] = pt, ['bullseye'] = false}\r\n\r\n        for i, bt in pairs(bullseye_targets) do\r\n            if bt == pt then\r\n                target.bullseye = true\r\n            end\r\n        end\r\n        local target_line_segments = {}\r\n        for i, arc in ipairs(arc_parts) do\r\n            local segments = ArcCheck.GetTargetLineSegmentsInArc(ship, pt, ArcCheck.arc_line_segments[shipSize][arc][\"degrees\"])\r\n            for k, segment in ipairs(segments) do\r\n                table.insert(target_line_segments, segment)\r\n            end\r\n        end\r\n\r\n        if #target_line_segments ~= 0 then\r\n            local other = nil\r\n            local closest = nil\r\n            closest, other = ArcCheck.GetDistanceBetweenLineSegments(own_line_segments, target_line_segments)\r\n            target.in_arc = true\r\n            target.obstructed = 'unobstructed'\r\n            target.closest = closest\r\n            target.multiple_points = false\r\n\r\n            if closest.range <= range then\r\n                found = true\r\n                target.closest.obstructions = ArcCheck.CheckObstruction(closest, target.ship, ship)\r\n                target.closest.in_bullseye = target.bullseye\r\n                if other ~= nil then\r\n                    target.obstructed = 'likely_unobstructed'\r\n                    target.multiple_points = true\r\n\r\n                    other.obstructions = ArcCheck.CheckObstruction(other, target.ship, ship)\r\n                    other.in_bullseye = target.bullseye\r\n                    target.other_closest = other\r\n                end\r\n\r\n                if #closest.obstructions ~= 0 then\r\n                    if other ~= nil then\r\n                        if #other.obstructions ~= 0 then\r\n                            target.obstructed = 'likely_obstructed'\r\n                        else\r\n                            target.obstructed = 'chosen_obstructed'\r\n                        end\r\n                    else\r\n                        target.obstructed = 'obstructed'\r\n                    end\r\n                else\r\n                    if other ~=nil and #other.obstructions ~= 0 then\r\n                        target.obstructed = 'chosen_obstructed'\r\n                    end\r\n                end\r\n            end\r\n        else\r\n            target.in_arc = false\r\n        end\r\n\r\n        table.insert(targets, target)\r\n    end\r\n    if found == false then\r\n        ArcCheck.current_arc = \"none\"\r\n    end\r\n\r\n    return targets\r\nend\r\n\r\n--[[ ArcCheck.SortTargetsByDesirability\r\nThis is a table sorting function, used to sort the results of\r\nGetTargetsInRelationToArc. It sorts based on desirability of selecting a target,\r\nin the following order:\r\n- in arc before out of arc\r\n- closer range band before more distant range band\r\n- less obstructed before more obstructed\r\n- GUID as a fallback\r\n--]]\r\nArcCheck.SortTargetsByDesirability = function(e1, e2)\r\n    if e1.in_arc == true and e2.in_arc == false then\r\n        return true\r\n    elseif e1.in_arc == false and e2.in_arc == true then\r\n        return false\r\n    elseif e1.in_arc == true then\r\n        if e1.closest.range < e2.closest.range then\r\n            return true\r\n        elseif e1.closest.range > e2.closest.range then\r\n            return false\r\n        end\r\n\r\n        -- Gotta be a better way of doing this...\r\n        if e1.obstructed ~= e2.obstructed then\r\n            if e1.obstructed == 'unobstructed' then\r\n                return true\r\n            elseif e2.obstructed == 'unobstructed' then\r\n                return false\r\n            end\r\n\r\n            if e1.obstructed == 'likely_unobstructed' then\r\n                return true\r\n            elseif e2.obstructed == 'likely_unobstructed' then\r\n                return false\r\n            end\r\n\r\n            if e1.obstructed == 'chosen_obstructed' then\r\n                return true\r\n            elseif e2.obstructed == 'chosen_obstructed' then\r\n                return false\r\n            end\r\n\r\n            if e1.obstructed == 'likely_obstructed' then\r\n                return true\r\n            elseif e2.obstructed == 'likely_obstructed' then\r\n                return false\r\n            end\r\n\r\n            if e1.obstructed == 'obstructed' then\r\n                return true\r\n            elseif e2.obstructed == 'obstructed' then\r\n                return false\r\n            end\r\n        end\r\n    end\r\n\r\n    return e1.ship.getGUID() > e2.ship.getGUID()\r\nend\r\n\r\nArcCheck.CheckObstruction = function(data, ship, ownship)\r\n    local collissions = Physics.cast({\r\n        origin       = data.midpoint,\r\n        orientation  = {0,data.angle, 0},\r\n        direction    = {0,-0.3,0},\r\n        type         = 3,\r\n        size         = {0,0,data.length},\r\n        max_distance = 3,\r\n        debug        = false\r\n    })\r\n    local hit_obstacles = {}\r\n    for k, hit in pairs(collissions) do\r\n        if (hit.hit_object ~= ship) and (hit.hit_object ~= ownship) and (MoveModule.SelectObstacles(hit.hit_object) or MoveModule.SelectHugeShips(hit.hit_object)) then\r\n            table.insert(hit_obstacles, hit.hit_object)\r\n        end\r\n    end\r\n    return hit_obstacles;\r\nend\r\n\r\nArcCheck.SpawnArcVisualization = function()\r\n\r\n  arc = spawnObject({\r\n      type              = \"Custom_Model\",\r\n      position          = ArcCheck.current_ship.getPosition(),\r\n      rotation          = {0,ArcCheck.current_ship.getRotation().y + 180, 0},\r\n      scale             = {0.3617, 0.3617, 0.3617},\r\n      sound             = false,\r\n      snap_to_grid      = false\r\n  })\r\n  arc.setCustomObject({\r\n      mesh =  '{verifycache}http://cloud-3.steamusercontent.com/ugc/1003682288849959172/A155E2713ECFA2E23D35ED451339ECE69BF8BEF8/',\r\n      material = 3\r\n  })\r\n  arc.setLock(true)\r\n  arc.setColorTint({1,0,0,0.3})\r\n  table.insert(ArcCheck.arc_check_rulers, arc)\r\nend\r\n\r\nArcCheck.SpawnObstructionRuler = function(data)\r\n    if data.range > 0 then\r\n        ruler = spawnObject({\r\n            type              = \"Custom_Model\",\r\n            position          = vector(data.A[1], 1.21, data.A[3]),\r\n            rotation          = {0, data.angle + 90,0},\r\n            scale             = {0.363, 0.363, 0.5},\r\n            sound             = false,\r\n            snap_to_grid      = false\r\n        })\r\n        ruler.setCustomObject({\r\n            mesh =  '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/ArcCheckRuler'.. data.range .. '.obj',\r\n            material = 3\r\n        })\r\n        local tintcolor = color(1.0, 1.0, 0.2, 1.0) -- Yellow obstructed tint\r\n        if #data.obstructions == 0 then\r\n            if data.in_bullseye then\r\n                tintcolor = color(1.0, 0.2, 1.0, 1.0) -- Purple unobstructed bullseye tint\r\n            else\r\n                tintcolor = color(0.2, 0.2, 1.0, 1.0) -- Blue unobstructed tint\r\n            end\r\n        else\r\n            if data.in_bullseye then\r\n                tintcolor = color(1.0, 0.2, 0.0, 1.0) -- orange obstructed bullseye tint\r\n            else\r\n                tintcolor = color(1.0, 1.0, 0.2, 1.0) -- yellow obstructed tint\r\n            end\r\n        end\r\n\r\n\r\n        ruler.setColorTint(tintcolor)\r\n        ruler.setLock(true)\r\n        local rigid = ruler.getComponent(\"Rigidbody\")\r\n        rigid.set(\"isKinematic\", true)\r\n        rigid.set(\"detectCollisions\", false)\r\n        return ruler\r\n        --table.insert(ArcCheck.arc_check_rulers, ruler)\r\n    end\r\nend\r\n\r\n\r\n-- Calculates closest distance between two set of line segments. Returns table with range, and line points\r\nArcCheck.GetDistanceBetweenLineSegments = function(own_line_segments, target_line_segments)\r\n    local closest = {\r\n        length=10000,\r\n        range = 0,\r\n        midpoint={0,0,0},\r\n        angle=0,\r\n        A={0,0,0},\r\n        B={0,0,0}\r\n    }\r\n    local other = nil\r\n    local epsilon = 0.001 -- This to dumb down the mathematical accuracy to match the analog game experience\r\n    for k_o, seg_o in pairs(own_line_segments) do\r\n        for k_t, seg_t in pairs(target_line_segments) do\r\n            for k_p, point in pairs(seg_t) do\r\n                local distance = ArcCheck.GetDistanceBetweenLineSegmentAndPoint(seg_o, point, false)\r\n                if not ArcCheck.CheckEqualLineSegments(distance.A, distance.B, closest.A, closest.B ) then\r\n                    if (distance.length <= (closest.length + epsilon)) then\r\n\r\n                        if math.abs(distance.length - closest.length) < epsilon then\r\n                            --print(\"Real close: \" .. tostring(distance.length).. \" - \" .. tostring(distance.length - closest.length))\r\n                            if distance.length < closest.length then\r\n                                other = closest\r\n                                closest = distance\r\n                            else\r\n                                other = distance\r\n                            end\r\n                        else\r\n                            --print(\"Closer: \" .. tostring(distance.length) .. \" - \" .. tostring(distance.length - closest.length))\r\n                            closest = distance\r\n                            other = nil\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n            for k_p, point in pairs(seg_o) do\r\n                local distance = ArcCheck.GetDistanceBetweenLineSegmentAndPoint(seg_t, point, true)\r\n                if not ArcCheck.CheckEqualLineSegments(distance.A, distance.B, closest.A, closest.B ) then\r\n                    if (distance.length <= (closest.length + epsilon)) then\r\n                        if math.abs(distance.length - closest.length) < epsilon then\r\n                            --print(\"Real close2: \" .. tostring(distance.length).. \" - \" .. tostring(distance.length - closest.length))\r\n                            if distance.length < closest.length then\r\n                                other = closest\r\n                                closest = distance\r\n                            else\r\n                                other = distance\r\n                            end\r\n                        else\r\n                            --print(\"Closer2: \" .. tostring(distance.length) .. \" - \" .. tostring(distance.length - closest.length))\r\n                            closest = distance\r\n                            other = nil\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    return closest, other\r\nend\r\n\r\nArcCheck.GetAngleBetweenPoints = function(A,B,C)\r\n    local BA = Vect.Between(B, A)\r\n    local BC = Vect.Between(B, C)\r\n    return Vect.AngleDeg(BA, BC)\r\nend\r\n\r\nArcCheck.CheckEqualLineSegments = function(line1A, line1B, line2A, line2B)\r\n    local epsilon = 0.02\r\n    if Vect.Distance(line1A,line2A) < epsilon then\r\n        return Vect.Distance(line1B,line2B) < epsilon\r\n    elseif Vect.Distance(line1A,line2B) < epsilon then\r\n        return Vect.Distance(line1B,line2A) < epsilon\r\n    end\r\n    return false\r\nend\r\n\r\n\r\n-- Gets the closest point on a line segment to a point\r\nArcCheck.GetDistanceBetweenLineSegmentAndPoint = function(segment, point, reverse)\r\n    local P = {}\r\n    -- Check if the angle at the first segment point is larger than 90 degrees, the point bust be it, and the endpoint will be closest point\r\n    if (math.abs(ArcCheck.GetAngleBetweenPoints(segment[2], segment[1], point)) >= 90) then\r\n        P = segment[1]\r\n    elseif (math.abs(ArcCheck.GetAngleBetweenPoints(segment[1], segment[2], point)) >= 90) then\r\n        -- Similarily for the second segment point\r\n        P = segment[2]\r\n    else\r\n    -- The closest point is somewhere in between, along the normal of the line segment\r\n        local u = Vect.ToUnit(Vect.Between(segment[1], segment[2]))\r\n        local baseline_norm = Vector(-u[3], u[2], u[1])\r\n        local d = Vect.DotProd(Vect.Between(point, segment[1]), baseline_norm)\r\n        P = Vect.Sum(point, Vect.Scale(baseline_norm, d))\r\n    end\r\n\r\n    if reverse then\r\n        A = point\r\n        B = P\r\n    else\r\n        A = P\r\n        B = point\r\n    end\r\n    local distance = Vect.Distance(P, point)\r\n    local range =math.floor(Convert_igu_mm(distance / 100)) + 1\r\n\r\n    local midpoint = Vect.Middle(A, B)\r\n    midpoint[2] = 1.52\r\n\r\n\r\n    local AB = Vect.Between(A, B)\r\n    local angle = Vect.AngleDeg(AB, vector(0, 0, 1))\r\n    if AB[1] < 0 then\r\n        angle = -angle\r\n    end\r\n\r\n    return { length=distance,\r\n             A=A,\r\n             B=B,\r\n             range=range,\r\n             midpoint=midpoint,\r\n             angle=angle\r\n           }\r\nend\r\n\r\n-- Returns list of line segments which are within a given arc type\r\nArcCheck.GetOwnArcLineSegments = function(ship, segments)\r\n    local outsegments = {}\r\n    for k, segment in pairs(segments) do\r\n        table.insert(outsegments, {Vect.Sum(ship.getPosition(), Vect.RotateDeg(segment[1], ship.getRotation()[2] + 180)),\r\n                                   Vect.Sum(ship.getPosition(), Vect.RotateDeg(segment[2], ship.getRotation()[2] + 180))})\r\n    end\r\n    return outsegments\r\nend\r\n\r\n-- Finds all potential ships within a little more than range 3 from the ship\r\nArcCheck.GetPotentialTargets = function(ship, length, include_enemy_ships, include_friendly_ships)\r\n    return ArcCheck.GetShipsWithinRange(ship, length, include_enemy_ships, include_friendly_ships)\r\nend\r\n\r\n-- Finds all targets in bullseye\r\nArcCheck.GetBullseyeTargets = function(ship, pos, length)\r\n    if length != nil then\r\n        length = Convert_mm_igu(length)\r\n    end\r\n    local castSize = vector(ArcCheck.bullseye_data.size[1], ArcCheck.bullseye_data.size[2], length or ArcCheck.bullseye_data.size[3])\r\n    local collissions = Physics.cast({\r\n        origin       = Vect.Sum(ship.getPosition(), Vect.RotateDeg(pos, ship.getRotation()[2] + 180)),\r\n        orientation  = ship.getRotation(),\r\n        direction    = {0,-0.001,0},\r\n        type         = 3,\r\n        size         = castSize,\r\n        max_distance = 1,\r\n        debug        = false\r\n    })\r\n    local myOwningPlayer = ship.getVar(\"owningPlayer\")\r\n    local bullseye_targets = {}\r\n    for k, hit in pairs(collissions) do\r\n        if hit.hit_object.getGUID() ~= ship.getGUID() and MoveModule.SelectShips(hit.hit_object) then\r\n            if hit.hit_object.getVar(\"owningPlayer\") != myOwningPlayer then\r\n                -- remove false targets, where only the nub is hit\r\n                if ArcCheck.VerifyBullseye(ship, hit.hit_object) then\r\n                    table.insert(bullseye_targets, hit.hit_object)\r\n                end\r\n            end\r\n        end\r\n    end\r\n    return bullseye_targets\r\nend\r\n\r\nArcCheck.VerifyBullseye = function(ship, target)\r\n    local left = false\r\n    local right = false\r\n    local half_bullseye = (ArcCheck.bullseye_data.size[1]/2)\r\n\r\n    -- Translate target corners into ship object Space\r\n    local size = Convert_mm_igu((mm_baseSize[target.getTable(\"Data\").Size]/2))\r\n    local t_rotation = target.getRotation().y\r\n    local s_rotation = ship.getRotation().y\r\n    local target_corners = {}\r\n    target_corners[1] = vector(-size, 0, size)\r\n    target_corners[2] = vector(-size, 0, -size)\r\n    target_corners[3] = vector(size, 0, size)\r\n    target_corners[4] = vector(size, 0, -size)\r\n    for _, target_corner in pairs(target_corners) do\r\n        local world_corner = target_corner:rotateOver('y',t_rotation) + target.getPosition() - ship.getPosition()\r\n        local local_corner = world_corner:rotateOver('y', - s_rotation)\r\n        --print (\"Local corner: \" .. tostring(local_corner[1]) .. \",\" .. tostring(local_corner[2]) ..  \",\" .. tostring(local_corner[3]))\r\n        if local_corner.x > -half_bullseye then\r\n            right = true\r\n        end\r\n        if local_corner.x < half_bullseye then\r\n            left = true\r\n        end\r\n        if left and right then\r\n            return true\r\n        end\r\n\r\n    end\r\n    return false\r\nend\r\n\r\n\r\n-- Finds friendly or enemy ships within a particular range\r\nArcCheck.GetShipsWithinRange = function(ship, range, include_enemy_ships, include_friendly_ships)\r\n    range = range or 900\r\n    if include_enemy_ships == nil then\r\n        include_enemy_ships = true\r\n    end\r\n    if include_friendly_ships == nil then\r\n        include_friendly_ships = false\r\n    end\r\n\r\n    local cast_radius = Convert_mm_igu(range)\r\n    local collisions = Physics.cast({\r\n        origin       = ship.getPosition() + vector(0,0.1,0),\r\n        direction    = {0,-0.001,0},\r\n        type         = 2,\r\n        size         = {cast_radius, cast_radius, cast_radius},\r\n        max_distance = 1,\r\n        debug        = false\r\n    })\r\n\r\n    local ship_owning_player = ship.getVar(\"owningPlayer\")\r\n    local potential_ships = {}\r\n    for k, hit in pairs(collisions) do\r\n        if hit.hit_object.getGUID() ~= ship.getGUID() and MoveModule.SelectShips(hit.hit_object) then\r\n            local is_enemy_ship = hit.hit_object.getVar(\"owningPlayer\") != ship_owning_player\r\n            if (include_enemy_ships and is_enemy_ship) or (include_friendly_ships and not is_enemy_ship) then\r\n                table.insert(potential_ships, hit.hit_object)\r\n            end\r\n        end\r\n    end\r\n\r\n    return potential_ships\r\nend\r\n\r\n\r\nArcCheck.GetDistanceBetweenShips = function(ship, target, arcs)\r\n    local arcs = arcs or {'front', 'back', 'left', 'right'}\r\n    local ship_size = ship.getTable(\"Data\").Size or 'small'\r\n\r\n    local ship_line_segments = {}\r\n    local target_line_segments = {}\r\n    for _, arc in pairs(arcs) do\r\n        local ship_segments = ArcCheck.GetOwnArcLineSegments(ship, ArcCheck.arc_line_segments[ship_size][arc][\"segments\"])\r\n        for _, ship_segment in pairs(ship_segments) do\r\n            table.insert(ship_line_segments, ship_segment)\r\n        end\r\n\r\n        local target_segments = ArcCheck.GetTargetLineSegmentsInArc(ship, target, ArcCheck.arc_line_segments[ship_size][arc][\"degrees\"])\r\n        for _, target_segment in pairs(target_segments) do\r\n            table.insert(target_line_segments, target_segment)\r\n        end\r\n    end\r\n\r\n    if #target_line_segments ~= 0 then\r\n        local closest = nil\r\n        closest, _ = ArcCheck.GetDistanceBetweenLineSegments(ship_line_segments, target_line_segments)\r\n        return closest\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\n\r\n-- Returns a list of line segments which are within the arc\r\nArcCheck.GetTargetLineSegmentsInArc = function(ship, target, arcinfo)\r\n    local targetShipData = target.getTable(\"Data\")\r\n    -- Get the full line segments for the ship\r\n    local segments = ArcCheck.arc_line_segments[targetShipData.Size][\"full\"][\"segments\"]\r\n\r\n    local outsegments = {}\r\n    local arc_center_vector = Vect.RotateDeg(vector(0, 0, -30), ship.getRotation()[2] + arcinfo.direction)\r\n    --print(\"Arc_center_vector = \" .. tostring(arc_center_vector[1])..\",\" .. tostring(arc_center_vector[2]) ..\",\"..tostring(arc_center_vector[3]))\r\n    if arcinfo.bullseye == nil then\r\n        for k, segment in pairs(segments) do\r\n            -- Calculate part of line segment within arc\r\n            local rotated_segment = {Vect.Sum(target.getPosition(), Vect.RotateDeg(segment[1], target.getRotation()[2])),\r\n                                       Vect.Sum(target.getPosition(), Vect.RotateDeg(segment[2], target.getRotation()[2]))}\r\n\r\n            -- Check if points are in arc\r\n            local angleoffsets = {Vect.AngleDeg(Vect.Between(ship.getPosition(), rotated_segment[1]), arc_center_vector),\r\n                            Vect.AngleDeg(Vect.Between(ship.getPosition(), rotated_segment[2]), arc_center_vector)}\r\n\r\n            --print(\"Angle offsets: \" .. target.getName() .. \"[\".. tostring(k) .. \"] \"..  tostring(angleoffsets[1]) .. \" - \" .. tostring(angleoffsets[2]) )\r\n\r\n            if angleoffsets[1] < arcinfo.spread and angleoffsets[2] < arcinfo.spread then\r\n                -- Both points are in arc\r\n                --print(\"Both in arc\")\r\n                table.insert(outsegments, rotated_segment)\r\n            elseif angleoffsets[1] > arcinfo.spread and angleoffsets[2] > arcinfo.spread then\r\n                -- both outside\r\n                if Vect.AngleDeg(Vect.Between(ship.getPosition(), Vect.Middle(rotated_segment[1], rotated_segment[2])), arc_center_vector) < arcinfo.spread then\r\n                    -- print(\"Both out, in front. deg: \" .. tostring(Vect.AngleDeg(Vect.Between(ship.getPosition(), Vect.Middle(rotated_segment[1], rotated_segment[2])), arc_center_vector)))\r\n                    -- The target is infront, but both points are outside the arc.\r\n                    local newsegment = {ArcCheck.GetLineLineIntersection(ship.getPosition(), Vect.Sum(ship.getPosition(), Vect.RotateDeg(arc_center_vector, -arcinfo.spread))\r\n                                          , rotated_segment[1], rotated_segment[2]),\r\n                                  ArcCheck.GetLineLineIntersection(ship.getPosition(), Vect.Sum(ship.getPosition(), Vect.RotateDeg(arc_center_vector, arcinfo.spread))\r\n                                          , rotated_segment[1], rotated_segment[2])}\r\n                    --print(\"Newsegment: \".. tostring(newsegment[1]) .. \",\" .. tostring(newsegment[2]))\r\n                    table.insert(outsegments, newsegment)\r\n                else\r\n                    --print(\"Both out, behind\")\r\n                end\r\n            else\r\n                -- one inside, one out\r\n                local p1 = rotated_segment[1]\r\n                if(angleoffsets[1] > arcinfo.spread) then\r\n                    p1 = rotated_segment[2]\r\n                end\r\n                local p2 = ArcCheck.GetLineLineIntersection(ship.getPosition(), Vect.Sum(ship.getPosition(), Vect.RotateDeg(arc_center_vector, arcinfo.spread)) , rotated_segment[1], rotated_segment[2])\r\n                if p2 == nil then\r\n                    p2 = ArcCheck.GetLineLineIntersection(ship.getPosition(), Vect.Sum(ship.getPosition(), Vect.RotateDeg(arc_center_vector, -arcinfo.spread)) , rotated_segment[1], rotated_segment[2])\r\n                end\r\n                if p2 ~= nil then\r\n                    table.insert(outsegments, {p1, p2})\r\n                end\r\n            end\r\n        end\r\n    else -- Special Bullseye handling\r\n        local half_bullseye = ArcCheck.bullseye_data.size[1]/2\r\n        for k, segment in pairs(segments) do\r\n            local rotated_segment = {Vect.Sum(target.getPosition(), Vect.RotateDeg(segment[1], target.getRotation()[2])),\r\n                                       Vect.Sum(target.getPosition(), Vect.RotateDeg(segment[2], target.getRotation()[2]))}\r\n            local ownship_oriented_segment = {Vect.RotateDeg(Vect.Between(ship.getPosition(), rotated_segment[1]), -ship.getRotation()[2]),\r\n                                            Vect.RotateDeg(Vect.Between(ship.getPosition(), rotated_segment[2] ), -ship.getRotation()[2])}\r\n            local x1 = math.min(ownship_oriented_segment[1][1], ownship_oriented_segment[2][1])\r\n            local x2 = math.max(ownship_oriented_segment[1][1], ownship_oriented_segment[2][1])\r\n            print(\"x1:\" .. tostring(x1) .. \" x2:\" .. tostring(x2))\r\n            print(\"ownship_oriented_segment[1][3]:\" .. tostring(ownship_oriented_segment[1][3]))\r\n            local in_arc = true\r\n            if ownship_oriented_segment[1][3] < 0 then -- Target in front (Yeah it is backwards)\r\n                if x1 < -half_bullseye then\r\n                    x1 = -half_bullseye\r\n                    if x2 > -half_bullseye then\r\n                        x2 = math.min(half_bullseye, x2)\r\n                        p1 = ArcCheck.GetLineLineIntersection(ownship_oriented_segment[1], ownship_oriented_segment[2], vector(x1, ownship_oriented_segment[1][2], 0), vector(x1, ownship_oriented_segment[1][2], -20), true)\r\n                        p2 = ArcCheck.GetLineLineIntersection(ownship_oriented_segment[1], ownship_oriented_segment[2], vector(x2, ownship_oriented_segment[1][2], 0), vector(x2, ownship_oriented_segment[1][2], -20), true)\r\n                        if p1 ~= nil and p2 ~= nil then\r\n                            print(\"test1\")\r\n                          table.insert(outsegments, { Vect.Sum(Vect.RotateDeg(p1, ship.getRotation()[2]), ship.getPosition()),\r\n                                                      Vect.Sum(Vect.RotateDeg(p2, ship.getRotation()[2]), ship.getPosition())})\r\n                        end\r\n                    end\r\n                elseif x1 < half_bullseye then\r\n                    x2 = math.min(half_bullseye, x2)\r\n                    p1 = ArcCheck.GetLineLineIntersection(ownship_oriented_segment[1], ownship_oriented_segment[2], vector(x1, ownship_oriented_segment[1][2], 0), vector(x1, ownship_oriented_segment[1][2], -20), true)\r\n                    p2 = ArcCheck.GetLineLineIntersection(ownship_oriented_segment[1], ownship_oriented_segment[2], vector(x2, ownship_oriented_segment[1][2], 0), vector(x2, ownship_oriented_segment[1][2], -20), true)\r\n                    if p1 ~= nil and p2 ~= nil then\r\n                        print(\"test2\")\r\n                      table.insert(outsegments, { Vect.Sum(Vect.RotateDeg(p1, ship.getRotation()[2]), ship.getPosition()),\r\n                                                  Vect.Sum(Vect.RotateDeg(p2, ship.getRotation()[2]), ship.getPosition())})\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    return outsegments\r\nend\r\n\r\nArcCheck.GetLineLineIntersection = function(p0, p1, p2, p3, expect_intersection)\r\n\r\n    local max = 1\r\n    local min = 0\r\n    if expect_intersection then\r\n        max = 1.00001\r\n        min = -0.00001\r\n    end\r\n\r\n    local s1_x = p1[1] - p0[1]\r\n    local s1_y = p1[3] - p0[3]\r\n    local s2_x = p3[1] - p2[1]\r\n    local s2_y = p3[3] - p2[3]\r\n\r\n    local s = (-s1_y * (p0[1] - p2[1]) + s1_x * (p0[3] - p2[3])) / (-s2_x * s1_y + s1_x * s2_y)\r\n    local t = ( s2_x * (p0[3] - p2[3]) - s2_y * (p0[1] - p2[1])) / (-s2_x * s1_y + s1_x * s2_y)\r\n    if (s >= 0 and s <= max and t >= 0 and t <= max) then\r\n        -- Collision detected\r\n        return vector( p0[1] + (t * s1_x), p0[2], p0[3] + (t * s1_y))\r\n    end\r\n\r\n    return nil -- no collission\r\nend\r\n\n----#include TTS_xwing/src/ArcCheck\nArcCheck.Initialize()\r\n\r\n-- Ship proxy\r\n----#include TTS_xwing/src/ShipProxy\n-- ~~~~~~\r\n-- Script by Eirik 'Flippster' Munthe\r\n-- Issues, history at: https://github.com/JohnnyCheese/TTS_X-Wing2.0\r\n--\r\n-- Module for handeling ship proxies, used in barrel rolls and more\r\n-- ~~~~~~\r\nlocal ShipProxyInstance = {\r\n    state        = nil,\r\n    proxy_table  = {},\r\n    proxy_status = {},\r\n}\r\n\r\nfunction ShipProxyInstance:new ()\r\n    o = {}\r\n    setmetatable(o, self)\r\n    self.__index = self\r\n\r\n    self.state = \"init\"\r\n    return o\r\nend\r\n\r\nfunction ShipProxyInstance:setActive ()\r\n    self.state = \"active\"\r\nend\r\n\r\nfunction ShipProxyInstance:ready ()\r\n    if not self.proxy_table then return false end\r\n\r\n    for position, proxy in pairs(self.proxy_table) do\r\n        if proxy.getGUID() ~= \"\" then return true end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\nfunction ShipProxyInstance:add (position, proxy)\r\n    if not proxy then\r\n        return\r\n    end\r\n\r\n    self.proxy_table[position] = proxy\r\nend\r\n\r\nfunction ShipProxyInstance:destroy ()\r\n    self.state = \"term\"\r\n\r\n    for position, proxy in pairs(self.proxy_table) do\r\n        proxy.destruct()\r\n        self.proxy_table[position] = nil\r\n    end\r\nend\r\n\r\nShipProxyModule = {}\r\nShipProxyModule.proxyTable = {}\r\nShipProxyModule.hiddenShips = {}\r\nShipProxyModule.finalPosOffset = {\r\n    small = vector(0, 0, Convert_mm_igu(10)),\r\n    medium = vector(0, 0, Convert_mm_igu(20)),\r\n    large = vector(0, 0, Convert_mm_igu(20))\r\n}\r\n\r\nShipProxyModule.barrelRollOffset = {}\r\nShipProxyModule.barrelRollOffset = {\r\n    small = vector(Convert_mm_igu(80), 0, 0),\r\n    medium = vector(Convert_mm_igu(80), 0, 0),\r\n    large = vector(Convert_mm_igu(100), 0, 0)\r\n}\r\n\r\nShipProxyModule.proxyXmlGui = {}\r\nShipProxyModule.proxyXmlGui.markShip = [[\r\n<Defaults>\r\n    <Button class=\"InvisibleButton\" color=\"#22222255\" outline=\"#BBBBBB\" outlineSize=\"2 2\" fontSize=\"22\" textColor=\"#FFFFFF\" fontStyle=\"Bold\"/>\r\n</Defaults>\r\n<Panel id=\"Center\"\r\n    width=\"200\"\r\n    height=\"200\"\r\n    position=\"0 0 -20\"\r\n    rotation=\"0 0 180\"\r\n    color=\"#aaffaa00\"\r\n    onMouseExit=\"hideBtn\"\r\n    active=\"false\">\r\n\r\n    <Button id=\"Select\" class=\"InvisibleButton\" offsetXY=\"0 0\" width=\"225\" height=\"225\" active=\"true\" onClick=\"select\">\r\n    </Button>\r\n</Panel>\r\n\r\n]]\r\nShipProxyModule.proxyXmlGui.finalPos = [[\r\n<Defaults>\r\n    <Button class=\"InvisibleButton\" color=\"#22222255\" outline=\"#BBBBBB\" outlineSize=\"2 2\" fontSize=\"22\" textColor=\"#FFFFFF\" fontStyle=\"Bold\"/>\r\n</Defaults>\r\n<Panel id=\"Center\"\r\n    width=\"200\"\r\n    height=\"200\"\r\n    position=\"0 0 -20\"\r\n    rotation=\"0 0 180\"\r\n    color=\"#aaffaa00\"\r\n    onMouseExit=\"hideBtn\"\r\n    active=\"false\">\r\n\r\n    <Button id=\"Select\" class=\"InvisibleButton\" offsetXY=\"0 0\" width=\"225\" height=\"225\" active=\"true\" onClick=\"select\">\r\n    </Button>\r\n</Panel>\r\n\r\n]]\r\n\r\n\r\nShipProxyModule.proxyScripts = {}\r\nShipProxyModule.proxyScripts.markShip = [[\r\n\r\nsizeScale = {\r\n    small = {width = 1, height = 1},\r\n    medium = {width = 1.5, height = 1.5},\r\n    large = {width = 2.0, height = 2.0},\r\n    huge = {width = 2.0, height = 5}\r\n}\r\n\r\nfunction onLoad(save_state)\r\n    self.AddContextMenuItem(\"Return ship\", function() Global.call(\"UnMarkShip\", {shipGUID = self.getVar(\"shipGUID\"), proxy = self})\r\nend, false)\r\nend\r\n\r\nfunction onContextOpen(player)\r\n    self.UI.setAttribute(\"Select\", \"width\", tostring(225 * sizeScale[self.getVar(\"size\")].width))\r\n    self.UI.setAttribute(\"Select\", \"height\", tostring(225 * sizeScale[self.getVar(\"size\")].height))\r\n    self.UI.show(\"Center\")\r\nend\r\n\r\nfunction select(player)\r\n    Global.call(\"UnMarkShip\", {shipGUID = self.getVar(\"shipGUID\"), proxy = self})\r\nend\r\n]]\r\n\r\nShipProxyModule.proxyScripts.finalPos = [[\r\n\r\nsizeScale = {\r\n    small = {width = 1, height = 1},\r\n    medium = {width = 1.5, height = 1.5},\r\n    large = {width = 2.0, height = 2.0},\r\n    huge = {width = 2.0, height = 5}\r\n}\r\n\r\nfunction onLoad(save_state)\r\n\r\nend\r\n\r\nfunction onHoverEnter(player)\r\n    self.UI.setAttribute(\"Select\", \"width\", tostring(225 * sizeScale[self.getVar(\"size\")].width))\r\n    self.UI.setAttribute(\"Select\", \"height\", tostring(225 * sizeScale[self.getVar(\"size\")].height))\r\n    self.UI.show(\"Center\")\r\n    self.setColorTint(hoverColor)\r\nend\r\n\r\nfunction onHoverLeave(player)\r\n    self.UI.hide(\"Center\")\r\n    self.setColorTint(defaultColor)\r\nend\r\n\r\nfunction select(player)\r\n    Global.call(\"SelectFinalPos\", {shipGUID = shipGUID, proxy = self, move_code = move_code})\r\nend\r\n]]\r\n\r\nfunction MarkShip(args)\r\n    local finpos = { pos = args.ship.getPosition(), rot = args.ship.getRotation() }\r\n    local proxy = ShipProxyModule.spawnProxy(args.ship, true, finpos, false, \"markShip\")\r\n\r\n    ShipProxyModule.proxyTable[args.ship.getGUID()] = ShipProxyModule.proxyTable[args.ship.getGUID()] or {}\r\n    table.insert(ShipProxyModule.proxyTable[args.ship.getGUID()], proxy)\r\nend\r\n\r\nfunction UnMarkShip(args)\r\n    local pos = ShipProxyModule.hiddenShips[args.shipGUID]\r\n    local ship = getObjectFromGUID(args.shipGUID)\r\n    if pos ~= nil and ship ~= nil then\r\n        ship.setPosition(pos)\r\n        ship.interactable = true\r\n        ShipProxyModule.hiddenShips[args.shipGUID] = nil\r\n    end\r\n    DeleteShipProxies({ship_guid = args.shipGUID})\r\n    ShipProxyModule.proxyTable[args.shipGUID] = nil;\r\nend\r\n\r\nfunction StartBarrelRoll(args)\r\n    local ship = args.ship\r\n    local direction = args.direction\r\n    local code = ''\r\n    if direction == \"right\" then\r\n        code = 'rr'\r\n    elseif direction == \"left\" then\r\n        code = 'rl'\r\n    end\r\n    local offsets = { code .. '1', code .. '2', code .. '3' }\r\n\r\n    local collide = true\r\n    for i, v in ipairs(offsets) do\r\n        local proxy, result = ShipProxyModule.CreateMoveProxy(v, ship)\r\n        if result ~= 'overlap' then\r\n            collide = false\r\n        end\r\n\r\n        if proxy then\r\n            ShipProxyModule.proxyTable[args.ship.getGUID()] = ShipProxyModule.proxyTable[args.ship.getGUID()] or {}\r\n            table.insert(ShipProxyModule.proxyTable[args.ship.getGUID()], proxy)\r\n        end\r\n    end\r\n\r\n    if collide then\r\n        local info = MoveData.DecodeInfo(code, ship)\r\n        local annInfo = {type='overlap', note=info.collNote, code=info.code}\r\n        AnnModule.Announce(annInfo, 'all', ship)\r\n    end\r\nend\r\n\r\nlocal function executeFailure(move_code, ship, finType)\r\n    if finType == 'overlap' then\r\n        local info = MoveData.DecodeInfo(move_code:sub(1,-2), ship)\r\n        local annInfo = {type='overlap', note=info.collNote, code=info.code}\r\n        AnnModule.Announce(annInfo, 'all', ship)\r\n\r\n        return\r\n    end\r\n\r\n    MoveModule.PerformMove(move_code, ship)\r\nend\r\n\r\nfunction SpawnProxyOptions(args)\r\n    local ship       = getObjectFromGUID(args.ship_guid)\r\n    local move_codes = args.move_codes or {}\r\n    local base_position  = args.base_position or 'center'\r\n\r\n    local ok = nil\r\n    local finType = nil\r\n    local ship_proxies = ShipProxyInstance:new()\r\n    for position, move_code in pairs(move_codes) do\r\n        local proxy, finPos = ShipProxyModule.CreateMoveProxy(move_code, ship)\r\n        if finPos.finType == 'move' and finPos.finPart == 'max' then\r\n            ok = true\r\n        else\r\n            finType = finPos.finType\r\n        end\r\n\r\n        ship_proxies:add(position, proxy)\r\n    end\r\n\r\n    if not ok then\r\n        executeFailure(move_codes[base_position], ship, finType)\r\n\r\n        return nil, false\r\n    end\r\n\r\n    Wait.condition(|| ship_proxies:setActive(), || ship_proxies:ready())\r\n\r\n    ShipProxyModule.proxyTable[ship.getGUID()] = ShipProxyModule.proxyTable[ship.getGUID()] or {}\r\n    table.insert(ShipProxyModule.proxyTable[ship.getGUID()], ship_proxies)\r\n    return ship_proxies, true\r\nend\r\n\r\nShipProxyModule.CreateMoveProxy = function(move_code, ship)\r\n    local info = MoveData.DecodeInfo(move_code, ship)\r\n    local finalPos = MoveModule.GetFinalPosData(move_code, ship)\r\n\r\n    if finalPos.finType == 'overlap' then\r\n        return nil, finalPos\r\n    end\r\n    if finalPos.finPart ~= 'max' then\r\n        return nil, finalPos\r\n    end\r\n\r\n    local templateData = {\r\n        origin = ship.getPosition(),\r\n        orientation = ship.getRotation(),\r\n        dir = info.dir,\r\n        speed = info.speed,\r\n        type = info.type,\r\n        shipSize = info.size,\r\n        extra = info.extra\r\n    }\r\n\r\n    local collisions = MoveModule.CheckMineAndObstacleCollisions(ship, finalPos.finPos, false, templateData)\r\n\r\n    local didCollide = false\r\n    if collisions[1] ~= nil then\r\n        didCollide = true\r\n    end\r\n\r\n    local proxy = ShipProxyModule.spawnProxy(ship, false, finalPos.finPos, didCollide, \"finalPos\", move_code)\r\n    return proxy, finalPos\r\nend\r\n\r\nfunction SelectFinalPos(args)\r\n    local ship = getObjectFromGUID(args.shipGUID)\r\n    local move_code = args.move_code\r\n    MoveModule.PerformMove(move_code, ship)\r\n\r\n    DeleteShipProxies({ship_guid = args.shipGUID})\r\nend\r\n\r\nShipProxyModule.StartFinalPositionSelection = function(ship, positionOffset)\r\n    local size = ship.getTable('Data').Size or \"small\"\r\n    local offset = ShipProxyModule.finalPosOffset[size]\r\n    for k, off in pairs({offset, vector(0,0,0), vector(0,0,0)-offset}) do\r\n        ShipProxyModule.spawnProxy(ship, false, positionOffset + off, color(0,0.1,1,0.2), \"finalPos\")\r\n    end\r\nend\r\n\r\nfunction DeleteShipProxies(args)\r\n    local ship_guid = args.ship_guid\r\n\r\n    for i = 1,table.size(ShipProxyModule.proxyTable[ship_guid]) do\r\n        local proxy = table.remove(ShipProxyModule.proxyTable[ship_guid])\r\n        if proxy.destroy then\r\n            proxy:destroy()\r\n        else\r\n            proxy.destruct()\r\n        end\r\n    end\r\nend\r\n\r\nShipProxyModule.proxyModels = {\r\n    collider = {\r\n        small = '{verifycache}https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/colliders/Small_base_proxy_collider.obj',\r\n        medium = '{verifycache}https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/colliders/Medium_base_proxy_collider.obj',\r\n        large = '{verifycache}https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/colliders/Large_base_proxy_collider.obj',\r\n        huge = '{verifycache}https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/colliders/Huge_base_proxy_collider.obj'\r\n    },\r\n    model = {\r\n        small = '{verifycache}https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/ships/proxy/small.obj',\r\n        medium = '{verifycache}https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/ships/proxy/medium.obj',\r\n        large = '{verifycache}https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/ships/proxy/large.obj',\r\n        huge = '{verifycache}https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/ships/proxy/huge.obj',\r\n    },\r\n}\r\n\r\nShipProxyModule.spawnProxy = function(ship, hide, finpos, didCollide, script, move_code)\r\n    if hide and ShipProxyModule.hiddenShips[ship.getGUID()] ~= nil then\r\n        return\r\n    end\r\n\r\n    local proxy = spawnObject({\r\n      type              = \"Custom_Model\",\r\n      position          = finpos.pos,\r\n      rotation          = finpos.rot,\r\n      scale             = ship.getScale(),\r\n      sound             = false,\r\n      snap_to_grid      = false,\r\n    })\r\n    local size = ship.getTable(\"Data\").Size or 'small'\r\n    proxy.setCustomObject({\r\n        type = 0,\r\n        material = 3,\r\n        collider = ShipProxyModule.proxyModels.collider[size],\r\n        mesh = ShipProxyModule.proxyModels.model[size],\r\n    })\r\n    proxy.addTag(\"ProxyInstance\")\r\n\r\n    local defaultColor = {}\r\n    local hoverColor = {}\r\n    if didCollide then\r\n        defaultColor = color(1.0, 0.3, 0.3, 0.1)\r\n        hoverColor = color(1.0, 1.0, 0.5, 0.5)\r\n    else\r\n       defaultColor = color(0.3, 0.3, 1.0, 0.1)\r\n       hoverColor = color(0.5,1.0,0.5,0.5)\r\n    end\r\n    proxy.setColorTint(defaultColor)\r\n    proxy.setTable(\"defaultColor\", defaultColor)\r\n    proxy.setTable(\"hoverColor\", hoverColor)\r\n\r\n    proxy.setLock(true)\r\n    proxy.setLuaScript(ShipProxyModule.proxyScripts[script])\r\n    proxy.UI.setXml(ShipProxyModule.proxyXmlGui[script])\r\n    proxy.setVar(\"shipGUID\", ship.getGUID())\r\n    proxy.setVar(\"size\", size)\r\n    proxy.setVar(\"move_code\", move_code)\r\n\r\n    if hide then\r\n        ShipProxyModule.hiddenShips[ship.getGUID()] = ship.getPosition()\r\n        ship.setPosition(vector(0, -3, 0))\r\n        ship.interactable = false\r\n        ship.setLock(true)\r\n        local playerColors = ship.getSelectingPlayers()\r\n        for _, player in ipairs(playerColors) do\r\n            ship.removeFromPlayerSelection(player)\r\n        end\r\n    end\r\n\r\n    return proxy\r\nend\r\n\r\nShipProxyModule.onLoad = function()\r\n  for k,obj in pairs(getAllObjects()) do\r\n      if obj.hasTag(\"ProxyInstance\") then\r\n          destroyObject(obj)\r\n      end\r\n  end\r\nend\r\n\r\nEventSub.Register('onLoad', ShipProxyModule.onLoad)\r\n\n----#include TTS_xwing/src/ShipProxy\n\r\n-- Ship verification\r\n----#include TTS_xwing/src/ShipVerification\nShipVerification = {}\r\n\r\nShipVerification.colliders = {\r\n    small = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/Small_base_Collider.obj',\r\n    medium = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/Medium_base_Collider.obj',\r\n    large = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/Large_base_Collider.obj',\r\n    huge = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/Huge_base_Collider.obj'\r\n}\r\n\r\nShipVerification.VerifyShipBase = function(ship)\r\n    if ship.getScale() ~= mm_ship_scale then\r\n        printToAll(\"Ship \" .. ship.getName() .. \" has wrong scale, don't scale the ships please!\", color(1,0.2,0.2))\r\n        ship.setScale(mm_ship_scale)\r\n    end\r\n    local size = ship.getTable(\"Data\").Size\r\n    if size == nil then\r\n        printToAll(\"Ship \" .. ship.getName() .. \" does not have size data! Please spawn a proper ship\", color(1,0.2,0.2))\r\n        return false\r\n    else\r\n        if ship.getCustomObject().collider ~= ShipVerification.colliders[size] then\r\n            printToAll(\"Ship \" .. ship.getName() .. \" does not have proper collission data! Please spawn a proper ship\", color(1,0.2,0.2))\r\n            return false\r\n        end\r\n    end\r\n    return true\r\nend\r\n\n----#include TTS_xwing/src/ShipVerification\n\r\n-- ContextGui\r\n----#include TTS_xwing/src/ContextGui\n-- ~~~~~~\r\n-- Script by Eirik 'Flippster' Munthe\r\n-- Issues, history at: https://github.com/JohnnyCheese/TTS_X-Wing2.0\r\n--\r\n-- Module for handeling object mouse over and contextial gui menus\r\n-- ~~~~~~\r\n\r\nContextGui = {}\r\n\r\nContextGui.playerTable = {}\r\n\r\nContextGui.onTimout = function(player_color, hovered_object)\r\n    local prev_object = ContextGui.playerTable[player_color].context_object\r\n    if prev_object ~= nil and prev_object.getVar(\"onContextClose\") ~= nil then\r\n        prev_object.call(\"onContextClose\")\r\n    end\r\n    if hovered_object.getVar(\"onContextOpen\") ~= nil then\r\n        hovered_object.call(\"onContextOpen\", player_color)\r\n        ContextGui.playerTable[player_color].context_object = hovered_object\r\n    end\r\nend\r\n\r\nContextGui.onObjectHover = function(player_color, hovered_object)\r\n    if ContextGui.playerTable[player_color] == nil then\r\n        ContextGui.playerTable[player_color] = {}\r\n    end\r\n    local prev_object = ContextGui.playerTable[player_color].hover_object\r\n    ContextGui.playerTable[player_color].hover_object = hovered_object\r\n    if ContextGui.playerTable[player_color].timerid ~= nil then\r\n        Wait.stop(ContextGui.playerTable[player_color].timerid)\r\n    end\r\n    if (prev_object ~= nil) and (prev_object.getVar(\"onHoverLeave\") ~= nil) then\r\n        prev_object.call(\"onHoverLeave\", player_color)\r\n    end\r\n    if hovered_object ~= nil then\r\n        if (hovered_object.getVar(\"onContextOpen\") ~= nil) then\r\n            ContextGui.playerTable[player_color].timerid = Wait.time(function() ContextGui.onTimout(player_color, hovered_object) end, 1)\r\n        end\r\n        if (hovered_object.getVar(\"onHoverEnter\") ~= nil) then\r\n            hovered_object.call(\"onHoverEnter\", player_color)\r\n        end\r\n    end\r\nend\r\n\r\nEventSub.Register('onObjectHover', ContextGui.onObjectHover)\r\n\n----#include TTS_xwing/src/ContextGui\n\r\n-- ConfigManager\r\n----#include TTS_xwing/src/ConfigManager\n-- ~~~~~~\r\n-- Script by Eirik 'Flippster' Munthe\r\n--\r\n--\r\n-- X-Wing configuration manager module,\r\n-- Stores global table configurations, and per-player configurations\r\n-- ~~~~~~\r\n\r\nConfigManager = {}\r\nConfigManager.PlayerConfigs = {}\r\nConfigManager.SetCallbacks = {}\r\nConfigManager.DefaultValues = {\r\n    TargetLockColorMode = \"ShipColorId\",\r\n    TargetLockDisplayName = \"true\"\r\n}\r\n\r\nConfigManager.GetPlayerName = function(player_color)\r\n    local player = Player[player_color]\r\n    return \"[\"..Color.fromString(player.color):toHex(false)..\"]\" .. player.steam_name .. \"[-]\"\r\nend\r\n\r\nConfigManager.GetConfig = function(player_color, param_name)\r\n    if ConfigManager.PlayerConfigs[player_color] then\r\n        return ConfigManager.PlayerConfigs[player_color][param_name] or ConfigManager.DefaultValues[param_name]\r\n    end\r\n    return ConfigManager.DefaultValues[param_name] or nil\r\nend\r\n\r\nConfigManager.SetConfig = function(player_color, param_name, value)\r\n    if value then\r\n        if ConfigManager.PlayerConfigs[player_color] == nil then\r\n            ConfigManager.PlayerConfigs[player_color] = {}\r\n        end\r\n        ConfigManager.PlayerConfigs[player_color][param_name] = value\r\n        printToAll(ConfigManager.GetPlayerName(player_color) .. \" changed \" .. param_name .. \" configuration to \" .. tostring(value), color(0.1, 1, 1))\r\n        if ConfigManager.SetCallbacks[param_name] ~= nil then\r\n            ConfigManager.SetCallbacks[param_name](player_color, value)\r\n        end\r\n    end\r\nend\r\n\n----#include TTS_xwing/src/ConfigManager\n\r\nHotkeyModule = require(\"TTS_xwing/src/HotkeyManager\")\r\nPlayerEventModule = require(\"TTS_xwing/src/PlayerActionModule\")\r\nDialManagerModule = require(\"TTS_xwing/src/DialManager\")\r\n\r\n-- Modules API, must be loaded last\r\n----#include TTS_xwing/src/API\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- All cross-script-callable functions\r\n-- ~~~~~~\r\n\r\n\r\n-- \"API\" functions, to be working in TTS:\r\n-- Must take one and only one argument, of table type\r\n-- Must return one and only one value\r\n-- Cannot recieve/return function or thread type values\r\n-- Have to be called after callee loads (its onLoad triggers)\r\n\r\n\r\n-- Perform a move using a standard move command\r\n-- Argument: { code = moveCode, ship = shipReference, ignoreCollisions = [true/false] }\r\n-- Return: TRUE if move completed, FALSE if overlap prevented ship from moving\r\n-- Return:                         FALSE if invalid (non-move) command or ship not ready\r\nfunction API_PerformMove(argTable)\r\n    local type = XW_cmd.CheckCommand(argTable.code)\r\n    if (type ~= 'move' and type ~= 'actionMove') or not XW_cmd.isReady(argTable.ship) then\r\n        return false\r\n    end\r\n    return MoveModule.PerformMove(argTable.code, argTable.ship, argTable.ignoreCollisions)\r\nend\r\n\r\n-- Assign a set of dials to a ship\r\n-- Removes any set ship has when this is called\r\n-- Uniqueness of set description is checked (warn & skip)\r\n-- Current owner of dials checked (warn & skip)\r\n-- *Dial script requirement not checked*\r\n-- Argument: { ship = shipRef, set = {dialRef1, dialRef2, ... dialRefN} }\r\n-- Return: TRUE if some dials were assigned, FALSE if none were assigned\r\n--[[function DialAPI_AssignSet(argTable)\r\n    -- Remove any current set\r\n    local actSet = DialModule.GetSet(argTable.ship)\r\n    if actSet ~= nil then\r\n        DialModule.RemoveSet(argTable.ship)\r\n    end\r\n    -- Filter out duplicate description and already assigned dials\r\n    local validSet = {}\r\n    for k,dial in pairs(argTable.set) do\r\n        if validSet[dial.getDescription()] ~= nil then\r\n            AnnModule.Announce({type='error_DialModule', note='tried to assign few of same dials (API call)'}, 'all', argTable.ship)\r\n        else\r\n            if dial.getVar('assignedShip') == nil then\r\n                validSet[dial.getDescription()] = {dial=dial, originPos=dial.getPosition()}\r\n\r\n                --dial.call('setShip', {argTable.ship})\r\n                dial.setName(argTable.ship.getName())\r\n            else\r\n                AnnModule.Announce({type='error_DialModule', note='tried to assign dial that belong to other ship (API call)'}, 'all', argTable.ship)\r\n            end\r\n        end\r\n    end\r\n    -- Add those that remain\r\n    if not table.empty(validSet) then\r\n        DialModule.AddSet(argTable.ship, validSet)\r\n        return true\r\n    else\r\n        return false\r\n    end\r\nend\r\n]]\r\n\r\n\r\nfunction DialAPI_AssignSet(argTable)\r\n    -- Remove any current set\r\n    local actSet = DialModule.GetSet(argTable.ship)\r\n    if actSet ~= nil then\r\n        DialModule.RemoveSet(argTable.ship)\r\n    end\r\n    -- Filter out duplicate description and already assigned dials\r\n    local validSet = {}\r\n    for k,dial in pairs(argTable.set) do\r\n        if validSet[dial.getDescription()] ~= nil then\r\n            AnnModule.Announce({type='error_DialModule', note='tried to assign few of same dials (API call)'}, 'all', argTable.ship)\r\n        else\r\n            if dial.getVar('assignedShip') == nil then\r\n                validSet[dial.getDescription()] = {dial=dial, originPos=dial.getPosition()}\r\n                --dial.call('setShip', {argTable.ship})\r\n                local assignFcn = function() dial.call('setShip', {argTable.ship}) end\r\n                Wait.condition(assignFcn, function() return not dial.spawning end, 2, assignFcn)\r\n                dial.setName(argTable.ship.getName())\r\n            else\r\n                AnnModule.Announce({type='error_DialModule', note='tried to assign dial that belong to other ship (API call)'}, 'all', argTable.ship)\r\n            end\r\n        end\r\n    end\r\n    -- Add those that remain\r\n    if not table.empty(validSet) then\r\n        DialModule.AddSet(argTable.ship, validSet)\r\n        return true\r\n    else\r\n        return false\r\n    end\r\nend\r\n\r\n\r\n-- Start ship slide on some object (dial or anything)\r\n-- \"Slide\" button for move zone depiction is not created\r\n-- Control & constraints identical to slide button on a dial\r\n-- *OBJ NEEDS TO HAVE 'assignedShip' VARIABLE SET TO SHIP REF*\r\n-- Argument: { obj = objRef, playerColor = clickingPlayerColor }\r\nfunction API_StartSlide(argTable)\r\n    return DialModule.StartSlide(argTable.obj, argTable.playerColor)\r\nend\r\n\r\n-- Queue tokens near a ship for movement\r\n-- To be called immediately before changing position of a ship\r\n-- Argument: { ship = shipRef, finPos = { pos = finalPosition, rot = finalRotation} }\r\n-- finPos field may be nil (no position set after wait then)\r\nfunction API_QueueShipTokensMove(argTable)\r\n    -- Set the ship busy if it's not to try prevent double ready later\r\n    if XW_cmd.isReady(argTable.ship) then\r\n        XW_cmd.SetBusy(argTable.ship)\r\n    end\r\n    local lockFun = nil\r\n    if argTable.noLock == true then\r\n        lockFun = function(ship)\r\n            ship.unlock()\r\n        end\r\n    end\r\n    TokenModule.QueueShipTokensMove(argTable.ship)\r\n    MoveModule.WaitForResting(argTable.ship, argTable.finPos, lockFun)\r\nend\r\n\r\n-- Indicate dropping of a bomb token from outside Global\r\n-- Argument: { token = droppedTokenRef }\r\n-- Return: true if token snapped, false otherwise\r\nfunction API_BombTokenDrop(argTable)\r\n    return BombModule.OnTokenDrop(argTable.token)\r\nend\r\n\r\n\r\nfunction API_AssignToken(argTable)\r\n    TokenModule.AssignToken(argTable.token, argTable.ship)\r\nend\r\n\r\nfunction API_GetPlayerConfig(argTable)\r\n    return ConfigManager.GetConfig(argTable.player_color, argTable.param_name)\r\nend\r\n\r\nfunction API_GetGlobalConfig(argTable)\r\n    return ConfigManager.GetConfig(\"global\", argTable.param_name)\r\nend\r\n\r\nfunction API_SetPlayerConfig(argTable)\r\n    return ConfigManager.SetConfig(argTable.player_color, argTable.param_name, argTable.value)\r\nend\r\n\r\nfunction API_SetGlobalConfig(argTable)\r\n    return ConfigManager.SetConfig(\"global\",argTable.param_name, argTable.value)\r\nend\r\n\r\nfunction API_GetClosestPointToShip(argTable)\r\n    local size = argTable.ship.getTable('Data').Size or \"small\"\r\n    local segments = ArcCheck.GetOwnArcLineSegments(argTable.ship, ArcCheck.arc_line_segments[size].full.segments)\r\n\r\n    local closestRange = 100000\r\n    local closestDistance = nil\r\n    for _, segment in pairs(segments) do\r\n      distance = ArcCheck.GetDistanceBetweenLineSegmentAndPoint(segment, argTable.point, false)\r\n      print(\"Dist: \" .. tostring(distance.length))\r\n      if distance.length < closestRange then\r\n        closestRange = distance.length\r\n        closestDistance = distance\r\n      end\r\n    end\r\n    return closestDistance\r\nend\r\n\r\nfunction API_AssignDial(argTable)\r\n    DialManagerModule.assignDial(argTable.dial, argTable.ship, argTable.player)\r\nend\r\n\r\nfunction API_SetDial(argTable)\r\n  if argTable.set then\r\n    DialManagerModule.setDial(argTable.dial)\r\n  else\r\n    DialManagerModule.unSetDial(argTable.dial)\r\n  end\r\nend\r\n\r\n--------\r\n-- OBJECT SPECIFIC VARIABLES\r\n-- These variables are set per object and have some specific meaning\r\n-- Some may be linked to another so caution must be kept when modifying\r\n\r\n-- objectType : varName         - val / val2 ... / valN     <- meaning\r\n-- ship : 'hasDials'            - true / (false/nil)        <- Has assigned set of dials (ONLY informative) / Not\r\n-- ship : 'slideOngoing'        - true / (false/nil)        <- Is in process of manually adjusting slide / Not\r\n-- ship : 'cmdBusy'             - true / (false/nil)        <- Is currently processing some command / Not\r\n-- ship : 'missingModelWarned'  - true / (false/nil)        <- Printed a warning that model is unrecognized (once) / Not yet\r\n-- dial : 'slideOngoing'        - true / (false/nil)        <- Its ship in process of manually adjusting slide / Not\r\n-- dial : 'assignedShip'        - shipRef / nil             <- Object reference to its owner / No owner\r\n-- token : 'idle'               - false / (true/nil)        <- This token should be ignored when moving tokens / Not\r\n\r\n--------\r\n\n----#include TTS_xwing/src/API\n\r\n--------\r\n-- MISC FUNCTIONS\r\n\r\n-- Dumbest TTS issue ever workaround\r\nfunction TTS_Serialize(pos)\r\n    return {pos[1], pos[2], pos[3]}\r\nend\r\n\r\nObjType.AddType('ship', function(obj)\r\n    return ((obj.tag == 'Figurine') and (obj.getVar('__XW_Ship') == true))\r\nend)\r\nObjType.AddType('token', function(obj)\r\n    return (obj.tag == 'Chip' or obj.tag == 'Coin' or (obj.getVar('__XW_Token') and obj.getVar('__XW_TokenIdle')))\r\nend)\r\nObjType.AddType('dial', function(obj)\r\n    return (obj.tag == 'Card' and XW_cmd.CheckCommand(obj.getDescription()) == 'move')\r\nend)\r\n\r\n\r\n-- Dud function for info buttons and not yet written sections where Lua complains about no code\r\nfunction dummy() return end\r\n\r\n-- END MISC FUNCTIONS\r\n--------\r\n\r\n\r\n--------\r\n-- COMMAND HANDLING MODULE\r\n-- Sanitizes input (more like ignores anything not explicitly allowed)\r\n-- Allows other modules to add available commands and passes their execution where they belong\r\n\r\nXW_cmd = {}\r\nXW_cmd.commandLUT = {}\r\n\r\n-- Table of valid commands: their patterns and general types\r\nXW_cmd.ValidCommands = {}\r\n\r\n-- Add given regen expression as a valid command for processing\r\nXW_cmd.AddCommand = function(cmdRegex, type)\r\n    -- When adding available commands, assert beggining and end of string automatically\r\n    if cmdRegex:sub(1,1) ~= '^' then cmdRegex = '^' .. cmdRegex end\r\n    if cmdRegex:sub(-1,-1) ~= '$' then cmdRegex = cmdRegex .. '$' end\r\n    table.insert(XW_cmd.ValidCommands, {string.lower(cmdRegex), type})\r\nend\r\n\r\n-- Check if command is registered as valid\r\n-- If it is return its type identifier, if not return nil\r\nXW_cmd.CheckCommand = function(cmd)\r\n    -- Trim whitespaces\r\n    cmd = string.lower(cmd:match( \"^%s*(.-)%s*$\" ))\r\n    local type = nil\r\n    if XW_cmd.commandLUT[cmd] then\r\n        return XW_cmd.commandLUT[cmd]\r\n    end\r\n    -- Resolve command type\r\n    for k,pat in pairs(XW_cmd.ValidCommands) do\r\n        if cmd:match(pat[1]) ~= nil then\r\n            type = pat[2]\r\n            break\r\n        end\r\n    end\r\n    XW_cmd.commandLUT[cmd] = type\r\n    return type\r\nend\r\n\r\n-- (special function)\r\n-- Purge all save data (everything that goes to onSave)\r\nXW_cmd.AddCommand('purgeSave', 'special')\r\nXW_cmd.PurgeSave = function()\r\n    MoveModule.moveHistory = {}\r\nend\r\n\r\n-- (special function)\r\n-- Print ship hitory\r\nXW_cmd.AddCommand('hist', 'special')\r\nXW_cmd.ShowHist = function(ship)\r\n    MoveModule.PrintHistory(ship)\r\nend\r\n\r\n-- (special function)\r\n-- Check for typical issues with a ship\r\nXW_cmd.AddCommand('diag', 'special')\r\nXW_cmd.Diagnose = function(ship)\r\n    -- Check and unlock XW_cmd lock if it's on\r\n    local issueFound = false\r\n    if ObjType.IsOfType(ship, 'ship') ~= true then return end\r\n    if XW_cmd.isReady(ship) ~= true then\r\n        XW_cmd.SetReady(ship)\r\n        printToAll(ship.getName() .. '\\'s deadlock resolved', {0.1, 0.1, 1})\r\n        issueFound = true\r\n    end\r\n    -- Delete lingering buttons\r\n    if ship.getButtons() ~= nil then\r\n        ship.clearButtons()\r\n        printToAll(ship.getName() .. '\\'s lingering buttons deleted', {0.1, 0.1, 1})\r\n        issueFound = true\r\n    end\r\n    -- If ship has unrecognized model and said that before, remind\r\n    if ship.getVar('missingModelWarned') == true then\r\n        printToAll('I hope you do remember that I told you about ' .. ship.getName() .. '\\'s model being unrecognized when it was first moved/used', {0.1, 0.1, 1})\r\n        issueFound = true\r\n    end\r\n    -- No issues found\r\n    if issueFound ~= true then\r\n        printToAll(ship.getName() .. ' looks OK', {0.1, 1, 0.1})\r\n    end\r\nend\r\n\r\n-- Process provided command on a provided object\r\n-- Return true if command has been executed/started\r\n-- Return false if object cannot process commands right now or command was invalid\r\nXW_cmd.Process = function(obj, cmd)\r\n\r\n    -- Trim whitespaces\r\n    cmd = cmd:match( \"^%s*(.-)%s*$\" )\r\n\r\n    -- Resolve command type\r\n    local type = XW_cmd.CheckCommand(cmd)\r\n\r\n    -- Process special commands without taking lock into consideration\r\n    if type == nil then\r\n        return false\r\n    elseif type == 'special' then\r\n        if cmd == 'diag' then\r\n            XW_cmd.Diagnose(obj)\r\n        elseif cmd == 'purgeSave' then\r\n            XW_cmd.PurgeSave()\r\n        elseif cmd == 'hist' then\r\n            XW_cmd.ShowHist(obj)\r\n        end\r\n    end\r\n\r\n    -- Return if not ready, else process\r\n    if XW_cmd.isReady(obj) ~= true then\r\n        return false\r\n    end\r\n\r\n    if type == 'demoMove' then\r\n        MoveModule.DemoMove(cmd:sub(3, -1), obj)\r\n    elseif type == 'move' or type == 'actionMove' then\r\n        local info = MoveData.DecodeInfo(cmd, obj)\r\n        MoveModule.PerformMove(cmd, obj)\r\n    elseif type == 'historyHandle' then\r\n        if cmd == 'q' or cmd == 'undo' then\r\n            MoveModule.UndoMove(obj)\r\n        elseif cmd == 'z' or cmd == 'redo' then\r\n            MoveModule.RedoMove(obj)\r\n        elseif cmd == 'keep' then\r\n            MoveModule.SaveStateToHistory(obj, false)\r\n        elseif cmd:sub(1,8) == 'restore#' then\r\n            local keyNum = tonumber(cmd:sub(9, -1))\r\n            MoveModule.Restore(obj, keyNum)\r\n        end\r\n    elseif type == 'dialHandle' then\r\n        if cmd == 'sd' then\r\n            DialModule.SaveNearby(obj)\r\n        elseif cmd == 'rd' then\r\n            DialModule.RemoveSet(obj)\r\n        end\r\n    elseif type == 'rulerHandle' then\r\n        RulerModule.ToggleRuler(obj, string.upper(cmd))\r\n    elseif type == 'action' then\r\n        DialModule.PerformAction(obj, cmd)\r\n    elseif type == 'bombDrop' then\r\n        BombModule.ToggleDrop(obj, cmd)\r\n    elseif type == 'AI' then\r\n        AIModule.EnableAI(obj, cmd)\r\n    elseif type == 'rotate' then\r\n        DialModule.RotateArc(obj, cmd)\r\n    elseif type == 'turretarc' then\r\n        DialModule.TurretArc(obj, cmd)\r\n    end\r\n    obj.setDescription('')\r\n    return true\r\nend\r\n\r\n-- Is object not processing some commands right now?\r\nXW_cmd.isReady = function(obj)\r\n    return (obj.getVar('cmdBusy') ~= true)\r\nend\r\n\r\n-- Flag the object as processing commands to ignore any in the meantime\r\nXW_cmd.SetBusy = function(obj)\r\n    if XW_cmd.isReady(obj) ~= true then\r\n        print('Nested process on ' .. obj.getName())\r\n    end\r\n    obj.setVar('cmdBusy', true)\r\nend\r\n\r\n-- Flag the object as ready to process next command\r\nXW_cmd.SetReady = function(obj)\r\n    if XW_cmd.isReady(obj) == true then\r\n        print('Double ready on ' .. obj.getName())\r\n    end\r\n    obj.setVar('cmdBusy', false)\r\nend\r\n\r\n--------\r\n-- MOVEMENT DATA MODULE\r\n-- Stores and processes data about moves\r\n-- NOT aware of any ship position, operation solely on relative movements\r\n-- Used for feeding data about a move to a higher level movement module\r\n-- Exclusively uses milimeters and degrees for values, needs external conversion\r\n\r\n-- Possible commands supported by this module\r\nXW_cmd.AddCommand('[sk][012345][r]?', 'move')   -- Straights/Koiograns + stationary moves\r\nXW_cmd.AddCommand('b[rle][0123][strz]?', 'move')   -- Banks + segnor and reverse versions\r\nXW_cmd.AddCommand('t[rle][01234][srfbtz]?[t]?', 'move')\r\n\r\nXW_cmd.AddCommand('r[rle][123]?', 'actionMove')       --New Roll Done\r\nXW_cmd.AddCommand('v[rle][fb][123]?', 'actionMove')   --New ViperRoll\r\nXW_cmd.AddCommand('c[srle][123]?', 'actionMove')      --New Cloak side\r\nXW_cmd.AddCommand('e[srle][fbrle][123]?', 'actionMove')   --New Echo Cloack\r\n\r\n\r\nXW_cmd.AddCommand('x[rle][fb]?', 'actionMove')  -- Barrel rolls\r\nXW_cmd.AddCommand('s[12345]b', 'actionMove')    -- Boost straights\r\nXW_cmd.AddCommand('b[rle][123]b', 'actionMove') -- Boost banks\r\nXW_cmd.AddCommand('t[rle][123]b', 'actionMove') -- Boost turns\r\nXW_cmd.AddCommand('a[12]', 'actionMove')        -- Adjusts\r\n\r\n--XW_cmd.AddCommand('c[srle]', 'actionMove')      -- Decloaks side middle + straight\r\n--XW_cmd.AddCommand('c[rle][fb]', 'actionMove')   -- Decloaks side forward + backward\r\n--XW_cmd.AddCommand('ch[rle][fb]', 'actionMove')  -- Echo's bullshit\r\n--XW_cmd.AddCommand('chs[rle]', 'actionMove')     -- Echo's bullshit, part 2\r\n--XW_cmd.AddCommand('vr[rle][fb]', 'actionMove')  -- StarViper Mk.II rolls\r\n\r\n-- AI Module:\r\ntest_AI = false\r\nAIModule = {}\r\n\r\n-- 2000mm is the length between opposite corners of an epic table.\r\nAIModule.max_distance = 2000\r\n\r\n-- Information about the most recently executed maneuver by an AI ship. This is\r\n-- stored just before we move the ship, and it used when the ship comes to rest\r\n-- and the callback is fired. Yes, this is a bit of a hack, and yes, I'd love to\r\n-- do it a better way.\r\nAIModule.current_move = {}\r\nAIModule.current_move.in_progress = false\r\nAIModule.current_move.Reset = function()\r\n    AIModule.current_move.take_action = false\r\n    AIModule.current_move.move_code = nil\r\n    AIModule.current_move.collision = false\r\n    AIModule.current_move.difficulty = nil\r\n    AIModule.current_move.obstacle = false\r\n    AIModule.current_move.stress_count = 0\r\n    AIModule.current_move.is_ionised = false\r\n    AIModule.current_move.target = nil\r\n    AIModule.current_move.probes = {}\r\n    AIModule.current_move.action_stack = {}\r\n    AIModule.current_move.actions = {}\r\nend\r\nAIModule.current_move.Reset()\r\n\r\n\r\n\r\n-- Possible commands supported by the AI module\r\nXW_cmd.AddCommand('ai', 'AI')   -- Enables the AI on the selected ship\r\n\r\n-- Description function to add the AI functions to a ship\r\nAIModule.EnableAI = function(ship, command)\r\n    ship.AddContextMenuItem(\"AI move and action\", function(argument) Global.call(\"PerformAIManeuver\", {['ship']=ship, ['take_action']=true}) end, false)\r\n    ship.AddContextMenuItem(\"AI move only\", function(argument) Global.call(\"PerformAIManeuver\", {['ship']=ship, ['take_action']=false}) end, false)\r\nend\r\n\r\n-- Sanity check, make sure that all the moves for this ship are actually\r\n-- possible. It won't fix every issue but it'll find most typos. This is not\r\n-- called except when debugging.\r\nAIModule.ValidateMoveTables = function(ship)\r\n    local ship_id = ship.getTable('Data')['shipId']\r\n    local behaviour = BehaviourDB.GetRuleSet().GetShipBehaviour(ship)\r\n\r\n    for arc, range_tables in pairs(behaviour.move_table) do\r\n        for range, move_table in pairs(range_tables) do\r\n            for roll, move_code in pairs(move_table) do\r\n                if AIModule.GetMoveDifficulty(ship, move_code) == nil then\r\n                    print(\"Couldn't find maneuver \" .. move_code .. \" from ship \" .. tostring(ship_id) .. \"'s move table. Arc: \" .. arc .. \", range: \" .. range .. \", roll: \" .. tostring(roll))\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n--[[ AI target selection\r\n\r\nTarget selection is the simplest of the AI submodules. It consists of a set of\r\nfunctions for different selection types, each of which takes the querying ship\r\nand returns a target ship. There are also some helper methods for filtering\r\ntargets by various metrics.\r\n]]\r\n\r\n-- Target selection functions. These take a ship, and return a target ship\r\nAIModule.TargetSelectionFunctions = {}\r\nAIModule.TargetSelectionFunctions.ClosestInArc = function(ship)\r\n    local targets = AIModule.GetSortedTargetsInArc(ship)\r\n\r\n    -- Get the first ship as it's already been sorted by distance\r\n    for i, target in pairs(targets) do\r\n        return target.ship\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\nAIModule.TargetSelectionFunctions.Closest = function(ship)\r\n    local potential_targets = ArcCheck.GetPotentialTargets(ship, AIModule.max_distance)\r\n\r\n    local closest_distance = nil\r\n    local closest_target = nil\r\n    for i, target in pairs(potential_targets) do\r\n        local distance = Vect.Length(ship.getPosition() - target.GetPosition())\r\n        if closest_distance == nil or distance < closest_distance then\r\n            closest_distance = distance\r\n            closest_target = target\r\n        end\r\n    end\r\n\r\n    return closest_target\r\nend\r\n\r\nAIModule.TargetSelectionFunctions.LockedInRange = function(ship)\r\n    local potential_targets = AIModule.GetSortedTargetsInArc(ship, 'all')\r\n    potential_targets = table.sieve(potential_targets, AIModule.FilterInRange)\r\n\r\n    local closest_distance = nil\r\n    local closest_target = nil\r\n    for i, target in pairs(potential_targets) do\r\n        -- Is this ship locked by us?\r\n        if AIModule.HasTargetLockOnShip(ship, target.ship) then\r\n            local distance = Vect.Length(ship.getPosition() - target.ship.GetPosition())\r\n            if closest_distance == nil or distance < closest_distance then\r\n                closest_distance = distance\r\n                closest_target = target.ship\r\n            end\r\n        end\r\n    end\r\n\r\n    return closest_target\r\nend\r\n\r\nAIModule.TargetSelectionFunctions.ClosestInArcLowerInitiative = function(ship)\r\n    local initiative = ship.getTable('Data')['initiative']\r\n    local targets = AIModule.GetSortedTargetsInArc(ship)\r\n\r\n    -- Get the first ship with a lower initiative as it's already been sorted by\r\n    -- distance.\r\n    for i, target in pairs(targets) do\r\n        if (target.ship.getTable('Data')['initiative'] < initiative) then\r\n            return target.ship\r\n        end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\n-- Only choose ships that are in arc and between ranges 1-3\r\nAIModule.FilterInArc = function(el)\r\n    if el.in_arc == false then\r\n        return false\r\n    end\r\n\r\n    return true;\r\nend\r\n\r\n-- Only choose ships that are between range one and three\r\nAIModule.FilterInRange = function(el)\r\n    if el.closest.range < 1 or el.closest.range > 3 then\r\n        return false\r\n    end\r\n\r\n    return true;\r\nend\r\n\r\n-- Assumed to have been filtered first\r\nAIModule.SortTargetsByAIDesirability = function(e1, e2)\r\n    if e1.closest ~= nil and e2.closest ~= nil then\r\n        if e1.closest.length < e2.closest.length then\r\n            return true\r\n        elseif e1.closest.length > e2.closest.length then\r\n            return false\r\n        end\r\n    end\r\n\r\n    return e1.ship.getGUID() > e2.ship.getGUID()\r\nend\r\n\r\nAIModule.GetSortedTargetsInArc = function(ship, arc)\r\n    local targets = ArcCheck.GetTargetsInRelationToArc(ship, arc or 'front')\r\n    targets = table.sieve(targets, AIModule.FilterInArc)\r\n    targets = table.sieve(targets, AIModule.FilterInRange)\r\n    table.sort(targets, AIModule.SortTargetsByAIDesirability)\r\n    return targets\r\nend\r\n\r\nAIModule.HasTargetLockOnShip = function(locking_ship, locked_ship)\r\n    local lock_tokens = locked_ship.call(\"GetTokens\", {type=\"targetLock\"})\r\n    for j, token in pairs(lock_tokens) do\r\n        if token.GetName() == locking_ship.GetName() then -- TODO: this really should be guid\r\n            return true\r\n        end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n\r\n--[[ AI maneuver selection\r\n\r\nThe maneuver selection is the main submodule of the AI, as well as the one that\r\nties most of the others together. It is home to one of the entry points,\r\n\"PerformAIManever\". The main function, AIModule.PerformManeuver, uses the\r\ntarget selection functions to pick a target, then plots a maneuver based on\r\nthe move tables in BehaviourDB.ttslua. It also cover stress, ion, and obstacle\r\navoidance.\r\n\r\nWorth noting is that due to having to wait for ships to finish moving, part of\r\nthe functionality of AIModule.PerformManeuver had to be split out to a callback\r\nfunction, AIModule.ManeuverPostShipRest. This handles everything after the\r\nmaneuver is executed, including calling the action submodule.\r\n\r\nIt also includes various helper functions for searching through and transforming\r\nmanveuvers.\r\n]]\r\nfunction PerformAIManeuver(args)\r\n    local ship = args.ship\r\n    local take_action = args.take_action\r\n\r\n    AIModule.PerformManeuver(ship, take_action)\r\nend\r\n\r\nAIModule.PerformManeuver = function(ship, take_action)\r\n    if AIModule.current_move.in_progress then\r\n        printToAll(\"Can't perform AI maneuver while another ship is moving.\", color(1.0, 1.0, 0.2, 0.9))\r\n        return\r\n    end\r\n\r\n    --AIModule.ValidateMoveTables(ship)\r\n    AIModule.current_move.Reset()\r\n    AIModule.current_move.stress_count = TokenModule.GetShipTokenCount(ship, \"Stress\")\r\n    AIModule.current_move.take_action = take_action\r\n    local stress = AIModule.current_move.stress_count > 0\r\n\r\n    local rule_set = BehaviourDB.GetRuleSet()\r\n\r\n    local ship_id = ship.getTable('Data')['shipId']\r\n    local ship_behaviour = rule_set.GetShipBehaviour(ship)\r\n\r\n    if ship_behaviour ~= nil then\r\n        printToAll('Performing AI routine for ' .. ship.GetName(), color(1.0, 1.0, 0.2, 0.9))\r\n        local move_code = nil\r\n\r\n        -- Find this ship's target.\r\n        local target_ship = nil\r\n        for _, target_selection_function in ipairs(ship_behaviour.target_selection) do\r\n            target_ship = AIModule.TargetSelectionFunctions[target_selection_function](ship)\r\n            if target_ship ~= nil then\r\n                break\r\n            end\r\n        end\r\n        AIModule.current_move.target = target_ship\r\n\r\n        -- Check if we're ionised.\r\n        local is_ionised = AIModule.IsIonised(ship)\r\n        AIModule.current_move.is_ionised = is_ionised\r\n\r\n        if target_ship == nil then\r\n            -- TODO: This is undefined behaviour, and highly unlikely to happen.\r\n            -- Should it default to a 2 straight?\r\n            printToAll('Failed to find target')\r\n        elseif is_ionised == true then\r\n            move_code = 's1'\r\n            printToAll('Ionised, skipping movement selection')\r\n        else\r\n            -- Find out the arc that the target is in.\r\n            local target_arc = nil\r\n            local arc_parts = nil\r\n\r\n            local ship_size = ship.getTable(\"Data\").Size or 'small'\r\n\r\n            if rule_set.useBullseyeArc then\r\n                -- First do a check to see if the ship is in our bullseye.\r\n                -- Move the bullseye position ahead because it's in the middle of\r\n                -- range ruler rather than one end. Could this be moved into the\r\n                -- GetBullseyeTargets function?\r\n                local bullseye_position = vector(ArcCheck.bullseye_data.pos[ship_size][1], ArcCheck.bullseye_data.pos[ship_size][2], ArcCheck.bullseye_data.pos[ship_size][3] + Convert_mm_igu(AIModule.max_distance / 2) - (ArcCheck.bullseye_data.size[3] / 2))\r\n                local bullseye_targets = ArcCheck.GetBullseyeTargets(ship, bullseye_position, AIModule.max_distance)\r\n                for i, bullseye_target in pairs(bullseye_targets) do\r\n                    if bullseye_target == target_ship then\r\n                        target_arc = 'bullseye'\r\n                        arc_parts = {'front'}\r\n                        break\r\n                    end\r\n                end\r\n            end\r\n\r\n            if target_arc == nil then\r\n                -- We have our target ship. Now we do some vector maths to get\r\n                -- the angle pointing from our ship to the target ship.\r\n                local ship_facing = Vect.RotateDeg({0, 0, -1}, ship.GetRotation().y)\r\n                local ship_to_target = target_ship.GetPosition() - ship.getPosition()\r\n                local angle_to_target = Vect.AngleDeg(ship_facing, ship_to_target)\r\n\r\n                -- angleToTarget is normalised between 0 and 180, to work out if\r\n                -- if it's pointing to our left or our right we need to get the\r\n                -- dot product of the shipToTarget vector and the tangent to our\r\n                -- facing.\r\n                local ship_facing_tangent = {ship_facing[3], 0, -ship_facing[1]}\r\n                local tangent_dot_product = Vect.DotProd(ship_to_target, ship_facing_tangent)\r\n                if tangent_dot_product < 0 then\r\n                    angle_to_target = angle_to_target * -1\r\n                end\r\n\r\n                 arc_result = rule_set.degreesToArc(angle_to_target)\r\n                 target_arc = arc_result.target_arc\r\n                 arc_parts = arc_result.arc_parts\r\n            end\r\n\r\n            -- Find the range bracket - one of closing, fleeing, distant, or\r\n            -- stress.\r\n            local range_bracket = nil\r\n            if stress then\r\n                range_bracket = 'stress'\r\n                printToAll(' Selected target: ' .. target_ship.getName() .. ', in the ' .. target_arc .. ' arc, while stressed.')\r\n            else\r\n                local target_range = nil\r\n                -- Find the range, if we haven't got it already.\r\n                -- TODO: If a ship is at range 0, then treat it as range 1 and\r\n                -- behind our ship. (pg 19, \"Touching\")\r\n                if target_range == nil then\r\n                    -- TODO: Wrap up this code in a re-useable function\r\n                    local own_line_segments = {}\r\n                    for i, arc in ipairs(arc_parts) do\r\n                        local segments = ArcCheck.GetOwnArcLineSegments(ship, ArcCheck.arc_line_segments[ship_size][arc][\"segments\"])\r\n                        for k, segment in ipairs(segments) do\r\n                            table.insert(own_line_segments, segment)\r\n                        end\r\n                    end\r\n\r\n                    local target_line_segments = {}\r\n                    for i, arc in ipairs(arc_parts) do\r\n                        local segments = ArcCheck.GetTargetLineSegmentsInArc(ship, target_ship, ArcCheck.arc_line_segments[ship_size][arc][\"degrees\"])\r\n                        for k, segment in ipairs(segments) do\r\n                            table.insert(target_line_segments, segment)\r\n                        end\r\n                    end\r\n\r\n                    if #target_line_segments ~= 0 then\r\n                        local closest = nil\r\n                        closest, _ = ArcCheck.GetDistanceBetweenLineSegments(own_line_segments, target_line_segments)\r\n                        target_range = closest.range\r\n                    end\r\n                end\r\n\r\n                -- If we're at range 2, then we need to check if the target is\r\n                -- moving towards us (closing) or moving away from us (fleeing)\r\n                target_closing = nil\r\n                closing_text = '.'\r\n                if target_range == 2 then\r\n                    local target_ship_facing = Vect.RotateDeg({0, 0, -1}, target_ship.GetRotation().y)\r\n                    local target_to_ship = ship.getPosition() - target_ship.GetPosition()\r\n                    local angle_to_ship = Vect.AngleDeg(target_ship_facing, target_to_ship)\r\n\r\n                    if (angle_to_ship < 90) then\r\n                        target_closing = true\r\n                        closing_text = ' and closing.'\r\n                    else\r\n                        target_closing = false\r\n                        closing_text = ' and fleeing.'\r\n                    end\r\n                end\r\n\r\n                printToAll(' Selected target: ' .. target_ship.getName() .. ', in the ' .. target_arc .. ' arc at range ' .. tostring(target_range) .. closing_text)\r\n\r\n                -- Get the move for our situation.\r\n                -- Convert our target's range and facing into a range bracket.\r\n                range_bracket = 'distant'\r\n                if (target_range <= 1 or (target_range == 2 and target_closing == true)) then\r\n                    range_bracket = 'near'\r\n                elseif (target_range == 3 or (target_range == 2 and target_closing == false)) then\r\n                    range_bracket = 'far'\r\n                end\r\n            end\r\n\r\n            -- Check if we need to flip the facing and the final move.\r\n            local flip_move = ship_behaviour.move_table[target_arc] == nil\r\n            if (flip_move) then\r\n                target_arc = rule_set.flipArc(target_arc)\r\n            end\r\n\r\n            -- Roll the d6, and keep substracting 1 until we find a move.\r\n            local d6_roll = math.random(6)\r\n            while move_code == nil and d6_roll > 0 do\r\n                move_code = ship_behaviour.move_table[target_arc][range_bracket][d6_roll]\r\n                d6_roll = d6_roll - 1\r\n            end\r\n\r\n            -- If we had to flip the arc, then also flip the resulting move.\r\n            if (flip_move) then\r\n                if string.find(move_code, 'l') then\r\n                    move_code = string.gsub(move_code, 'l', 'r')\r\n                elseif string.find(move_code, 'r') then\r\n                    move_code = string.gsub(move_code, 'r', 'l')\r\n                end\r\n            end\r\n        end\r\n\r\n        AIModule.current_move.move_code = move_code\r\n\r\n        if move_code ~= nil then\r\n            -- Check for collisions.\r\n            local move_info = MoveData.DecodeInfo(move_code, ship)\r\n            local probe_data = MoveModule.MoveProbe.TryFullMove(move_info, ship, MoveModule.GetFullMove)\r\n            AIModule.current_move.collision = probe_data.collObj ~= nil\r\n            if probe_data.collObs ~= nil then\r\n                printToAll(' Tried ' .. move_code .. ', hit an obstacle')\r\n                AIModule.current_move.obstacle = true\r\n                -- We've hit an obstacle! If we aren't ionised then We'll try to\r\n                -- swerve.\r\n                if is_ionised == false then\r\n                    -- We pick up to two maneuvers that are the closest to our\r\n                    -- current maneuver, and possible for our ship and stress\r\n                    -- level. Whichever of these will get us closer to our\r\n                    -- target is the one that we try. If that move avoids an\r\n                    -- obstacle, then we choose it instead, otherwise we stick\r\n                    -- with our original maneuver.\r\n                    -- TODO: deal with reverse moves\r\n                    local potential_swerve_moves = {}\r\n                    local swerve_speed = tostring(math.max(1, math.min(3, move_info.speed)))\r\n                    if move_info.type == 'straight' then\r\n                        potential_swerve_moves = {'bl' .. swerve_speed, 'br' .. swerve_speed}\r\n                    elseif move_info.type == 'bank' then\r\n                        potential_swerve_moves = {'t' .. string.sub(move_info.dir, 1, 1) .. swerve_speed, 's' .. swerve_speed}\r\n                    elseif move_info.type == 'turn' then\r\n                        potential_swerve_moves = {'b' .. string.sub(move_info.dir, 1, 1) .. swerve_speed}\r\n                    end\r\n\r\n                    local swerve_moves = {}\r\n                    for _, potential_swerve_move_code in ipairs(potential_swerve_moves) do\r\n                        -- If we can't do this move, then get the closest move that\r\n                        -- we can do and try that instead. This may be multiple\r\n                        -- moves, for example if a two-bank is impossible then we\r\n                        -- may be able to try a one-bank and a three-bank. They're\r\n                        -- both the same distance from the original so we'll try\r\n                        -- both.\r\n                        local nearest_move_codes = AIModule.GetNearestMoves(ship, potential_swerve_move_code, stress == false)\r\n                        for _, nearest_move_code in ipairs(nearest_move_codes) do\r\n                            table.insert(swerve_moves, nearest_move_code)\r\n                        end\r\n                    end\r\n\r\n                    -- Loop through all of the possible swerve moves, and find out\r\n                    -- which one will get us the closest to our target. This is the\r\n                    -- maneuver that we'll try again with.\r\n                    local closest_swerve_move_code = nil\r\n                    local closest_swerve_distance = nil\r\n                    for _, swerve_move_code in ipairs(swerve_moves) do\r\n                        local post_swerve = MoveModule.GetFullMove(swerve_move_code, ship)\r\n                        local post_swerve_position = Vector(post_swerve.pos[1], post_swerve.pos[2], post_swerve.pos[3])\r\n                        local distance = Vect.Length(post_swerve_position - target_ship.GetPosition())\r\n                        if closest_swerve_distance == nil or distance < closest_swerve_distance then\r\n                            closest_swerve_distance = distance\r\n                            closest_swerve_move_code = swerve_move_code\r\n                        end\r\n                    end\r\n\r\n                    if closest_swerve_move_code ~= nil then\r\n                        local swerve_move_info = MoveData.DecodeInfo(closest_swerve_move_code, ship)\r\n                        local swerve_probe_data = MoveModule.MoveProbe.TryFullMove(swerve_move_info, ship, MoveModule.GetFullMove)\r\n                        if swerve_probe_data.collObs == nil then\r\n                            move_code = closest_swerve_move_code\r\n                            print(' Tried ' .. closest_swerve_move_code .. ', avoids the obstacle.')\r\n                            AIModule.current_move.obstacle = false\r\n                            AIModule.current_move.collision = swerve_probe_data.collObj ~= nil\r\n                        else\r\n                            print(' Tried ' .. closest_swerve_move_code .. ', still hits an obstacle.')\r\n\r\n                            local obstacle_name = swerve_probe_data.collObs.getName()\r\n                            if obstacle_name:find('Asteroid') then\r\n                                -- Asteroid: roll an attack die and suffer a hit or crit\r\n                                AIModule.current_move.obstacle = 'asteroid'\r\n                                printToAll(ship.GetName() .. ' has collided with an asteroid. Please roll a red die and inflict a hit or a critical hit if either is rolled.', color(1.0, 1.0, 0.2, 0.9))\r\n                            elseif obstacle_name:find('Debris') or obstacle_name:find('Chute debris') or obstacle_name:find('Spare') then\r\n                                -- Debris cloud: gain stress (happens in ManeuverPostShipRest), roll and attack die and suffer a crit\r\n                                AIModule.current_move.obstacle = 'debris_field'\r\n                                printToAll(ship.GetName() .. ' has collided with a debris field. Please roll a red die and inflict a critical hit if one is rolled.', color(1.0, 1.0, 0.2, 0.9))\r\n                            elseif obstacle_name:find('Cloud') then\r\n                                AIModule.current_move.obstacle = 'gas_cloud'\r\n                                -- Gas cloud: roll an attack die, gain a strain on an eye or a hit\r\n                                printToAll(ship.GetName() .. ' has collided with a gas cloud. Please roll a red die and gain a strain if an eye or a hit is rolled.', color(1.0, 1.0, 0.2, 0.9))\r\n                            end\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n\r\n            -- TODO: Check for edge of table collision\r\n\r\n            AIModule.current_move.difficulty = 'b'\r\n\r\n            -- If we are ionised, then our move is always blue and we remove\r\n            -- all of our ion tokens. Otherwise, we check for our difficulty.\r\n            if is_ionised then\r\n                while TokenModule.GetShipTokenCount(ship, 'Ion') > 0 do\r\n                    -- BUG: This fails to identify the ion token stack if the\r\n                    -- ship has exactly two stress tokens. If this occurs, the\r\n                    -- ship also leaves behind the single remaining stress\r\n                    -- token. I've done a bit of debugging and it appears that\r\n                    -- when a token stack has \"takeObject\" called on it, it\r\n                    -- changes from a 'chip' type to a 'generic' type. This\r\n                    -- means that it isn't picked up by ObjType.GetNearOfType.\r\n                    -- This does correct itself if the tokens are moved around\r\n                    -- manually, so I assume that this is just a one-frame\r\n                    -- occurence that wouldn't matter if the AI wasn't doing\r\n                    -- everything at the same time. Potential fix: set\r\n                    -- '__XW_Token' on the token afterwards?\r\n                    DialModule.PerformAction(ship, 'Ion', ship.getVar('owningPlayer'), {['remove'] = true})\r\n                end\r\n            else\r\n                AIModule.current_move.difficulty = AIModule.GetMoveDifficulty(ship, move_code)\r\n            end\r\n            -- Remove tokens _before_ the move - if we wait till afterwards then\r\n            -- the tokens haven't caught up with the ship and the token module\r\n            -- doesn't count them.\r\n            if AIModule.current_move.difficulty == 'b' then\r\n                if stress then\r\n                    DialModule.PerformAction(ship, 'Stress', ship.getVar('owningPlayer'), {['remove'] = true})\r\n                    AIModule.current_move.stress_count = AIModule.current_move.stress_count - 1\r\n                end\r\n                if TokenModule.GetShipTokenCount(ship, 'Strain') > 0 then\r\n                    DialModule.PerformAction(ship, 'Strain', ship.getVar('owningPlayer'), {['remove'] = true})\r\n                end\r\n                if TokenModule.GetShipTokenCount(ship, 'Deplete') > 0 then\r\n                    DialModule.PerformAction(ship, 'Deplete', ship.getVar('owningPlayer'), {['remove'] = true})\r\n                end\r\n            end\r\n\r\n            AIModule.current_move.in_progress = true\r\n            if MoveModule.PerformMove(move_code, ship, false, AIModule.ManeuverPostShipRest, true) == false then\r\n                -- If the PerformMove function retured false, then the ship\r\n                -- could not move at all. In this case the post-rest callback\r\n                -- won't be fired, so we'll call it ourselves. Also, just in\r\n                -- case, set the collision flag.\r\n                AIModule.current_move.collision = true\r\n                AIModule.ManeuverPostShipRest(ship)\r\n            end\r\n        end\r\n    else\r\n        printToAll('No AI routine found for ship ID ' .. tostring(ship_id), color(1.0, 1.0, 0.2, 0.9))\r\n    end\r\nend\r\n\r\nAIModule.ManeuverPostShipRest = function(ship)\r\n    local action_selected = false;\r\n\r\n    if AIModule.current_move.obstacle == 'debris_field' then\r\n        DialModule.PerformAction(ship, 'Stress', ship.getVar(\"owningPlayer\"))\r\n    end\r\n\r\n    if AIModule.current_move.difficulty == 'r' then\r\n        DialModule.PerformAction(ship, 'Stress', ship.getVar(\"owningPlayer\"))\r\n    elseif AIModule.current_move.take_action == true and AIModule.current_move.stress_count == 0 and AIModule.current_move.collision == false and AIModule.current_move.obstacle == false then\r\n        if AIModule.current_move.is_ionised then\r\n            -- Ionised ships can only perform a focus action, if possible.\r\n            for _, action in pairs(ship.getTable('Data')['actSet']) do\r\n                if action == 'F' then\r\n                    table.insert(AIModule.current_move.action_stack, 'focus')\r\n                    action_selected = true\r\n                    break\r\n                end\r\n            end\r\n        else\r\n            -- Check for Full Throttle and apply it now if appropriate.\r\n            AIModule.ApplySpecialAbility(ship, 'fullThrottle')\r\n\r\n            -- Run through the ship's actions and try them in order.\r\n            action_selected = AIModule.SelectAction(ship)\r\n        end\r\n    end\r\n\r\n    if action_selected then\r\n        AIModule.ProcessActionStack(ship)\r\n    else\r\n        AIModule.current_move.in_progress = false\r\n    end\r\nend\r\n\r\n--[[ AIModule.GetMoveDifficulty\r\nThis function takes a ship and a move code and returns the difficulty of the\r\nmove.\r\n\r\nship: TTS Object, the ship performing the move\r\nmove_code: String, the move code being queried.\r\n\r\nreturns a string corresponding to the difficulty of the move for the ship:\r\n    'b': blue maneuver, reduces stress\r\n    'w': white manuever, stress neutral\r\n    'r': red maneuver, causes stress\r\n    nil: maneuver is impossible for the given ship\r\n]]\r\nAIModule.GetMoveDifficulty = function(ship, move_code)\r\n    move_set = ship.getTable('Data')['moveSet']\r\n    for _, raw_move_code in ipairs(move_set) do\r\n        local ship_move_difficulty = string.sub(raw_move_code, 1, 1)\r\n        local ship_move_code = string.sub(raw_move_code, 2)\r\n\r\n        if ship_move_code == move_code then\r\n            return ship_move_difficulty\r\n        end\r\n    end\r\n\r\n    return nil\r\nend\r\n\r\n--[[ AIModule.GetNearestMoves\r\nThis function takes a ship and a move code, and returns the nearest maneuvers\r\nthat the ship is capable of. This may be the specified move. \"Nearest\" is\r\ndefined as closest in speed. We won't change the angle of the move. So for\r\nexample, if tr1 is passed in we will try tr2 and tr3, but not br1.\r\n\r\nship: TTS Object, the ship whose move set the function will be testing\r\nmove_code: String, the move code we want to get the closest maneuver to\r\ncan_perform_red_maneuvers: Boolean, if true then we will try red maneuvers,\r\n    if false then we won't.\r\n\r\nreturns a table of move codes, as strings.\r\n]]--\r\nAIModule.GetNearestMoves = function(ship, move_code, can_perform_red_maneuvers)\r\n    move_set = ship.getTable('Data')['moveSet']\r\n    local move_info = MoveData.DecodeInfo(move_code, ship)\r\n    local original_speed = move_info.speed\r\n\r\n    -- We're going to loop through all of the ships moves and test for whether\r\n    -- they're possible or not, and each loop we'll increase the speed offset\r\n    -- by one. So 0 first, then -1 and +1, then -2 and +2, ... First we need\r\n    -- to calculate the maximum number of loops we can make.\r\n    local min_speed = 1\r\n    local max_speed = 3\r\n    if move_info.type == 'straight' then\r\n        min_speed = 0\r\n        max_speed = 5\r\n    end\r\n    max_offset = math.max(move_info.speed - min_speed, max_speed - move_info.speed)\r\n\r\n    -- Break the move code into sections so we can change the speed easily.\r\n    local speed_position = string.find(move_code, tostring(original_speed))\r\n    local move_pre_speed = string.sub(move_code, 1, speed_position - 1)\r\n    local move_post_speed = string.sub(move_code, speed_position + 1)\r\n\r\n    -- Loop through all the moves at the current offset. If we find at least\r\n    -- one possible move, then return it.\r\n    local speed_offset = 0\r\n    while speed_offset <= max_offset do\r\n        -- Prepare a table of 1-2 speeds to try this loop\r\n        local test_speeds = {}\r\n        if speed_offset == 0 then\r\n            table.insert(test_speeds, original_speed)\r\n        else\r\n            for _, direction in ipairs({1, -1}) do\r\n                local test_speed = original_speed + speed_offset * direction\r\n                if test_speed <= max_speed and test_speed >= min_speed then\r\n                    table.insert(test_speeds, test_speed)\r\n                end\r\n            end\r\n        end\r\n\r\n        -- Turn the move speeds into move codes\r\n        test_move_codes = {}\r\n        for _, test_speed in ipairs(test_speeds) do\r\n            table.insert(test_move_codes, move_pre_speed .. tostring(test_speed) .. move_post_speed)\r\n        end\r\n\r\n        -- Loop through and check if these maneuvers are in our list\r\n        move_replacements = {}\r\n        for _, raw_move_code in ipairs(move_set) do\r\n            local move_difficulty = string.sub(raw_move_code, 1, 1)\r\n            if move_difficulty ~= 'r' or can_perform_red_maneuvers then\r\n                local move_code = string.sub(raw_move_code, 2)\r\n                for _, test_move_code in ipairs(test_move_codes) do\r\n                    if test_move_code == move_code then\r\n                        table.insert(move_replacements, move_code)\r\n                    end\r\n                end\r\n            end\r\n        end\r\n\r\n        if #move_replacements ~= 0 then\r\n            return move_replacements\r\n        end\r\n\r\n        speed_offset = speed_offset + 1\r\n    end\r\nend\r\n\r\nAIModule.ApplySpecialAbility = function(ship, ability)\r\n    if AIModule.HasSpecialAbility(ship, ability) then\r\n        if ability == 'fullThrottle' then\r\n            -- Take an evade action if the ship fully executed (ie, no\r\n            -- ship-to-ship collision) a 3-5 maneuver. We're assumed to not be\r\n            -- stressed as this is only called right before actions are\r\n            -- selected.\r\n            if AIModule.current_move.collision == false then\r\n                local move_code = AIModule.current_move.move_code\r\n                if string.find(move_code, '3') or string.find(move_code, '4') or string.find(move_code, '5') then\r\n                    printToAll(string.format('%s used full throttle to evade.', ship.getName()))\r\n                    DialModule.PerformAction(ship, 'Evade', ship.getVar('owningPlayer'))\r\n                    table.insert(AIModule.current_move.actions, 'evade')\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nAIModule.HasSpecialAbility = function(ship, ability)\r\n    local ship_behaviour = BehaviourDB.GetRuleSet().GetShipBehaviour(ship)\r\n\r\n    if ship_behaviour.special_rules == nil then\r\n        return false\r\n    end\r\n\r\n    for _, ship_ability in pairs(ship_behaviour.special_rules) do\r\n        if ability == ship_ability then\r\n            return true\r\n        end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n--[[ AIModule.IsIonised\r\nThis function returns whether or not a ship has enough ion tokens to ionise it.\r\n\r\nship: TTS Object, the ship performing the move\r\n\r\nreturns true if the ship is ionised, false otherwise.\r\n]]\r\nAIModule.IsIonised = function(ship)\r\n    local ion_count = TokenModule.GetShipTokenCount(ship, \"Ion\")\r\n    local ship_size = ship.getTable('Data').Size or 'small'\r\n    if ship_size == 'small' then\r\n        return ion_count >= 1\r\n    elseif ship_size == 'medium' then\r\n        return ion_count >= 2\r\n    elseif ship_size == 'large' then\r\n        return ion_count >= 3\r\n    else\r\n        return ion_count >= 6\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n--[[ AI action selection\r\n\r\nThis submodule is smaller than the maneuver system, but probably more complex.\r\nThe main function is AIModule.AttemptAction, which takes an action definition\r\nand checks if it is possible to execute. This involves checking the action's\r\npre-conditions (if the ship is in the right situation to attempt it), then if\r\nthe ship can actually execute the action, and finally checking the action's\r\npost-conditions (if the action met with the desired result).\r\n\r\nWhere this gets complicated is the use of action probes, which are hypothetical\r\nfuture positions of the ship. So if a ship makes a boost, then we create a probe\r\nfor each type of boost (bl1, s1, br1) and evaluate the post-conditions for each\r\nprobe. Where this gets _really_ complicated is when handling ships that can\r\nstring together more than one move action, such as the Interceptor's boost\r\naction linking to a barrel roll action. For this we have to \"expand\" the first\r\nset of probes by the second action - so the probe \"bl1\" expands into six more\r\nprobes: \"bl1 > rl1\", \"bl1 > rl2\", \"bl1 > rl3\", \"bl1 > rr1\", \"bl1 > rr2\", and\r\n\"bl1 > rr3\". These permutations can get quite large (45 in the case of the\r\nInterceptor) so these are cached where possible, but even so they can lead to\r\nlong execution times.\r\n\r\nFinally, the actions are packed into a stack and processed one-by-one. Just like\r\nthe maneuver submodule these have to be dealt with in a callback to wait for the\r\nTTS components to come to a rest.\r\n]]\r\n\r\n-- List which actions are expandable actions, and therefore have to be expanded\r\n-- into a list of potential move codes or turret rotations. Any action not\r\n-- listed here is assumed to be possible to made at any time (such as 'focus',\r\n-- 'evade', etc)\r\nAIModule.expandable_actions = {\r\n    ['barrelRoll'] = {'rl1', 'rr1', 'rl2', 'rr2', 'rl3', 'rr3'},\r\n    ['boost'] = {'bl1', 's1', 'br1'},\r\n    ['rotateTurret'] = true -- These are calculated at run-time based on the turret type and current rotation.\r\n}\r\n\r\n-- Which arcs are adjacent to each arc, used for checking whether a ship is\r\n-- wholly within an arc or not.\r\nAIModule.arc_adjacencies = {\r\n    ['front'] = {'left', 'right'},\r\n    ['back'] = {'left', 'right'},\r\n    ['left'] = {'front', 'back'},\r\n    ['right'] = {'front', 'back'},\r\n    ['leftRight'] = {'front', 'back'},\r\n    ['frontBack'] = {'left', 'right'},\r\n    ['fullfront'] = {'fullback'},\r\n    ['fullback'] = {'fullfront'}\r\n}\r\n\r\nAIModule.SelectAction = function(ship)\r\n    local ship_behaviour = BehaviourDB.GetRuleSet().GetShipBehaviour(ship)\r\n\r\n    for _, action in ipairs(ship_behaviour.action_selection) do\r\n        if AIModule.AttemptAction(ship, AIModule.current_move.target, action) then\r\n            return true\r\n        end\r\n    end\r\n\r\n    local ship_id = ship.getTable('Data')['shipId']\r\n    printToAll('No AI actions found for ship ID ' .. tostring(ship_id) .. ', please make actions manually.', color(1.0, 1.0, 0.2, 0.9))\r\nend\r\n\r\nAIModule.AttemptAction = function(ship, target, action_definition)\r\n    if action_definition.pass_through then\r\n        AIModule.PrintActionDescription(action_definition.description, ship, target)\r\n        return false\r\n    end\r\n\r\n    -- Generate a static action probe to start our moves from.\r\n    local initial_probe = AIModule.GetActionProbe(ship)\r\n    -- The list of possible probe moves, if any. Group by the set index.\r\n    local probe_sets = {}\r\n    -- The simple actions that we'll take, grouped by the set index.\r\n    local simple_actions = {}\r\n\r\n    -- Check for preconditions\r\n    if AIModule.CheckProbeConditions(ship, target, initial_probe, action_definition.preconditions) == false then\r\n        return false\r\n    end\r\n\r\n    -- There are three ways that an action can be defined in the behaviour\r\n    -- database, so look for the shorthands and expand them out to the full\r\n    -- definition if necessary.\r\n    local action_set = action_definition.action\r\n    if type(action_definition.action) == 'string' then\r\n        action_set = {[1] = {[action_definition.action] = {['stress'] = false}}}\r\n    elseif action_definition.action[1] == nil then\r\n        action_set = {[1] = action_definition.action}\r\n    end\r\n\r\n    -- Iterate over each item in the action list, attempting each one in turn.\r\n    -- The action could be a move action (barrelRoll or boost) in which case\r\n    -- we need to expand it into all possible moves.\r\n    local action_includes_move_component = false\r\n    for set_index, action_list in ipairs(action_set) do\r\n        probe_sets[set_index] = {}\r\n        simple_actions[set_index] = {}\r\n        local initial_action = true\r\n\r\n        for action, arguments in pairs(action_list) do\r\n            -- Check for the stress shorthand in the arguments parameter.\r\n            if type(arguments) ~= 'table' then\r\n                arguments = {['stress'] = arguments}\r\n            end\r\n\r\n            if AIModule.expandable_actions[action] ~= nil then\r\n                -- Get or build the list of actions to expand into.\r\n                local expanded_actions = AIModule.expandable_actions[action]\r\n                if type(expanded_actions) == 'table' then\r\n                    action_includes_move_component = true\r\n                else\r\n                    expanded_actions = {}\r\n                    if action == 'rotateTurret' then\r\n                        local mount = arguments.mount or 'main'\r\n                        local turret_rotation_options = AIModule.GetTurretRotationOptions(ship, mount)\r\n                        for _, rotation in pairs(turret_rotation_options) do\r\n                            table.insert(expanded_actions, {['action'] = 'rotateTurret', ['mount'] = mount, ['arc'] = rotation})\r\n                        end\r\n                    end\r\n                end\r\n\r\n                local action_difficulty = 'w'\r\n                if arguments.stress == true then\r\n                    action_difficulty = 'r'\r\n                end\r\n\r\n                -- This action is an expanded action, so expand our current set\r\n                -- of possible action probes further.\r\n                if initial_action == true then\r\n                    probe_sets[set_index] = table.join(probe_sets[set_index], AIModule.ExpandActionProbe(ship, initial_probe, expanded_actions, action_difficulty))\r\n                    initial_action = false\r\n                else\r\n                    new_probes = {}\r\n                    for _, probe in pairs(probe_sets[set_index]) do\r\n                        new_probes = table.join(new_probes, AIModule.ExpandActionProbe(ship, probe, expanded_actions, action_difficulty))\r\n                    end\r\n\r\n                    probe_sets[set_index] = table.join(probe_sets[set_index], new_probes)\r\n                end\r\n\r\n                -- Set the set index on each probe.\r\n                for _, probe in pairs(probe_sets[set_index]) do\r\n                    probe.set_index = set_index\r\n                end\r\n            else\r\n                -- There's one instance that we skip the action - we don't take\r\n                -- a target lock action if the target is already locked. This is\r\n                -- often handled by the preconditions anyway, but sometimes it's\r\n                -- not so we double-check here. Also, range must be checked by\r\n                -- the postconditions as doing a range check now would be from\r\n                -- the post-maneuver position, not the post-action position.\r\n                local skip_action = false\r\n                if action == 'targetLock' then\r\n                    skip_action = AIModule.HasTargetLockOnShip(ship, target)\r\n                end\r\n\r\n                if skip_action == false then\r\n                    table.insert(simple_actions[set_index], action)\r\n\r\n                    if arguments.stress == true then\r\n                        table.insert(simple_actions[set_index], 'stress')\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    -- We merge together all of the probe sets into one table so we can rank\r\n    -- them and compare them to each other. We need to select a random one, so\r\n    -- we'll randomise the list and pick the first one that passes all the\r\n    -- postconditions. If the list is empty, or if no probe passes the\r\n    -- postconditions, then we can't complete the action and must return false.\r\n    selected_probe = initial_probe\r\n\r\n    -- Group all the probe sets together\r\n    local all_possible_probes = {}\r\n    for _, probe_set in pairs(probe_sets) do\r\n        all_possible_probes = table.join(all_possible_probes, probe_set)\r\n    end\r\n\r\n    -- Randomise the probes, then sort by difficulty so we avoid stress if\r\n    -- possible. We set the index here as it is used by SortProbesByDifficulty\r\n    -- to guarantee a stable sort.\r\n    all_possible_probes = table.shuffle(all_possible_probes)\r\n    for index, probe in ipairs(all_possible_probes) do\r\n        probe.index = index\r\n    end\r\n    table.sort(all_possible_probes, AIModule.SortProbesByDifficulty)\r\n\r\n    -- Iterate over the probes. The first successful one we find we store\r\n    -- in the probe_actions array that gets processed later, and we also record\r\n    -- the set index so we know which set of simple actions to use.\r\n    local probe_actions = {}\r\n    local set_index = 1\r\n    local move_count = 0\r\n    for _, probe in pairs(all_possible_probes) do\r\n        if AIModule.CheckProbeConditions(ship, target, probe, action_definition.postconditions) == true then\r\n            selected_probe = probe\r\n            set_index = probe.set_index\r\n\r\n            for _, action in pairs(probe.actions) do\r\n                -- Keep track of how many actual moves we make.\r\n                if action.action == nil then\r\n                    move_count = move_count + 1\r\n                end\r\n\r\n                if action ~= 's0' then\r\n                    table.insert(probe_actions, action)\r\n                end\r\n            end\r\n\r\n            if probe.difficulty == 'r' then\r\n                table.insert(simple_actions[set_index], 'stress')\r\n            end\r\n\r\n            break\r\n        end\r\n    end\r\n\r\n    if action_includes_move_component and move_count == 0 then\r\n        return false\r\n    end\r\n\r\n    for index = 1, #simple_actions[set_index] do\r\n        table.insert(AIModule.current_move.action_stack, simple_actions[set_index][#simple_actions[set_index] + 1 - index])\r\n    end\r\n    for index = 1, #probe_actions do\r\n        table.insert(AIModule.current_move.action_stack, probe_actions[#probe_actions + 1 - index])\r\n    end\r\n\r\n    if #AIModule.current_move.action_stack > 0 then\r\n        AIModule.PrintActionDescription(action_definition.description, ship, target, selected_probe)\r\n        return true\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Processes the queued actions in order, movement first and then simple\r\n-- actions. Will wait for the callback to keep processing actions in the case of\r\n-- a movement action\r\nAIModule.ProcessActionStack = function(ship)\r\n    if AIModule.current_move.in_progress == false then\r\n        return\r\n    end\r\n\r\n    while #AIModule.current_move.action_stack > 0 do\r\n        local action = table.remove(AIModule.current_move.action_stack)\r\n\r\n        if action.action == 'rotateTurret' then\r\n            ship.call('SetTurretArc', {['mount'] = action.mount, ['arc'] = action.arc, ['snap'] = false})\r\n        elseif action == 'stress' then\r\n            DialModule.PerformAction(ship, 'Stress', ship.getVar('owningPlayer'))\r\n        elseif action == 'focus' then\r\n            DialModule.PerformAction(ship, 'Focus', ship.getVar('owningPlayer'))\r\n            table.insert(AIModule.current_move.actions, 'focus')\r\n        elseif action == 'evade' then\r\n            DialModule.PerformAction(ship, 'Evade', ship.getVar('owningPlayer'))\r\n            table.insert(AIModule.current_move.actions, 'evade')\r\n        elseif action == 'targetLock' then\r\n            DialModule.PerformAction(ship, 'Target Lock', ship.getVar('owningPlayer'), {['ship'] = ship, ['target'] = AIModule.current_move.target})\r\n            table.insert(AIModule.current_move.actions, 'targetLock')\r\n        elseif action == 'cloak' then\r\n            DialModule.PerformAction(ship, 'Cloak', ship.getVar('owningPlayer'))\r\n            table.insert(AIModule.current_move.actions, 'cloak')\r\n        elseif action == 'reinforceFore' then\r\n            DialModule.PerformAction(ship, 'Reinforce', ship.getVar('owningPlayer'), {['flip'] = true})\r\n            table.insert(AIModule.current_move.actions, 'reinforce')\r\n        elseif action == 'reinforceAft' then\r\n            DialModule.PerformAction(ship, 'Reinforce', ship.getVar('owningPlayer'))\r\n            table.insert(AIModule.current_move.actions, 'reinforce')\r\n        elseif action == 'coordinate' then\r\n            printToAll('Please manage the coordinate action manually.', color(1.0, 1.0, 0.2, 0.9))\r\n            table.insert(AIModule.current_move.actions, 'coordinate')\r\n        elseif action == 'jam' then\r\n            target = AIModule.current_move.target\r\n            DialModule.PerformAction(target, 'Jam', target.getVar('owningPlayer'))\r\n            printToAll('Please manage the effects of the jam token manually.', color(1.0, 1.0, 0.2, 0.9))\r\n            table.insert(AIModule.current_move.actions, 'jam')\r\n        elseif MoveModule.PerformMove(action, ship, false, AIModule.ProcessActionStack) then\r\n            break\r\n        end\r\n    end\r\n\r\n    AIModule.current_move.in_progress = #AIModule.current_move.action_stack > 0\r\nend\r\n\r\nAIModule.PrintActionDescription = function(description, ship, target, probe)\r\n    local text = description\r\n    local text_parameters = {}\r\n    if type(description) == 'table' then\r\n        text = description.text\r\n        for _, string_id in pairs(description.strings) do\r\n            if string_id == 'ship' then\r\n                table.insert(text_parameters, ship.getName())\r\n            elseif string_id == 'target' then\r\n                table.insert(text_parameters, target.getName())\r\n            else\r\n                -- If it's not 'ship' or 'target', then it's an action target\r\n                -- that is stored in the chain of the selected action probes.\r\n                -- We'll look up the chain until we find it.\r\n                action_target = ''\r\n                current_probe = probe\r\n                while current_probe ~= nil and action_target == '' do\r\n                    if current_probe.action_targets[string_id] ~= nil then\r\n                        action_target = current_probe.action_targets[string_id].getName()\r\n                    end\r\n                    current_probe = current_probe.parent\r\n                end\r\n\r\n                table.insert(text_parameters, action_target)\r\n            end\r\n        end\r\n    else\r\n        text_parameters = {ship.getName()}\r\n    end\r\n\r\n    printToAll(string.format(text, unpack(text_parameters)))\r\nend\r\n\r\n--[[ The action probe system, part of the AI action submodule.\r\n\r\nThese functions deal the creating action probes, expanding them, sorting them,\r\nand checking conditions on them.\r\n]]\r\nAIModule.CheckProbeConditions = function(ship, target, probe, conditions)\r\n    -- No conditions, then we can't fail.\r\n    if conditions == nil then\r\n        return true\r\n    end\r\n\r\n    local probe_result = true\r\n\r\n    for condition, parameters in pairs(conditions) do\r\n        local required_result = parameters\r\n        local arguments = nil\r\n        -- Conditions can either point just to the required result, in which\r\n        -- case they have no arguments, or point to a table which contains both\r\n        -- the required result and arguments.\r\n        if type(parameters) == 'table' then\r\n            required_result = parameters.requiredResult\r\n            arguments = parameters.arguments\r\n        end\r\n        local actual_result = AIModule.condition_functions[condition](ship, target, probe, arguments)\r\n        if actual_result ~= required_result then\r\n            probe_result = false\r\n            break\r\n        end\r\n    end\r\n\r\n    return probe_result\r\nend\r\n\r\n-- This creates the origin action probe and returns it.\r\nAIModule.GetActionProbe = function(ship)\r\n    local move = 's0'\r\n\r\n    if AIModule.current_move.probes[move] == nil then\r\n        AIModule.current_move.probes[move] = {}\r\n    end\r\n\r\n    if AIModule.current_move.probes[move].possible == nil then\r\n        AIModule.current_move.probes[move].parent = nil\r\n        AIModule.current_move.probes[move].action_targets = {}\r\n        AIModule.current_move.probes[move].actions = {move}\r\n        AIModule.current_move.probes[move].possible = true\r\n        AIModule.current_move.probes[move].difficulty = 'w'\r\n        AIModule.current_move.probes[move].position = ship.getPosition()\r\n        AIModule.current_move.probes[move].rotation = ship.getRotation()\r\n    end\r\n\r\n    return AIModule.current_move.probes[move]\r\nend\r\n\r\n-- This function takes an existing probe, and appends all possible moves/actions\r\n-- in the action list onto it, returning a list of those that are possible.\r\nAIModule.ExpandActionProbe = function(ship, probe, actions, difficulty)\r\n    local possible_probes = {}\r\n\r\n    local probe_name = ''\r\n    for _, previous_action in pairs(probe.actions) do\r\n        if string.len(probe_name) > 0 then\r\n            probe_name = probe_name .. ','\r\n        end\r\n        probe_name = probe_name .. AIModule.GetActionProbeName(previous_action)\r\n    end\r\n\r\n    for _, action in pairs(actions) do\r\n        -- First check if this exists. If it does, and it's possible, then just\r\n        -- return it and skip to the next one.\r\n        local new_probe_name = probe_name .. ',' .. AIModule.GetActionProbeName(action)\r\n        new_probe = AIModule.current_move.probes[new_probe_name]\r\n        if new_probe ~= nil then\r\n            if new_probe.possible == true then\r\n                new_probe.difficulty = difficulty\r\n                table.insert(possible_probes, new_probe)\r\n            end\r\n        else\r\n            local new_probe = {\r\n                ['parent'] = probe,\r\n                ['possible'] = false,\r\n                ['actions'] = table.shallowcopy(probe.actions),\r\n                ['action_targets'] = {},\r\n                ['difficulty'] = difficulty,\r\n            }\r\n            table.insert(new_probe.actions, action)\r\n\r\n            if action.action == nil then\r\n                -- If the action doesn't contain an 'action' key, then it's a move.\r\n                local move_code = action\r\n\r\n                -- Test whether this probe is even possible.\r\n                local original_ship_state = AIModule.GetShipState(ship)\r\n                AIModule.ApplyProbe(ship, probe)\r\n\r\n                local move_info = MoveData.DecodeInfo(move_code, ship)\r\n                local probe_data = MoveModule.MoveProbe.TryFullMove(move_info, ship, MoveModule.GetFullMove)\r\n                if probe_data.done and probe_data.collObj == nil and probe_data.collObs == nil then\r\n                    new_probe.possible = true\r\n                    new_probe.position = probe_data.finalPosRot.pos\r\n                    new_probe.rotation = probe_data.finalPosRot.rot\r\n                    table.insert(possible_probes, new_probe)\r\n                end\r\n                AIModule.current_move.probes[new_probe_name] = new_probe\r\n\r\n                AIModule.SetShipState(ship, original_ship_state)\r\n            elseif action.action == 'rotateTurret' then\r\n                -- Turret rotations are always possible so we don't need to test\r\n                -- the action.\r\n                new_probe.possible = true\r\n                new_probe.position = probe.position\r\n                new_probe.rotation = probe.rotation\r\n                new_probe.turrets = {[action.mount] = action.arc}\r\n                table.insert(possible_probes, new_probe)\r\n\r\n                AIModule.current_move.probes[new_probe_name] = new_probe\r\n            end\r\n        end\r\n    end\r\n\r\n    return possible_probes\r\nend\r\n\r\nAIModule.GetActionProbeName = function(action)\r\n    if action.action == nil then\r\n        return action\r\n    elseif action.action == 'rotateTurret' then\r\n        return string.format('rotateTurret(%s,%s)', action.mount, action.arc)\r\n    else\r\n        return ''\r\n    end\r\nend\r\n\r\nAIModule.SortProbesByDifficulty = function(e1, e2)\r\n    if e1.difficulty == 'b' and e2.difficulty ~= 'b' then\r\n        return true\r\n    elseif e2.difficulty == 'b' and e1.difficulty ~= 'b' then\r\n        return false\r\n    elseif e1.difficulty == 'w' and e2.difficulty == 'r' then\r\n        return true\r\n    elseif e2.difficulty == 'w' and e1.difficulty == 'r' then\r\n        return false\r\n    end\r\n\r\n    return e1.index < e2.index\r\nend\r\n\r\nAIModule.GetShipState = function(ship)\r\n    local state = {['position'] = ship.GetPosition(), ['rotation'] = ship.GetRotation(), ['turrets'] = {}}\r\n\r\n    local turret_mounts = ship.call('GetAssignedMounts')\r\n    for _, mount in pairs(turret_mounts) do\r\n        state.turrets[mount] = ship.call('GetTurretArc', {['mount'] = mount})\r\n    end\r\n\r\n    return state\r\nend\r\n\r\nAIModule.SetShipState = function(ship, state)\r\n    ship.SetPosition(state.position)\r\n    ship.SetRotation(state.rotation)\r\n\r\n    if state.turrets ~= nil then\r\n        for mount, arc in pairs(state.turrets) do\r\n            ship.call('SetTurretArc', {['mount'] = mount, ['arc'] = arc, ['snap'] = true})\r\n        end\r\n    end\r\nend\r\n\r\nAIModule.ApplyProbe = function(ship, probe)\r\n    ship.SetPosition(probe.position)\r\n    ship.SetRotation(probe.rotation)\r\n\r\n    if probe.turrets ~= nil then\r\n        for mount, arc in pairs(probe.turrets) do\r\n            ship.call('SetTurretArc', {['mount'] = mount, ['arc'] = arc, ['snap'] = true})\r\n        end\r\n    end\r\nend\r\n\r\nAIModule.GetTurretRotationOptions = function(ship, mount)\r\n    -- Build up our list of possible rotations.\r\n    local rotation_options = {}\r\n    local turret_type = ship.call('GetTurretType', {['mount'] = mount})\r\n    if turret_type == 'singleturret' then\r\n        rotation_options = {'front', 'right', 'back', 'left'}\r\n    elseif turret_type == 'doubleturret' then\r\n        rotation_options = {'frontback', 'leftright'}\r\n    end\r\n\r\n    -- Remove our current option arc from the list of options.\r\n    local turret_arc = ship.call('GetTurretArc', {['mount'] = mount})\r\n    i = 1\r\n    while i <= #rotation_options do\r\n        if rotation_options[i] == current_arc then\r\n            table.remove(rotation_options, i)\r\n        else\r\n            i = i + 1\r\n        end\r\n    end\r\n\r\n    return rotation_options\r\nend\r\n\r\nAIModule.condition_functions = {}\r\nAIModule.condition_functions.hasShot = function(ship, target, probe, arguments)\r\n    -- TODO: This should favour a shot at the target. To do so we might need to\r\n    -- create a different condition function \"hasShotOnTarget\" and have it occur\r\n    -- before the generic hasShot checks.\r\n    local min_range = 1\r\n    local max_range = 3\r\n    if arguments ~= nil then\r\n        min_range = arguments.minRange or min_range\r\n        max_range = arguments.maxRange or max_range\r\n    end\r\n\r\n    if probe.shot_range == nil then\r\n        probe.shot_range = -1\r\n\r\n        local original_position_rotation = AIModule.GetShipState(ship)\r\n        AIModule.ApplyProbe(ship, probe)\r\n        targets = ArcCheck.GetTargetsInRelationToArc(ship, ship.call('GetAllArcs'))\r\n        targets = table.sieve(targets, AIModule.FilterInArc)\r\n        targets = table.sieve(targets, AIModule.FilterInRange)\r\n\r\n        for _, target in pairs(targets) do\r\n            if probe.shot_range == -1 or target.closest.range < probe.shot_range then\r\n                probe.shot_range = target.closest.range\r\n            end\r\n        end\r\n\r\n        AIModule.SetShipState(ship, original_position_rotation)\r\n    end\r\n\r\n    return probe.shot_range ~= -1 and probe.shot_range >= min_range and probe.shot_range <= max_range\r\nend\r\n\r\nAIModule.condition_functions.inTargetsArc = function(ship, target, probe, arguments)\r\n    if probe.in_targets_arc == nil then\r\n        local original_position_rotation = AIModule.GetShipState(ship)\r\n        AIModule.ApplyProbe(ship, probe)\r\n\r\n        probe.in_targets_arc = false\r\n        targets = ArcCheck.GetTargetsInRelationToArc(target, target.call('GetAllArcs'), {ship})\r\n        targets = table.sieve(targets, AIModule.FilterInArc)\r\n        targets = table.sieve(targets, AIModule.FilterInRange)\r\n        for _, target_info in pairs(targets) do\r\n            probe.in_targets_arc = true\r\n            break\r\n        end\r\n\r\n        AIModule.SetShipState(ship, original_position_rotation)\r\n    end\r\n\r\n    return probe.in_targets_arc\r\nend\r\n\r\nAIModule.condition_functions.targetMoved = function(ship, target, probe, arguments)\r\n    if probe.target_moved == nil then\r\n        local ship_initiative = ship.getTable('Data')['initiative']\r\n        local target_initiative = target.getTable('Data')['initiative']\r\n        probe.target_moved = ship_initiative > target_initiative -- TODO: This assumes that the AI moves first on ties like in HotAC.\r\n    end\r\n\r\n    return probe.target_moved\r\nend\r\n\r\nAIModule.condition_functions.targetLocked = function(ship, target, probe, arguments)\r\n    if probe.target_locked == nil then\r\n        probe.target_locked = AIModule.HasTargetLockOnShip(ship, target)\r\n    end\r\n\r\n    return probe.target_locked\r\nend\r\n\r\nAIModule.condition_functions.targetWithinRange = function(ship, target, probe, arguments)\r\n    local min_range = 1\r\n    local max_range = 3\r\n    if arguments ~= nil then\r\n        min_range = arguments.minRange or min_range\r\n        max_range = arguments.maxRange or max_range\r\n    end\r\n\r\n    if probe.target_range == nil then\r\n        local targets = ArcCheck.GetTargetsInRelationToArc(ship, 'all', {target})\r\n        for _, target_info in pairs(targets) do\r\n            probe.target_range = target_info.closest.range\r\n            break\r\n        end\r\n    end\r\n\r\n    return probe.target_range >= min_range and probe.target_range <= max_range\r\nend\r\n\r\nAIModule.condition_functions.evading = function(ship, target, probe, arguments)\r\n    if probe.evading == nil then\r\n        probe.evading = TokenModule.GetShipTokenCount(ship, 'Evade') > 0\r\n    end\r\n\r\n    if probe.evading ~= true then\r\n        for _, action in pairs(AIModule.current_move.actions) do\r\n            if action == 'evade' then\r\n                probe.evading = true\r\n                break\r\n            end\r\n        end\r\n    end\r\n\r\n    return probe.evading\r\nend\r\n\r\nAIModule.condition_functions.inEnemyArc = function(ship, target, probe, arguments)\r\n    local arc = 'all'\r\n    local wholly_within_arc = true\r\n    local min_enemies = 1\r\n    if arguments ~= nil then\r\n        arc = arguments.arc or arc\r\n        wholly_within_arc = arguments.whollyWithinArc or wholly_within_arc\r\n        min_enemies = arguments.enemyCount or min_enemies\r\n    end\r\n\r\n    -- This counts the number of enemies whose arc we are within, and who are\r\n    -- within our specified arc. This is mainly used for the reinforce action\r\n    -- and the fullfront/fullback arc.\r\n    local condition_index = arc .. ',' .. tostring(wholly_within_arc)\r\n    if probe.num_enemy_arcs == nil or probe.num_enemy_arcs[condition_index] == nil then\r\n        if probe.num_enemy_arcs == nil then\r\n            probe.num_enemy_arcs = {}\r\n        end\r\n        probe.num_enemy_arcs[condition_index] = 0\r\n\r\n        local original_position_rotation = AIModule.GetShipState(ship)\r\n        AIModule.ApplyProbe(ship, probe)\r\n\r\n        -- Get all ships within the specified arc.\r\n        enemies_in_arc = ArcCheck.GetTargetsInRelationToArc(ship, arc)\r\n        enemies_in_arc = table.sieve(enemies_in_arc, AIModule.FilterInArc)\r\n\r\n        -- If we only want ships that are fully within the arc, then we loop\r\n        -- through all adjacent arcs and remove any ship that appears in both.\r\n        -- So, if we checked the fullfront arc, then we reject all ships that\r\n        -- is also int eh fullback arc.\r\n        if wholly_within_arc and AIModule.arc_adjacencies[arc] ~= nil then\r\n            for _, adjacent_arc in pairs(AIModule.arc_adjacencies[arc]) do\r\n                if #enemies_in_arc > 0 then -- Quick check to avoid unnecessary calls to ArcCheck.GetTargetsInRelationToArc\r\n                    enemies_in_adjacent_arc = ArcCheck.GetTargetsInRelationToArc(ship, adjacent_arc)\r\n                    enemies_in_adjacent_arc = table.sieve(targets, AIModule.FilterInArc)\r\n                    enemies_in_arc = table.sieve(enemies_in_arc,\r\n                        -- Return false if this ship appears in arc_targets.\r\n                        function(el)\r\n                            for _, enemy in pairs(enemies_in_adjacent_arc) do\r\n                                if el.ship == enemy.ship then\r\n                                    return false\r\n                                end\r\n                            end\r\n\r\n                            return true\r\n                        end\r\n                    )\r\n                end\r\n            end\r\n        end\r\n\r\n        -- Lastly, we iterate over all targets that remain and check if we are\r\n        -- within their arc. For each ship that can fire at us we increment the\r\n        -- number of arcs.\r\n        for _, enemy_ship in pairs(enemies_in_arc) do\r\n            local enemy_arc = ArcCheck.GetTargetsInRelationToArc(enemy_ship.ship, enemy_ship.ship.call('GetAllArcs'), {ship})\r\n            enemy_arc = table.sieve(enemy_arc, AIModule.FilterInArc)\r\n            enemy_arc = table.sieve(enemy_arc, AIModule.FilterInRange)\r\n            for _ in pairs(enemy_arc) do\r\n                probe.num_enemy_arcs[condition_index] = probe.num_enemy_arcs[condition_index] + 1\r\n                break\r\n            end\r\n        end\r\n\r\n        AIModule.SetShipState(ship, original_position_rotation)\r\n    end\r\n\r\n    return probe.num_enemy_arcs[condition_index] >= min_enemies\r\nend\r\n\r\nAIModule.condition_functions.hasCoordinateTarget = function(ship, target, probe, arguments)\r\n    if probe.action_targets.coordinate == nil then\r\n        probe.action_targets.coordinate = false\r\n\r\n        -- Range two is 200mm, so triple it to 600mm to be sure of not missing\r\n        -- anything once we take bases into account.\r\n        local friendly_ships = ArcCheck.GetShipsWithinRange(ship, 600, false, true)\r\n\r\n        local closest_distance = nil\r\n        for _, friendly_ship in pairs(friendly_ships) do\r\n            local distance = ArcCheck.GetDistanceBetweenShips(ship, friendly_ship)\r\n            if distance ~= nil then\r\n                -- Are we are the right range for coordinate?\r\n                if distance.range >= 1 and distance.range <= 2 then\r\n                    -- Is the ship not stressed?\r\n                    if TokenModule.GetShipTokenCount(friendly_ship, \"Stress\") == 0 then -- TODO: appears to be an error with counting stress tokens?\r\n                        -- Are we closer than the previously closest ship?\r\n                        if closest_distance == nil or closest_distance > distance.length then\r\n                            probe.action_targets.coordinate = friendly_ship\r\n                            closest_distance = distance.length\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    return probe.action_targets.coordinate ~= false\r\nend\r\n\r\n\r\n\r\n\r\nMoveData = {}\r\n\r\n-- Lookup table for most of the moves\r\n-- Generated using Matlab, source: https://github.com/tjakubo2/xwing_traj\r\n-- Stored on another object to reduce clutter, passsed on load\r\nMoveData.LUT = {}\r\nMoveData.onLoad = function()\r\n    for k,obj in pairs(getAllObjects()) do\r\n        if obj.getName() == 'MoveLUT' then\r\n            MoveData.LUT.Parse(obj)\r\n        end\r\n    end\r\nend\r\nEventSub.Register('onLoad', MoveData.onLoad)\r\nMoveData.LUT.Parse = function(object)\r\n    MoveData.LUT.Data = object.call('ParseLUT', {})\r\nend\r\n\r\n-- Max part value for partial moves\r\n-- Part equal to this is a full move\r\n-- Value is largely irrelevant since part can be a fraction (any kind of number really)\r\nMoveData.partMax = 1000\r\n\r\n-- Construct data from a lookup table entry\r\n-- Move info provided from MoveData.DecodeInfo\r\n-- Return format: {xPos_offset, yPos_offset, zPos_offset, yRot_offset}\r\n-- Linear interpolation between points in lookup table\r\n--\r\n-- Only returns data for RIGHT direction move (if applies)\r\n-- Doesn't take any segnor, talon versions etc into considerations\r\n-- Above things are considered MODIFIERS with functions to apply them defined futher\r\nMoveData.LUT.ConstructData = function(moveInfo, part)\r\n    if part == nil then\r\n        part = MoveData.partMax\r\n    end\r\n    if moveInfo.speed == 0 and moveInfo.type == 'straight' then\r\n        return {0, 0, 0, 0}\r\n    end\r\n    part = math.clamp(part, 0, MoveData.partMax)\r\n    local LUTtable = MoveData.LUT.Data[moveInfo.size .. 'Base'][moveInfo.type][moveInfo.speed]\r\n    local LUTindex = (part/MoveData.partMax)*LUTtable.dataNum\r\n    if LUTindex < 1 then LUTindex = 1 end\r\n    -- Interpolation between two nearest indexes\r\n    local aProp = LUTindex - math.floor(LUTindex)\r\n    local bProp = 1 - aProp\r\n    local outPos = Vect.Sum(Vect.Scale(LUTtable.posXZ[math.floor(LUTindex)], bProp), Vect.Scale(LUTtable.posXZ[math.ceil(LUTindex)], aProp))\r\n    local outRot = (LUTtable.rotY[math.floor(LUTindex)] * bProp) + (LUTtable.rotY[math.ceil(LUTindex)] * aProp)\r\n\r\n    local outData = {outPos[1], 0, outPos[2], outRot}\r\n    return outData\r\nend\r\n\r\n-- Get true move length from LUT data *IN MILIMETERS*\r\n-- True as in trajectory length, not distance between start and end\r\n-- (stored in LUT to reduce load here)\r\nMoveData.MoveLength = function(moveInfo)\r\n    if moveInfo.traits.part == false then\r\n        return nil\r\n    elseif moveInfo.speed == 0 then\r\n        return 0\r\n    else\r\n        return MoveData.LUT.Data[moveInfo.size .. 'Base'][moveInfo.type][moveInfo.speed].length\r\n    end\r\nend\r\n\r\n\r\n\r\n-- Convert an entry from milimeters to in-game units\r\nMoveData.ConvertDataToIGU = function(entry)\r\n    return {Convert_mm_igu(entry[1]), Convert_mm_igu(entry[2]), Convert_mm_igu(entry[3]), entry[4]}\r\nend\r\n\r\n-- Change an entry to a left-heading version\r\nMoveData.LeftVariant = function(entry)\r\n    return {-1*entry[1], entry[2], entry[3], -1*entry[4]}\r\nend\r\n\r\n-- Change an entry to be k-turn like (+180deg rot at the end)\r\nMoveData.TurnAroundVariant = function(entry)\r\n    return {entry[1], entry[2], entry[3], entry[4]+180}\r\nend\r\n\r\n-- Change an entry to be talon-roll like (+90deg INWARD rot at the end)\r\nMoveData.TurnInwardVariant = function(entry)\r\n    local dir = 0\r\n    if entry[1] > 0 then dir = 90\r\n    elseif entry[1] < 0 then dir = -90 end\r\n    return {entry[1], entry[2], entry[3], entry[4]+dir}\r\nend\r\n\r\n-- Change an entry to be reverse type\r\nMoveData.ReverseVariant = function(entry)\r\n    return {entry[1], entry[2], -1*entry[3], -1*entry[4]}\r\nend\r\n\r\n-- Rotate an entry by given degrees\r\n-- Helps define rolls as straights rotated 90deg sideways etc\r\nMoveData.RotateEntry = function(entry, angDeg)\r\n    local rotEntry = Vect.RotateDeg(entry, angDeg)\r\n    return {rotEntry[1], rotEntry[2], rotEntry[3], entry[4]+angDeg}\r\nend\r\n\r\n-- Apply move modifiers that happen even if move is partial\r\nMoveData.ApplyBasicModifiers = function(entry, info)\r\n    local out = table.shallowcopy(entry)\r\n    if (info.type == 'turnSlip' or info.type == 'bankSlip') then\r\n        if info.dir == 'right' then\r\n            out = MoveData.LeftVariant(out)\r\n        end\r\n    elseif info.dir == 'left' then\r\n        out = MoveData.LeftVariant(out)\r\n    end\r\n    if info.extra == 'reverse' then\r\n        out = MoveData.ReverseVariant(out)\r\n    end\r\n    return out\r\nend\r\n\r\n-- Apply move modifiers that only happen if move is performed fully\r\nMoveData.ApplyFinalModifiers = function(entry, info)\r\n    local out = table.shallowcopy(entry)\r\n    if info.extra == 'talon' then\r\n        out = MoveData.TurnInwardVariant(out)\r\n    elseif info.extra == 'koiogran' or info.extra == 'segnor' then\r\n        out = MoveData.TurnAroundVariant(out)\r\n    end\r\n    return out\r\nend\r\n\r\n\r\n-- Decode a move command into table with type, direction, speed etc info\r\n-- TODO make a lookup table?\r\nMoveData.DecodeInfo = function (move_code, ship)\r\n    local info = {\r\n                                        -- [option1] [option2] ... [optionN]  // [errorOption]\r\n                    type='invalid',     -- [straight] [bank] [turn] [roll] [viper] [cloak] [echo] [bankSlip] [ turnSlip]//  [invalid]\r\n                    speed=nil,          -- [1] [2] [3] [4] [5]  //  [nil]\r\n                    dir=nil,            -- [left] [right] [nil]\r\n                    extra=nil,          -- [koiogran] [segnor] [talon] [reverse] [straight] [forward] [backward] [nil]\r\n                    traits =\r\n                    {\r\n                        full=false,     -- [true] [false] if this move can be attempted as a full move\r\n                        part=false      -- [true] [false] if this move can be attempted as a partial move\r\n                    },\r\n                    size=nil,           -- [small] [large]  //  [nil]\r\n                    note=nil,           -- [string] eg. 'banked xxx'       //  [nil]\r\n                    collNote=nil,       -- [string] eg. 'tried to do xxx'  //  [nil]\r\n                    code=move_code      -- [string] eg. 'be2'              //  [nil]\r\n    }\r\n    if ship ~= nil then\r\n        info.size = ship.getTable(\"Data\").Size or 'small'\r\n    else\r\n        info.size = 'small'\r\n    end\r\n    -- Straights and koiograns, regular stuff\r\n    if move_code:sub(1,1) == 's' or move_code:sub(1,1) == 'k' then\r\n        info.type = 'straight'\r\n        info.speed = tonumber(move_code:sub(2,2))\r\n        info.traits.full = true\r\n        info.traits.part = true\r\n        if move_code:sub(1,1) == 'k' then\r\n            info.extra = 'koiogran'\r\n            info.note = 'koiogran turned ' .. info.speed\r\n            info.collNote = 'tried to koiogran turn ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 'r' then\r\n            info.extra = 'reverse'\r\n            info.note = 'flew reverse ' .. info.speed\r\n            info.collNote = 'tried to fly reverse ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 'b' then\r\n            info.traits.part = false\r\n            local boostSpd = ''\r\n            if info.speed > 1 then\r\n                boostSpd = ' ' .. info.speed\r\n            end\r\n            info.note = 'boosted straight' .. boostSpd\r\n            info.collNote = 'tried to boost straight' .. boostSpd\r\n        else\r\n            info.note = 'flew straight ' .. info.speed\r\n            info.collNote = 'tried to fly straight ' .. info.speed\r\n        end\r\n        if info.speed == 0 then\r\n            info.traits.part = false\r\n            if info.extra == 'koiogran' then\r\n                info.note = 'turned around'\r\n            else\r\n                info.note = 'is stationary'\r\n            end\r\n        end\r\n    -- Banks, regular stuff\r\n    elseif move_code:sub(1,1) == 'a' then\r\n        info.type = 'adjust'\r\n        info.speed = tonumber(move_code:sub(2,2))\r\n        info.traits.full = true\r\n        info.traits.part = false\r\n        if info.speed == 1 then\r\n            info.note = 'adjusted forward'\r\n            info.collNote = 'tried to adjust forward'\r\n        else\r\n            info.note = 'adjusted backward'\r\n            info.collNote = 'tried to adjust backward'\r\n        end\r\n    elseif move_code:sub(1,1) == 'b' then\r\n        info.type = 'bank'\r\n        info.dir = 'right'\r\n        info.speed = tonumber(move_code:sub(3,3))\r\n        info.traits.full = true\r\n        info.traits.part = true\r\n        if move_code:sub(2,2) == 'l' or move_code:sub(2,2) == 'e' then\r\n            info.dir = 'left'\r\n        end\r\n        if move_code:sub(-1,-1) == 's' then\r\n            info.extra = 'segnor'\r\n            info.note = 'segnor looped ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to segnor loop ' .. info.dir .. ' ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 't' then\r\n            info.extra = 'talon'\r\n            info.note = 'talon rolled (bank template) ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to talon roll ' .. info.dir .. ' ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 'r' then\r\n            info.extra = 'reverse'\r\n            info.note = 'flew reverse bank ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to fly reverse bank ' .. info.dir .. ' ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 'z' then\r\n            info.type = 'bankSlip'\r\n            info.extra = 'bankSlip'\r\n            info.note = 'sliped bank ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to slip bank ' .. info.dir .. ' ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 'b' then\r\n            info.traits.part = false\r\n            local boostSpd = ''\r\n            if info.speed > 1 then\r\n                boostSpd = ' ' .. info.speed\r\n            end\r\n            info.note = 'boosted ' .. info.dir .. boostSpd\r\n            info.collNote = 'tried to boost ' .. info.dir .. boostSpd\r\n        else\r\n            info.note = 'banked ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to bank ' .. info.dir .. ' ' .. info.speed\r\n        end\r\n    -- Turns, regular stuff\r\n    elseif move_code:sub(1,1) == 't' then\r\n        if info.size == 'huge' then\r\n            info.note = \"tried to turn, but huge ships can't do that\"\r\n            info.collNote = \"tried to turn, but huge ships can't do that\"\r\n            return info\r\n        end\r\n        info.type = 'turn'\r\n        info.dir = 'right'\r\n        info.speed = tonumber(move_code:sub(3,3))\r\n        info.traits.full = true\r\n        info.traits.part = true\r\n        if move_code:sub(2,2) == 'l' or move_code:sub(2,2) == 'e' then\r\n            info.dir = 'left'\r\n        end\r\n        if move_code:sub(-1,-1) == 't' then\r\n            info.type = 'talon'\r\n            info.note = 'talon rolled ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to talon roll ' .. info.dir .. ' ' .. info.speed\r\n            if move_code:sub(-2,-2) == 'f' then\r\n                info.type = 'talonF'\r\n                info.note = 'talon rolled ' .. info.dir .. ' ' .. info.speed .. 'adjusting Forward'\r\n                info.collNote = 'tried to talon roll ' .. info.dir .. ' ' .. info.speed .. 'adjusting Forward'\r\n            elseif move_code:sub(-2,-2) == 'b' then\r\n                info.type = 'talonB'\r\n                info.note = 'talon rolled ' .. info.dir .. ' ' .. info.speed .. 'adjusting Backward'\r\n                info.collNote = 'tried to talon roll ' .. info.dir .. ' ' .. info.speed .. 'adjusting Backward'\r\n            end\r\n        elseif move_code:sub(-1,-1) == 's' then\r\n            info.extra = 'segnor'\r\n            info.note = 'segnor looped (turn template) ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to segnor loop (turn template) ' .. info.dir .. ' ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 'r' then\r\n            info.extra = 'reverse'\r\n            info.note = 'flew reverse turn ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to fly reverse turn ' .. info.dir .. ' ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 'z' then\r\n            info.type = 'turnSlip'\r\n            info.extra = 'turnSlip'\r\n            info.note = 'sliped turn ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to slip turn ' .. info.dir .. ' ' .. info.speed\r\n        elseif move_code:sub(-1,-1) == 'b' then\r\n            info.traits.part = false\r\n            local boostSpd = ''\r\n            if info.speed > 1 then\r\n                boostSpd = ' ' .. info.speed\r\n            end\r\n            info.note = 'boosted (turn template) ' .. info.dir .. boostSpd\r\n            info.collNote = 'tried to boost (turn template) ' .. info.dir .. boostSpd\r\n        else\r\n            info.note = 'turned ' .. info.dir .. ' ' .. info.speed\r\n            info.collNote = 'tried to turn ' .. info.dir .. ' ' .. info.speed\r\n        end\r\n        if tonumber(move_code:sub(3,3)) == 4 then\r\n            info.traits.part = false\r\n            info.note = 'Pivoted ' .. info.dir\r\n            info.collNote = 'tried pivoting ' .. info.dir\r\n        end\r\n    -- New Barrel Roll\r\n    elseif move_code:sub(1,1) == 'r' then\r\n        info.type = 'roll'\r\n        info.dir = 'right'\r\n        if move_code:sub(2,2) == 'l' or move_code:sub(2,2) == 'e' then\r\n            info.dir = 'left'\r\n        end\r\n        info.collNote = 'tried barrel rolling ' .. info.dir\r\n        info.speed = tonumber(move_code:sub(3,3))\r\n        info.traits.full = true\r\n        info.traits.part = false\r\n        if tonumber(move_code:sub(3,3)) == 1 then\r\n            info.note = 'barrel rolled ' .. info.dir .. ' forward'\r\n            info.collNote = 'tried barrel rolling ' ..info.dir .. ' forward'\r\n        elseif tonumber(move_code:sub(3,3)) == 2 then\r\n            info.note = 'barrel rolled ' .. info.dir .. ' straight'\r\n            info.collNote = 'tried barrel rolling ' ..info.dir .. ' straight'\r\n        elseif tonumber(move_code:sub(3,3)) == 3 then\r\n            info.note = 'barrel rolled ' .. info.dir .. ' backward'\r\n            info.collNote = 'tried barrel rolling ' ..info.dir .. ' backward'\r\n        end\r\n\r\n    -- New Viper roll\r\n    elseif move_code:sub(1,1) == 'v' then\r\n        info.type = 'viper'\r\n        info.dir = 'right'\r\n        if move_code:sub(2,2) == 'l' or move_code:sub(2,2) == 'e' then\r\n            info.dir = 'left'\r\n        end\r\n        info.speed = tonumber(move_code:sub(-1,-1))\r\n        info.traits.full = true\r\n        info.traits.part = false\r\n        if move_code:sub(3,3) == 'f' then\r\n            info.type = 'viperF'\r\n            info.extra = 'forward'\r\n        else\r\n            info.type = 'viperB'\r\n            info.extra = 'backward'\r\n        end\r\n        if tonumber(move_code:sub(-1,-1)) == 1 then\r\n            info.note = 'barrel rolled ' .. info.dir .. ' ' .. info.extra .. ' adjusting forward'\r\n            info.collNote = 'tried barrel rolling ' ..info.dir .. ' ' .. info.extra\r\n        elseif tonumber(move_code:sub(-1,-1)) == 2 then\r\n            info.note = 'barrel rolled ' .. info.dir .. ' ' .. info.extra .. ' adjusting straight'\r\n            info.collNote = 'tried barrel rolling ' ..info.dir .. ' ' .. info.extra\r\n        elseif tonumber(move_code:sub(-1,-1)) == 3 then\r\n            info.note = 'barrel rolled ' .. info.dir .. ' ' .. info.extra .. ' adjusting backward'\r\n            info.collNote = 'tried barrel rolling ' ..info.dir .. ' ' .. info.extra\r\n        end\r\n        -- New Decloak\r\n    elseif move_code:sub(1,1) == 'c' then\r\n        info.type = 'deCloak'\r\n        info.dir = 'right'\r\n        if move_code:sub(2,2) == 'l' or move_code:sub(2,2) == 'e' then\r\n            info.dir = 'left'\r\n        end\r\n        info.speed = tonumber(move_code:sub(-1,-1))\r\n        info.traits.full = true\r\n        info.traits.part = false\r\n        if tonumber(move_code:sub(-1,-1)) == 1 then\r\n            info.note = 'decloaked ' .. info.dir .. ' forward'\r\n            info.collNote = 'tried decloaking ' ..info.dir .. ' forward'\r\n        elseif tonumber(move_code:sub(-1,-1)) == 2 then\r\n            info.note = 'decloaked ' .. info.dir .. ' straight'\r\n            info.collNote = 'tried decloaking ' ..info.dir .. ' straight'\r\n        elseif tonumber(move_code:sub(-1,-1)) == 3 then\r\n            info.note = 'decloaked ' .. info.dir .. ' backward'\r\n            info.collNote = 'tried decloaking ' ..info.dir .. ' backward'\r\n        end\r\n        if move_code:sub(2,2) == 's' then\r\n            info.type = 'straight'\r\n            if info.size == \"small\" then\r\n                info.speed = 2\r\n            else\r\n                info.speed = 1\r\n            end\r\n            info.dir = nil\r\n            info.note = 'decloaked forward'\r\n            info.collNote = 'tried decloacking forward'\r\n        end\r\n    --New Echo\r\n    elseif move_code:sub(1,1) == 'e' then\r\n        info.type = 'Echo'\r\n        info.dir = 'right'\r\n        if move_code:sub(2,2) == 'l' or move_code:sub(2,2) == 'e' then\r\n            info.dir = 'left'\r\n        end\r\n        info.speed = tonumber(move_code:sub(4,4))\r\n        info.traits.full = true\r\n        info.traits.part = false\r\n        if move_code:sub(3,3) == 'f' then\r\n            info.type = 'echoF'\r\n            info.extra = 'forward'\r\n        elseif move_code:sub(3,3) == 'b' then\r\n            info.type = 'echoB'\r\n            info.extra = 'backward'\r\n        end\r\n        if tonumber(move_code:sub(4,4)) == 1 then\r\n            info.note = 'decloacked ' .. info.dir .. ' ' .. info.extra .. ' adjusting forward'\r\n            info.collNote = 'tried decloacking ' ..info.dir .. ' ' .. info.extra\r\n        elseif tonumber(move_code:sub(4,4)) == 2 then\r\n            info.note = 'decloacked ' .. info.dir .. ' ' .. info.extra .. ' adjusting straight'\r\n            info.collNote = 'tried decloacking ' ..info.dir .. ' ' .. info.extra\r\n        elseif tonumber(move_code:sub(4,4)) == 3 then\r\n            info.note = 'decloacked ' .. info.dir .. ' ' .. info.extra .. ' adjusting backward'\r\n            info.collNote = 'tried decloacking ' ..info.dir .. ' ' .. info.extra\r\n        end\r\n        if move_code:sub(2,2) == 's' then\r\n            info.type = 'bank'\r\n            info.speed = 2\r\n            info.note = 'decloaked banking right'\r\n            info.collNote = 'tried decloacking banking right'\r\n            if move_code:sub(3,3) == 'l' or move_code:sub(3,3) == 'e' then\r\n                info.dir = 'left'\r\n                info.note = 'decloaked banking left'\r\n                info.collNote = 'tried decloacking banking left'\r\n            end\r\n        end\r\n    -- Barrel rolls and decloaks, spaghetti\r\nelseif move_code:sub(1,2) == 'ch' or move_code:sub(1,2) == 'vr' then\r\n        -- Echo's fucking bullshit which goes against ALL the standards\r\n        -- StarViper handled the same\r\n        info.type = 'echo'\r\n        if move_code:sub(1,2) == 'vr' then\r\n            info.type = 'viper'\r\n        end\r\n        info.dir = 'right'\r\n        info.extra = 'forward'\r\n        if move_code:sub(4,4) == 'b' then\r\n            info.extra = 'backward'\r\n        end\r\n        if move_code:sub(3,3) == 'l' or move_code:sub(3,3) == 'e' then\r\n            -- Ones going right/left\r\n            info.dir = 'left'\r\n        elseif move_code:sub(3,3) == 's' then\r\n            -- Ones going forward\r\n            info = MoveData.DecodeInfo('b' .. move_code:sub(4,4) .. '2', ship)\r\n            info.traits.part = false\r\n            info.code = move_code\r\n        end\r\n        if move_code:sub(1,2) == 'ch' then\r\n            -- Echo dedscriptions\r\n            if info.type == 'echo' then\r\n                info.note = 'dechocloaked ' .. info.dir .. ' ' .. info.extra\r\n                info.collNote = 'tried to dechocloak ' .. info.dir .. ' ' .. info.extra\r\n            else\r\n                info.note = 'dechocloaked forward ' .. info.dir\r\n                info.collNote = 'tried to dechocloak forward ' .. info.dir\r\n            end\r\n        else\r\n            -- SV descriptions\r\n            info.note = 'bank rolled ' .. info.dir .. ' ' .. info.extra\r\n            info.collNote = 'tried to bank roll ' .. info.dir .. ' ' .. info.extra\r\n        end\r\n        -- Special 2nd adjust move\r\n        if move_code == 'chadj' or move_code == 'vradj' then\r\n            info.extra = 'adjust'\r\n        end\r\n    elseif move_code:sub(1,1) == 'x' or move_code:sub(1,1) == 'c' then\r\n        -- Rolls\r\n        info.type = 'roll'\r\n        info.dir = 'right'\r\n        info.speed = 1\r\n        if move_code:sub(2,2) == 'l' or move_code:sub(2,2) == 'e' then\r\n            info.dir = 'left'\r\n        end\r\n        info.note = 'barrel rolled'\r\n        info.collNote = 'tried to barrel roll'\r\n        -- Decloaks\r\n        -- Straigh decloak is treated as a roll before, now just return straight 2 data\r\n        if move_code:sub(2,2) == 's' then\r\n            info.type = 'straight'\r\n            info.speed = 2\r\n            info.traits.full = true\r\n            info.note = 'decloaked forward'\r\n            info.collNote = 'tried to decloak forward'\r\n            info.dir = nil\r\n        -- Side decloak is a barrel roll, but with 2 speed\r\n        elseif move_code:sub(1,1) == 'c' then\r\n            info.note = 'decloaked'\r\n            info.collNote = 'tried to decloak'\r\n            info.speed = 2\r\n        end\r\n\r\n        -- Forward/backward modifiers\r\n        if info.type ~= 'straight' then\r\n            if move_code:sub(-1,-1) == 'f' then\r\n                info.extra = 'forward'\r\n                info.note = info.note .. ' forward ' .. info.dir\r\n                info.collNote = info.collNote .. ' forward ' .. info.dir\r\n            elseif move_code:sub(-1,-1) == 'b' then\r\n                info.extra = 'backward'\r\n                info.note = info.note .. ' backward ' .. info.dir\r\n                info.collNote = info.collNote .. ' forward ' .. info.dir\r\n            else\r\n                info.note = info.note .. ' ' .. info.dir\r\n                info.collNote = info.collNote .. ' ' .. info.dir\r\n            end\r\n        end\r\n    end\r\n    return info\r\nend\r\n\r\n-- Get the offset data for a full move\r\n-- Return format: {xPos_offset, yPos_offset, zPos_offset, yRot_offset}\r\nMoveData.DecodeFullMove = function(move_code, ship)\r\n    local data = {}\r\n    local info = MoveData.DecodeInfo(move_code, ship)\r\n    if info.type == 'invalid' then\r\n        print('MoveData.DecodeFullMove: invalid move type')\r\n        return {0, 0, 0, 0}\r\n    else\r\n        data = MoveData.DecodePartMove(move_code, ship, MoveData.partMax)\r\n    end\r\n    data = MoveData.ApplyFinalModifiers(data, info)\r\n    return data\r\nend\r\n\r\n-- Get the offset data for a partial move\r\n-- Return format: {xPos_offset, yPos_offset, zPos_offset, yRot_offset}\r\nMoveData.DecodePartMove = function(move_code, ship, part)\r\n    local data = {}\r\n    local info = MoveData.DecodeInfo(move_code, ship)\r\n    part = math.clamp(part, 0, MoveData.partMax)\r\n    if info.type == 'invalid' then\r\n        print('MoveData.DecodePartMove: invalid move type')\r\n        return {0, 0, 0, 0}\r\n    end\r\n    data = MoveData.LUT.ConstructData(info, part)\r\n    data = MoveData.ApplyBasicModifiers(data, info)\r\n    return data\r\nend\r\n\r\n\r\n-- END MOVEMENT DATA MODULE\r\n--------\r\n\r\n\r\n--------\r\n-- MAIN MOVEMENT MODULE\r\n-- Lets us move ships around and handles what comes with moving\r\n\r\nMoveModule = {}\r\n\r\n-- Convert a typical entry from MoveData functions\r\n-- (this: {xPos_offset, yPos_offset, zPos_offset, yRot_offset} )\r\n-- to a real ship position in world\r\nMoveModule.EntryToPos = function(entry, shipPos)\r\n    local basePos = nil\r\n    local baseRot = nil\r\n    if type(shipPos) == 'userdata' then\r\n        basePos = shipPos.getPosition()\r\n        baseRot = shipPos.getRotation()\r\n    elseif type(shipPos) == 'table' then\r\n        basePos = shipPos.pos\r\n        baseRot = shipPos.rot\r\n    end\r\n    local finalPos = MoveData.ConvertDataToIGU(entry)\r\n    local finalRot = entry[4] + baseRot[2]\r\n    finalPos = Vect.RotateDeg(finalPos, baseRot[2]+180)\r\n    finalPos = Vect.Sum(basePos, finalPos)\r\n    return {pos=finalPos, rot={0, finalRot, 0}}\r\nend\r\n\r\n-- Get the position for a ship if it did a full move\r\n-- Returned position and rotation are ready to feed TTS functions with\r\nMoveModule.GetFullMove = function(move, ship)\r\n    local entry = MoveData.DecodeFullMove(move, ship)\r\n    return MoveModule.EntryToPos(entry, ship)\r\nend\r\n\r\n-- Get the position for a ship if it did a part of a move\r\n-- Returned position and rotation are ready to feed TTS functions with\r\nMoveModule.GetPartMove = function(move, ship, part)\r\n    local entry = MoveData.DecodePartMove(move, ship, part)\r\n    return MoveModule.EntryToPos(entry, ship)\r\nend\r\n\r\n\r\n-- HISTORY HANDLING:\r\n-- Lets us undo, redo and save positions a ship was seen at\r\n\r\n-- History table: {ship=shipRef, actKey=keyOfHistoryEntryShipWasLastSeenAt (._.), history=entryList}\r\n-- Entry list: {entry1, entry2, entry3, ...}\r\n-- Entry: {pos=position, rot=rotation, move=moveThatGotShipHere, part=partOfMovePerformed}\r\nMoveModule.moveHistory = {}\r\n\r\n-- Hostory-related commads\r\nXW_cmd.AddCommand('[qz]', 'historyHandle')\r\nXW_cmd.AddCommand('undo', 'historyHandle')\r\nXW_cmd.AddCommand('redo', 'historyHandle')\r\nXW_cmd.AddCommand('keep', 'historyHandle')\r\n\r\n-- Return history of a ship\r\nMoveModule.GetHistory = function(ship)\r\n    for k,hist in pairs(MoveModule.moveHistory) do\r\n        if hist.ship == ship then\r\n            return hist\r\n        end\r\n    end\r\n    table.insert(MoveModule.moveHistory, {ship=ship, actKey=0, history={}})\r\n    return MoveModule.GetHistory(ship)\r\nend\r\n\r\n-- Erase all history \"forward\" from the current state\r\n-- Happens when you undo and then do a move - all positions you undid are lost\r\nMoveModule.ErasePastCurrent = function(ship)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    local k=1\r\n    while histData.history[histData.actKey + k] ~= nil do\r\n        histData.history[histData.actKey + k] = nil\r\n        k = k+1\r\n    end\r\nend\r\n\r\n-- Print history, just for debug\r\nMoveModule.PrintHistory = function(ship)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    if histData.actKey == 0 then\r\n        print(ship.getName() .. ': NO HISTORY')\r\n    else\r\n        print(ship.getName() .. '\\'s HISTORY:')\r\n        local k=1\r\n        while histData.history[k] ~= nil do\r\n            local entry = histData.history[k]\r\n            local typeStr = ' (' .. entry.finType\r\n            if entry.part ~= nil then\r\n                typeStr = typeStr .. ':' .. entry.part .. ')'\r\n            else\r\n                typeStr = typeStr .. ')'\r\n            end\r\n            if k == histData.actKey then\r\n                print(' >> ' .. entry.move .. typeStr)\r\n            else\r\n                print(' -- ' .. entry.move .. typeStr)\r\n            end\r\n            k = k+1\r\n        end\r\n        print(' -- -- -- -- ')\r\n    end\r\nend\r\n\r\n-- Save <some> ship position to the history\r\n-- Saves on the position after current and deletes any past that\r\nMoveModule.AddHistoryEntry = function(ship, entry)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    histData.actKey = histData.actKey+1\r\n    histData.history[histData.actKey] = entry\r\n    MoveModule.ErasePastCurrent(ship)\r\nend\r\n\r\n-- How much position can be offset to be considered 'same'\r\nMoveModule.undoPosCutoff = Convert_mm_igu(1)\r\n-- How much rotation can be offset to be considered 'same'\r\nMoveModule.undoRotCutoffDeg = 1\r\n\r\n-- Check if the ship is on the curent history position (tolerance above)\r\nMoveModule.IsAtSavedState = function(ship)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    if histData.actKey > 0 then\r\n        local currEntry = histData.history[histData.actKey]\r\n        local dist = Vect.Distance(ship.getPosition(), currEntry.pos)\r\n        local angDiff = math.abs(ship.getRotation()[2] - currEntry.rot[2])\r\n        if math.abs(angDiff) > 180 then\r\n            angDiff = math.abs(angDiff - math.sgn(angDiff)*360)\r\n        end\r\n        return (dist < MoveModule.undoPosCutoff and angDiff < MoveModule.undoRotCutoffDeg)\r\n    end\r\n    return false\r\nend\r\n\r\n-- Save curent ship position to the history\r\n-- Can be quiet when not explicitly called by the user\r\nMoveModule.SaveStateToHistory = function(ship, beQuiet)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    -- Don't add an entry if it's current position/rotation\r\n    if MoveModule.IsAtSavedState(ship) then\r\n        if beQuiet ~= true then\r\n            AnnModule.Announce({type='historyHandle', note='already has current position saved'}, 'all', ship)\r\n        end\r\n    else\r\n        local entry = {pos=ship.getPosition(), rot=ship.getRotation(), move='position save', part=nil, finType='special'}\r\n        MoveModule.AddHistoryEntry(ship, entry)\r\n        if beQuiet ~= true then\r\n            AnnModule.Announce({type='historyHandle', note='stored current position'}, 'all', ship)\r\n        end\r\n    end\r\nend\r\n\r\n-- Move a ship to a previous state from the history\r\n-- Return true if action was taken\r\n-- Return false if there is no more data\r\nMoveModule.UndoMove = function(ship)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    local announceInfo = {type='historyHandle'}\r\n    -- No history\r\n    if histData.actKey == 0 then\r\n        announceInfo.note = 'has no more moves to undo'\r\n    else\r\n        -- There is history\r\n        local currEntry = histData.history[histData.actKey]\r\n        -- current position not matching history\r\n        if not MoveModule.IsAtSavedState(ship) then\r\n            MoveModule.MoveShip(ship, {finPos={pos=currEntry.pos, rot=currEntry.rot}, noSave=true})\r\n            announceInfo.note = 'moved to the last saved position'\r\n        else\r\n        -- current position matching current histor\r\n            if histData.actKey > 1 then\r\n                local undidMove = currEntry.move\r\n                histData.actKey = histData.actKey - 1\r\n                currEntry = histData.history[histData.actKey]\r\n                MoveModule.MoveShip(ship, {finPos={pos=currEntry.pos, rot=currEntry.rot}, noSave=true})\r\n                announceInfo.note = 'performed an undo of (' .. undidMove .. ')'\r\n            else\r\n                -- There is no data to go back to\r\n                announceInfo.note = 'has no more moves to undo'\r\n            end\r\n        end\r\n    end\r\n    AnnModule.Announce(announceInfo, 'all', ship)\r\n    return shipMoved\r\nend\r\n\r\n-- Move a ship to next state from the history\r\nMoveModule.RedoMove = function(ship)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    local announceInfo = {type='historyHandle'}\r\n    -- No history\r\n    if histData.actKey == 0 then\r\n        announceInfo.note = 'has no more moves to redo'\r\n    else\r\n        -- There is history\r\n        if histData.history[histData.actKey+1] == nil then\r\n            -- No more moves forward\r\n            announceInfo.note = 'has no more moves to redo'\r\n        else\r\n            -- Move forward\r\n            histData.actKey = histData.actKey+1\r\n            local currEntry = histData.history[histData.actKey]\r\n            MoveModule.MoveShip(ship, {finPos={pos=currEntry.pos, rot=currEntry.rot}, noSave=true})\r\n            announceInfo.note = 'performed a redo of (' .. currEntry.move .. ')'\r\n        end\r\n    end\r\n    AnnModule.Announce(announceInfo, 'all', ship)\r\n    return shipMoved\r\nend\r\n\r\n-- Get the last move code from ship history\r\n-- Always returns an \"entry\" table, if there's no move, move key is 'none'\r\nMoveModule.GetLastMove = function(ship)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    if histData.actKey < 1 then\r\n        return {move='none'}\r\n    else\r\n        return table.shallowcopy(histData.history[histData.actKey])\r\n    end\r\nend\r\n\r\n-- Get some old move from ship history (arg in number of moves back)\r\n-- Always returns an \"entry\" table, if there's no move, move key is 'none'\r\nMoveModule.GetOldMove = function(ship, numMovesBack)\r\n    local histData = MoveModule.GetHistory(ship)\r\n    if histData.actKey-numMovesBack < 1 then\r\n        return {move='none'}\r\n    else\r\n        return table.shallowcopy(histData.history[histData.actKey-numMovesBack])\r\n    end\r\nend\r\n\r\n-- THING THAT ALLOWS US TOR ESTORE SHIP POSITION AFTER IT WAS DELETED\r\n-- Table of deleted ships last positions\r\nMoveModule.emergencyRestore = {}\r\n-- Pointer at the most recently added restore entry\r\nMoveModule.restoreBufferPointer = 0\r\n-- Max size of the restore entry table\r\nMoveModule.restoreBufferSize = 25\r\n-- Restore command\r\nXW_cmd.AddCommand('restore#[1-9][0-9]?', 'historyHandle')\r\n\r\n-- Try to restore some ship position to an entry with given key\r\nMoveModule.Restore = function(ship, key)\r\n    if #MoveModule.emergencyRestore < key or key <= 0 then\r\n        AnnModule.Announce({type='historyHandle', note='Restore key (number after the #) invalid'}, 'all')\r\n        return false\r\n    else\r\n        local data = MoveModule.emergencyRestore[key]\r\n        ship.setPosition(data.savedPos.pos)\r\n        ship.setRotation(data.savedPos.rot)\r\n        MoveModule.SaveStateToHistory(ship, true)\r\n        AnnModule.Announce({type='historyHandle', note='has been restored to position ' .. data.srcName .. ' was last seen at'}, 'all', ship)\r\n        return true\r\n    end\r\nend\r\n\r\n-- Save some restore data and notify the user of it\r\nMoveModule.AddRestorePoint = function(entry)\r\n    local newKey = MoveModule.restoreBufferPointer + 1\r\n    if newKey > MoveModule.restoreBufferSize then\r\n        newKey = 1\r\n    end\r\n    AnnModule.Announce({type='historyHandle', note=entry.srcName .. '\\'s ship has been deleted - you can respawn the model and use \\'restore#' .. newKey .. '\\' command to restore its position'}, 'all')\r\n    MoveModule.emergencyRestore[newKey] = entry\r\n    MoveModule.restoreBufferPointer = newKey\r\nend\r\n\r\n-- Handle destroyed objects\r\n-- Create a restore entry from last set position in history\r\n-- Delete history if present\r\nMoveModule.onObjectDestroyed = function(obj)\r\n    if not ObjType.IsOfType(obj, 'ship') then return end\r\n    if MoveModule.GetLastMove(obj).move ~= 'none' then\r\n        local lastMove = MoveModule.GetLastMove(obj)\r\n        MoveModule.AddRestorePoint({srcName=obj.getName(), savedPos={pos=lastMove.pos, rot=lastMove.rot}})\r\n    end\r\n    for k,hist in pairs(MoveModule.moveHistory) do\r\n        if hist.ship == ship then\r\n            table.remove(MoveModule.moveHistory, k)\r\n            break\r\n        end\r\n    end\r\nend\r\n\r\n-- Get the history table with \"serialized\" positions/rotations\r\n-- I hate this so much\r\n-- Devs, fix your shit, goddamnit\r\nMoveModule.GetSaveData = function()\r\n    local currHistory = {}\r\n    for k,hist in pairs(MoveModule.moveHistory) do\r\n        if hist.history[1] ~= nil then\r\n            local currEntry = MoveModule.GetLastMove(hist.ship)\r\n            currEntry.pos = TTS_Serialize(currEntry.pos)\r\n            currEntry.rot = TTS_Serialize(currEntry.rot)\r\n            table.insert(currHistory, {ship=hist.ship.getGUID(), actKey=1, history={currEntry}})\r\n        end\r\n    end\r\n    if currHistory[1] == nil then return nil else\r\n    return currHistory end\r\nend\r\n\r\n\r\n-- Restore provided table and notify of the results\r\nMoveModule.RestoreSaveData = function(saveTable)\r\n    if saveTable == nil then\r\n        return\r\n    end\r\n    local count = 0\r\n    local missCount = 0\r\n    for k,hist in pairs(saveTable) do\r\n        hist.ship = getObjectFromGUID(hist.ship)\r\n        if hist.ship == nil then\r\n            missCount = missCount + 1\r\n        else\r\n            count = count + 1\r\n            table.insert(MoveModule.moveHistory, hist)\r\n        end\r\n    end\r\n    local info = ' - Restored last position save for ' .. count .. ' ship(s)'\r\n    if missCount > 0 then\r\n        info = info .. ' (' .. missCount .. ' ship model(s) missing)'\r\n    end\r\n    if count > 0 or missCount > 0 then\r\n        return info\r\n    end\r\nend\r\n\r\nSaveManager.Register('MoveModule', MoveModule.GetSaveData, MoveModule.RestoreSaveData)\r\n\r\n-- Join hit tables t1 .. t5 resulting from Physics.cast call\r\n-- Return a table of unique objects that pass selection function\r\n-- (apaprently cant use '...' arg type when a function is a table field)\r\n-- Arguments:\r\n--      exclObj     <- object excluded from return table (for casts over a ship)\r\n--      SelectFun   <- function taking an object and returning true/false (obj type selection)\r\n--      t1 .. t5    <- hit tables returned from Physics.cast, some can be nil or empty\r\n-- Return:\r\n--      Concatenated table of unique objects from hit tables that also passed selection function\r\nMoveModule.JoinHitTables = function(exclObj, SelectFun, t1, t2, t3, t4, t5)\r\n    local gTable = {[exclObj.getGUID()]=true}\r\n    local out = {}\r\n    local tbls = {a=t1, b=t2, c=t3, d=t4, e=t5}\r\n    for k,hTable in pairs(tbls) do\r\n        for k2,hit in pairs(hTable) do\r\n            if SelectFun(hit.hit_object) and gTable[hit.hit_object.getGUID()] == nil then\r\n                gTable[hit.hit_object.getGUID()] = true\r\n                table.insert(out, hit.hit_object)\r\n            end\r\n        end\r\n    end\r\n    return out\r\nend\r\n\r\n-- Selection function for MoveModule.JoinHitTables - ships only\r\nMoveModule.SelectShips = function(obj)\r\n    return ((obj.tag == 'Figurine') and (obj.getVar('__XW_Ship')==true))\r\nend\r\n\r\n-- Selection function for MoveModule.JoinHitTables - huge ships only\r\nMoveModule.SelectHugeShips = function(obj)\r\n    return MoveModule.SelectShips(obj) and (obj.getTable('Data').Size == 'huge')\r\nend\r\n\r\n\r\n-- Selection function for MoveModule.JoinHitTables - obstacles only\r\nMoveModule.SelectObstacles = function(obj)\r\n    local name = obj.getName()\r\n    return obj.hasTag('Obstacle') or ((name:find('Asteroid') or name:find('Debris') or name:find('Chute debris') or name:find('Cloud') or name:find('Spare') or name:find('Obstacle')) ~= nil)\r\nend\r\n\r\n-- Selection function for MoveModule.JoinHitTables - mine tokens only\r\nMoveModule.SelectMineTokens = function(obj)\r\n    local name = obj.getName()\r\n    return obj.hasTag('Mine') or ((name:find('Mine') or name:find('Connor') or name:find('Chute debris') or name:find('Probe') or name:find('Buzz')) ~= nil)\r\nend\r\n\r\n-- Selection function for MoveModule.JoinHitTables - mines and obstacles\r\nMoveModule.SelectMinesAndObstacleTokens = function(obj)\r\n    return MoveModule.SelectObstacles(obj) or MoveModule.SelectMineTokens(obj)\r\nend\r\n\r\n-- Selection function for MoveModule.JoinHitTables - anything aside from global table object\r\nMoveModule.SelectAny = function(obj)\r\n    return obj.getGUID() ~= nil\r\nend\r\n\r\n-- Cast data for checking collisions over a ship type shape\r\nMoveModule.castData = {}\r\nMoveModule.castData.small = {}\r\nMoveModule.castData.small.base = {\r\n    debug=false,\r\n    direction = {0, -0.001, 0},\r\n    type=3,\r\n    size={Convert_mm_igu(40), Convert_mm_igu(6), Convert_mm_igu(40)},\r\n    -- + Origin\r\n    -- + Orientation\r\n}\r\nMoveModule.castData.small.nubFR = {\r\n    debug=false,\r\n    localPos = {-1*Convert_mm_igu(11.38), Convert_mm_igu(-1.86), -1*Convert_mm_igu(20.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.small.nubFL = {\r\n    debug=false,\r\n    localPos = {Convert_mm_igu(11.38), Convert_mm_igu(-1.86), -1*Convert_mm_igu(20.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.small.nubBR = {\r\n    debug=false,\r\n    localPos = {-1*Convert_mm_igu(11.38), Convert_mm_igu(-1.86), Convert_mm_igu(20.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.small.nubBL = {\r\n    debug=false,\r\n    localPos = {Convert_mm_igu(11.38), Convert_mm_igu(-1.86), Convert_mm_igu(20.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\n\r\nMoveModule.castData.medium = {}\r\nMoveModule.castData.medium.base = {\r\n    debug=false,\r\n    direction = {0, -0.001, 0},\r\n    type=3,\r\n    size={Convert_mm_igu(60), Convert_mm_igu(6), Convert_mm_igu(60)},\r\n    -- + Origin\r\n    -- + Orientation\r\n}\r\nMoveModule.castData.medium.nubFR = {\r\n    debug=false,\r\n    localPos = {-1*Convert_mm_igu(11.38), Convert_mm_igu(-1.86), -1*Convert_mm_igu(30.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.medium.nubFL = {\r\n    debug=false,\r\n    localPos = {Convert_mm_igu(11.38), Convert_mm_igu(-1.86), -1*Convert_mm_igu(30.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.medium.nubBR = {\r\n    debug=false,\r\n    localPos = {-1*Convert_mm_igu(11.38), Convert_mm_igu(-1.86), Convert_mm_igu(30.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.medium.nubBL = {\r\n    debug=false,\r\n    localPos = {Convert_mm_igu(11.38), Convert_mm_igu(-1.86), Convert_mm_igu(30.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\n\r\n\r\nMoveModule.castData.large = {}\r\nMoveModule.castData.large.base = {\r\n    debug=false,\r\n    direction = {0, -0.001, 0},\r\n    type=3,\r\n    size={Convert_mm_igu(80), Convert_mm_igu(6), Convert_mm_igu(80)},\r\n    -- + Origin\r\n    -- + Orientation\r\n}\r\nMoveModule.castData.large.nubFR = {\r\n    debug=false,\r\n    localPos = {-1*Convert_mm_igu(11.38), Convert_mm_igu(-1.86), -1*Convert_mm_igu(40.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.large.nubFL = {\r\n    debug=false,\r\n    localPos = {Convert_mm_igu(11.38), Convert_mm_igu(-1.86), -1*Convert_mm_igu(40.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.large.nubBR = {\r\n    debug=false,\r\n    localPos = {-1*Convert_mm_igu(11.38), Convert_mm_igu(-1.86), Convert_mm_igu(40.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.large.nubBL = {\r\n    debug=false,\r\n    localPos = {Convert_mm_igu(11.38), Convert_mm_igu(-1.86), Convert_mm_igu(40.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\n\r\nMoveModule.castData.huge = {}\r\nMoveModule.castData.huge.base = {\r\n    debug=false,\r\n    direction = {0, -0.001, 0},\r\n    type=3,\r\n    size={Convert_mm_igu(80), Convert_mm_igu(6), Convert_mm_igu(221)},\r\n    -- + Origin\r\n    -- + Orientation\r\n}\r\nMoveModule.castData.huge.nubFR = {\r\n    debug=false,\r\n    localPos = {-1*Convert_mm_igu(11.38), Convert_mm_igu(-1.86), -1*Convert_mm_igu(111.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.huge.nubFL = {\r\n    debug=false,\r\n    localPos = {Convert_mm_igu(11.38), Convert_mm_igu(-1.86), -1*Convert_mm_igu(111.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.huge.nubBR = {\r\n    debug=false,\r\n    localPos = {-1*Convert_mm_igu(11.38), Convert_mm_igu(-1.86), Convert_mm_igu(111.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\nMoveModule.castData.huge.nubBL = {\r\n    debug=false,\r\n    localPos = {Convert_mm_igu(11.38), Convert_mm_igu(-1.86), Convert_mm_igu(111.858)},\r\n    direction = {0, -0.001, 0},\r\n    type=2,\r\n    size={Convert_mm_igu(3.4), Convert_mm_igu(8), Convert_mm_igu(3.4)},\r\n    -- + Origin\r\n}\r\n\r\n\r\n\r\n-- Get cast data for particular ship situation\r\n-- Arguments:\r\n--      ship        <- ship ref (for base size)\r\n--      shipPosRot  <- table with ship check position and rotation ('pos' and 'rot' keys)\r\n--      castType    <- 'base' for base, 'nub[FB][RL]' for one of four nubs\r\n-- Return:\r\n--      Table ready to be fed to Physics.cast\r\nMoveModule.GetCast = function(ship, shipPosRot, castType)\r\n    local baseSize = ship.getTable(\"Data\").Size or 'small'\r\n    local castTable = MoveModule.castData[baseSize][castType]\r\n    --castTable.debug = true\r\n    if castType == 'base' then\r\n        castTable.origin = shipPosRot.pos\r\n        castTable.orientation = shipPosRot.rot\r\n        return castTable\r\n    else\r\n        castTable.origin = Vect.Sum(shipPosRot.pos, Vect.RotateDeg(castTable.localPos, shipPosRot.rot[2]))\r\n        return castTable\r\n    end\r\nend\r\n\r\n-- Return all objects that pass selection function and would overlap ship in some situation\r\n-- Arguments:\r\n--      ship        <- ship ref (for base size)\r\n--      shipPosRot  <- table with ship check position and rotation ('pos' and 'rot' keys)\r\n--      SelectFun   <- selection function that returns true/false for an object\r\n-- Return:\r\n--      Concatenated table of all objects that would overlap ship in this situation and pass select function\r\nMoveModule.FullCastCheck = function(ship, shipPosRot, SelectFun)\r\n    return MoveModule.JoinHitTables(\r\n    ship,\r\n    SelectFun,\r\n    Physics.cast(MoveModule.GetCast(ship, shipPosRot, 'base')),\r\n    Physics.cast(MoveModule.GetCast(ship, shipPosRot, 'nubFR')),\r\n    Physics.cast(MoveModule.GetCast(ship, shipPosRot, 'nubFL')),\r\n    Physics.cast(MoveModule.GetCast(ship, shipPosRot, 'nubBR')),\r\n    Physics.cast(MoveModule.GetCast(ship, shipPosRot, 'nubBL'))\r\n    )\r\nend\r\n\r\n-- Return all objects that pass selection function and would overlap a template in some situation\r\n-- Arguments:\r\n--      excludeObj   <- Object to exclude from overlapping\r\n--      collList     <- List of already hit objects (from base overlapping)\r\n--      templateData <- table with information on origin, orientation, speed, type and direction\r\n--      SelectFun   <- selection function that returns true/false for an object\r\n-- Return:\r\n--      Concatenated table of all objects that would overlap ship in this situation and pass select function\r\nMoveModule.TemplateCastCheck = function(excludeObj, collList, templateData, SelectFun)\r\n    local gTable = {[excludeObj.getGUID()]=true}\r\n\r\n    for k, coll in pairs(collList) do\r\n        gTable[coll.getGUID()] = true\r\n    end\r\n\r\n    -- Find template origin and do special handling of special manouvers\r\n    local templateOrigin = {}\r\n    if templateData.extra == \"reverse\" then\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, \"back\")\r\n        if templateData.dir == \"left\" then\r\n            templateData.dir = \"right\"\r\n        elseif templateData.dir == \"right\" then\r\n            templateData.dir = \"left\"\r\n        end\r\n    elseif templateData.type == \"straight\" or  templateData.type == \"bank\" or templateData.type == \"turn\" then\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, \"front\")\r\n    elseif templateData.type:find(\"talon\") then\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, \"front\")\r\n        templateData.type = \"turn\"\r\n    elseif templateData.type == \"roll\" then\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, templateData.dir)\r\n        templateData.speed = 1\r\n    elseif templateData.type == \"viper\" then\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, templateData.dir)\r\n        if templateData.dir == \"right\" and templateData.extra ==\"forward\" then\r\n            templateData.dir = \"left\"\r\n        elseif templateData.dir == \"left\" and templateData.extra == \"backward\" then\r\n            templateData.dir = \"right\"\r\n        end\r\n        templateData.speed = 1\r\n        templateData.type = \"bank\"\r\n    elseif templateData.type == \"bankSlip\" then\r\n        local template_pos = \"left\"\r\n        if templateData.dir == \"left\" then\r\n            template_pos = \"right\"\r\n        end\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, template_pos)\r\n        templateData.type = \"bank\"\r\n    elseif templateData.type == \"turnSlip\" then\r\n        local template_pos = \"left\"\r\n        if templateData.dir == \"left\" then\r\n            template_pos = \"right\"\r\n        end\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, template_pos)\r\n        templateData.type = \"turn\"\r\n    elseif templateData.type == \"echoF\"  then\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, templateData.dir)\r\n        templateData.speed = 2\r\n        templateData.type = \"bank\"\r\n        if templateData.dir == \"right\" then\r\n            templateData.dir = \"left\"\r\n        elseif templateData.dir == \"left\" then\r\n            templateData.dir = \"right\"\r\n        end\r\n    elseif templateData.type == \"echoB\"  then\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, templateData.dir)\r\n        templateData.speed = 2\r\n        templateData.type = \"bank\"\r\n\r\n    elseif templateData.type == \"deCloak\" then\r\n        templateOrigin = MoveModule.GetTemplateOrigin(templateData.origin, templateData.orientation, templateData.shipSize, templateData.dir)\r\n        if templateData.shipSize == \"small\" then\r\n            templateData.speed = 2\r\n        else\r\n            templateData.speed = 1\r\n        end\r\n    else\r\n        return\r\n    end\r\n\r\n    if templateData.type == \"straight\" or templateData.type == \"roll\" or templateData.type == \"deCloak\" then\r\n        local offsetDistance = Convert_mm_igu(20)* tonumber(templateData.speed)\r\n        local size = {Convert_mm_igu(20), Convert_mm_igu(6), templateData.speed*Convert_mm_igu(40)}\r\n        if (templateData.type ==\"roll\"  or templateData.type == \"deCloak\") and templateData.shipSize ~= \"small\" then\r\n            size = {Convert_mm_igu(40), Convert_mm_igu(6), Convert_mm_igu(20)}\r\n            offsetDistance = Convert_mm_igu(10)\r\n        end\r\n        local offset = vector(offsetDistance * math.sin(math.rad(templateOrigin.rot.y)),\r\n        0, offsetDistance * math.cos(math.rad(templateOrigin.rot.y)) )\r\n\r\n        local collissions = Physics.cast({\r\n            origin       = templateOrigin.pos + offset,\r\n            orientation  = templateOrigin.rot,\r\n            direction    = {0,-0.001,0},\r\n            type         = 3,\r\n            size         = size,\r\n            max_distance = 1,\r\n            debug        = cast_debug\r\n        })\r\n\r\n        MoveModule.AddCollissionEntry(gTable, collList, collissions, SelectFun)\r\n    elseif templateData.type == \"bank\" then\r\n        local radius = 0\r\n        if templateData.speed == 1 then\r\n            radius = Convert_mm_igu(80)\r\n        elseif templateData.speed == 2 then\r\n            radius = Convert_mm_igu(130)\r\n        elseif templateData.speed == 3 then\r\n            radius = Convert_mm_igu(180)\r\n        end\r\n        local iterations = 10\r\n        local radianStep = math.pi /(4*iterations)\r\n        local dir_mod = 1\r\n        if templateData.dir == \"left\" then\r\n            dir_mod = -1\r\n        end\r\n        local c = math.cos(math.rad(templateOrigin.rot.y))\r\n        local s = math.sin(math.rad(templateOrigin.rot.y))\r\n        for i = 0, iterations do\r\n            local radians = radianStep*i\r\n            local orientation_offset = vector(0, math.deg(radians), 0)\r\n            -- Calculate world position for template\r\n            local pz = math.sin(radians)*radius\r\n            local px = dir_mod * (1 - math.cos(radians))*radius\r\n            -- Translate point to template origin\r\n            local position_offset = vector(px * c + pz * s, 0, pz * c - px * s)\r\n\r\n            local collissions = Physics.cast({\r\n                origin       = templateOrigin.pos + position_offset,\r\n                orientation  = templateOrigin.rot + orientation_offset * dir_mod,\r\n                direction    = {0,-0.001,0},\r\n                type         = 3,\r\n                size         = {Convert_mm_igu(20), Convert_mm_igu(6), Convert_mm_igu(1)},\r\n                max_distance = 1,\r\n                debug        = cast_debug\r\n            })\r\n            MoveModule.AddCollissionEntry(gTable, collList, collissions, SelectFun)\r\n\r\n        end\r\n    elseif templateData.type == \"turn\" then\r\n        local radius = 0\r\n        if templateData.speed == 1 then\r\n            radius = Convert_mm_igu(35)\r\n        elseif templateData.speed == 2 then\r\n            radius = Convert_mm_igu(62)\r\n        elseif templateData.speed == 3 then\r\n            radius = Convert_mm_igu(90)\r\n        end\r\n        local iterations = 10\r\n        local radianStep = math.pi /(2*iterations)\r\n        local dir_mod = 1\r\n        if templateData.dir == \"left\" then\r\n            dir_mod = -1\r\n        end\r\n        local c = math.cos(math.rad(templateOrigin.rot.y))\r\n        local s = math.sin(math.rad(templateOrigin.rot.y))\r\n        for i = 0, iterations do\r\n            local radians = radianStep*i\r\n            local orientation_offset = vector(0, math.deg(radians), 0)\r\n            -- Calculate world position for template\r\n            local pz = math.sin(radians)*radius\r\n            local px = dir_mod * (1 - math.cos(radians))*radius\r\n            -- Translate point to template origin\r\n            local position_offset = vector(px * c + pz * s, 0, pz * c - px * s)\r\n\r\n            local collissions = Physics.cast({\r\n                origin       = templateOrigin.pos + position_offset,\r\n                orientation  = templateOrigin.rot + orientation_offset * dir_mod,\r\n                direction    = {0,-0.001,0},\r\n                type         = 3,\r\n                size         = {Convert_mm_igu(20), Convert_mm_igu(6), Convert_mm_igu(1)},\r\n                max_distance = 1,\r\n                debug        = cast_debug\r\n            })\r\n            MoveModule.AddCollissionEntry(gTable, collList, collissions, SelectFun)\r\n\r\n        end\r\n    end\r\nend\r\n\r\n\r\n-- Adds objects from the collissions table to the collList if it pass the selectfun\r\n-- and is not already present\r\n-- Arguments:\r\n--      gTable          <- GUID table, containing allready present objects\r\n--      collList        <- List of hit objects that have passed the select fun\r\n--      collissions     <- Table of hits returned from a Physics.cast()\r\n--      SelectFun       <- Function that returns true if object if of correct type\r\nMoveModule.AddCollissionEntry = function(gTable, collList, collissions, SelectFun)\r\n    for k,hit in pairs(collissions) do\r\n        if gTable[hit.hit_object.getGUID()] == nil and SelectFun(hit.hit_object) then\r\n            gTable[hit.hit_object.getGUID()] = true\r\n            table.insert(collList, hit.hit_object)\r\n        end\r\n    end\r\nend\r\n\r\n-- Return all position and rotation for a template originating position based on ship size and direction\r\n-- Arguments:\r\n--      shipOrigin      <- The ship origin\r\n--      shipOrientation <- Orientation of the ship\r\n--      shipSize        <- Size of the ship (small, medium, large)\r\n--      templateDir     <- Which direction to get position and orientation for\r\n-- Return:\r\n--      TemplateOrigin (position and rotation)\r\nMoveModule.GetTemplateOrigin = function(shipOrigin, shipOrientation, shipSize, templateDir)\r\n    -- OBS: Ships are placed backwards\r\n    roty = shipOrientation.y + 180\r\n    if templateDir == \"left\" then\r\n        roty = roty - 90\r\n    elseif templateDir == \"right\" then\r\n        roty = roty + 90\r\n    elseif templateDir == \"back\" then\r\n        roty = roty - 180\r\n    end\r\n\r\n    local distance = Convert_mm_igu(20)\r\n    if shipSize == \"medium\" then\r\n        distance = Convert_mm_igu(30)\r\n    elseif shipSize == \"large\" then\r\n        distance = Convert_mm_igu(40)\r\n    end\r\n\r\n    local position = shipOrigin + vector(distance * math.sin(math.rad(roty)), 0 , distance*math.cos(math.rad(roty)))\r\n\r\n    return {pos = position, rot = vector(shipOrientation.x, roty, shipOrientation.z)}\r\nend\r\n\r\n\r\n-- Check if provided ship in a provided position/rotation would collide with anything from the provided table\r\n-- Return: {coll=collObject, minMargin=howFarCollisionIsStillCertain, numCheck=numCollideChecks}\r\nMoveModule.CheckCollisions = function(ship, shipPosRot, collShipTable)\r\n    local info = {coll=nil, minMargin=0, numCheck=0, numCast=0}\r\n    local shipInfo = {pos=shipPosRot.pos, rot=shipPosRot.rot, ship=ship}\r\n    local shipSize = ship.getTable(\"Data\").Size or 'small'\r\n    local certShipReach = Convert_mm_igu(mm_baseSize[shipSize]/2)              -- distance at which other ships MUST bump it\r\n    local maxShipReach = Convert_mm_igu(mm_baseSize[shipSize]*math.sqrt(2)/2)  -- distance at which other ships CAN bump it\r\n\r\n    for k, collShip in pairs(collShipTable) do\r\n        local collShipSize = collShip.getTable(\"Data\").Size or 'small'\r\n        local certBumpDist = certShipReach + Convert_mm_igu(mm_baseSize[collShipSize]/2)            -- distance at which these two particular ships ships MUST bump\r\n        local maxBumpDist = maxShipReach + Convert_mm_igu(mm_baseSize[collShipSize]*math.sqrt(2)/2) -- distance at which these two particular ships ships CAN bump\r\n\r\n        local dist = Vect.Distance(shipPosRot.pos, collShip.getPosition())\r\n        if dist < maxBumpDist then\r\n            if dist < certBumpDist then\r\n                info.coll = collShip\r\n                if certBumpDist - dist > info.minMargin then\r\n                    info.minMargin = certBumpDist - dist\r\n                end\r\n            elseif collide(shipInfo, {pos=collShip.getPosition(), rot=collShip.getRotation(), ship=collShip}) == true then\r\n                info.coll = collShip\r\n                info.numCheck = info.numCheck + 1\r\n                break\r\n            end\r\n        end\r\n    end\r\n    if info.coll == nil then\r\n        local hTable = {}\r\n        if shipSize == 'huge' then\r\n            hTable = MoveModule.FullCastCheck(ship, shipPosRot,  MoveModule.SelectHugeShips)\r\n        else\r\n            hTable = MoveModule.FullCastCheck(ship, shipPosRot,  MoveModule.SelectShips)\r\n        end\r\n        info.coll = hTable[1]\r\n    end\r\n    return info\r\nend\r\n\r\nMoveModule.partResolutionRough = 1/100  -- Resolution for rough checks (guaranteed)\r\nMoveModule.partResolutionFine = 1/1000  -- Resolution for fine checks  (for forward adjust)\r\n\r\n-- Module for trying and finding free positions\r\nMoveModule.MoveProbe = {}\r\n\r\n-- Get near ships when trying a move that allows for partial execution\r\n-- Args: SEE MoveModule.MoveProbe.GetFreePart\r\n-- Return: {shipRef1, shipRef2, ... , shipRefN}\r\nMoveModule.MoveProbe.GetShipsNearPart = function(info, ship, partFun, partRange)\r\n    local middlePart = (partRange.to - partRange.from)/2\r\n    local maxShipReach = Convert_mm_igu(mm_baseSize[info.size]*math.sqrt(2))/2\r\n    local moveReach = math.max( Vect.Distance(partFun(info.code, ship, middlePart).pos, partFun(info.code, ship, partRange.to).pos),\r\n                                Vect.Distance(partFun(info.code, ship, middlePart).pos, partFun(info.code, ship, partRange.from).pos) )\r\n    local collShipRange = moveReach + maxShipReach + Convert_mm_igu(mm_largeBase*math.sqrt(2))/2 + Convert_mm_igu(10)\r\n    return ObjType.GetNearOfType(partFun(info.code, ship, MoveData.partMax/2).pos, collShipRange, 'ship', {ship})\r\nend\r\n-- Get first free part for a partial-enabled move (going through parts as partRange specifies)\r\n-- Args:\r\n--      info        <- move info as per MoveData.DecodeInfo\r\n--      ship        <- object ref to a ship we want to move\r\n--      partFun     <- function that takes (moveInfo, shipRef, part) and returns {pos=position, rot=rotation} (pure data, ignores collisions)\r\n--      partRange   <- { from = partValueFromToCheck, to = partValueToCheckTo} ((from < to), (from > to) and (from == to) to all handled)\r\n-- Return:  {\r\n--      part        <- number of the part that was last checked (first free if other args specify free part was found)\r\n--      info        <- nil if free part was found sowmehere, 'first' if partRange.from was free, 'overlap' if no part was free\r\n--      collObj     <- nil if first part was free, object ref to last colliding ship otherwise\r\n--          }\r\nMoveModule.MoveProbe.GetFreePart = function(info, ship, partFun, partRange, moveLength)\r\n    if moveLength == nil then moveLength = 0 end\r\n    moveLength = Convert_mm_igu(moveLength)\r\n    local out = {part = nil, info = nil, collObj = nil}\r\n    local checkNum = {rough=0, fine=0}\r\n\r\n    -- Get ships that *can* possibly collide during this move\r\n    local collShips = MoveModule.MoveProbe.GetShipsNearPart(info, ship, partFun, partRange)\r\n\r\n    -- Current part and part delts for ROUGH CHECKING\r\n    local actPart = partRange.from\r\n    local partDelta = math.sgn(partRange.to - partRange.from)*(MoveData.partMax*MoveModule.partResolutionRough)\r\n    local minPartDelta = math.abs(partDelta)\r\n    local collision = false\r\n\r\n    -- Collision check, then part delta step or margin step\r\n    repeat\r\n        local nPos = partFun(info.code, ship, actPart)\r\n        local collInfo = MoveModule.CheckCollisions(ship, nPos, collShips)\r\n        checkNum.rough = checkNum.rough + collInfo.numCheck\r\n        local distToSkip = nil\r\n        if collInfo.coll ~= nil then\r\n            collision = true\r\n            distToSkip = collInfo.minMargin\r\n            -- If there is a distance we can travel that assures collison will not end\r\n            if distToSkip > 0 then\r\n                -- Calculate how big part it is and skip away\r\n                partDelta = math.sgn(partDelta)*((distToSkip * MoveData.partMax)/moveLength)\r\n                if math.abs(partDelta) < minPartDelta then partDelta = math.sgn(partDelta)*minPartDelta end\r\n            else\r\n                partDelta = math.sgn(partDelta)*minPartDelta\r\n            end\r\n        else\r\n            collision = false\r\n        end\r\n        if collision == true then\r\n            out.collObj = collInfo.coll\r\n            actPart = actPart + partDelta\r\n        end\r\n    -- until we're out of collisions OR we're out of part range\r\n    until collision == false or ((partRange.to - actPart)*math.sgn(partDelta) < 0) or partDelta == 0\r\n\r\n    if collision == false and partDelta ~= 0 and actPart ~= partRange.from then\r\n        -- Right now, we're out of any collisions or at part 0 (no move)\r\n        -- Go fineResolution of a move forward until we have a collision, then skip one back\r\n        partDelta = math.sgn(partRange.to - partRange.from)*(MoveData.partMax*MoveModule.partResolutionFine)*-1\r\n        local collInfo\r\n        repeat\r\n            local nPos = partFun(info.code, ship, actPart)\r\n            collInfo = MoveModule.CheckCollisions(ship, nPos, {out.collObj})\r\n            checkNum.fine = checkNum.fine + collInfo.numCheck\r\n            if collInfo.coll ~= nil then\r\n                collision = true\r\n            else\r\n                collision = false\r\n            end\r\n            actPart = actPart + partDelta\r\n        until collision == true or (partRange.from - actPart)*math.sgn(partDelta) < 0\r\n        actPart = actPart - 2*partDelta\r\n        out.collObj = collInfo.coll -- This is what we hit\r\n        out.part = actPart\r\n    elseif collision == false then\r\n        -- This happens if rough check didn't do anything (first part free, but no fullMove function)\r\n        out.part = actPart\r\n        out.info = 'first'\r\n    elseif collision == true then\r\n        -- This happens if rough check didn't escape collisions (no free part)\r\n        out.info = 'overlap'\r\n        out.part = partRange.to\r\n    end\r\n    -- print('-- GetFreePart CHECK_COUNT: ' .. checkNum.rough+checkNum.fine .. ' (' .. checkNum.rough .. ' + ' .. checkNum.fine .. ')')\r\n    return out\r\nend\r\n-- Get near ships when trying a move that only allows for full execution\r\n-- Args: SEE MoveModule.MoveProbe.TryFullMove\r\n-- Return: {shipRef1, shipRef2, ... , shipRefN}\r\nMoveModule.MoveProbe.GetShipsNearFull = function(info, ship, fullFun)\r\n    local maxShipReach = Convert_mm_igu(mm_baseSize[info.size]*math.sqrt(2))/2\r\n    local collShipRange = maxShipReach + Convert_mm_igu(mm_largeBase*math.sqrt(2))/2 + Convert_mm_igu(10)\r\n    return ObjType.GetNearOfType(fullFun(info.code, ship).pos, collShipRange, 'ship', {ship})\r\nend\r\n\r\n-- Get near huge ships when trying a move that only allows for full execution\r\n-- Args: SEE MoveModule.MoveProbe.TryFullMove\r\n-- Return: {shipRef1, shipRef2, ... , shipRefN}\r\nMoveModule.MoveProbe.GetHugeShipsNearFull = function(info, ship, fullFun)\r\n    local shipsfound = MoveModule.MoveProbe.GetShipsNearFull(info, ship, fullFun)\r\n    shipsfound = table.sieve(shipsfound, function(obj) return (obj.getTable('Data').Size == 'huge') end)\r\n    return shipsfound\r\nend\r\n\r\n-- Try a full version of a move\r\n-- Args:\r\n--      info        <- move info as per MoveData.DecodeInfo\r\n--      ship        <- object ref to a ship we want to move\r\n--      fullFun     <- function that takes (moveInfo, shipRef) and returns {pos=position, rot=rotation} (pure data, ignores collisions)\r\n-- Return:  {\r\n--      done        <- TRUE if move was completed, FALSE if it was obstructed\r\n--      finalPosRot <- the final position and rotation after this move\r\n--      collObj     <- nil if completed, object ref to colliding ship otherwise\r\n--      collObs     <- nil if no obstacle moved over, object ref to obstacle if otherwise\r\n--          }\r\nMoveModule.MoveProbe.TryFullMove = function(info, ship, fullFun)\r\n    local collShips = nil\r\n    if info.size == 'huge' then\r\n        collShips = MoveModule.MoveProbe.GetHugeShipsNearFull(info, ship, fullFun)\r\n    else\r\n        collShips = MoveModule.MoveProbe.GetShipsNearFull(info, ship, fullFun)\r\n    end\r\n    local out = {done=nil, finalPosRot=nil, collObj=nil, collObs=nil}\r\n    local checkNum = 0\r\n\r\n    local startPosRot = {['pos']=ship.GetPosition(), ['rot']=ship.GetRotation()}\r\n    local finalPosRot = fullFun(info.code, ship)\r\n    out.finalPosRot = finalPosRot\r\n\r\n    -- Ship-to-ship collisions\r\n    fullInfo = MoveModule.CheckCollisions(ship, finalPosRot, collShips)\r\n    checkNum = checkNum + fullInfo.numCheck\r\n    if fullInfo.coll == nil then\r\n        out.done = true\r\n    else\r\n        out.done = false\r\n        out.collObj = fullInfo.coll\r\n    end\r\n\r\n    -- Ship-to-obstacle collisions\r\n    -- Get any obstacles that we're currently overlapping, and ignore them\r\n    -- for the template check (but not for the final position check)\r\n    local startingObstacleCollisions = MoveModule.CheckMineAndObstacleCollisions(ship, startPosRot, false, nil)\r\n\r\n    local templateData =\r\n    {\r\n        origin = ship.GetPosition(),\r\n        orientation = ship.GetRotation(),\r\n        dir = info.dir,\r\n        speed = info.speed,\r\n        type = info.type,\r\n        shipSize = info.size,\r\n        extra = info.extra\r\n    }\r\n    -- Do the template and final position check\r\n    local endingObstacleCollisions = MoveModule.CheckMineAndObstacleCollisions(ship, finalPosRot, false, templateData, startingObstacleCollisions)\r\n    if #endingObstacleCollisions ~= 0 then\r\n        out.collObs = endingObstacleCollisions[1]\r\n    end\r\n\r\n    return out\r\nend\r\n\r\n-- Get the FINAL position for a given move, including partial move and collisions\r\n-- Follows traits from MoveData.DecodeInfo to try different move functions\r\n-- Return:  {\r\n--      finType     <- 'move' when did full/part mvoe\r\n--                     'stationary' when there was no position change (rotation change allowed)\r\n--                     'overlap' if there was no valid free target position\r\n--                     IF OVERLAP, OTHER KEYS ARE TO BE IGNORED\r\n--      finPos      <- { pos = finalPosition, rot = finalRotation }\r\n--      collObj     <- nil if no collision, object ref to colliding ship otherwise\r\n--      finPart     <- part of partial move performed, 'max' if full move, nil if not applicable\r\n--          }\r\nMoveModule.GetFinalPosData = function(move_code, ship, ignoreCollisions)\r\n    local out = {finPos = nil, collObj = nil, finType = nil, finPart = nil}\r\n    local info = MoveData.DecodeInfo(move_code, ship)\r\n\r\n    -- Don't bother with collisions if it's stationary\r\n    if info.size ~= 'huge' and info.speed == 0 then\r\n        ignoreCollisions = true\r\n    end\r\n\r\n    -- NON-COLLISION VERSION\r\n    if ignoreCollisions then\r\n        if info.traits.full == true then\r\n        -- If full moves are allowed, get a full move\r\n            out.finPos = MoveModule.GetFullMove(info.code, ship)\r\n            if info.speed == 0 then\r\n                out.finType = 'stationary'\r\n            else\r\n                out.finType = 'move'\r\n            end\r\n            out.finPart = 'max'\r\n            return out\r\n        elseif info.traits.part == true then\r\n        -- If partial moves are allowed, get max part move\r\n            out.finPos = MoveModule.GetPartMove(info.code, ship, MoveData.partMax)\r\n            out.finType = 'move'\r\n            out.finPart = 'max'\r\n            return out\r\n        end\r\n\r\n    -- COLLISION VERSION\r\n    else\r\n        -- If move allows for full move check, try it\r\n        if info.traits.full == true then\r\n            local fullData = MoveModule.MoveProbe.TryFullMove(info, ship, MoveModule.GetFullMove)\r\n            while info.size == 'huge' and fullData.done == false do\r\n              out.collObj = fullData.collObj\r\n              info.speed = info.speed -1\r\n              if info.speed == -1 then\r\n                out.finType = 'overlap'\r\n                out.finPos = {pos=ship.getPosition(), rot=ship.getRotation()}\r\n                return out\r\n              else\r\n                info.code = string.gsub(info.code, \"%d\", info.speed)\r\n              end\r\n              fullData = MoveModule.MoveProbe.TryFullMove(info, ship, MoveModule.GetFullMove)\r\n            end\r\n            if fullData.done == true then\r\n                out.finPos = MoveModule.GetFullMove(info.code, ship)\r\n                out.finType = 'move'\r\n                out.finPart = 'max'\r\n                return out\r\n            end\r\n        end\r\n        -- If move allows for partial execution, try to find a free part\r\n        if info.traits.part == true then\r\n            local partRange = {from=MoveData.partMax, to=0}\r\n            local freePartData = MoveModule.MoveProbe.GetFreePart(info, ship, MoveModule.GetPartMove, partRange, MoveData.MoveLength(info))\r\n            if freePartData.info ~= 'overlap' then\r\n                out.finPos = MoveModule.GetPartMove(info.code, ship, freePartData.part)\r\n                out.finType = 'move'\r\n                out.finPart = freePartData.part\r\n                out.collObj = freePartData.collObj\r\n                return out\r\n            end\r\n        end\r\n        -- If nothing worked out, we have an all-overlap\r\n        out.finType = 'overlap'\r\n        out.finPos = {pos=ship.getPosition(), rot=ship.getRotation()}\r\n        return out\r\n    end\r\nend\r\n\r\n\r\n-- Move ship to some position and handle stuff around it\r\n-- If move is not stationary, clear target position and move tokens with it\r\n-- Add history entry if save move name is provided\r\n-- Args:\r\n--      ship        <- object reference to ship to move\r\n--      finData     <- {pos = targetPos, rot=targetRot}\r\n--      saveName    <- move code for history save, no save done if nil\r\n--      finFunction <- optional, function to call when the ship has come to rest\r\n--      waitForTokens <- optional, whether or not we have to wait for the ships tokens to also come to a rest\r\nMoveModule.MoveShip = function(ship, finData, saveName, finFunction, waitForTokens)\r\n    if not ShipVerification.VerifyShipBase(ship) then\r\n        return\r\n    end\r\n    XW_cmd.SetBusy(ship)\r\n    MoveModule.RemoveOverlapReminder(ship)\r\n    if finData.type ~= 'stationary' then\r\n        TokenModule.QueueShipTokensMove(ship)\r\n        local baseSize = ship.getTable(\"Data\").Size or 'small'\r\n        local shipReach = Convert_mm_igu(mm_baseSize[baseSize]+5)*(math.sqrt(2)/2)\r\n        TokenModule.ClearPosition(finData.finPos.pos, shipReach, ship)\r\n    end\r\n    local finPos = finData.finPos\r\n    if finData.noSave ~= true then\r\n        MoveModule.SaveStateToHistory(ship, true)\r\n    end\r\n    ship.setPositionSmooth(finPos.pos, false, true)\r\n    ship.setRotationSmooth(finPos.rot, false, true)\r\n    -- Wait for resting, but provide final position to set so smooth move doesn't fuck with accuracy\r\n    MoveModule.WaitForResting(ship, finPos, finFunction, waitForTokens)\r\n    if saveName ~= nil then\r\n        MoveModule.AddHistoryEntry(ship, {pos=finPos.pos, rot=finPos.rot, move=saveName, part=finData.finPart, finType=finData.finType})\r\n    end\r\nend\r\n\r\n\r\n\r\n-- This part controls the waiting part of moving\r\n-- Basically, if anything needs to be done after the ship rests, this can trigger it\r\n\r\n-- Ships waiting to be resting\r\n-- Entry: {ship = shipRef, finPos={pos=posToSet, rot=rotToSet}}\r\nMoveModule.restWaitQueue = {}\r\n\r\n-- Tokens waiting to be moved with ships\r\n-- Entry: { tokens={t1, t2, ... , tN}, ship=shipWaitingFor }\r\n-- tX: {ref = tokenRef, relPos = pos, relRot = rot}\r\n-- elements wait here until ships are ready\r\nMoveModule.tokenWaitQueue = {}\r\n\r\n-- Add ship to the queue so it fires once it completes the move\r\n-- OPTIONAL: finPos     <- position to be set at the end of the wait\r\n-- OPTIONAL: finFun     <- function to be execeuted at the end of the wait (argument: waiting ship)\r\n-- OPTIONAL: tokens     <- whether we also have to wait for the ship's tokens to finish moving afterwards.\r\nMoveModule.WaitForResting = function(ship, finPos, finFun, waitForTokens)\r\n    table.insert(MoveModule.restWaitQueue, {ship=ship, finPos=finPos, finFun=finFun, waitForTokens=waitForTokens})\r\n    startLuaCoroutine(Global, 'restWaitCoroutine')\r\nend\r\n\r\n-- This completes when a ship is resting at a table level\r\n-- Does token movement and ship locking after\r\n-- IF a final position was provided in the data table, set it at the end\r\n-- IF a final function was provideed in the data table, execute it at the end\r\nfunction restWaitCoroutine()\r\n    if MoveModule.restWaitQueue[1] == nil then\r\n        return 1\r\n    end\r\n\r\n    local waitData = MoveModule.restWaitQueue[#MoveModule.restWaitQueue]\r\n    local actShip = waitData.ship\r\n    local finPos = waitData.finPos\r\n    local finFun = waitData.finFun\r\n    local waitForTokens = waitData.waitForTokens\r\n    table.remove(MoveModule.restWaitQueue, #MoveModule.restWaitQueue)\r\n    -- Wait\r\n    repeat\r\n        coroutine.yield(0)\r\n    until actShip.resting == true and actShip.isSmoothMoving() == false and actShip.held_by_color == nil\r\n\r\n    if finPos ~= nil then\r\n        actShip.setPosition(finPos.pos)\r\n        actShip.setRotation(finPos.rot)\r\n    end\r\n\r\n    local newTokenTable = {}\r\n    for k,tokenSetInfo in pairs(MoveModule.tokenWaitQueue) do\r\n        -- Move and pop waiting tokens\r\n        if tokenSetInfo.ship == actShip then\r\n            for k2,tokenData in pairs(tokenSetInfo.tokens) do\r\n                local offset = Vect.RotateDeg(tokenData.relPos, actShip.getRotation()[2])\r\n                local dest = Vect.Sum(offset, actShip.getPosition())\r\n                dest[2] = dest[2]+0.5\r\n                dest = TokenModule.VisiblePosition(tokenData.ref, tokenSetInfo.ship, dest)\r\n                tokenData.ref.setPositionSmooth(dest, false,true)\r\n                local tRot = tokenData.ref.getRotation()\r\n                tokenData.ref.setRotationSmooth({tRot[1], actShip.getRotation()[2] + tokenData.relRot, tRot[3]})\r\n                tokenData.ref.highlightOn({0, 1, 0}, 2)\r\n            end\r\n        else\r\n            -- Index back tokens that are not waiting for this ship\r\n            table.insert(newTokenTable, tokenSetInfo)\r\n        end\r\n    end\r\n\r\n    if waitForTokens == true then\r\n        repeat\r\n            coroutine.yield(0)\r\n        until TokenModule.DoesShipHasAnySmoothMovingTokens(actShip) == false\r\n    end\r\n\r\n    MoveModule.tokenWaitQueue = newTokenTable\r\n    actShip.lock()\r\n    actShip.highlightOn({0, 1, 0}, 0.1)\r\n    XW_cmd.SetReady(actShip)\r\n    if finFun ~= nil then\r\n        finFun(actShip)\r\n    end\r\n    return 1\r\nend\r\n\r\n-- Perform move designated by move_code on a ship and announce the result\r\n-- How move is preformed generally relies on MoveData.DecodeInfo for its code\r\n-- Includes token handling so nothing obscurs the final position\r\n-- Starts the wait coroutine that handles stuff done when ship settles down\r\n-- Takes two optional parameters, the function to call at the end of the move,\r\n-- and whether we have to wait for the tokens to come to a rest before calling\r\n-- it.\r\nMoveModule.PerformMove = function(move_code, ship, ignoreCollisions, finishFunction, waitForTokens)\r\n    ship.lock()\r\n    local originalPos = ship.getPosition()\r\n    local origionalRot = ship.getRotation()\r\n    local info = MoveData.DecodeInfo(move_code, ship)\r\n    local finData = MoveModule.GetFinalPosData(move_code, ship, ignoreCollisions)\r\n    local annInfo = {type=finData.finType, note=info.note, code=info.code}\r\n    if finData.finType == 'overlap' then\r\n        annInfo.note = info.collNote\r\n    elseif finData.finType == 'move' then\r\n        if finData.collObj ~= nil then\r\n            annInfo.note = info.collNote\r\n            annInfo.collidedShip = finData.collObj\r\n        end\r\n    elseif finData.finType == 'stationary' then\r\n        -- And here as well\r\n    end\r\n\r\n    if finData.finType ~= 'overlap' then\r\n        MoveModule.MoveShip(ship, finData, move_code, finishFunction, waitForTokens)\r\n        if finData.collObj ~= nil then\r\n            MoveModule.SpawnOverlapReminder(ship)\r\n        end\r\n    end\r\n    AnnModule.Announce(annInfo, 'all', ship)\r\n\r\n    local templateData =\r\n    {\r\n        origin = originalPos,\r\n        orientation = origionalRot,\r\n        dir = info.dir,\r\n        speed = info.speed,\r\n        type = info.type,\r\n        shipSize = info.size,\r\n        extra = info.extra\r\n    }\r\n\r\n    MoveModule.CheckMineAndObstacleCollisions(ship, finData.finPos, true, templateData)\r\n    if ((finData.collObj == nil) and ship.getTable('Data').movethrough) then\r\n        MoveModule.CheckMovethroughShips(ship, true, templateData)\r\n    end\r\n    return (finData.finType ~= 'overlap')\r\nend\r\n\r\n-- Spawn a 'BUMPED' informational button on the base that removes itself on click or next move\r\nMoveModule.SpawnOverlapReminder = function(ship)\r\n    Ship_RemoveOverlapReminder(ship)\r\n    remindButton = {click_function = 'Ship_RemoveOverlapReminder', label = 'BUMPED', rotation =  {0, 0, 0}, width = 1000, height = 350, font_size = 250}\r\n\r\n    local size = ship.getTable(\"Data\").Size or 'small'\r\n    if size == 'large' then\r\n        remindButton.position = {0, 0.2, 2}\r\n    elseif size == 'medium' then\r\n        remindButton.position = {0, 0.2, 1.4}\r\n    else\r\n        remindButton.position = {0, 0.3, 0.8}\r\n    end\r\n    ship.createButton(remindButton)\r\nend\r\n\r\n-- Remove the 'BUMPED' dummy button from a ship\r\nMoveModule.RemoveOverlapReminder = function(ship)\r\n    local buttons = ship.getButtons()\r\n    if buttons ~= nil then\r\n        for k,but in pairs(buttons) do if but.label == 'BUMPED' then ship.removeButton(but.index) end end\r\n    end\r\nend\r\n\r\n-- Check if a ship in some situation is overlapping any obstacles\r\n-- Highlight overlapped obstacles red\r\n-- If 'vocal' set to true, add a notification\r\n-- Return table of overlapped obstacles\r\nMoveModule.CheckObstacleCollisions = function(ship, targetPosRot, vocal, templateData)\r\n    local collList = MoveModule.FullCastCheck(ship, targetPosRot,  MoveModule.SelectObstacles)\r\n    if templateData ~= nil then\r\n        MoveModule.TemplateCastCheck(ship, collList, templateData, MoveModule.SelectObstacles)\r\n    end\r\n    if collList[1] ~= nil then\r\n        local obsList = '('\r\n        for k,obs in pairs(collList) do\r\n            obs.highlightOn({1, 0, 0}, 3)\r\n            obsList = obsList .. obs.getName() .. ', '\r\n        end\r\n        obsList = obsList:sub(1, -3) .. ')'\r\n        if vocal then\r\n            AnnModule.Announce({type='warn', note=ship.getName() .. ' appears to have overlapped an obstacle ' .. obsList}, 'all')\r\n        end\r\n    end\r\n    return collList\r\nend\r\n\r\n\r\n\r\n-- Check if a ship in some situation is overlapping any mine tokens\r\n-- Highlight overlapped tokens red\r\n-- If 'vocal' set to true, add a notification\r\n-- Return table of overlapped tokens\r\n--TODO maybe check mine colision after bomb drop?\r\nMoveModule.CheckMineCollisions = function(ship, targetPosRot, vocal, templateData)\r\n    local collList = MoveModule.FullCastCheck(ship, targetPosRot,  MoveModule.SelectMineTokens)\r\n    if templateData ~= nil then\r\n        MoveModule.TemplateCastCheck(ship, collList, templateData, MoveModule.SelectMineTokens)\r\n    end\r\n    if collList[1] ~= nil then\r\n        local mineList = '('\r\n        for k,mine in pairs(collList) do\r\n            mine.highlightOn({1, 0, 0}, 3)\r\n            mineList = mineList .. mine.getName() .. ', '\r\n        end\r\n        mineList = mineList:sub(1, -3) .. ')'\r\n        if vocal then\r\n            AnnModule.Announce({type='warn', note=ship.getName() .. ' appears to have overlapped a mine token ' .. mineList}, 'all')\r\n        end\r\n    end\r\n    return collList\r\nend\r\n\r\nMoveModule.CheckMineAndObstacleCollisions = function(ship, targetPosRot, vocal, templateData, ignoredTemplateObstacles)\r\n    local collList = MoveModule.FullCastCheck(ship, targetPosRot,  MoveModule.SelectMinesAndObstacleTokens)\r\n    if templateData ~= nil then\r\n        MoveModule.TemplateCastCheck(ship, collList, templateData, function(obj)\r\n            if ignoredTemplateObstacles ~= nil then\r\n                for _, ignoredTemplate in pairs(ignoredTemplateObstacles) do\r\n                    if obj == ignoredTemplate then\r\n                        return false\r\n                    end\r\n                end\r\n            end\r\n            return MoveModule.SelectMinesAndObstacleTokens(obj)\r\n        end)\r\n    end\r\n    if vocal then\r\n        if collList[1] ~= nil then\r\n            local hitList = '('\r\n            for k, hitObj in pairs(collList) do\r\n                hitObj.highlightOn({1, 0, 0}, 3)\r\n                hitList = hitList .. hitObj.getName() .. ', '\r\n            end\r\n            hitList = hitList:sub(1, -3) .. ')'\r\n            AnnModule.Announce({type='warn', note=ship.getName() .. ' appears to have overlapped a mine or obstacle token ' .. hitList}, 'all')\r\n        end\r\n    end\r\n    return collList\r\nend\r\n\r\nMoveModule.CheckMovethroughShips = function(ship, vocal, templateData)\r\n    collList = {}\r\n    if templateData ~= nil then\r\n        MoveModule.TemplateCastCheck(ship, collList, templateData, MoveModule.SelectShips)\r\n    end\r\n    if vocal then\r\n        for i, coll in pairs(collList) do\r\n            AnnModule.Announce({type='warn', note=ship.getName() .. ' appears to have moved through ' .. coll.getName()}, 'all')\r\n            coll.highlightOn({0.2, 0.2, 1}, 3)\r\n        end\r\n    end\r\n    return collList\r\nend\r\n\r\n-- Remove the 'BUMPED' button from a ship (click function)\r\nfunction Ship_RemoveOverlapReminder(ship)\r\n    MoveModule.RemoveOverlapReminder(ship)\r\nend\r\n\r\n-- Check which ship has it's base closest to position (large ships have large bases!), that's the owner\r\n--   also check how far it is to the owner-changing position (margin of safety)\r\n-- Kinda tested: margin > 20mm = visually safe\r\n-- Arg can be a token ref or a position\r\n-- Returns {dist=distanceFromOwner, owner=ownerRef, margin=marginForNextCloseShip}\r\nMoveModule.GetTokenOwner = function(tokenPos)\r\n    local out = {owner=nil, dist=0, margin=-1}\r\n    local nearShips = ObjType.GetNearOfType(tokenPos, Convert_mm_igu(120), 'ship')\r\n    if nearShips[1] == nil then return out end\r\n    local baseDist = {}\r\n    -- Take the base size into account for distances\r\n    for k,ship in pairs(nearShips) do\r\n        local realDist = Vect.Distance(tokenPos, ship.getPosition())\r\n        local size = ship.getTable(\"Data\").Size or 'small'\r\n        if size == 'large' then\r\n            realDist = realDist - Convert_mm_igu(10)\r\n        elseif size == 'medium' then\r\n            realDist = realDist - Convert_mm_igu(5)\r\n        elseif size == 'huge' then\r\n            realDist = realDist - Convert_mm_igu(15) -- Todo, check if this arbetary number works\r\n        end\r\n        table.insert(baseDist, {ship=ship, dist=realDist})\r\n    end\r\n    local nearest = baseDist[1]\r\n    for k,data in pairs(baseDist) do\r\n        if data.dist < nearest.dist then nearest = data end\r\n    end\r\n    local nextNearest = {dist=999}\r\n    for k,data in pairs(baseDist) do\r\n        if data.ship ~= nearest.ship and (data.dist < nextNearest.dist) then\r\n            nextNearest = data\r\n        end\r\n    end\r\n    return {owner=nearest.ship, dist=nearest.dist, margin=(nextNearest.dist-nearest.dist)/2}\r\nend\r\n\r\n-- END MAIN MOVEMENT MODULE\r\n--------\r\n\r\n--------\r\n-- TOKEN MODULE\r\n-- Moves tokens, clears positions from tokens, checks its owners, deducts a visible position after a ship move\r\n\r\nTokenModule = {}\r\n-- Table with refs for different token and template sources\r\nTokenModule.tokenSources = {}\r\n\r\nTokenModule.tokenAssignments = {}\r\n\r\n-- Update token and template sources on each load\r\nTokenModule.onLoad = function(save_data)\r\n    for k, obj in pairs(getAllObjects()) do\r\n        if obj.tag == 'Infinite' then\r\n            if obj.getName() == 'Focus' then TokenModule.tokenSources.Focus = {src=obj, hlColor={0, 0.5, 0}}\r\n            elseif obj.getName() == 'Calculate' then TokenModule.tokenSources.Calculate = {src=obj, hlColor={0, 1, 0}}\r\n            elseif obj.getName() == 'Evade' then TokenModule.tokenSources.Evade = {src=obj, hlColor={0, 1, 0}}\r\n            elseif obj.getName() == 'Stress' then TokenModule.tokenSources.Stress = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Strain' then TokenModule.tokenSources.Strain = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Deplete' then TokenModule.tokenSources.Deplete = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Ion' then TokenModule.tokenSources.Ion = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Jam' then TokenModule.tokenSources.Jam = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Tractor' then TokenModule.tokenSources.Tractor = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Disarm' then TokenModule.tokenSources.Disarm = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Reinforce' then TokenModule.tokenSources.Reinforce = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Cloak' then TokenModule.tokenSources.Cloak = {src=obj, hlColor={0.8, 0, 0}}\r\n            elseif obj.getName() == 'Target Locks' then TokenModule.tokenSources['Target Lock'] = {src=obj, hlColor={0, 0, 1}}\r\n            elseif obj.getName():find('Templates') ~= nil then\r\n                if obj.getName():find('Straight') ~= nil then\r\n                    TokenModule.tokenSources['s' .. obj.getName():sub(1,1)] = obj\r\n                elseif obj.getName():find('Turn') ~= nil then\r\n                    TokenModule.tokenSources['t' .. obj.getName():sub(1,1)] = obj\r\n                elseif obj.getName():find('Bank') ~= nil then\r\n                    TokenModule.tokenSources['b' .. obj.getName():sub(1,1)] = obj\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\nEventSub.Register('onLoad', TokenModule.onLoad)\r\n\r\nTokenModule.onObjectDestroyed = function(destroyed_object)\r\n    if TokenModule.tokenAssignments[destroyed_object.getGUID()] ~= nil then\r\n        TokenModule.tokenAssignments[destroyed_object.getGUID()].call(\"RemoveToken\",{token=destroyed_object})\r\n        TokenModule.tokenAssignments[destroyed_object.getGUID()] = nil\r\n    end\r\nend\r\n\r\nTokenModule.onObjectDropped = function(player_color, object)\r\n    if ObjType.IsOfType(object, 'token') then\r\n        if object.getVar('__XW_TokenType') ~= 'targetLock' then -- Target lock has special onDrop handling on its own\r\n            local spos = object.getPosition()\r\n            local spos = object.getPosition()\r\n            local nearest = nil\r\n            local minDist = 3.6125 -- 100 mm\r\n            for k,ship in pairs(getAllObjects()) do\r\n                if MoveModule.SelectShips(ship) then\r\n                    local pos = ship.getPosition()\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        minDist = dist\r\n                    end\r\n                end\r\n            end\r\n            TokenModule.AssignToken(object, nearest)\r\n        end\r\n    end\r\nend\r\n\r\nEventSub.Register('onObjectDropped', TokenModule.onObjectDropped)\r\n\r\n\r\n-- How far can tokens be to be considered owned bya  ship\r\nTokenModule.tokenReachDistance = Convert_mm_igu(100)\r\n-- By how much this token has to be distant from other ship \"interception zone\" to be visible\r\n-- (how far from an owner-switching-border it has to be so you can see whose it is)\r\nTokenModule.visibleMargin = Convert_mm_igu(20)\r\n\r\n-- Preset positions for tokens on and near the base\r\n-- Generally used only when their current position switches its owner after a move\r\n-- Positions on the base\r\n\r\nTokenModule.basePos = {}\r\n\r\n-- On base - small ships\r\nTokenModule.basePos.small = {}\r\nTokenModule.basePos.small.Focus     = { 12,  12}\r\nTokenModule.basePos.small.Calculate = { 12,  24}\r\nTokenModule.basePos.small.Evade     = { 12, -12}\r\nTokenModule.basePos.small.Stress    = {-12,  12}\r\nTokenModule.basePos.small.Ion       = {-12,  -24}\r\nTokenModule.basePos.small.Strain    = {-12,  24}\r\nTokenModule.basePos.small.Deplete    = {-12,  36}\r\n\r\nTokenModule.basePos.small.Reinforce = {-24,  24}\r\nTokenModule.basePos.small.Cloak     = {-24, -24}\r\nTokenModule.basePos.small.Jam       = { 24, -12}\r\nTokenModule.basePos.small.Disarm    = { 24,  12}\r\nTokenModule.basePos.small.Tractor   = { 24,  24}\r\n\r\nTokenModule.basePos.small.rest      = {-12, -12}\r\n\r\n--On base - medium ships\r\nTokenModule.basePos.medium = {}\r\nTokenModule.basePos.medium.Focus     = { 25,  25}\r\nTokenModule.basePos.medium.Calculate = { 25,  35}\r\nTokenModule.basePos.medium.Evade     = { 25, -25}\r\nTokenModule.basePos.medium.Stress    = {-25,  25}\r\nTokenModule.basePos.medium.Ion       = {-25, -35}\r\nTokenModule.basePos.medium.Strain    = {-25,  35}\r\nTokenModule.basePos.medium.Deplete   = {-25,  -45}\r\n\r\nTokenModule.basePos.medium.Reinfoce  = {-35,  35}\r\nTokenModule.basePos.medium.Cloak     = {-35, -35}\r\nTokenModule.basePos.medium.Jam       = { 35, -25}\r\nTokenModule.basePos.medium.Disarm    = { 35,  25}\r\nTokenModule.basePos.medium.Tractor   = { 35,  35}\r\n\r\nTokenModule.basePos.medium.rest      = {-25, -25}\r\n\r\n-- On base - large ships\r\nTokenModule.basePos.large = {}\r\nTokenModule.basePos.large.Focus     = { 30,  30}\r\nTokenModule.basePos.large.Calculate = { 30,  40}\r\nTokenModule.basePos.large.Evade     = { 30,   0}\r\nTokenModule.basePos.large.Stress    = { 30, -30}\r\nTokenModule.basePos.large.Strain    = { 30, -40}\r\nTokenModule.basePos.large.Deplete   = {-30, -40}\r\nTokenModule.basePos.large.Tractor   = {-30,  30}\r\nTokenModule.basePos.large.Ion       = {-30,   0}\r\nTokenModule.basePos.large.Lock      = {  0,  30}\r\n\r\nTokenModule.basePos.large.Cloak     = { 30,  30}\r\nTokenModule.basePos.large.Reinforce = {-30,  30}\r\nTokenModule.basePos.large.Jam       = {-30, -30}\r\nTokenModule.basePos.large.Disarm    = { 40,  30}\r\n\r\nTokenModule.basePos.large.rest      = {-30, -30}\r\n\r\n-- On base - huge ships\r\nTokenModule.basePos.huge = {}\r\nTokenModule.basePos.huge.Focus     = { 30,  30}\r\nTokenModule.basePos.huge.Calculate = { 30,  40}\r\nTokenModule.basePos.huge.Evade     = { 30,   0}\r\nTokenModule.basePos.huge.Stress    = { 30, -30}\r\nTokenModule.basePos.huge.Strain    = { 30, -40}\r\nTokenModule.basePos.huge.Deplete   = {-30, -40}\r\nTokenModule.basePos.huge.Tractor   = {-30,  30}\r\nTokenModule.basePos.huge.Ion       = {-30,   0}\r\nTokenModule.basePos.huge.Lock      = {  0,  30}\r\n\r\nTokenModule.basePos.huge.Cloak     = { 30,  30}\r\nTokenModule.basePos.huge.Reinforce = {-30,  30}\r\nTokenModule.basePos.huge.Jam       = {-30, -30}\r\nTokenModule.basePos.huge.Disarm    = { 40,  30}\r\n\r\nTokenModule.basePos.huge.rest      = {-30, -30}\r\n\r\n-- Positions near the base\r\n-- Near base - small ships\r\nTokenModule.nearPos = {}\r\n\r\nTokenModule.nearPos.small = {}\r\nTokenModule.nearPos.small.Focus     = { 35,  25}\r\nTokenModule.nearPos.small.Calculate = { 15,  35}\r\nTokenModule.nearPos.small.Evade     = { 35,   0}\r\nTokenModule.nearPos.small.Stress    = { 35, -25}\r\nTokenModule.nearPos.small.Strain    = { 35, -35}\r\nTokenModule.nearPos.small.Deplete   = {-35, -35}\r\nTokenModule.nearPos.small.Ion       = {-35,  25}\r\nTokenModule.nearPos.small.Tractor   = {-35,   0}\r\nTokenModule.nearPos.small.Lock      = {  0,  40}\r\n\r\n\r\nTokenModule.nearPos.small.Reinfoce  = {-35,  35}\r\nTokenModule.nearPos.small.Cloak     = {-35, -35}\r\nTokenModule.nearPos.small.Jam       = { 35, -25}\r\nTokenModule.nearPos.small.Disarm    = { 35,  25}\r\n\r\nTokenModule.nearPos.small.rest      = {-35, -25}\r\n\r\n-- Near base - medium ships\r\nTokenModule.nearPos.medium = {}\r\nTokenModule.nearPos.medium.Focus     = { 45,  28}\r\nTokenModule.nearPos.medium.Calculate = { 45,  56}\r\nTokenModule.nearPos.medium.Evade     = { 45,   0}\r\nTokenModule.nearPos.medium.Stress    = { 45, -28}\r\nTokenModule.nearPos.medium.Strain    = { 45, -45}\r\nTokenModule.nearPos.medium.Deplete   = {-45, -45}\r\nTokenModule.nearPos.medium.Ion       = {-45,  28}\r\nTokenModule.nearPos.medium.Tractor   = {-45,   0}\r\nTokenModule.nearPos.medium.Lock      = {  0,  45}\r\n\r\nTokenModule.nearPos.medium.Reinfoce  = {-35,  35}\r\nTokenModule.nearPos.medium.Cloak     = {-35, -35}\r\nTokenModule.nearPos.medium.Jam       = { 35, -25}\r\nTokenModule.nearPos.medium.Disarm    = { 35,  25}\r\n\r\nTokenModule.nearPos.medium.rest      = {-45, -35}\r\n\r\n-- Near base - large ships\r\nTokenModule.nearPos.large = {}\r\nTokenModule.nearPos.large.Focus     = { 55,  30}\r\nTokenModule.nearPos.large.Calculate = { 55,  30}\r\nTokenModule.nearPos.large.Evade     = { 55,   0}\r\nTokenModule.nearPos.large.Stress    = { 55, -30}\r\nTokenModule.nearPos.large.Strain    = { 55, -55}\r\nTokenModule.nearPos.large.Deplete   = {-55, -55}\r\nTokenModule.nearPos.large.Tractor   = {-55,  45}\r\nTokenModule.nearPos.large.Ion       = {-55,  15}\r\nTokenModule.nearPos.large.Weapons   = {-55, -15}\r\nTokenModule.nearPos.large.Lock      = {  0,  50}\r\n\r\nTokenModule.nearPos.large.Reinfoce = {-45,  45}\r\nTokenModule.nearPos.large.Cloak     = {-45, -45}\r\nTokenModule.nearPos.large.Jam       = { 45, -45}\r\nTokenModule.nearPos.large.Disarm    = { 45,  45}\r\n\r\nTokenModule.nearPos.large.rest      = {-55, -45}\r\n\r\n-- Near base - large ships\r\nTokenModule.nearPos.huge = {}\r\nTokenModule.nearPos.huge.Focus     = { 55,  30}\r\nTokenModule.nearPos.huge.Calculate = { 55,  30}\r\nTokenModule.nearPos.huge.Evade     = { 55,   0}\r\nTokenModule.nearPos.huge.Stress    = { 55, -30}\r\nTokenModule.nearPos.huge.Strain    = { 55, -55}\r\nTokenModule.nearPos.huge.Deplete   = {-55, -55}\r\nTokenModule.nearPos.huge.Tractor   = {-55,  45}\r\nTokenModule.nearPos.huge.Ion       = {-55,  15}\r\nTokenModule.nearPos.huge.Weapons   = {-55, -15}\r\nTokenModule.nearPos.huge.Lock      = {  0,  50}\r\n\r\nTokenModule.nearPos.huge.Reinfoce = {-45,  45}\r\nTokenModule.nearPos.huge.Cloak     = {-45, -45}\r\nTokenModule.nearPos.huge.Jam       = { 45, -45}\r\nTokenModule.nearPos.huge.Disarm    = { 45,  45}\r\n\r\nTokenModule.nearPos.huge.rest      = {-55, -45}\r\n\r\n-- Deduct target token position in the world for a ship, token and some entry from TokenModule.basePos or .nearPos\r\nTokenModule.TokenPos = function(tokenName, ship, posTable)\r\n    local baseSize = ship.getTable(\"Data\").Size or 'small'\r\n    local entry = posTable[baseSize].rest\r\n    for tokenEntryName, tEntry in pairs(posTable[baseSize]) do\r\n        if tokenName:find(tokenEntryName) ~= nil then\r\n            entry = tEntry\r\n        end\r\n    end\r\n    local tsPos = {Convert_mm_igu(entry[1]), 0.5, Convert_mm_igu(entry[2])}\r\n    return Vect.Sum(ship.getPosition(), Vect.RotateDeg(tsPos, ship.getRotation()[2]+180))\r\nend\r\n\r\n-- Return position for a given token that is on the base of given ship\r\nTokenModule.BasePosition = function(tokenName, ship)\r\n    local name = nil\r\n    if type(tokenName) == 'string' then\r\n            name = tokenName\r\n    elseif type(tokenName) == 'userdata' then\r\n        name = tokenName.getName()\r\n    end\r\n    return TokenModule.TokenPos(name, ship, TokenModule.basePos)\r\nend\r\n-- Return position for a given token that is near the base of given ship\r\nTokenModule.NearPosition = function(tokenName, ship)\r\n    local name = nil\r\n    if type(tokenName) == 'string' then\r\n            name = tokenName\r\n    elseif type(tokenName) == 'userdata' then\r\n        name = tokenName.getName()\r\n    end\r\n    return TokenModule.TokenPos(name, ship, TokenModule.nearPos)\r\nend\r\n\r\n-- Return a visible position for some token near some ship\r\n-- Priorities as follows (OK if token is still visible there as in you can see who is its owner easily):\r\n-- 1. Prefer the position given as 3rd argument if passed\r\n-- 2. Prefer position on a stack if a stack of tokens already belongs to a ship\r\n-- 3. Prefer position NEAR ship base as position table dictates\r\n-- 3. Prefer position ON ship base as position table dictates (if all else fails, this will be returned)\r\nTokenModule.VisiblePosition = function(tokenName, ship, preferredPos)\r\n    -- Check preferred position margin\r\n    if preferredPos ~= nil then\r\n        local prefInfo = TokenModule.TokenOwnerInfo(preferredPos)\r\n        if prefInfo.owner == ship and prefInfo.margin > TokenModule.visibleMargin then\r\n            return preferredPos\r\n        end\r\n    end\r\n    -- Check for present stacks\r\n    local currTokensInfo = TokenModule.GetShipTokensInfo(ship)\r\n    local currStack = {qty=-2, obj=nil}\r\n    for k,tokenInfo in pairs(currTokensInfo) do\r\n        if tokenInfo.token.getName() == tokenName and tokenInfo.token.getQuantity() > currStack.qty and (not tokenInfo.token.IsSmoothMoving()) then\r\n            currStack.obj = tokenInfo.token\r\n            currStack.qty = currStack.obj.getQuantity()\r\n        end\r\n    end\r\n    if currStack.obj ~= nil then\r\n        return Vect.Sum(currStack.obj.getPosition(), {0, 0.7, 0})\r\n    end\r\n    -- Check for near near base position or return base position\r\n    local nearPos = TokenModule.NearPosition(tokenName, ship)\r\n    local nearData = TokenModule.TokenOwnerInfo(nearPos)\r\n    if nearData.margin < TokenModule.visibleMargin then\r\n        return TokenModule.BasePosition(tokenName, ship)\r\n    else\r\n        return nearPos\r\n    end\r\nend\r\n\r\n-- Check which tokens belong to a ship and queue them to be moved with it\r\n-- Needs the MoveModule.WaitForResting fired to actually use stuff from this queue\r\nTokenModule.QueueShipTokensMove = function(ship)\r\n    local selfTokens = TokenModule.GetShipTokens(ship)\r\n    local waitTable = {tokens = {}, ship=ship}\r\n    -- Save relative position/rotation\r\n    for k,token in pairs(selfTokens) do\r\n        print(\"QueueShipTokensMove: \" .. token.getName())\r\n        local relPos = Vect.RotateDeg(Vect.Between(ship.getPosition(), token.getPosition()), -1*ship.getRotation()[2])\r\n        local relRot = token.getRotation()[2] - ship.getRotation()[2]\r\n        table.insert(waitTable.tokens, {ref=token, relPos=relPos, relRot=relRot})\r\n    end\r\n    table.insert(MoveModule.tokenWaitQueue, waitTable)\r\nend\r\n\r\n-- Table for locks to be set and callback to trigger their naming and coloring\r\n-- Entry: {lock=targetLockRef, color=colorToTint, name=nameToSet}\r\nTokenModule.locksToBeSet = {}\r\n\r\n-- Callback to set ALL the locks in wueue\r\nfunction TokenModule_SetLocks()\r\n    for k,info in pairs(TokenModule.locksToBeSet) do\r\n        print(\"lock: \" .. tostring(info.lock))\r\n        info.lock.call('manualSet', {color=info.color, name=info.name})\r\n        info.lock.highlightOn({0,0,0}, 0.01)\r\n\r\n        if info.ship ~= nil then\r\n            info.lock.call('setOwner', {player=info.color, ship=info.ship})\r\n        end\r\n\r\n        if info.target ~= nil then\r\n            info.lock.call('assignToShip', {ship=info.target})\r\n        end\r\n    end\r\n    TokenModule.locksToBeSet = {}\r\nend\r\n\r\n-- Table for locks to be set and callback to trigger their naming and coloring\r\n-- Entry: {lock=targetLockRef, color=colorToTint, name=nameToSet}\r\nTokenModule.tractorsToBeSet = {}\r\n\r\n-- Callback to set ALL the locks in wueue\r\nfunction TokenModule_SetTractors()\r\n    for k,info in pairs(TokenModule.tractorsToBeSet) do\r\n        info.tractor.call('manualSet',{ref=info.ref})\r\n        info.tractor.highlightOn({0,0,0}, 0.01)\r\n    end\r\n    TokenModule.tractorsToBeSet = {}\r\nend\r\n\r\n-- Table for tokens to be flipped and callback to trigger their flipping\r\n-- Entry: token\r\nTokenModule.tokensToBeFlipped = {}\r\n\r\nfunction TokenModule_FlipTokens()\r\n    for _, token in pairs(TokenModule.tokensToBeFlipped) do\r\n        token.flip()\r\n    end\r\n    TokenModule.tokensToBeFlipped = {}\r\nend\r\n\r\n\r\n-- Table for locks to be set and callback to trigger their naming and coloring\r\n-- Entry: {lock=targetLockRef, color=colorToTint, name=nameToSet}\r\nTokenModule.ionsToBeSet = {}\r\n\r\n-- Callback to set ALL the locks in wueue\r\nfunction TokenModule_SetIons()\r\n    for k,info in pairs(TokenModule.ionsToBeSet) do\r\n        info.ion.call('manualSet',{ref=info.ref})\r\n        info.ion.highlightOn({0,0,0}, 0.01)\r\n    end\r\n    TokenModule.ionsToBeSet = {}\r\nend\r\n\r\n-- Take a token of some type and move to some position\r\n-- Player color argument only matters when taking target locks\r\n-- Returns ref to a newly taken token\r\n-- Highlights the token with type-aware color\r\nTokenModule.TakeToken = function(type, playerColor, dest, flip)\r\n    local takeTable = {}\r\n    if dest ~= nil then\r\n        takeTable.position = dest\r\n    end\r\n    local highlightColor = TokenModule.tokenSources[type].hlColor\r\n    if type == 'Target Lock' then\r\n        takeTable.callback = 'TokenModule_SetLocks'\r\n        takeTable.callback_owner = Global\r\n    elseif type == 'Ion' then\r\n        takeTable.callback = 'TokenModule_SetIons'\r\n        takeTable.callback_owner = Global\r\n    elseif type == 'Tractor' then\r\n        takeTable.callback = 'TokenModule_SetTractors'\r\n        takeTable.callback_owner = Global\r\n    elseif flip == true then\r\n        takeTable.callback = 'TokenModule_FlipTokens'\r\n        takeTable.callback_owner = Global\r\n    end\r\n    local newToken = TokenModule.tokenSources[type].src.takeObject(takeTable)\r\n    newToken.highlightOn(highlightColor, 3)\r\n    return newToken\r\nend\r\n\r\n-- Get owner info from a token or positions\r\n-- Return:  {\r\n--      token   <- passed token ref if arg was a token ref\r\n--      owner   <- ship ref to owner, nil if none\r\n--      dist    <- distance to owner (igu)\r\n--      margin  <- how far from owner token would have to be moved to change owner\r\n--          }\r\nTokenModule.TokenOwnerInfo = function(tokenPos)\r\n    local pos = nil\r\n        local out = {token=nil, owner=nil, dist=0, margin=-1}\r\n    if type(tokenPos) == 'table' then\r\n        pos = tokenPos\r\n    elseif type(tokenPos) == 'userdata' then\r\n        out.token = tokenPos\r\n        pos = tokenPos.getPosition()\r\n    end\r\n    local nearShips = ObjType.GetNearOfType(pos, TokenModule.tokenReachDistance, 'ship')\r\n    if nearShips[1] == nil then return out end\r\n    local baseDist = {}\r\n    -- Take the base size into account for distances\r\n    for k,ship in pairs(nearShips) do\r\n        local realDist = Vect.Distance(pos, ship.getPosition())\r\n        local size = ship.getTable(\"Data\").Size or 'small'\r\n        if size == 'large' then\r\n          realDist = realDist - Convert_mm_igu(10)\r\n        elseif size == 'medium' then\r\n          realDist = realDist - Convert_mm_igu(5)\r\n        end\r\n        table.insert(baseDist, {ship=ship, dist=realDist})\r\n    end\r\n    local nearest = {ship=nil, dist=999}\r\n    local nextNearest = {ship=nil, dist=999}\r\n    for k,data in pairs(baseDist) do\r\n        if data.dist < nearest.dist then\r\n            nextNearest = nearest\r\n            nearest = data\r\n        elseif data.dist < nextNearest.dist then\r\n            nextNearest = data\r\n        end\r\n    end\r\n    out.owner = nearest.ship\r\n    out.dist = nearest.dist\r\n    if nextNearest.ship == nil then\r\n        out.margin = 999\r\n    else\r\n        out.margin = (nextNearest.dist-nearest.dist)/2\r\n    end\r\n    return out\r\nend\r\n\r\n-- Return table of MoveModule.GetTokenInfo entries for all tokens withis some distance of given position\r\nTokenModule.GetNearTokensInfo = function(pos, dist)\r\n    local reachDist = TokenModule.tokenReachDistance\r\n    if dist ~= nil then\r\n        reachDist = dist\r\n    end\r\n    local nearTokens = ObjType.GetNearOfType(pos, reachDist, 'token')\r\n    local shipTokensInfo = {}\r\n    for k,token in pairs(nearTokens) do\r\n        local tokenInfo = TokenModule.TokenOwnerInfo(token)\r\n        table.insert(shipTokensInfo, tokenInfo)\r\n    end\r\n    return shipTokensInfo\r\nend\r\n\r\nTokenModule.GetShipTokenCount = function(ship, token_name)\r\n    local count = 0;\r\n\r\n    for _, token in pairs(TokenModule.GetShipTokens(ship)) do\r\n        if token.getName() == token_name and token.getVar('deleted') == nil then\r\n            local quantity = token.getQuantity()\r\n            if quantity < 0 then\r\n                quantity = 1\r\n            end\r\n            count = count + quantity\r\n        end\r\n    end\r\n\r\n    return count\r\nend\r\n\r\n-- Return table of MoveModule.GetTokenInfo enties for all tokens that are owned by given ship\r\nTokenModule.GetShipTokensInfo = function(ship)\r\n    local shipTokens = TokenModule.GetShipTokens(ship)\r\n    local shipTokensInfo = {}\r\n    for k,token in pairs(shipTokens) do\r\n        table.insert(shipTokensInfo, TokenModule.TokenOwnerInfo(token))\r\n    end\r\n\r\n    return shipTokensInfo\r\nend\r\n\r\n-- Return table of object references for all tokens that are owned by given ship\r\nTokenModule.GetShipTokens = function(ship)\r\n    return ship.call(\"GetTokens\")\r\nend\r\n\r\n-- Returns whether any of this ships tokens are currently smooth moving.\r\nTokenModule.DoesShipHasAnySmoothMovingTokens = function(ship)\r\n    local ship_tokens = TokenModule.GetShipTokens(ship)\r\n    for _, token in pairs(ship_tokens) do\r\n        if token.isSmoothMoving() then\r\n            return true\r\n        end\r\n    end\r\n\r\n    return false\r\nend\r\n\r\n-- Clear given distance within position from tokens\r\n-- If given third argument, this hip tokens will be ignored\r\n-- Tokens that have an owner will be moved near(er)/on it\r\n-- Stray tokens will be yanked away\r\nTokenModule.ClearPosition = function(pos, dist, ignoreShip)\r\n    local clearDist = dist + Convert_mm_igu(20)\r\n    local posTokenInfo = TokenModule.GetNearTokensInfo(pos, clearDist)\r\n    for k,tokenInfo in pairs(posTokenInfo) do\r\n        if tokenInfo.token.getButtons() == nil then\r\n            if tokenInfo.owner ~= nil and tokenInfo.owner ~= ignoreShip then\r\n                local visPos = TokenModule.VisiblePosition(tokenInfo.token.getName(), tokenInfo.owner)\r\n                if Vect.Distance(visPos, pos) <= clearDist then\r\n                    local basePos = TokenModule.BasePosition(tokenInfo.token.getName(), tokenInfo.owner)\r\n                    tokenInfo.token.setPositionSmooth(basePos)\r\n                else\r\n                    tokenInfo.token.setPositionSmooth(visPos)\r\n                end\r\n            else\r\n                local ptVect = Vect.Between(pos, tokenInfo.token.getPosition())\r\n                ptVect[2] = 0\r\n                local actDist = Vect.Distance(tokenInfo.token.getPosition(), pos)\r\n                local distToMove = 2*clearDist - actDist\r\n                local targetPos = Vect.Sum(tokenInfo.token.getPosition(), Vect.SetLength(ptVect, distToMove))\r\n                targetPos[2] = targetPos[2] + 0.5\r\n                tokenInfo.token.setPositionSmooth(targetPos)\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nTokenModule.AssignToken = function(token, ship)\r\n    Wait.condition(function()\r\n        local guid = token.getGUID()\r\n        if (TokenModule.tokenAssignments[guid] ~= nil) and (TokenModule.tokenAssignments[guid].tag == 'Figurine') then\r\n            if TokenModule.tokenAssignments[guid].getVar(\"RemoveToken\") ~= nil then\r\n                TokenModule.tokenAssignments[guid].call(\"RemoveToken\", {token=token})\r\n            end\r\n        end\r\n        TokenModule.tokenAssignments[guid] = ship\r\n        if ship ~= nil then\r\n            token.setDescription(\"Assigned to \" .. ship.getName())\r\n            if ship.tag == 'Figurine' then\r\n                if ship.getVar(\"AddToken\") ~= nil then\r\n                    ship.call(\"AddToken\", {token=token})\r\n                end\r\n            end\r\n        else\r\n            token.setDescription(\"Unassigned\")\r\n        end\r\n    end,\r\n    function() return  (not token.spawning) end)\r\n\r\nend\r\n\r\nTokenModule.UnAssignToken = function(token)\r\n    local guid = token.getGUID()\r\n    if (TokenModule.tokenAssignments[guid] ~= nil) and (TokenModule.tokenAssignments[guid].tag == 'Figurine') then\r\n        if TokenModule.tokenAssignments[guid].getVar(\"RemoveToken\") ~= nil then\r\n            TokenModule.tokenAssignments[guid].call(\"RemoveToken\", {token=token})\r\n        end\r\n    end\r\n    TokenModule.tokenAssignments[guid] = nil\r\n    token.setDescription(\"Unassigned\")\r\nend\r\n\r\nfunction getShipTokenIsAssignedTo(args)\r\n    if args.token then\r\n      local guid = args.token.getGUID()\r\n      return TokenModule.tokenAssignments[guid]\r\n    end\r\n    return nil\r\nend\r\n\r\n\r\n-- END TOKEN MODULE\r\n--------\r\n\r\n\r\nfunction proxyPerformAction(table)\r\n    ship = table[1]\r\n    actionType = table[2]\r\n    playerColor = table[3]\r\n    args = table[4] or {}\r\n    DialModule.PerformAction(ship, actionType, playerColor, args)\r\nend\r\n\r\nDialModule = {}\r\n-- Perform an automated action\r\n-- Can be called externally for stuff like range ruler spawning\r\nDialModule.PerformAction = function(ship, type, playerColor, args)\r\n    local tokenActions = ' Focus Calculate Evade Stress Strain Deplete Target Lock Ion Cloak Jam Reinforce Disarm Tractor Dummy '\r\n    announceInfo = {type='action'}\r\n    -- Ruler spawning\r\n    if type:find('ruler') ~= nil then\r\n        local scPos = type:find(':')\r\n        local rulerCode = type:sub(scPos+1,-1)\r\n        RulerModule.ToggleRuler(ship, rulerCode)\r\n        return\r\n    elseif type:find('spawnMoveTemplate') ~= nil then\r\n        local size = ship.getTable('Data').Size\r\n        if size ~= 'huge' then\r\n            if DialModule.DeleteTemplate(ship) == false then\r\n                local scPos = type:find(':')\r\n                local dialCode = type:sub(scPos+1,-1)\r\n                if DialModule.SpawnTemplate(ship, dialCode) ~= nil then\r\n                    announceInfo.note = 'spawned a move template'\r\n                else\r\n                    announceInfo.note = 'looks at you weird'\r\n                end\r\n            else\r\n                return\r\n            end\r\n        else\r\n            return\r\n        end\r\n    elseif type:find('deleteMoveTemplate') ~= nil then\r\n        local size = ship.getTable('Data').Size\r\n        if size ~= 'huge' then\r\n            DialModule.DeleteTemplate(ship)\r\n        end\r\n        return\r\n    elseif tokenActions:find(' ' .. type .. ' ') ~= nil then\r\n        if args ~= nil and args.remove == true then\r\n            local tokens = ship.call(\"GetTokens\",{type=string.lower(type)})\r\n            local delToken = nil\r\n            for k,token in pairs(tokens) do\r\n                if token.getVar('deleted') == nil then\r\n                    delToken = token\r\n                end\r\n            end\r\n            if delToken == nil then\r\n                announceInfo.note = 'tried to shed a ' .. type .. ' but doesn\\'t have any'\r\n            else\r\n                announceInfo.note = 'sheds a ' .. type .. ' token'\r\n                TokenModule.UnAssignToken(delToken)\r\n                delToken.destruct()\r\n            end\r\n        else\r\n\r\n            local destinationShip = ship\r\n            if args ~= nil and args.target ~= nil then\r\n                destinationShip = args.target\r\n            end\r\n            local dest = TokenModule.VisiblePosition(type, destinationShip)\r\n            local flipToken = args ~= nil and args.flip == true\r\n            local newToken = TokenModule.TakeToken(type, playerColor, dest, flipToken)\r\n\r\n            if type == 'Target Lock' then\r\n                local lockArguments = {ship = ship, lock=newToken, name=ship.getName(), color=playerColor}\r\n                if args ~= nil and args.ship ~= nil and args.target ~= nil then\r\n                    -- The AI system passes in arguments to automatically assign the\r\n                    -- lock. Process these if they've been passed in.\r\n                    lockArguments.ship=args.ship\r\n                    lockArguments.target=args.target\r\n                end\r\n                table.insert(TokenModule.locksToBeSet, lockArguments)\r\n                announceInfo.note = 'acquired a target lock'\r\n                TokenModule.UnAssignToken(newToken) -- Target locks are not assigned to the spawning ship\r\n            elseif type == 'Ion' then\r\n                table.insert(TokenModule.ionsToBeSet, {ion=newToken, ref=ship})\r\n                announceInfo.note = 'takes an ion token'\r\n                TokenModule.AssignToken(newToken, ship)\r\n            elseif type == 'Tractor' then\r\n                table.insert(TokenModule.tractorsToBeSet, {tractor=newToken, ref=ship})\r\n                announceInfo.note = 'takes a tractor token'\r\n                TokenModule.AssignToken(newToken, ship)\r\n            else\r\n                if flipToken == true then\r\n                    table.insert(TokenModule.tokensToBeFlipped, newToken)\r\n                end\r\n                if type == 'Evade' then\r\n                    announceInfo.note = 'takes an evade token'\r\n                else\r\n                    announceInfo.note = 'takes a ' .. string.lower(type) .. ' token'\r\n                end\r\n                TokenModule.AssignToken(newToken, ship)\r\n            end\r\n        end\r\n    end\r\n    AnnModule.Announce(announceInfo, 'all', ship)\r\nend\r\n\r\nDialModule.RotateCmd = {\r\n  rot = {direction = 'rotateleft', mount = 'main'},\r\n  rotl = {direction = 'rotateleft', mount = 'main'},\r\n  rotr = {direction = 'rotateright', mount = 'main'},\r\n  rot1 = {direction = 'rotateleft', mount = 'front'},\r\n  rotl1 = {direction = 'rotateleft', mount = 'front'},\r\n  rotr1 = {direction = 'rotateright', mount = 'front'},\r\n  rot2 = {direction = 'rotateleft',  mount = 'rear'},\r\n  rotl2 = {direction = 'rotateleft', mount = 'rear'},\r\n  rotr2 = {direction = 'rotateright', mount = 'rear'},\r\n}\r\n\r\n\r\nDialModule.RotateArc = function(ship, cmd)\r\n    ship.call(\"RotateAttachedArcIndicator\", DialModule.RotateCmd[cmd])\r\nend\r\n\r\nDialModule.TurretArcCmd = {\r\n  turret = { mount = 'main'},\r\n  turret1 = { mount = 'front'},\r\n  turret2 = { mount = 'rear'},\r\n}\r\n\r\n\r\nDialModule.TurretArc = function(ship, cmd)\r\n    local arc = ship.call(\"GetTurretArc\", DialModule.TurretArcCmd[cmd])\r\n    if arc then\r\n      RulerModule.ToggleRuler(ship, string.upper(arcToCmnd[arc]))\r\n    end\r\nend\r\n\r\n\r\n\r\n-- Spawned tempaltes are kept there\r\n-- Entry: {ship=shipRef, template=templateObjRef}\r\nDialModule.SpawnedTemplates = {}\r\n\r\n-- Position data for template spawning\r\n-- \"Trim\" entries are to fine-tune the position\r\n-- (its quite rough by the numbers since their origin was not perfectly at the center)\r\nDialModule.TemplateData = {}\r\nDialModule.TemplateData.straight = {}\r\nDialModule.TemplateData.straight[1] = {0, -2.5, 20, 0}\r\nDialModule.TemplateData.straight[2] = {0, -2.5, 40, 0}\r\nDialModule.TemplateData.straight[3] = {0, -2.5, 60, 0}\r\nDialModule.TemplateData.straight[4] = {0, -2.5, 80, 0}\r\nDialModule.TemplateData.straight[5] = {0, -2.5, 100, 0}\r\nDialModule.TemplateData.bank = {}\r\nDialModule.TemplateData.bank.leftRot = 45\r\nDialModule.TemplateData.bank.trim = { left = {{-2,0,-4,0}, {-5.5,0,-5.2,0}, {-9.3,0,-6.45,0}}, right={{4.2,0,1.2,0}, {7.8,0,-0.3,0}, {11.5,0,-1.4,0}} }\r\nDialModule.TemplateData.bank[1] = {80*(1-math.cos(math.pi/8)), 0, 80*math.sin(math.pi/8), 180}\r\nDialModule.TemplateData.bank[2] = {130*(1-math.cos(math.pi/8)), 0, 130*math.sin(math.pi/8), 180}\r\nDialModule.TemplateData.bank[3] = {180*(1-math.cos(math.pi/8)), 0, 180*math.sin(math.pi/8), 180}\r\nDialModule.TemplateData.bankSlip = {}\r\nDialModule.TemplateData.bankSlip.leftRot = 45\r\nDialModule.TemplateData.bankSlip.trim = { left = {{-2,0,-4,0}, {-5.5,0,-5.2,0}, {-9.3,0,-6.45,0}}, right={{4.2,0,1.2,0}, {7.8,0,-0.3,0}, {11.5,0,-1.4,0}} }\r\nDialModule.TemplateData.bankSlip[1] = {80*(1-math.cos(math.pi/8)), 0, 80*math.sin(math.pi/8), 180}\r\nDialModule.TemplateData.bankSlip[2] = {130*(1-math.cos(math.pi/8)), 0, 130*math.sin(math.pi/8), 180}\r\nDialModule.TemplateData.bankSlip[3] = {180*(1-math.cos(math.pi/8)), 0, 180*math.sin(math.pi/8), 180}\r\nDialModule.TemplateData.turn = {}\r\nDialModule.TemplateData.turn.leftRot = 90\r\nDialModule.TemplateData.turn.trim = { left = {{0,-2.5,0,0}, {-3,-2.5,-3.66,0}, {-4.7,-2.5,-7.5,0}}, right={{0,-2.5,0,0}, {3,-2.5,-4.1,0}, {4.5,-2.5,-7.8,0}} }\r\nDialModule.TemplateData.turn[1] = {35*(1-math.cos(math.pi/4))+2, 0, 35*math.sin(math.pi/4)-2, 180}\r\nDialModule.TemplateData.turn[2] = {62.5*(1-math.cos(math.pi/4))+5, 0, 62.5*math.sin(math.pi/4)-4, 180}\r\nDialModule.TemplateData.turn[3] = {90*(1-math.cos(math.pi/4))+9, 0, 90*math.sin(math.pi/4)-6, 180}\r\nDialModule.TemplateData.talon = {}\r\nDialModule.TemplateData.talon.leftRot = 90\r\nDialModule.TemplateData.talon.trim = { left = {{0,-2.5,0,0}, {-3,-2.5,-3.66,0}, {-4.7,-2.5,-7.5,0}}, right={{0,-2.5,0,0}, {3,-2.5,-4.1,0}, {4.5,-2.5,-7.8,0}} }\r\nDialModule.TemplateData.talon[1] = {35*(1-math.cos(math.pi/4))+2, 0, 35*math.sin(math.pi/4)-2, 180}\r\nDialModule.TemplateData.talon[2] = {62.5*(1-math.cos(math.pi/4))+5, 0, 62.5*math.sin(math.pi/4)-4, 180}\r\nDialModule.TemplateData.talon[3] = {90*(1-math.cos(math.pi/4))+9, 0, 90*math.sin(math.pi/4)-6, 180}\r\n\r\nDialModule.TemplateData.baseOffset = {}\r\nDialModule.TemplateData.baseOffset.small = {0, 0, 20, 0}\r\nDialModule.TemplateData.baseOffset.medium = {0, 0, 30, 0}\r\nDialModule.TemplateData.baseOffset.large = {0, 0, 40, 0}\r\n\r\n-- Spawn a tempalte on given ship\r\n-- dialCode is move code PLUS identifier if ship already did it or not\r\n-- be3_A means \"spawn a bank left 3 template behind me\" (A as in after move)\r\n-- tr1_B means \"spawn a turn right 1 tempalte in front of me\" (B as in before move)\r\n-- Return template reference\r\n-- TODO toggletemplate?\r\nDialModule.SpawnTemplate = function(ship, dialCode)\r\n\r\n    local moveCode = dialCode:sub(1, -3)\r\n    local moveInfo = MoveData.DecodeInfo(moveCode, ship)\r\n    if moveInfo.speed == 0 then\r\n        return nil\r\n    end\r\n    local tempEntry = DialModule.TemplateData[moveInfo.type][moveInfo.speed]\r\n    local baseSize = ship.getTable(\"Data\").Size or 'small'\r\n    tempEntry = Vect.Sum(tempEntry, DialModule.TemplateData.baseOffset[baseSize])\r\n    local ref = ship\r\n    if dialCode:sub(-1,-1) == 'A' then\r\n        ref = MoveModule.GetOldMove(ship, 1)\r\n    end\r\n    --TODO LAST MOVE LOGIC OUT!!!\r\n    --TODO dont barf if no last move\r\n\r\n    if moveInfo.dir == 'left' then\r\n        tempEntry = MoveData.LeftVariant(tempEntry)\r\n        tempEntry[4] = tempEntry[4] + 180 - DialModule.TemplateData[moveInfo.type].leftRot\r\n    end\r\n    if moveInfo.extra == 'reverse' then\r\n        tempEntry = MoveData.ReverseVariant(tempEntry)\r\n        if moveInfo.type ~= 'straight' then\r\n            tempEntry[4] = tempEntry[4] - DialModule.TemplateData[moveInfo.type].leftRot\r\n        end\r\n    end\r\n    if moveInfo.dir ~= nil then\r\n        if moveInfo.extra ~= 'reverse' then\r\n            tempEntry = Vect.Sum(tempEntry, DialModule.TemplateData[moveInfo.type].trim[moveInfo.dir][moveInfo.speed])\r\n        else\r\n            if moveInfo.dir == 'right' then\r\n                moveInfo.dir = 'left'\r\n            elseif moveInfo.dir == 'left' then\r\n                moveInfo.dir = 'right'\r\n            end\r\n            tempEntry = Vect.Sum(tempEntry, Vect.ScaleEach(DialModule.TemplateData[moveInfo.type].trim[moveInfo.dir][moveInfo.speed], {-1, 1, -1, -1}))\r\n        end\r\n    end\r\n\r\n    local finPos = MoveModule.EntryToPos(tempEntry, ref)\r\n    local src = TokenModule.tokenSources[moveInfo.type:sub(1,1) .. moveInfo.speed]\r\n    local newTemplate = src.takeObject({position=finPos.pos, rotation=finPos.rot})\r\n    newTemplate.lock()\r\n    newTemplate.setPosition(finPos.pos)\r\n    newTemplate.setRotation(finPos.rot)\r\n    table.insert(DialModule.SpawnedTemplates, {template=newTemplate, ship=ship})\r\n    return newTemplate\r\nend\r\n\r\n-- Delete template spawned for a ship, return true if deleted, false if there was none\r\nDialModule.DeleteTemplate = function(ship)\r\n    for k,info in pairs(DialModule.SpawnedTemplates) do\r\n        if info.ship == ship then\r\n            if info.template ~= nil then\r\n                info.template.destruct()\r\n            end\r\n            table.remove(DialModule.SpawnedTemplates, k)\r\n            return true\r\n        end\r\n    end\r\n    return false\r\nend\r\n\r\n\r\n\r\n-- Char width table by Indimeco\r\nStringLen = {}\r\nStringLen.charWidthTable = {\r\n        ['`'] = 2381, ['~'] = 2381, ['1'] = 1724, ['!'] = 1493, ['2'] = 2381,\r\n        ['@'] = 4348, ['3'] = 2381, ['#'] = 3030, ['4'] = 2564, ['$'] = 2381,\r\n        ['5'] = 2381, ['%'] = 3846, ['6'] = 2564, ['^'] = 2564, ['7'] = 2174,\r\n        ['&'] = 2777, ['8'] = 2564, ['*'] = 2174, ['9'] = 2564, ['('] = 1724,\r\n        ['0'] = 2564, [')'] = 1724, ['-'] = 1724, ['_'] = 2381, ['='] = 2381,\r\n        ['+'] = 2381, ['q'] = 2564, ['Q'] = 3226, ['w'] = 3704, ['W'] = 4167,\r\n        ['e'] = 2174, ['E'] = 2381, ['r'] = 1724, ['R'] = 2777, ['t'] = 1724,\r\n        ['T'] = 2381, ['y'] = 2564, ['Y'] = 2564, ['u'] = 2564, ['U'] = 3030,\r\n        ['i'] = 1282, ['I'] = 1282, ['o'] = 2381, ['O'] = 3226, ['p'] = 2564,\r\n        ['P'] = 2564, ['['] = 1724, ['{'] = 1724, [']'] = 1724, ['}'] = 1724,\r\n        ['|'] = 1493, ['\\\\'] = 1923, ['a'] = 2564, ['A'] = 2777, ['s'] = 1923,\r\n        ['S'] = 2381, ['d'] = 2564, ['D'] = 3030, ['f'] = 1724, ['F'] = 2381,\r\n        ['g'] = 2564, ['G'] = 2777, ['h'] = 2564, ['H'] = 3030, ['j'] = 1075,\r\n        ['J'] = 1282, ['k'] = 2381, ['K'] = 2777, ['l'] = 1282, ['L'] = 2174,\r\n        [';'] = 1282, [':'] = 1282, ['\\''] = 855, ['\"'] = 1724, ['z'] = 1923,\r\n        ['Z'] = 2564, ['x'] = 2381, ['X'] = 2777, ['c'] = 1923, ['C'] = 2564,\r\n        ['v'] = 2564, ['V'] = 2777, ['b'] = 2564, ['B'] = 2564, ['n'] = 2564,\r\n        ['N'] = 3226, ['m'] = 3846, ['M'] = 3846, [','] = 1282, ['<'] = 2174,\r\n        ['.'] = 1282, ['>'] = 2174, ['/'] = 1923, ['?'] = 2174, [' '] = 1282,\r\n        ['avg'] = 2500\r\n    }\r\n\r\n-- Get real string length per char table\r\nStringLen.GetStringLength = function(str)\r\n    local len = 0\r\n    for i = 1, #str do\r\n        local c = str:sub(i,i)\r\n        if StringLen.charWidthTable[c] ~= nil then\r\n            len = len + StringLen.charWidthTable[c]\r\n        else\r\n            len = len + StringLen.charWidthTable.avg\r\n        end\r\n    end\r\n    return len\r\nend\r\n\r\n-- Get a short name for some ship\r\n-- Avoid user-added LGS\r\n-- Avoid name prepositions as in ambigNames\r\n-- Avoid too short or long names\r\n-- Add a single number/char on the end if there is one on the ship\r\nDialModule.GetShortName = function(ship)\r\n    local shipNameWords = {}\r\n    local numWords = 0\r\n    local ambigNames = 'The Captain Colonel Cartel Lieutenant Commander Old'\r\n    local shipName = ship.getName()\r\n    shipName = shipName:gsub('LGS', '')             -- Delete LGS\r\n    shipName = shipName:match( \"^%s*(.-)%s*$\" )     -- Trim whitespaces\r\n    -- Fill words table\r\n    for word in shipName:gmatch('[\\'\\\"%-%w]+') do\r\n        table.insert(shipNameWords, word)\r\n    end\r\n    -- Delete first word if ambiguous and there's more\r\n    if ambigNames:find(shipNameWords[1]) ~= nil and #shipNameWords > 1 then\r\n        table.remove(shipNameWords, 1)\r\n    end\r\n    -- Fucntion for checking if \"short name\"\r\n    local function sizeJustRight(str)\r\n        if str == nil then\r\n            return false\r\n        end\r\n        return ( (str:len() < 10) --[[and (str:len() > 3)]] )\r\n    end\r\n    -- Delete the first word if too short/long and next is better\r\n    if ( not sizeJustRight(shipNameWords[1]) ) and ( sizeJustRight(shipNameWords[2]) ) then\r\n        table.remove(shipNameWords, 1)\r\n    end\r\n    -- Take the resulting first \"valid\" word\r\n    local shortName = shipNameWords[1]\r\n    -- If there were apostrophes and they are asymmetrical now, trim them\r\n    if ( (string.find('\\'\\\"', shortName:sub(1,1)) ~= nil) or (string.find('\\'\\\"', shortName:sub(-1,-1)) ~= nil) ) and ( shortName:sub(1,1) ~= shortName:sub(-1,-1) ) then\r\n        shortName = shortName:gsub('\\'', '')\r\n        shortName = shortName:gsub('\\\"', '')\r\n    end\r\n    if shipNameWords[#shipNameWords]:len() == 1 then\r\n        shortName = shortName .. ' ' .. shipNameWords[#shipNameWords]\r\n    end\r\n    return shortName\r\nend\r\n\r\n-- END AUTO DIALS MODULE\r\n--------\r\n\r\n--------\r\n-- RULERS MODULE\r\n\r\n-- Since there are many ruler types (models) and commands, this takes carre of all ruler-related handling\r\n-- TO_DO: ActionModule and include it there\r\n\r\nRulerModule = {}\r\n\r\n-- Table of existing spawned rulers\r\n-- Entry: {ship=shipRef, tuler=rulerRef, type=rulerTypeCode}\r\nRulerModule.spawnedRulers = {}\r\n-- Click function for ruler button (destroy)\r\nfunction Ruler_SelfDestruct(obj)\r\n    for k, rTable in pairs(RulerModule.spawnedRulers) do\r\n        if rTable.ruler == obj then\r\n            for _, arcline in pairs(rTable.arclines) do\r\n                if arcline ~= nil then\r\n                    arcline.destruct()\r\n                end\r\n            end\r\n            table.remove(RulerModule.spawnedRulers, k)\r\n            break\r\n        end\r\n    end\r\n    obj.destruct()\r\nend\r\n-- Remove appropriate entry if ruler is destroyed\r\nRulerModule.onObjectDestroyed = function(obj)\r\n    for k,info in pairs(RulerModule.spawnedRulers) do\r\n        if info.ship == obj or info.ruler == obj then\r\n            if info.ship == obj then\r\n                info.ruler.destruct()\r\n            end\r\n            for _, arcline in pairs(info.arclines) do\r\n                arcline.destruct()\r\n            end\r\n            table.remove(RulerModule.spawnedRulers, k)\r\n            break\r\n        end\r\n    end\r\nend\r\n\r\n-- RULER MESHES DATABASE\r\nRulerModule.meshes = {}\r\nRulerModule.meshes.smallBase = {}\r\nRulerModule.meshes.smallBase.scale = {0.629, 0.629, 0.629}\r\nRulerModule.meshes.smallBase.diffuse = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/arctexture.png'\r\nRulerModule.meshes.smallBase.collider = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/Small_base_Collider.obj'\r\nRulerModule.meshes.smallBase.front = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_front.obj'\r\nRulerModule.meshes.smallBase.fullfront = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_fullfront.obj'\r\nRulerModule.meshes.smallBase.rear = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_back.obj'\r\nRulerModule.meshes.smallBase.fullback = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_fullback.obj'\r\nRulerModule.meshes.smallBase.sideArc = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_side_4.obj'\r\nRulerModule.meshes.smallBase.frontback = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_frontback.obj'\r\nRulerModule.meshes.smallBase.leftright = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_leftright.obj'\r\nRulerModule.meshes.smallBase.bullseye = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_bullseye.obj'\r\nRulerModule.meshes.smallBase.range = {}\r\nRulerModule.meshes.smallBase.range[1] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_range_1.obj'\r\nRulerModule.meshes.smallBase.range[2] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_range_2.obj'\r\nRulerModule.meshes.smallBase.range[3] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_range_3.obj'\r\nRulerModule.meshes.smallBase.range[4] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/small_range_4.obj'\r\n\r\n\r\n-- Ruler meshes for medium base JC\r\nRulerModule.meshes.mediumBase = {}\r\nRulerModule.meshes.mediumBase.scale = {0.629, 0.629, 0.629}\r\nRulerModule.meshes.mediumBase.diffuse = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/arctexture.png'\r\nRulerModule.meshes.mediumBase.collider = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/Medium_base_Collider.obj'\r\nRulerModule.meshes.mediumBase.front = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_front.obj'\r\nRulerModule.meshes.mediumBase.fullfront = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_fullfront.obj'\r\nRulerModule.meshes.mediumBase.rear = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_back.obj'\r\nRulerModule.meshes.mediumBase.fullback = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_fullback.obj'\r\nRulerModule.meshes.mediumBase.sideArc = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_side_4.obj'\r\nRulerModule.meshes.mediumBase.frontback = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_frontback.obj'\r\nRulerModule.meshes.mediumBase.leftright = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_leftright.obj'\r\nRulerModule.meshes.mediumBase.bullseye = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_bullseye.obj'\r\nRulerModule.meshes.mediumBase.range = {}\r\nRulerModule.meshes.mediumBase.range[1] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_range_1.obj'\r\nRulerModule.meshes.mediumBase.range[2] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_range_2.obj'\r\nRulerModule.meshes.mediumBase.range[3] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_range_3.obj'\r\nRulerModule.meshes.mediumBase.range[4] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/medium_range_4.obj'\r\n\r\n\r\nRulerModule.meshes.largeBase = {}\r\nRulerModule.meshes.largeBase.scale = {0.629, 0.629, 0.629}\r\nRulerModule.meshes.largeBase.diffuse = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/arctexture.png'\r\nRulerModule.meshes.largeBase.collider = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/Large_base_Collider.obj'\r\nRulerModule.meshes.largeBase.front = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_front.obj'\r\nRulerModule.meshes.largeBase.fullfront = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_fullfront.obj'\r\nRulerModule.meshes.largeBase.rear = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_back.obj'\r\nRulerModule.meshes.largeBase.fullback = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_fullback.obj'\r\nRulerModule.meshes.largeBase.sideArc = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_side_4.obj'\r\nRulerModule.meshes.largeBase.frontback = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_frontback.obj'\r\nRulerModule.meshes.largeBase.leftright = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_leftright.obj'\r\nRulerModule.meshes.largeBase.bullseye = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_bullseye.obj'\r\nRulerModule.meshes.largeBase.range = {}\r\nRulerModule.meshes.largeBase.range[1] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_range_1.obj'\r\nRulerModule.meshes.largeBase.range[2] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_range_2.obj'\r\nRulerModule.meshes.largeBase.range[3] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_range_3.obj'\r\nRulerModule.meshes.largeBase.range[4] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/large_range_4.obj'\r\n\r\nRulerModule.meshes.hugeBase = {}\r\nRulerModule.meshes.hugeBase.scale = {0.629, 0.629, 0.629}\r\nRulerModule.meshes.hugeBase.diffuse = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/arctexture.png'\r\nRulerModule.meshes.hugeBase.collider = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/Huge_base_Collider.obj'\r\nRulerModule.meshes.hugeBase.front = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_front.obj'\r\nRulerModule.meshes.hugeBase.fullfront = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_fullfront.obj'\r\nRulerModule.meshes.hugeBase.rear = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_back.obj'\r\nRulerModule.meshes.hugeBase.fullback = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_fullback.obj'\r\nRulerModule.meshes.hugeBase.sideArc = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_side_4.obj'\r\nRulerModule.meshes.hugeBase.frontback = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_frontback.obj'\r\nRulerModule.meshes.hugeBase.leftright = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_leftright.obj'\r\nRulerModule.meshes.hugeBase.bullseye = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_bullseye.obj'\r\nRulerModule.meshes.hugeBase.range = {}\r\nRulerModule.meshes.hugeBase.range[1] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_range_1.obj'\r\nRulerModule.meshes.hugeBase.range[2] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_range_2.obj'\r\nRulerModule.meshes.hugeBase.range[3] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_range_3.obj'\r\nRulerModule.meshes.hugeBase.range[4] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_range_15.obj'\r\nRulerModule.meshes.hugeBase.range[5] = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/huge_range_5.obj'\r\n\r\n\r\n-- Avaialble ruler codes:\r\n-- R            - 1-3 range rings\r\n-- R1/R2/R3     - 1/2/3 range rings\r\n-- A            - contextual arc\r\n-- AA           - full ruler\r\n-- AP           - primary arc\r\n-- AS           - side arc\r\n-- AR           - rear arc\r\n-- AT           - turret arc\r\n-- AM           - mobile arc\r\nXW_cmd.AddCommand('r[1-5]?a?', 'rulerHandle')     -- Range \"rings\"\r\nXW_cmd.AddCommand('[fbs][lrfb]?a?', 'rulerHandle')  -- Rulers with arc lines\r\nXW_cmd.AddCommand('leftrighta?', 'rulerHandle')\r\nXW_cmd.AddCommand('frontbacka?', 'rulerHandle')\r\nXW_cmd.AddCommand('bulla?', 'rulerHandle')\r\n\r\n\r\n-- Translate ruler code to a mesh entry\r\nRulerModule.typeToKey = {}\r\nRulerModule.typeToKey.F = 'front'\r\nRulerModule.typeToKey.FF = 'fullfront'\r\nRulerModule.typeToKey.B = 'rear'\r\nRulerModule.typeToKey.FB = 'fullback'\r\nRulerModule.typeToKey.R = 'range'\r\nRulerModule.typeToKey.SL = 'sideArc'\r\nRulerModule.typeToKey.SR = 'sideArc'\r\nRulerModule.typeToKey.FRONTBACK = 'frontback'\r\nRulerModule.typeToKey.LEFTRIGHT = 'leftright'\r\nRulerModule.typeToKey.BULL = 'bullseye'\r\n\r\nRulerModule.typeToArc = {}\r\nRulerModule.typeToArc.F = 'front'\r\nRulerModule.typeToArc.FF = 'fullfront'\r\nRulerModule.typeToArc.B = 'back'\r\nRulerModule.typeToArc.FB = 'fullback'\r\nRulerModule.typeToArc.R1 = 'full'\r\nRulerModule.typeToArc.R2 = 'full'\r\nRulerModule.typeToArc.R3 = 'full'\r\nRulerModule.typeToArc.R = 'full'\r\nRulerModule.typeToArc.SL = 'left'\r\nRulerModule.typeToArc.SR = 'right'\r\nRulerModule.typeToArc.FRONTBACK = 'frontback'\r\nRulerModule.typeToArc.LEFTRIGHT = 'leftright'\r\nRulerModule.typeToArc.BULL = 'bullseye'\r\n\r\nRulerModule.typeToRange = {}\r\nRulerModule.typeToRange.F = 3\r\nRulerModule.typeToRange.FF = 3\r\nRulerModule.typeToRange.B = 3\r\nRulerModule.typeToRange.FB = 3\r\nRulerModule.typeToRange.R1 = 1\r\nRulerModule.typeToRange.R2 = 2\r\nRulerModule.typeToRange.R3 = 3\r\nRulerModule.typeToRange.R = 3\r\nRulerModule.typeToRange.SL = 3\r\nRulerModule.typeToRange.SR = 3\r\nRulerModule.typeToRange.FRONTBACK = 3\r\nRulerModule.typeToRange.LEFTRIGHT = 3\r\nRulerModule.typeToRange.BULL = 3\r\n\r\n-- Get ruler spawn tables for some ship and some ruler code\r\n-- Return table with \"mesh\", \"collider\" and \"scale\" keys\r\n--  (for appropriate ruler)\r\nRulerModule.GetRulerData = function(ship, rulerType)\r\n    local baseSize = ship.getTable(\"Data\").Size or 'small'\r\n    local out = {mesh = nil, collider = nil, scale = nil}\r\n    if rulerType:sub(1,1) == 'R' then\r\n        rKey = tonumber(rulerType:sub(2,2))\r\n        if rKey == nil then\r\n            if baseSize == huge then\r\n                rKey = 6\r\n            else\r\n                rKey = 4\r\n            end\r\n\r\n        end\r\n        out.mesh = RulerModule.meshes[baseSize .. 'Base'].range[rKey]\r\n    else\r\n        local key = RulerModule.typeToKey[rulerType]\r\n        out.mesh = RulerModule.meshes[baseSize .. 'Base'][key]\r\n    end\r\n    out.scale = RulerModule.meshes[baseSize .. 'Base'].scale\r\n    out.collider = RulerModule.meshes[baseSize .. 'Base'].collider\r\n    out.diffuse = RulerModule.meshes[baseSize .. 'Base'].diffuse\r\n    out.material = 3\r\n    return out\r\nend\r\n\r\n-- Return a descriptive arc name of command (for announcements)\r\nRulerModule.DescriptiveName = function(ship, rulerType)\r\n    if rulerType:sub(1,1) == 'R' then\r\n        ranges = rulerType:sub(2,2)\r\n        if ranges == '' then\r\n            ranges = '1-3'\r\n        end\r\n        return 'range ' .. ranges .. ' ruler'\r\n    else\r\n        if rulerType == 'A' then\r\n            rulerType = rulerType .. RulerModule.DefaultShipArc(ship)\r\n        end\r\n        local arcName = RulerModule.typeToKey[rulerType]\r\n        return arcName .. ' arc ruler'\r\n    end\r\nend\r\n\r\n-- Get the default ship arc type code\r\n-- e.g. whip with just primary arc will return code for priamry arc spawn\r\nRulerModule.DefaultShipArc = function(ship)\r\n    return 'A' --Todo Remove this\r\nend\r\n\r\n-- Create tables for spawning a ruler\r\n-- Return:  {\r\n--      params      <- table suitable for spawnObject(params) call\r\n--      custom      <- table suitable for obj.setCustomObject(custom) call\r\n--          }\r\nRulerModule.CreateCustomTables = function(ship, rulerType)\r\n    if rulerType == 'A' then\r\n        rulerType = rulerType .. RulerModule.DefaultShipArc(ship)\r\n    end\r\n    local rulerData = RulerModule.GetRulerData(ship, rulerType)\r\n    local paramsTable = {}\r\n    paramsTable.type = 'Custom_Model'\r\n    paramsTable.position = ship.getPosition()\r\n    paramsTable.rotation = {0, ship.getRotation()[2], 0}\r\n    if rulerType == 'SR' then\r\n        rot = ship.getRotation()[2]\r\n        paramsTable.rotation= {0, rot + 180, 0}\r\n    end\r\n\r\n    paramsTable.scale = rulerData.scale\r\n\r\n    local customTable = {}\r\n\r\n    customTable.mesh = rulerData.mesh\r\n    customTable.collider = rulerData.collider\r\n    customTable.diffuse = rulerData.diffuse\r\n    customTable.material = 3\r\n    return {params = paramsTable, custom = customTable}\r\nend\r\n\r\n-- Spawn a ruler for a ship\r\n-- Returns new ruler reference\r\nRulerModule.SpawnRuler = function(ship, rulerType, beQuiet, include_friendly_ships)\r\n    local rulerData = RulerModule.CreateCustomTables(ship, rulerType)\r\n    if rulerData.custom.mesh == nil then\r\n        return nil\r\n    end\r\n    local newRuler = spawnObject(rulerData.params)\r\n    newRuler.setCustomObject(rulerData.custom)\r\n    newRuler.setColorTint(color(1.0, 0.0, 0.0, 0.5))\r\n\r\n    local arclines = {}\r\n    if RulerModule.typeToArc[rulerType] then\r\n        arclines = CheckArc({ship=ship,arctype=RulerModule.typeToArc[rulerType], range=RulerModule.typeToRange[rulerType], include_friendly_ships=include_friendly_ships})\r\n    end\r\n    table.insert(RulerModule.spawnedRulers, {ship = ship, ruler = newRuler, arclines = arclines,type = rulerType})\r\n    newRuler.lock()\r\n    newRuler.setScale(rulerData.params.scale)\r\n    local button = {click_function = 'Ruler_SelfDestruct', label = 'DEL', position = {0, 0.55, 0}, rotation =  {0, 0, 0}, width = 1200, height = 1200, font_size = 250}\r\n    newRuler.createButton(button)\r\n    return newRuler\r\nend\r\n\r\n-- Delete existing ruler for a ship\r\n-- Return deleted ruler type or nil if there was none\r\nRulerModule.DeleteRuler = function(ship)\r\n    for k,rTable in pairs(RulerModule.spawnedRulers) do\r\n        if rTable.ship == ship then\r\n            for _, arcline in pairs(rTable.arclines) do\r\n                if arcline ~= nil then\r\n                    arcline.destruct()\r\n                end\r\n            end\r\n            rTable.ruler.destruct()\r\n            local destType = rTable.type\r\n            table.remove(RulerModule.spawnedRulers, k)\r\n            return destType\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\n-- Toggle ruler for a ship\r\n-- If a ruler of queried type exists, just delete it and return nil\r\n-- If any other ruler exists, delete it (and spawn queried one), return new ruler ref\r\nRulerModule.ToggleRuler = function(ship, rulerType, beQuiet)\r\n    local destType = RulerModule.DeleteRuler(ship)\r\n\r\n    if destType ~= rulerType then\r\n        includeFriendlies = (#rulerType > 1) and (rulerType:sub(#rulerType,#rulerType) == 'A')\r\n        includeFriendlyText = \"\"\r\n        spawnType = rulerType\r\n        if includeFriendlies then\r\n            spawnType = rulerType:sub(1,-2)\r\n            includeFriendlyText = \" including friendlies\"\r\n        end\r\n        if beQuiet ~= true then\r\n            local annInfo = {type='action'}\r\n            annInfo.note = 'spawned a ' .. RulerModule.DescriptiveName(ship, spawnType) .. includeFriendlyText.. ' (' .. rulerType .. ')'\r\n            AnnModule.Announce(annInfo, 'all', ship)\r\n        end\r\n        ship.setLock(true)\r\n        Wait.frames(function() RulerModule.SpawnRuler(ship, spawnType, beQuiet, includeFriendlies) end,1)\r\n    end\r\nend\r\n\r\n-- END RULERS MODULE\r\n--------\r\n\r\n--------\r\n-- BOMB MODULE\r\n\r\n-- Allows for creating \"bomb drops\" that snap bomb tokens to position\r\n\r\nBombModule = {}\r\n\r\n-- Delete button for the spawned template\r\nBombModule.deleteButton = {click_function = 'BombDrop_SelfDestruct', label = 'Cancel', position = {0, 0.1, 0}, rotation =  {0, 0, 0}, scale = {0.1, 0.1, 0.1}, width = 2000, height = 900, font_size = 400}\r\nfunction BombDrop_SelfDestruct(temp)\r\n    BombModule.DeleteDrop(temp)\r\nend\r\n\r\nBombModule.dropTable = {}\r\n\r\nXW_cmd.AddCommand('b:s[1-5][r]?', 'bombDrop')\r\nXW_cmd.AddCommand('b:b[rle][1-3][r]?', 'bombDrop')\r\nXW_cmd.AddCommand('b:t[rle][1-3][r]?', 'bombDrop')\r\n\r\n-- Spawn a bomb drop, delete old ones\r\n-- If that exact one existed, just delete\r\nBombModule.ToggleDrop = function(ship, dropCode)\r\n    if BombModule.DeleteDrop(ship) ~= dropCode then\r\n        BombModule.SpawnDrop(ship, dropCode)\r\n    end\r\nend\r\n\r\n-- Create a bomb drop with a template\r\nBombModule.SpawnDrop = function(ship, dropCode)\r\n    local scPos = dropCode:find(':')\r\n    local templateCode = dropCode:sub(scPos+1,-1)\r\n    DialModule.DeleteTemplate(ship)\r\n    local dropPos = nil\r\n    local temp = nil\r\n    if dropCode:sub(-1, -1) == 'r' then\r\n        -- FRONT drops\r\n        temp = DialModule.SpawnTemplate(ship, templateCode:sub(1, -2) .. '_B')\r\n        temp.createButton(BombModule.deleteButton)\r\n        dropPos = MoveModule.GetFinalPosData(templateCode:sub(1, -2), ship, true)\r\n        dropPos.finPos.rot[2] = dropPos.finPos.rot[2] - 180\r\n    else\r\n        -- BACK drops\r\n        temp = DialModule.SpawnTemplate(ship, templateCode .. 'r_B')\r\n        temp.createButton(BombModule.deleteButton)\r\n        dropPos = MoveModule.GetFinalPosData(templateCode .. 'r', ship, true)\r\n    end\r\n    if dropPos == nil or temp == nil then return end\r\n    table.insert(BombModule.dropTable, {ship=ship, temp=temp, code=dropCode, dest=dropPos.finPos})\r\nend\r\n\r\n-- Delete existing drop, return deleted code or nil if there was none\r\nBombModule.DeleteDrop = function(temp_ship)\r\n    local newTable = {}\r\n    local deleteCode = nil\r\n    for k,dTable in pairs(BombModule.dropTable) do\r\n        if dTable.ship == temp_ship or dTable.temp == temp_ship then\r\n            deleteCode = dTable.code\r\n            DialModule.DeleteTemplate(dTable.ship)\r\n        else\r\n            table.insert(newTable, dTable)\r\n        end\r\n    end\r\n    BombModule.dropTable = newTable\r\n    return deleteCode\r\nend\r\n\r\n-- Delete drops on ship/template delete\r\nBombModule.onObjectDestroyed = function(obj)\r\n    for k,dTable in pairs(BombModule.dropTable) do\r\n        if dTable.ship == obj or dTable.temp == obj then\r\n            BombModule.DeleteDrop(obj)\r\n        end\r\n    end\r\nend\r\n\r\n-- Bomb type -> offset data\r\nBombModule.tokenOffset = {}\r\nBombModule.tokenOffset.standardAoE = {pos={0, Convert_mm_igu(-2), Convert_mm_igu(-4.5)}, rot={0, 90, 0}}\r\nBombModule.tokenOffset.prox = {pos={0, Convert_mm_igu(-2), Convert_mm_igu(15)}, rot={0, 90, 0}}\r\nBombModule.tokenOffset.cluster = {pos={0, Convert_mm_igu(-2), 0}, rot={0, 180, 0}}\r\nBombModule.tokenOffset.connor = {pos={0, Convert_mm_igu(-2), Convert_mm_igu(21)}, rot={0, 180, 0}}\r\nBombModule.tokenOffset.rgc = {pos={0, Convert_mm_igu(-1), Convert_mm_igu(9.5)}, rot={0, 0, 0}}\r\n\r\n-- Bomb name -> type data\r\nBombModule.snapTable = {}\r\nBombModule.snapTable['Ion Bomb'] = 'standardAoE'\r\nBombModule.snapTable['Proton Bomb'] = 'standardAoE'\r\nBombModule.snapTable['Seismic Charge'] = 'standardAoE'\r\nBombModule.snapTable['Thermal Detonator'] = 'standardAoE'\r\nBombModule.snapTable.Bomblet = 'standardAoE'\r\nBombModule.snapTable['Electro-Proton Bomb'] = 'standardAoE'\r\nBombModule.snapTable['Proximity Mine'] = 'prox'\r\nBombModule.snapTable['Cluster Mine (middle)'] = 'cluster'\r\nBombModule.snapTable['Connor Net'] = 'connor'\r\nBombModule.snapTable['Rigged Cargo Chute debris'] = 'rgc'\r\nBombModule.snapTable['Concussion Bomb'] = 'standardAoE'\r\n\r\n-- Minimum distance to snap\r\nBombModule.snapDist = 1.5\r\n-- Snap on drop\r\nBombModule.OnTokenDrop = function(token)\r\n    -- Get the offset data\r\n    local offset = BombModule.tokenOffset[BombModule.snapTable[token.getName()]]\r\n\r\n    -- Deduct closest bomb drop point within snap distance\r\n    local closest = {dist=BombModule.snapDist+1, pointKey=nil}\r\n    local tPos = token.getPosition()\r\n    for k,dTable in pairs(BombModule.dropTable) do\r\n        local newDist = Vect.Distance(tPos, dTable.dest.pos)\r\n        if newDist < closest.dist then\r\n            closest.dist = newDist\r\n            closest.pointKey = k\r\n            closest.temp = dTable.temp\r\n        end\r\n    end\r\n\r\n    -- If there was one\r\n    if closest.pointKey ~= nil then\r\n        -- Move the token to the snap points\r\n        local drop = BombModule.dropTable[closest.pointKey]\r\n        local destPos = Vect.Sum(drop.dest.pos, Vect.RotateDeg(offset.pos, drop.dest.rot[2]))\r\n        local size = drop.ship.getTable(\"Data\").Size or 'small'\r\n        if size == 'large' then\r\n            destPos = Vect.Sum(destPos, Vect.RotateDeg({0, 0, Convert_mm_igu(-20)}, drop.dest.rot[2]))\r\n        elseif size == 'medium' then\r\n            destPos = Vect.Sum(destPos, Vect.RotateDeg({0, 0, Convert_mm_igu(-10)}, drop.dest.rot[2]))\r\n        end\r\n        local destRot = Vect.Sum(drop.dest.rot, offset.rot)\r\n        destPos[2] = drop.ship.getPosition()[2] + offset.pos[2]\r\n        token.lock()\r\n        token.setPositionSmooth(destPos, false, true)\r\n        token.setRotationSmooth(destRot, false, true)\r\n        XW_cmd.SetBusy(token)\r\n        MoveModule.WaitForResting(token, {pos=destPos, rot=destRot})\r\n        -- Expand clusters\r\n        if token.getName() == 'Cluster Mine (middle)' then\r\n            BombModule.ExpandCluster({pos=destPos, rot=destRot})\r\n        end\r\n        AnnModule.Announce({type='action', note=drop.ship.getName() .. ' dropped a ' .. token.getName():gsub('%(middle%)', 'set')}, 'all')\r\n        closest.temp.destruct()\r\n        return true\r\n    else\r\n        return false\r\n    end\r\nend\r\n\r\n-- Spawn side tokens for cluster mine\r\nBombModule.ExpandCluster = function(center)\r\n    local offset = {Convert_mm_igu(43.5), 0, Convert_mm_igu(-1.5)}\r\n    local tParams = {type='Custom_Token'}\r\n    local tCustom = {image='{verifycache}http://i.imgur.com/MqlYZzR.png', thickness=0.1, merge_distance=5}\r\n\r\n    local t1 = spawnObject(tParams)\r\n    t1.setCustomObject(tCustom)\r\n    t1.lock()\r\n    local destOffset1 = Vect.RotateDeg(offset, center.rot[2])\r\n    t1.setPosition(Vect.Sum(center.pos, destOffset1))\r\n    t1.setRotation(center.rot)\r\n    t1.setScale({0.4554, 0.4554, 0.4554})\r\n    t1.setName('Cluster Mine (side)')\r\n\r\n    local t2 = spawnObject(tParams)\r\n    t2.setCustomObject(tCustom)\r\n    t2.lock()\r\n    local destOffset2 = Vect.RotateDeg(Vect.ScaleEach(offset, {-1, 1, 1}), center.rot[2])\r\n    t2.setPosition(Vect.Sum(center.pos, destOffset2))\r\n    t2.setRotation(center.rot)\r\n    t2.setScale({0.4554, 0.4554, 0.4554})\r\n    t2.setName('Cluster Mine (side)')\r\nend\r\n\r\n-- END BOMB MODULE\r\n--------\r\n\r\n--------\r\n-- ANNOUNCEMENTS MODULE\r\n\r\n-- For writing out stuff in chat\r\n\r\nAnnModule = {}\r\n\r\n-- COLOR CONFIGURATION FOR ANNOUNCEMENTS\r\nAnnModule.announceColor = {}\r\nAnnModule.announceColor.moveClear = {0.1, 1, 0.1}     -- Green\r\nAnnModule.announceColor.moveCollision = {1, 0.7, 0.1} -- Orange\r\nAnnModule.announceColor.action = {0.3, 0.3, 1}        -- Blue\r\nAnnModule.announceColor.historyHandle = {0.1, 1, 1}   -- Cyan\r\nAnnModule.announceColor.error = {1, 0.15, 0.15}       -- Red\r\nAnnModule.announceColor.warn = {1, 0.4, 0}            -- Red - orange\r\nAnnModule.announceColor.info = {0.8, 0.1, 0.8}        -- Purple\r\n\r\n-- Notify color or all players of some event\r\n-- announceInfo: {type=typeOfEvent, note=notificationString}\r\nAnnModule.Announce = function(info, target, shipPrefix)\r\n    local annString = ''\r\n    local annColor = {1, 1, 1}\r\n    local shipName = ''\r\n\r\n    if shipPrefix ~= nil then\r\n        if type(shipPrefix) == 'string' then\r\n            shipName = shipPrefix .. ' '\r\n        elseif type(shipPrefix) == 'userdata' then\r\n            shipName = shipPrefix.getName() .. ' '\r\n        end\r\n    end\r\n    if info.type == 'move' or info.type == 'stationary' then\r\n        if info.collidedShip == nil then\r\n            annString = shipName .. info.note .. ' (' .. info.code .. ')'\r\n            annColor = AnnModule.announceColor.moveClear\r\n        else\r\n            annString = shipName .. info.note .. ' (' .. info.code .. ') but is now touching ' .. info.collidedShip.getName()\r\n            annColor = AnnModule.announceColor.moveCollision\r\n        end\r\n    elseif info.type == 'overlap' then\r\n        annString = shipName .. info.note .. ' (' .. info.code .. ') but there was no space to complete the move'\r\n        annColor = AnnModule.announceColor.moveCollision\r\n    elseif info.type == 'historyHandle' then\r\n        annString = shipName .. info.note\r\n        annColor = AnnModule.announceColor.historyHandle\r\n    elseif info.type == 'action' then\r\n        annString = shipName .. info.note\r\n        annColor = AnnModule.announceColor.action\r\n    elseif info.type:find('error') ~= nil then\r\n        annString = shipName .. info.note\r\n        annColor = AnnModule.announceColor.error\r\n    elseif info.type:find('warn') ~= nil then\r\n        annString = shipName .. info.note\r\n        annColor = AnnModule.announceColor.warn\r\n    elseif info.type:find('info') ~= nil then\r\n        annString = shipName .. info.note\r\n        annColor = AnnModule.announceColor.info\r\n    end\r\n\r\n    if target == 'all' then\r\n        printToAll(annString, annColor)\r\n    else\r\n        printToColor(target, annString, annColor)\r\n    end\r\nend\r\n\r\n-- Record of players that already got note of some ID\r\n-- Key: playerSteamID\r\n-- Value: table of true's on keys of received noteIDs\r\nAnnModule.notifyRecord = {}\r\n\r\n-- Print note to playerColor\r\n-- Any further calls with same noteID will not notify same player\r\n-- Print to everyone if playerColor is 'all'\r\nAnnModule.NotifyOnce = function(note, noteID, playerColor)\r\n    if playerColor == 'all' then\r\n        local seatedPlayers = getSeatedPlayers()\r\n        for _,color in pairs(seatedPlayers) do\r\n            AnnModule.NotifyOnce(note, noteID, color)\r\n        end\r\n    else\r\n        local steamID = Player[playerColor].steam_id\r\n        if AnnModule.notifyRecord[steamID] == nil then\r\n            AnnModule.notifyRecord[steamID] = {}\r\n        end\r\n        if AnnModule.notifyRecord[steamID][noteID] ~= true then\r\n            broadcastToColor(note, playerColor, AnnModule.announceColor.info)\r\n            AnnModule.notifyRecord[steamID][noteID] = true\r\n        end\r\n    end\r\nend\r\n\r\n\r\n-- END ANNOUNCEMENTS MODULE\r\n--------\r\n\r\n--------\r\n-- DIRECT TTS EVENT HANDLING\r\n-- Watch for changed descriptions, handle destroyed objects, saving et cetera\r\n\r\n-- ~~~~~~\r\n-- CONFIGURATION:\r\n\r\n-- How many frames pass between updating watched objects (ships) list\r\n-- It's so we don't go through massive list of all objects on table each frame (why would we?)\r\nupdateFrameInterval = 120\r\n-- ~~~~~~\r\n\r\nframeCounter = 0\r\nwatchedObj = {}\r\n\r\n-- This is called each frame\r\nfunction update()\r\n    -- If there are no watched objects or frame counter passes threshhold\r\n    if watchedObj[1] == nil or frameCounter > updateFrameInterval then\r\n        watchedObj = {}\r\n        -- Reset the list and add every figurine on the table\r\n        for k,obj in pairs(getAllObjects()) do\r\n            if obj ~= nil and obj.tag == 'Figurine' then\r\n                table.insert(watchedObj, obj)\r\n            end\r\n        end\r\n        frameCounter = 0\r\n    end\r\n\r\n    -- If description is not blank, try processing it\r\n    for k, obj in pairs(watchedObj) do\r\n        if obj ~= nil and obj.getDescription() ~= '' then\r\n          Wait.frames(\r\n            function()\r\n              XW_cmd.Process(obj, obj.getDescription())\r\n            end\r\n          , 1) -- Waiting a frame to allow Animated Ships to pick up command\r\n\r\n        end\r\n    end\r\n\r\n    frameCounter = frameCounter + 1\r\nend\r\n\r\n-- When something is destroyed, it is called as an argument here (with 1 more frame to live)\r\nfunction onObjectDestroyed(dying_object)\r\n    for k, obj in pairs(watchedObj) do if dying_object == obj then table.remove(watchedObj, k) end end\r\n    -- Handle history delete and emergency restore saving\r\n    MoveModule.onObjectDestroyed(dying_object)\r\n    -- Handle killing rulers\r\n    RulerModule.onObjectDestroyed(dying_object)\r\n    -- Handle killing bomb drop templates\r\n    BombModule.onObjectDestroyed(dying_object)\r\n    -- Handle killing tokens\r\n    TokenModule.onObjectDestroyed(dying_object)\r\n    -- Dial manager handeling dying dials and ships\r\n    DialManagerModule.onObjectDestroyed(dying_object)\r\nend\r\n\r\n-- Report peeking on dials\r\nfunction onObjectPeek(object, player_color)\r\n    local token_type = object.getVar(\"__XW_TokenType\")\r\n    if token_type == \"helper:Dial\" then\r\n        if object.is_face_down == false then\r\n            local owning_player = object.getVar(\"playerColor\")\r\n            if owning_player == nil then\r\n                owning_player = \"no one\"\r\n            end\r\n            if player_color ~= owning_player then\r\n                printToAll(player_color .. \" player attempted to peek on \".. object.getName() .. \"s dial, owned by \" .. owning_player .. \"!!\",{1,0,0})\r\n            else\r\n                printToAll(player_color .. \" peeked on \" .. object.getName() .. \"s dial\", {0.6, 0.6, 1})\r\n                local set_manouver = object.getVar(\"setMan\")\r\n                if set_manouver == \"\" then\r\n                    printToColor(object.getName() .. \"s dial is not yet set\" , player_color, {0.6, 0.6, 1})\r\n                else\r\n                    local info = MoveData.DecodeInfo(set_manouver)\r\n                    local manouver = info.speed\r\n                    -- [koiogran] [segnor] [talon] [reverse] [straight] [forward] [backward] [nil]\r\n                    if info.extra == \"koiogran\" then\r\n                        manouver = manouver .. \" \" .. info.extra\r\n                    else\r\n                        manouver = manouver .. \" \" .. info.type\r\n                    end\r\n                    if info.dir ~= nil then\r\n                        manouver = manouver .. \" \" .. info.dir\r\n                    end\r\n                    if info.extra and info.extra ~= \"koiogran\" then\r\n                        manouver = manouver .. \" \" .. info.extra\r\n                    end\r\n                    printToColor(object.getName() .. \"s dial is set to: \" .. manouver , player_color, {0.6, 0.6, 1})\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n\r\n-- END DIRECT TTS EVENT HANDLING\r\n--------\r\n\r\n\r\n--------\r\n-- COLLISION CHECKING MODULE\r\n-- Generally checking if two rotated rectangles overlap\r\n\r\n-- ~~~~~~\r\n-- CONFIGURATION:\r\n\r\n-- How many milimeters should we widen the base from each side\r\n-- With this at zero, sometimes ships overlap after a move\r\naddidionalCollisionMargin_mm = -0.5\r\n-- ~~~~~~\r\n\r\n-- General idea here: http://www.gamedev.net/page/resources/_/technical/game-programming/2d-rotated-rectangle-collision-r2604\r\n-- Originally written by Flolania and Hera Verigo, slightly refitted here\r\n\r\n-- Return corners of ship base in a {xPos, zPos} table format\r\n-- shipInfo: {ship=shipObjectReference, pos=shipPosition, rot=shipRotation}\r\nfunction getCorners(shipInfo)\r\n    local corners = {}\r\n    local spos = shipInfo.pos\r\n    local srot = shipInfo.rot[2]\r\n    local baseSize = shipInfo.ship.getTable(\"Data\").Size or 'small'\r\n    local size = Convert_mm_igu((mm_baseSize[baseSize]/2) + addidionalCollisionMargin_mm)\r\n    local world_coords = {}\r\n    world_coords[1] = {spos[1] - size, spos[3] + size}\r\n    world_coords[2] = {spos[1] + size, spos[3] + size}\r\n    world_coords[3] = {spos[1] + size, spos[3] - size}\r\n    world_coords[4] = {spos[1] - size, spos[3] - size}\r\n    for r, corr in ipairs(world_coords) do\r\n        local xcoord = spos[1] + ((corr[1] - spos[1]) * math.sin(math.rad(srot))) - ((corr[2] - spos[3]) * math.cos(math.rad(srot)))\r\n        local ycoord = spos[3] + ((corr[1] - spos[1]) * math.cos(math.rad(srot))) + ((corr[2] - spos[3]) * math.sin(math.rad(srot)))\r\n        corners[r] = {xcoord,ycoord}\r\n    end\r\n    return corners\r\nend\r\n\r\n-- Return axes perpendicular to sides of two rectangles\r\nfunction getAxis(c1,c2)\r\n    local axis = {}\r\n    axis[1] = {c1[2][1]-c1[1][1],c1[2][2]-c1[1][2]}\r\n    axis[2] = {c1[4][1]-c1[1][1],c1[4][2]-c1[1][2]}\r\n    axis[3] = {c2[2][1]-c2[1][1],c2[2][2]-c2[1][2]}\r\n    axis[4] = {c2[4][1]-c2[1][1],c2[4][2]-c2[1][2]}\r\n    return axis\r\nend\r\n\r\nfunction dot2d(p,o)\r\n    return p[1] * o[1] + p[2] * o[2]\r\nend\r\n\r\n-- Check if any part of two rectangles overlap\r\n-- Rectangles as in ship bases of a proper size\r\n-- shipInfo: {ship=shipObjectReference, pos=shipPosition, rot=shipRotation}\r\nfunction collide(shipInfo1, shipInfo2)\r\n    local c2 = getCorners(shipInfo1)\r\n    local c1 = getCorners(shipInfo2)\r\n    local axis = getAxis(c1,c2)\r\n    local scalars = {}\r\n    for i1 = 1, #axis do\r\n        for i2, set in pairs({c1,c2}) do\r\n            scalars[i2] = {}\r\n            for i3, point in pairs(set) do\r\n                table.insert(scalars[i2],dot2d(point,axis[i1]))\r\n            end\r\n        end\r\n        local s1max = math.max(unpack(scalars[1]))\r\n        local s1min = math.min(unpack(scalars[1]))\r\n        local s2max = math.max(unpack(scalars[2]))\r\n        local s2min = math.min(unpack(scalars[2]))\r\n        if s2min > s1max or s2max < s1min then\r\n            return false\r\n        end\r\n    end\r\n    return true\r\nend\r\n\r\n-- END COLLISION CHECKING MODULE\r\n--------\r\n\r\n-------\r\n-- Local Reference function, for spawning items relative to the quick build card\r\nfunction LocalPos(object, position)\r\n    local rot = object.getRotation()\r\n    local lPos = {position[1], position[2], position[3]}\r\n    -- Z-X-Y extrinsic\r\n    local zRot = RotMatrix('z', rot.z)\r\n    lPos = RotateVector(zRot, lPos)\r\n    local xRot = RotMatrix('x', rot.x)\r\n    lPos = RotateVector(xRot, lPos)\r\n    local yRot = RotMatrix('y', rot.y)\r\n    lPos = RotateVector(yRot, lPos)\r\n\r\n    return Vect_Sum(lPos, object.getPosition())\r\nend\r\n\r\n------\r\n\r\nfunction onObjectSpawned(obj)\r\n    obj.hide_when_face_down = false\r\nend\r\n\r\nXW_cmd.AddCommand('rot[lr]?[12]?', 'rotate')\r\nXW_cmd.AddCommand('turret[12]?', 'turretarc')\r\n\r\n\r\nmountRotations = {\r\n  front = vector(0,0,0),\r\n  left = vector(0,-90,0),\r\n  back = vector(0,180,0),\r\n  right = vector(0,90,0),\r\n  frontback = vector(0,0,0),\r\n  leftright = vector(0,90,0)\r\n}\r\n\r\narcNames = {\r\n  front = \"Front\",\r\n  left = \"Left\",\r\n  back = \"Back\",\r\n  right = \"Right\",\r\n  frontback = \"Front & Back\",\r\n  leftright = \"Left & Right\",\r\n  fullfront = \"Full Front\",\r\n  fullback = \"Full Back\",\r\n  bull = \"Bullseye\",\r\n}\r\n\r\narcToCmnd = {\r\n  front = \"f\",\r\n  left = \"sl\",\r\n  back = \"b\",\r\n  right = \"sr\",\r\n  frontback = \"frontback\",\r\n  leftright = \"leftright\",\r\n  fullfront = \"ff\",\r\n  fullback = \"fb\",\r\n  bull = \"bull\",\r\n}\r\n\r\nnextMountDirection = {\r\n  rotateleft = {\r\n    front = \"left\",\r\n    left = \"back\",\r\n    back = \"right\",\r\n    right = \"front\",\r\n    leftright = \"frontback\",\r\n    frontback = \"leftright\"\r\n  },\r\n  rotateright = {\r\n    front = \"right\",\r\n    left = \"front\",\r\n    back = \"left\",\r\n    right = \"back\",\r\n    leftright = \"frontback\",\r\n    frontback = \"leftright\"\r\n  }\r\n}\r\n\r\nmountDirectionToArcs = {\r\n  front = {\"front\"},\r\n  left = {\"left\"},\r\n  back = {\"back\"},\r\n  right = {\"right\"},\r\n  leftright = {\"left\",\"right\"},\r\n  frontback = {\"front\", \"back\"},\r\n}\r\n\r\nmountToIndex = {\r\n  main = '',\r\n  front = '1',\r\n  rear = '2'\r\n}\r\n\r\n-- Save and load ship data lua scriptState\r\nsaveAndLoadShipStateLua = [[\r\n__XW_Ship = true\r\n\r\nfunction initContextMenu()\r\n    for type, arc in pairs(self.getTable(\"Data\").arcs or {}) do\r\n      if type == 'fixed' then\r\n        for i, fixedarc in pairs(arc.type or {}) do\r\n          self.addContextMenuItem(\"FireArc - \" .. Global.getTable('arcNames')[fixedarc] , function(argument) self.setDescription(Global.getTable('arcToCmnd')[fixedarc]) end, false)\r\n        end\r\n      elseif type == 'turret' then\r\n\r\n        for mount, turret in pairs(arc) do\r\n          local idx = Global.getTable('mountToIndex')[mount]\r\n          self.addContextMenuItem(\"FireArc - \" .. turret.name , function(argument) self.setDescription('turret' .. idx) end, false)\r\n        end\r\n        for mount, turret in pairs(arc) do\r\n          local idx = Global.getTable('mountToIndex')[mount]\r\n          if (turret.type[1] == 'doubleturret') or (#turret.type == 2) then\r\n            self.addContextMenuItem(\"Rot - \" .. turret.name , function(argument) self.setDescription('rot' ..  idx) end, false)\r\n          else\r\n            self.addContextMenuItem(\"Rot L - \" .. turret.name , function(argument) self.setDescription('rotl' .. idx) end, false)\r\n            self.addContextMenuItem(\"Rot R - \" .. turret.name , function(argument) self.setDescription('rotr' .. idx) end, false)\r\n          end\r\n        end\r\n      end\r\n    end\r\n    local config = self.getTable(\"Data\").Config\r\n    if config  then\r\n        self.addContextMenuItem(config.ContextText, function() self.call(SetConfiguration()) end, false)\r\n    end\r\n\r\n\r\n    if Global.getVar('test_AI') then\r\n        self.AddContextMenuItem(\"AI move and action\", function(argument) Global.call(\"PerformAIManeuver\", {['ship']=self, ['take_action']=true}) end, false)\r\n        self.AddContextMenuItem(\"AI move\", function(argument) Global.call(\"PerformAIManeuver\", {['ship']=self, ['take_action']=false}) end, false)\r\n    end\r\n\r\n    self.AddContextMenuItem(\"Mark ship\", function(argument) Global.call(\"MarkShip\", {ship=self}) end, false)\r\n\r\nend\r\n\r\nassigned_tokens = {}\r\n\r\n-- Add token\r\nfunction AddToken(args)\r\n    assigned_tokens[args.token.getGUID()] = args.token\r\nend\r\n\r\n-- Remove token\r\nfunction RemoveToken(args)\r\n    assigned_tokens[args.token.getGUID()] = nil\r\nend\r\n\r\n-- Get Tokens\r\nfunction GetTokens(args)\r\n    local tokens = {}\r\n    for guid, token in pairs(assigned_tokens) do\r\n        if token == nil then\r\n            assigned_tokens[guid] = nil\r\n        elseif ((args == nil) or (args.type == nil) or (args.type == token.getVar(\"__XW_TokenType\"))) or token.hasTag(args.type) then\r\n            table.insert(tokens, assigned_tokens[guid])\r\n        end\r\n    end\r\n    return tokens\r\nend\r\n\r\ncurrent_config = 1\r\n\r\nfunction SetConfiguration(args)\r\n  if not args or not args.ConfigId then\r\n    current_config = (current_config % #self.getTable(\"Data\").Config.States) + 1\r\n  else\r\n    current_config = args.ConfigId\r\n  end\r\n  --Flip config card\r\n  for _, card in pairs(getObjectsWithTag(\"ConfigCard\")) do\r\n    if card.getGUID() == self.getTable(\"Data\").Config.CardGUID then\r\n      if current_config ~= (card.is_face_down and 2 or 1) then\r\n        card.flip()\r\n      end\r\n    end\r\n  end\r\n\r\n  --flip config token\r\n  for _, token in pairs(GetTokens(\"config\")) do\r\n    if current_config ~= (token.is_face_down and 2 or 1) then\r\n      token.flip()\r\n    end\r\n  end\r\n\r\n  local attachments = self.getAttachments()\r\n  for i = #attachments, 1, -1 do\r\n    local attachment = attachments[i]\r\n    if attachment.name == \"Config\" then\r\n      local scale = vector(0.0001,0.0001,0.0001)\r\n      if attachment.description == tostring(current_config) then\r\n          scale = vector(0.629, 0.629, 0.629)\r\n          printToAll(self.getName() .. self.getTable(\"Data\").Config.States[current_config].Message)\r\n      end\r\n      id = self.removeAttachment(attachment.index)\r\n      id.setScale(scale)\r\n      self.addAttachment(id)\r\n\r\n    end\r\n  end\r\n  Wait.frames(DisableAttachedColliders, 1)\r\nend\r\n\r\n\r\nfunction VerifyConfigTextures()\r\n  local texture = self.getCustomObject().diffuse\r\n  local attachments = self.getAttachments()\r\n  for i = #attachments, 1, -1 do\r\n    local attachment = attachments[i]\r\n    if attachment.name == \"Config\" then\r\n      id = self.removeAttachment(attachment.index)\r\n      local custom = id.getCustomObject()\r\n      if custom.diffuse ~= texture then\r\n        custom.diffuse = texture\r\n        id.setCustomObject(custom)\r\n        id = id.reload()\r\n      end\r\n      self.addAttachment(id)\r\n    end\r\n  end\r\nend\r\n\r\narc_indicators = {}\r\n\r\nfunction DisableAttachedColliders()\r\n  for i, child in ipairs(self.getChildren()) do\r\n    if i ~= 1 then\r\n      if child.getComponent(\"MeshCollider\") then\r\n        child.getComponent(\"MeshCollider\").set(\"enabled\", false)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\n\r\nfunction AttachArcIndicator(args)\r\n    local turret_mount = args.mount or 'main'\r\n    local default_direction = args.indicator.getVar(\"default_arc_direction\") or 'front'\r\n    arc_indicators[turret_mount] = {\r\n      arc = default_direction,\r\n      double_arc = args.indicator.getVar(\"double_arc\") or false,\r\n      color_by_id = args.indicator.getVar(\"color_by_id\") or false\r\n    }\r\n    args.indicator.setDescription(turret_mount)\r\n    args.indicator.setRotation(self.getRotation() + Global.getTable('mountRotations')[default_direction] or vector(0,0,0))\r\n    Wait.frames(DisableAttachedColliders, 1)\r\n\r\n\r\n    for i, attachment in pairs(self.getAttachments()) do\r\n      if attachment.name:find(\"Arc Indicator\") and (attachment.description == turret_mount) then\r\n        id = self.removeAttachment(attachment.index)\r\n        destroyObject(id)\r\n      end\r\n    end\r\nend\r\n\r\nfunction DeleteArcIndicator(args)\r\n    local turret_mount = args.mount or 'main'\r\n    for i, attachment in pairs(self.getAttachments()) do\r\n      if attachment.name:find(\"Arc Indicator\") and (attachment.description == turret_mount) then\r\n        id = self.removeAttachment(attachment.index)\r\n        destroyObject(id)\r\n      end\r\n    end\r\nend\r\n\r\nfunction GetNextValidRotation(mount, rotate_direction)\r\n  local direction = arc_indicators[mount].arc\r\n  local arcs = self.getTable('Data').arcs.turret[mount].type or {direction}\r\n  for i = 1,4,1 do\r\n    direction = Global.getTable('nextMountDirection')[rotate_direction][direction]\r\n    if direction == arc_indicators[mount].arc then\r\n      return direction\r\n    end\r\n    for idx, arc in pairs(arcs) do\r\n      if (arc == direction) or (arc == \"singleturret\") or (arc == \"doubleturret\") then\r\n        return direction\r\n      end\r\n    end\r\n  end\r\n  return arc_indicators[mount].arc\r\nend\r\n\r\nfunction RotateAttachedArcIndicator(args)\r\n  local turret_mount = args.mount or 'main'\r\n  for i, attachment in pairs(self.getAttachments()) do\r\n    if attachment.name:find(\"Arc Indicator\") and (attachment.description == turret_mount) then\r\n      local next_direction = GetNextValidRotation(turret_mount, args.direction)\r\n      id = self.removeAttachment(attachment.index)\r\n      arc_indicators[turret_mount].arc = next_direction\r\n      id.setRotation(self.getRotation() + Global.getTable('mountRotations')[next_direction] or vector(0,0,0))\r\n      self.addAttachment(id)\r\n      Wait.frames(DisableAttachedColliders, 1)\r\n      return\r\n    end\r\n  end\r\nend\r\n\r\nfunction GetAvailableMountPositions(args)\r\n    local mount_positions = self.getTable('Data').mountingPoints or {main = {0, 0} }\r\n\r\n    for i, attachment in pairs(self.getAttachments()) do\r\n      if attachment.name:find(\"Arc Indicator\") then\r\n        mount_positions[attachment.description] = nil\r\n      end\r\n    end\r\n\r\n    local ship_position = self.getPosition()\r\n    local ship_rotation = math.rad(self.GetRotation().y) * -1\r\n    for location, position in pairs(mount_positions) do\r\n        local transformed_position = vector(\r\n            ship_position.x + math.cos(ship_rotation) * position[1] - math.sin(ship_rotation) * position[2],\r\n            ship_position.y,\r\n            ship_position.z + math.sin(ship_rotation) * position[1] + math.cos(ship_rotation) * position[2]\r\n        )\r\n        mount_positions[location] = transformed_position\r\n    end\r\n    return mount_positions\r\nend\r\n\r\nfunction GetMountingPosition(args)\r\n    local turret_mount = args.mount or 'main'\r\n    local mount_position = self.getTable('Data').mountingPoints[turret_mount] or {0,0}\r\n    local ship_position = self.getPosition()\r\n    local ship_rotation = math.rad(self.GetRotation().y) * -1\r\n    return vector(\r\n        ship_position.x + math.cos(ship_rotation) * mount_position[1] - math.sin(ship_rotation) * mount_position[2],\r\n        ship_position.y,\r\n        ship_position.z + math.sin(ship_rotation) * mount_position[1] + math.cos(ship_rotation) * mount_position[2]\r\n    )\r\nend\r\n\r\nfunction GetFixedArcs(args)\r\n    local fixed = self.getTable(\"Data\").arcs.fixed or {}\r\n    return fixed.type or {}\r\nend\r\n\r\nfunction GetAllTurretArcs(args)\r\n    local turret_arcs = {}\r\n    -- For attached arc indicators\r\n    for _, arc_indicator in pairs(arc_indicators) do\r\n      --print(\"GetAllTurretArcs: arc_indicator \" .. arc_indicator.arc)\r\n        local new_turret_arcs = Global.getTable(\"mountDirectionToArcs\")[arc_indicator.arc] or {}\r\n        for _, new_arc in pairs(new_turret_arcs) do\r\n            --print(\"GetAllTurretArcs arc \" .. new_arc)\r\n            local found = false\r\n            for _, existing_arc in pairs(turret_arcs) do\r\n                if new_arc == existing_arc then\r\n                    found = true\r\n                    break\r\n                end\r\n            end\r\n\r\n            if found == false then\r\n                table.insert(turret_arcs, new_arc)\r\n            end\r\n        end\r\n    end\r\n\r\n    return turret_arcs\r\nend\r\n\r\nfunction GetAllArcs(args)\r\n    local arcs = GetFixedArcs()\r\n    local turret_arcs = GetAllTurretArcs()\r\n\r\n    for _, turret_arc in pairs(turret_arcs) do\r\n        local found = false\r\n        for _, existing_arc in pairs(arcs) do\r\n            if turret_arc == existing_arc then\r\n                found = true\r\n                break\r\n            end\r\n        end\r\n\r\n        if found == false then\r\n            table.insert(arcs, turret_arc)\r\n        end\r\n    end\r\n\r\n    return arcs\r\nend\r\n\r\nfunction GetAssignedMounts()\r\n    local assigned_mounts = {}\r\n    for i, attachment in pairs(self.getAttachments()) do\r\n      if attachment.name:find(\"Arc Indicator\") then\r\n        table.insert(assigned_mounts, attachment.description)\r\n      end\r\n    end\r\n    return assigned_mounts\r\nend\r\n\r\nfunction GetTurretArcs(args)\r\n    local turret_mount = args.mount or 'main'\r\n    if arc_indicators[turret_mount] ~= nil then\r\n      return Global.getTable(\"mountDirectionToArcs\")[arc_indicators[turret_mount].arc ]\r\n    end\r\n    return {}\r\nend\r\n\r\nfunction GetTurretArc(args)\r\n    local turret_mount = args.mount or 'main'\r\n    if arc_indicators[turret_mount] then\r\n      return arc_indicators[turret_mount].arc\r\n    end\r\n    return nil\r\nend\r\n\r\nfunction SetTurretArc(args)\r\n    local turret_mount = args.mount or 'main'\r\n    for i, attachment in pairs(self.getAttachments()) do\r\n      if attachment.name:find(\"Arc Indicator\") and (attachment.description == turret_mount) then\r\n        id = self.removeAttachment(attachment.index)\r\n        id.setRotation(self.getRotation() + Global.getTable('mountRotations')[args.arc] or vector(0,0,0))\r\n        self.addAttachment(id)\r\n        Wait.frames(DisableAttachedColliders, 1)\r\n      end\r\n    end\r\nend\r\n\r\nfunction GetTurretType(args)\r\n    local turret_mount = args.mount or 'main'\r\n    local turret = self.getTable('Data').arcs.turret[turret_mount]\r\n    if turret then\r\n      return turret.type\r\n    end\r\n    return nil;\r\nend\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    local state = {shipData=self.getTable(\"Data\"), arcIndicators=self.getTable(\"arc_indicators\")}\r\n    state.finishedSetup = self.getVar(\"finished_setup\")\r\n    state.tokenData = {tokens={}}\r\n    state.owningPlayer = self.getVar(\"owningPlayer\")\r\n    for guid, _ in pairs(assigned_tokens) do\r\n        table.insert(state.tokenData.tokens, guid)\r\n    end\r\n\r\n    return JSON.encode(state)\r\nend\r\n\r\n\r\n-- Restore self state\r\nfunction onLoad(savedData)\r\n    --print(\"OnLoad: \".. self.getName() .. \" \" .. savedData)\r\n    if savedData ~= \"\" and Data == nil then\r\n        local state =  JSON.decode(savedData)\r\n        self.setTable(\"Data\", state.shipData)\r\n        self.setTable(\"arc_indicators\", state.arcIndicators)\r\n        self.setVar(\"finished_setup\", state.finishedSetup)\r\n        self.setVar(\"owningPlayer\", state.owningPlayer)\r\n        initContextMenu()\r\n        for _, guid in ipairs(state.tokenData.tokens) do\r\n            Global.call('API_AssignToken',{token=getObjectFromGUID(guid), ship = self})\r\n        end\r\n    end\r\n    VerifyConfigTextures()\r\nend\r\n]]\r\n\r\n\r\npilotCardScript =\r\n[[\r\ndial = nil\r\nship = nil\r\nfunction addTintObject(params)\r\n    if params[1] == \"ship\" then\r\n      ship = params[2]\r\n    elseif params[1] == \"dial\" then\r\n      dial = params[2]\r\n    end\r\nend\r\n\r\nfunction DisableAttachedColliders()\r\n  for i, child in ipairs(self.getChildren()) do\r\n    if i ~= 1 then\r\n      if child.getComponent(\"MeshCollider\") then\r\n        child.getComponent(\"MeshCollider\").set(\"enabled\", false)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction onUpdate()\r\n    local tint = self.getColorTint()\r\n    if tint ~= color(1,1,1,1) then\r\n      self.setColorTint(color(1,1,1,1))\r\n      if dial ~= nil then\r\n        dial.setColorTint(tint)\r\n      end\r\n\r\n      for i, attachment in pairs(self.getAttachments()) do\r\n        id = self.removeAttachment(attachment.index)\r\n        id.setColorTint(tint)\r\n        self.addAttachment(id)\r\n      end\r\n\r\n      if ship ~= nil then\r\n        local data = ship.getTable(\"Data\")\r\n        data.ColorId = tint\r\n        ship.setTable(\"Data\", data)\r\n        for i, attachment in pairs(ship.getAttachments()) do\r\n          id = ship.removeAttachment(0) -- This process puts the front attachment in the back, and the index is rearranged\r\n          if id.getName():find(\"Arc Indicator\") then\r\n            local indicator = ship.getTable('arc_indicators')[id.getDescription()] or {}\r\n            if indicator.color_by_id then\r\n              id.setColorTint(tint)\r\n            end\r\n          elseif id.getName() == \"ColorId\" then\r\n            id.setColorTint(tint)\r\n          end\r\n          ship.addAttachment(id)\r\n        end\r\n      end\r\n      Wait.frames(DisableAttachedColliders, 1)\r\n\r\n    end\r\nend\r\n\r\nloaded = false\r\n\r\nfunction onLoad(savestate)\r\n  loaded = true\r\nend\r\n\r\nfunction isLoadedAndStill()\r\n  return loaded and self.resting\r\nend\r\n]]\r\n\r\n-------\r\n--spawner function, checks for Pilots and Upgrades lists and spawn the respective objects\r\n\r\nfunction newSpawner(listTable)\r\n    --listTable contains :\r\n\r\n    --Pilots[x] = table\r\n\r\n    --Upgrades[x] = {string1, string2...}\r\n    --spawnCard = Object reference used to position the spawned material\r\n    --Faction = String\r\n\r\n    Pilots = listTable.Pilots\r\n    Upgrades = listTable.Upgrades\r\n    spawnCard = listTable.spawnCard\r\n    Faction = listTable.Faction\r\n    Customization = listTable.Customization or {}\r\n    local dialSkin = listTable.factionDial\r\n    spawnedPilotList = {}\r\n\r\n    PosBag1 = {5, 5, 0}\r\n    PosBag2 = {10, 10, 0}\r\n    PosBag3 = {15, 15, 0}\r\n    PosBag4 = {20, 20, 0}\r\n    PoaBag5 = {25, 25, 0}\r\n    tempBagAcc = getObjectFromGUID('53ad3d').clone({position = PosBag3}) -- Accessories bag\r\n\r\n    --Stablishes lists of available upgrades, pilots, accessories, ships and mobile upgrades\r\n    listaAcc = tempBagAcc.getObjects()\r\n\r\n    --Store the initial position of the Quick Build Card\r\n    storePos = spawnCard.getPosition()\r\n    storeRot = spawnCard.getRotation()\r\n\r\n\r\n    shipIndex = 1 --Sets index of ship being spawned\r\n\r\n    while Pilots[shipIndex] ~= nil do\r\n        --Values used for accessories spawn and layout\r\n        forceValue = 0\r\n        shieldValue = 0\r\n        UpNum = 0\r\n        Turret  = 0\r\n        dualTurret = 0\r\n        Bombs = 0\r\n        hasMob = 0\r\n        bombTokenDescription = ''\r\n        local configCardGUID = nil\r\n        -- Spawn Mobile Upgrades\r\n        for j, Up in pairs(Upgrades[shipIndex]) do\r\n            if  Up.Config == true then\r\n                finalPos = LocalPos(spawnCard, {-2, 0, 0})      --Layout adjustment\r\n                spawnCard.setPosition(finalPos)\r\n                pos = LocalPos(spawnCard, {1.5, 0, 5.5})\r\n                rot = spawnCard.getRotation()\r\n                rot.y = rot.y\r\n                cardLink = Up.card\r\n                cardBackLink = Up.cardB\r\n                if Customization[Up.name] ~= nil then\r\n                  cardLink = Customization[Up.name].face or Up.card\r\n                  cardBackLink = Customization[Up.name].back or Up.cardB\r\n                end\r\n                deck = Decker.Asset(cardLink, cardBackLink)\r\n                card = Decker.Card(deck,1, 1)\r\n                newUp = card:spawn({position = pos, rotation=rot, scale={0.68,0.68,0.68}})\r\n                newUp.setName(Up.name)\r\n                newUp.addTag(\"ConfigCard\")\r\n                configCardGUID = newUp.getGUID()\r\n                hasMob = 1\r\n                charges = Up.Charge\r\n                if charges > 0 then\r\n                  for k, acc in ipairs(listaAcc) do\r\n                      if acc.name == 'Charge' then\r\n                        chargeToken = tempBagAcc.takeObject({rotation = spawnCard.getRotation(), guid = acc.guid, smooth=false})\r\n                        while charges > 0 do\r\n                          if charges == 5 then\r\n                              pos = LocalPos(spawnCard, {-1.7 +4,0, 1.9})\r\n                          elseif charges == 4 then\r\n                              pos = LocalPos(spawnCard, {-1.7 +4,0, 2.8})\r\n                          elseif charges == 3 then\r\n                              pos = LocalPos(spawnCard, {-2.6 +4,0, 2.8})\r\n                          elseif charges == 2 then\r\n                              pos = LocalPos(spawnCard, {-1.7 +4,0, 3.7})\r\n                          elseif charges == 1 then\r\n                              pos = LocalPos(spawnCard, {-2.6 +4 ,0, 3.7})\r\n                          else\r\n                              charges = 0\r\n                          end\r\n                          charges = charges-1\r\n                          chargeClone = chargeToken.clone()\r\n                          chargeClone.setPosition(pos)\r\n                        end\r\n                        tempBagAcc.putObject(chargeToken)\r\n                      end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n        for j, Up in pairs(Upgrades[shipIndex]) do\r\n            if Up.Config ~= true then                               --Indicates there's a card left of the pilot card, for layout purposes\r\n                pos = LocalPos(spawnCard, {-1.5 - 2*UpNum, 2-0.2*UpNum, 5.5})\r\n                rot = spawnCard.getRotation()\r\n                rot.y = rot.y - 90\r\n                cardLink = Up.card\r\n                cardBackLink = Up.cardB\r\n                if Customization[Up.name] ~= nil then\r\n                  cardLink = Customization[Up.name].face or Up.card\r\n                  cardBackLink = Customization[Up.name].back or Up.cardB\r\n                end\r\n                deck = Decker.Asset(cardLink, cardBackLink)\r\n                card = Decker.Card(deck,1, 1)\r\n                local rotUp = rot\r\n                rotUp.y = rotUp.y+90\r\n                newUp = card:spawn({position = pos, rotation=rotUp, scale={0.68,0.68,0.68}})\r\n                newUp.setName(Up.name)\r\n                if Up.Condition ~= nil then                                            --Checks and spawn conditions associated to pilots\r\n                    for k, acc in ipairs(listaAcc) do\r\n                        if acc.name == Up.Condition then\r\n                            pos = LocalPos(spawnCard, {-2 - 2*UpNum, 2-0.2*UpNum, 8})\r\n                            rot = spawnCard.getRotation()\r\n                            newAsset = tempBagAcc.takeObject({position = pos, rotation = rot, guid = acc.guid, smooth=false})\r\n                            assetClone = newAsset.clone()\r\n                            assetClone.setPosition(pos)\r\n                            tempBagAcc.putObject(newAsset)\r\n                        end\r\n                    end\r\n                end\r\n                --Checks and spawns Charge Tokens with appropriate layout (up to 4 tokens)\r\n                charges = Up.Charge\r\n                if charges > 0 then\r\n                  for k, acc in ipairs(listaAcc) do\r\n                      if acc.name == 'Charge' then\r\n                        chargeToken = tempBagAcc.takeObject({rotation = spawnCard.getRotation(), guid = acc.guid, smooth=false})\r\n                        while charges > 0 do\r\n                          if charges == 5 then\r\n                              pos = LocalPos(spawnCard, {-1.7 - 2*UpNum,3, 1.9})\r\n                          elseif charges == 4 then\r\n                              pos = LocalPos(spawnCard, {-1.7 - 2*UpNum,3, 2.8})\r\n                          elseif charges == 3 then\r\n                              pos = LocalPos(spawnCard, {-2.6 - 2*UpNum,3, 2.8})\r\n                          elseif charges == 2 then\r\n                              pos = LocalPos(spawnCard, {-1.7 - 2*UpNum,3, 3.7})\r\n                          elseif charges == 1 then\r\n                              pos = LocalPos(spawnCard, {-2.6 - 2*UpNum,3, 3.7})\r\n                          else\r\n                              charges = 0\r\n                          end\r\n                          charges = charges-1\r\n                          chargeClone = chargeToken.clone()\r\n                          chargeClone.setPosition(pos)\r\n                        end\r\n                        tempBagAcc.putObject(chargeToken)\r\n                      end\r\n                  end\r\n                end\r\n                UpNum = UpNum + 1                       --Update number of upgrade being spawned\r\n            end\r\n        end\r\n\r\n        --Pilot and Ship Spawn\r\n        pilotName = Pilots[shipIndex].name\r\n        card = Pilots[shipIndex].card\r\n        cardB = Pilots[shipIndex].cardB\r\n        local tint = color(0,0,0,0)\r\n        if Customization[pilotName] ~= nil then\r\n            tint = Customization[pilotName].tint or  color(0,0,0,0)\r\n            card = Customization[pilotName].face or Pilots[shipIndex].card\r\n            cardB = Customization[pilotName].back or Pilots[shipIndex].cardB\r\n        end\r\n\r\n\r\n        pos = LocalPos(spawnCard, {0, 3, 5.5})\r\n        rot = spawnCard.getRotation()\r\n        local newPil = nil\r\n        if card ~= '' then\r\n            if cardB ~= nil then\r\n                deck = Decker.Asset(card, cardB)\r\n                card = Decker.Card(deck,1, 1)\r\n                newPil = card:spawn({position = pos, rotation=rot})\r\n                newPil.setName(pilotName)\r\n                newPil.setLuaScript(pilotCardScript)\r\n                newPil.setLock(true)\r\n\r\n                -- Spawn Pilot Identifier\r\n                local card = newPil\r\n                local idpos = pos\r\n                local idrot = rot\r\n\r\n                pilotIdSpawnFunc = function()\r\n                  local pilotId = spawnObject({\r\n                      type              = \"Custom_Model\",\r\n                      position          = idpos,\r\n                      rotation          = idrot,\r\n                      scale             = mm_ship_scale,\r\n                      sound             = false,\r\n                      snap_to_grid      = false,\r\n                  })\r\n                  pilotId.setCustomObject({\r\n                      mesh = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/cardid.obj',\r\n                      convex = true,\r\n                      material = 1,\r\n                      type = 0\r\n                  })\r\n                  pilotId.setColorTint(tint)\r\n                  card.addAttachment(pilotId)\r\n                  card.setLock(false)\r\n                end\r\n                Wait.condition(pilotIdSpawnFunc , function() return  (not card.spawning) end)\r\n\r\n            end\r\n        end\r\n        if pilotName ~= '' then\r\n            for k, acc in pairs(listaAcc) do\r\n                local card = newPil\r\n                if acc.name == 'Unassigned Dial' then\r\n                    local dialpos = LocalPos(spawnCard, {0, 3, 12})\r\n                    local dialrot = rot\r\n                    local dial = tempBagAcc.takeObject(\r\n                        {position = dialpos,\r\n                         rotation = dialrot,\r\n                         guid = acc.guid\r\n                       })\r\n                    local newDial = dial.clone()\r\n                    newDial.setPosition(pos)\r\n                    tempBagAcc.putObject(dial)\r\n                    local conditionFunc = function() return (not card.spawning) and (not newDial.spawning) end\r\n                    local executeFunc = function()\r\n                        newDial.setCustomObject({['diffuse']=dialSkin})\r\n                        newDial = newDial.reload()\r\n                        newDial.setColorTint(tint)\r\n                        newDial.setPosition(dialpos)\r\n                        newDial.setRotation(dialrot)\r\n                        card.call('addTintObject', {'dial',newDial})\r\n                      end\r\n                    Wait.condition(executeFunc , conditionFunc)\r\n\r\n\r\n\r\n                end\r\n            end\r\n        end\r\n        forceValue = Pilots[shipIndex].Force --Checks for force value on Pilot and update forceValue\r\n        if Pilots[shipIndex].Condition ~= nil then                                            --Checks and spawn conditions associated to pilots\r\n            for k, acc in ipairs(listaAcc) do\r\n                if acc.name == Pilots[shipIndex].Condition then\r\n                    pos = LocalPos(spawnCard, {-2 - 2*UpNum, 3, 8})\r\n                    rot = spawnCard.getRotation()\r\n                    newAsset = tempBagAcc.takeObject({position = pos, rotation = rot, guid = acc.guid})\r\n                    assetClone = newAsset.clone()\r\n                    assetClone.setPosition(pos)\r\n                    tempBagAcc.putObject(newAsset)\r\n                end\r\n            end\r\n        end\r\n\r\n\r\n        local newShip = nil\r\n        pos = LocalPos(spawnCard, {0, 0, 9})\r\n        rot = spawnCard.getRotation()\r\n        if (Pilots[shipIndex].id ~= 0) then\r\n          newShip = spawnObject({\r\n              type              = \"Custom_Model\",\r\n              position          = pos,\r\n              rotation          = rot,\r\n              scale             = mm_ship_scale,\r\n              sound             = false,\r\n              snap_to_grid      = false,\r\n          })\r\n        end\r\n\r\n        if newShip ~= nil then\r\n            local model = nil\r\n            if Customization[pilotName].model ~= nil then\r\n                model = Customization[pilotName].model\r\n            elseif Pilots[shipIndex].mesh ~= nil then\r\n                model = '{verifycache}'..Pilots[shipIndex].mesh\r\n            end\r\n            if model then\r\n                newShip.setCustomObject({mesh = model})\r\n            end\r\n            local texture = nil\r\n            if Customization[pilotName].texture ~= nil then\r\n                texture = Customization[pilotName].texture\r\n            elseif Pilots[shipIndex].texture ~= nil then\r\n                texture = '{verifycache}'..Pilots[shipIndex].texture\r\n            end\r\n            if texture then\r\n                newShip.setCustomObject({diffuse = texture})\r\n            end\r\n            if Customization[pilotName].modeltint ~= nil then\r\n                newShip.setColorTint(Customization[pilotName].modeltint)\r\n            end\r\n            newShip.setName(pilotName)\r\n            newShip.setCustomObject({\r\n                collider= ShipVerification.colliders[Pilots[shipIndex].Size],\r\n                convex = true,\r\n                material = 1,\r\n                type = 1\r\n            })\r\n            newShip.setLock(true)\r\n            Pilots[shipIndex].Data.ColorId = tint\r\n            if Pilots[shipIndex].Data.Config then\r\n                Pilots[shipIndex].Data.Config.CardGUID = configCardGUID\r\n            end\r\n            newShip.setTable(\"Data\", Pilots[shipIndex].Data)\r\n            newShip.setLuaScript(saveAndLoadShipStateLua)\r\n            local ship = newShip\r\n            local card = newPil\r\n            local idpos = pos\r\n            local idrot = rot\r\n            local customObj = {\r\n                convex = true,\r\n                material = 1,\r\n                type = 1\r\n            }\r\n            if Pilots[shipIndex].Size == \"small\" then\r\n                customObj.mesh='{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/Base_ID_Marker.obj'\r\n            elseif Pilots[shipIndex].Size == \"medium\" then\r\n                customObj.mesh='{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/Base%20ID%20MED.obj'\r\n            elseif Pilots[shipIndex].Size == \"large\" then\r\n                customObj.mesh='{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/Base%20ID%20LAR.obj'\r\n            elseif Pilots[shipIndex].Size == \"huge\" then\r\n                customObj.mesh='{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/Base_ID_HUGE.obj'\r\n            end\r\n            local shipIdSpawnFunc = function()\r\n              local shipId = spawnObject({\r\n                  type              = \"Custom_Model\",\r\n                  position          = idpos,\r\n                  rotation          = idrot,\r\n                  scale             = mm_ship_scale*0.99,\r\n                  sound             = false,\r\n                  snap_to_grid      = false,\r\n              })\r\n              shipId.setCustomObject(customObj)\r\n              shipId.setColorTint(tint)\r\n              shipId.setName(\"ColorId\")\r\n              ship.addAttachment(shipId)\r\n              ship.setLock(false)\r\n              ship.addTag(\"Ship\")\r\n              card.call('addTintObject', {'ship',ship})\r\n              ship.call('initContextMenu')\r\n            end\r\n            Wait.condition(shipIdSpawnFunc , function() return (not ship.spawning) and (not card.spawning) end)\r\n\r\n            if Pilots[shipIndex].Data.Config and Pilots[shipIndex].Data.Config.States then\r\n              for k, config in pairs(Pilots[shipIndex].Data.Config.States) do\r\n                if config.Model then\r\n                  local customObject = ship.getCustomObject()\r\n                  customObject.mesh = config.Model\r\n\r\n                  local configSpawnFunction = function()\r\n                    local configModel = spawnObject({\r\n                        type              = \"Custom_Model\",\r\n                        position          = idpos,\r\n                        rotation          = idrot,\r\n                        scale             = mm_ship_scale,\r\n                        sound             = false,\r\n                        snap_to_grid      = false,\r\n                    })\r\n                    configModel.setName(\"Config\")\r\n                    configModel.setDescription(tostring(k))\r\n                    configModel.setCustomObject(customObject)\r\n                    if k ~= 1 then\r\n                      configModel.setScale(vector(0.0001,0.0001,0.0001))\r\n                    end\r\n                    ship.addAttachment(configModel)\r\n                  end\r\n                  Wait.condition(configSpawnFunction , function() return (not ship.spawning) end)\r\n                end -- if Config.Model\r\n              end -- for Data.Config\r\n              if Pilots[shipIndex].Data.Config and Pilots[shipIndex].Data.Config.Token then\r\n                pos = LocalPos(spawnCard, {-1.5, 3, 8.7})\r\n                local configToken = spawnObject({\r\n                    type = \"Custom_Model\",\r\n                    scale = {0.38, 0.38, 0.38},\r\n                    rotation = {0, 270, 0},\r\n                    position = pos,\r\n                })\r\n                configToken.setCustomObject({\r\n                    mesh = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj\",\r\n                    diffuse = Pilots[shipIndex].Data.Config.Token,\r\n                    type = 5,\r\n                    material = 1,\r\n                    specular_intensity = 0\r\n                })\r\n                configToken.setLuaScript(\r\n[[\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'config'\r\n\r\nself.addTag('Flippable')\r\n\r\nfunction onFlip()\r\n    local ship = Global.call(\"getShipTokenIsAssignedTo\",{token=self})\r\n    if ship and ship.getVar(\"SetConfiguration\") then\r\n      ship.call(\"SetConfiguration\", {ConfigId=self.is_face_down and 1 or 2})\r\n    end\r\nend\r\n]])\r\n              end\r\n\r\n\r\n            end -- if Config\r\n        end\r\n\r\n\r\n        if Pilots[shipIndex].Ship == 3 then\r\n            for k, acc in ipairs(listaAcc) do\r\n                if acc.name == 'StarViper Mk.II roll token' then\r\n                    pos = LocalPos(spawnCard, {-1.5, 3, 8.7})\r\n                    svToken = tempBagAcc.takeObject({position = pos, rotation = rot, guid = acc.guid, smooth = false})\r\n                    svClone = svToken.clone()\r\n                    svClone.setPosition(pos)\r\n                    tempBagAcc.putObject(svToken)\r\n                end\r\n            end\r\n        end\r\n\r\n        for mount, turret in pairs(Pilots[shipIndex].Data.arcs.turret or {}) do\r\n            local indicator_name = 'Arc Indicator'..tostring(Faction)\r\n            if turret.type[1] == 'doubleturret' then\r\n              indicator_name = 'Dual Arc Indicator'..tostring(Faction)\r\n            end\r\n            local mount_pos = Pilots[shipIndex].Data.mountingPoints[mount]\r\n            local offset = LocalPos(spawnCard, {mount_pos[1], 0, mount_pos[2] + 9})\r\n            for k, acc in pairs(listaAcc) do\r\n                if acc.name == indicator_name then\r\n                    arcInd = tempBagAcc.takeObject({position = offset, rotation = rot, guid = acc.guid, smooth=false})\r\n                    newInd = arcInd.clone()\r\n                    newInd.setPosition(pos)\r\n                    tempBagAcc.putObject(arcInd)\r\n                    newInd.setName(string.gsub(newInd.getName(), Faction, ''))\r\n                end\r\n            end\r\n        end\r\n\r\n        if Pilots[shipIndex].Bomb == true then                                                       --Checks and spawn bomb drop token if needed\r\n            for k, acc in ipairs(listaAcc) do\r\n                if acc.name == 'Bomb drop token (unassigned)' then\r\n                    pos = LocalPos(spawnCard, {-1.5, 3, 8.7})\r\n                    bombDrop = tempBagAcc.takeObject({position = pos, rotation = rot, guid = acc.guid, smooth=false})\r\n                    dropClone = bombDrop.clone()\r\n                    dropClone.setPosition(pos)\r\n                    tempBagAcc.putObject(bombDrop)\r\n                    dropClone.setDescription(Pilots[shipIndex].bombD)\r\n                end\r\n            end\r\n        end\r\n        if Pilots[shipIndex].Docking == true then\r\n            for k, acc in ipairs(listaAcc) do\r\n                if acc.name == 'Shuttle Launcher (assigned to mothership)' then\r\n                    pos = LocalPos(spawnCard, {-1.5, 3, 8.7})\r\n                    shuttleDrop = tempBagAcc.takeObject({position = pos, rotation = rot, guid = acc.guid, smooth=false})\r\n                    dropClone = shuttleDrop.clone()\r\n                    dropClone.setPosition(pos)\r\n                    tempBagAcc.putObject(shuttleDrop)\r\n                end\r\n            end\r\n        end\r\n        if Pilots[shipIndex].wingleader == true then\r\n            for k, acc in ipairs(listaAcc) do\r\n                if acc.name == 'Epic Wing Token' then\r\n                    pos = LocalPos(spawnCard, {-1.5, 3, 8.7})\r\n                    wingtoken = tempBagAcc.takeObject({position = pos, rotation = rot, guid = acc.guid, smooth=false})\r\n                    wingtokenclone = wingtoken.clone()\r\n                    wingtokenclone.setPosition(pos)\r\n                    tempBagAcc.putObject(wingtoken)\r\n                end\r\n            end\r\n        end\r\n\r\n        --spawn pilot charge tokens\r\n        if Pilots[shipIndex].Charge > 0 then\r\n          for k, acc in pairs(listaAcc) do\r\n              if acc.name == 'Charge' then\r\n                  chargeToken = tempBagAcc.takeObject({rotation = spawnCard.getRotation(), guid = acc.guid, smooth=false})\r\n                  while Pilots[shipIndex].Charge > 0 do\r\n\r\n                    if Pilots[shipIndex].Charge == 4 then\r\n                        pos = LocalPos(spawnCard, {-0.9 ,3, 0.6})\r\n                    elseif Pilots[shipIndex].Charge == 3 then\r\n                        pos = LocalPos(spawnCard, {0.9 ,3, 1.6})\r\n                    elseif Pilots[shipIndex].Charge == 2 then\r\n                        pos = LocalPos(spawnCard, {0 ,3, 1.6})\r\n                    elseif Pilots[shipIndex].Charge == 1 then\r\n                        pos = LocalPos(spawnCard, {-0.9 ,3, 1.6})\r\n                    else\r\n                        charges = 0\r\n                    end\r\n                    Pilots[shipIndex].Charge = Pilots[shipIndex].Charge - 1\r\n                    chargeClone = chargeToken.clone()\r\n                    chargeClone.setPosition(pos)\r\n\r\n                  end\r\n                  tempBagAcc.putObject(chargeToken)\r\n                end\r\n            end\r\n        end\r\n        -- spawn force\r\n        if Pilots[shipIndex].Force > 0 then\r\n          for k, acc in pairs(listaAcc) do\r\n              if acc.name == 'Force' then\r\n                  forceToken = tempBagAcc.takeObject({rotation = spawnCard.getRotation(), guid = acc.guid, smooth=false})\r\n                  while Pilots[shipIndex].Force > 0 do\r\n                    Pilots[shipIndex].Force = Pilots[shipIndex].Force - 1\r\n                    if hasMob == 1 then                 --adjusts layout if Mobile Upgrade is present\r\n                        pos = LocalPos(spawnCard, {1.7 + 0.9*Pilots[shipIndex].Force, 3, 3.7})\r\n                        if forceValue >2 then\r\n                            pos = LocalPos(spawnCard, {1.7 + 0.9*(Pilots[shipIndex].Force-2), 3, 2.8})\r\n                        end\r\n                    else\r\n                        pos = LocalPos(spawnCard, {1.7, 3, 3.7 + 0.9*Pilots[shipIndex].Force})\r\n                    end\r\n                    forceClone = forceToken.clone()\r\n                    forceClone.setPosition(pos)\r\n                  end\r\n                  tempBagAcc.putObject(forceToken)\r\n                end\r\n            end\r\n        end\r\n        --Spawns Shields\r\n        if Pilots[shipIndex].Shield > 0 then --spawn shield tokens, layout good for up to 9 shields\r\n          for k, acc in ipairs(listaAcc) do\r\n              if acc.name == 'Shield' then\r\n                  shieldToken = tempBagAcc.takeObject({rotation = spawnCard.getRotation(), guid = acc.guid, smooth=false})\r\n                  while Pilots[shipIndex].Shield > 0 do\r\n                    Pilots[shipIndex].Shield = Pilots[shipIndex].Shield - 1\r\n                    pos = LocalPos(spawnCard, { -0.9 + 0.9*Pilots[shipIndex].Shield, 3, 3.4})\r\n\r\n                    if Pilots[shipIndex].Shield >5  then\r\n                        pos = LocalPos(spawnCard, {-0.9 + 0.9*(Pilots[shipIndex].Shield-6), 3, 1.6})\r\n                    elseif Pilots[shipIndex].Shield >2 then\r\n                        pos = LocalPos(spawnCard, {-0.9 + 0.9*(Pilots[shipIndex].Shield-3), 3, 2.5})\r\n                    end\r\n                    shieldClone = shieldToken.clone()\r\n                    shieldClone.setPosition(pos)\r\n\r\n                  end\r\n                  tempBagAcc.putObject(shieldToken)\r\n                end\r\n            end\r\n        end\r\n\r\n\r\n\r\n        finalPos = LocalPos(spawnCard, {-4 - 2*UpNum, 0, 0})\r\n        spawnCard.setPosition(finalPos)\r\n        shipIndex = shipIndex + 1\r\n\r\n    end\r\n\r\n    finalPos = LocalPos(spawnCard, {0, 0, 5.5})\r\n    spawnCard.setPosition(finalPos)\r\n\r\n    for i, remote in pairs(listTable.Remotes or {}) do\r\n        print(\"Spawning remote:\" .. remote)\r\n        for k, acc in ipairs(listaAcc) do\r\n            if acc.name == remote then\r\n                pos = LocalPos(spawnCard, {1,3,0})\r\n                print(\"Found remote, spawning pos: \" .. tostring(pos[1])..\",\"..tostring(pos[2])..\",\".. tostring(pos[3]))\r\n                remObj = tempBagAcc.takeObject({rotation = spawnCard.getRotation(), guid = acc.guid, smooth = false})\r\n                remoteClone = remObj.clone()\r\n                remoteClone.setPosition(pos)\r\n                tempBagAcc.putObject(remObj)\r\n                finalpos = LocalPos(spawnCard, {-3,0,0})\r\n                spawnCard.setPosition(finalpos)\r\n                break\r\n            end\r\n        end\r\n    end\r\n\r\n    -- Delete cloned bags\r\n    tempBagAcc.destruct()\r\n\r\n\r\n    if listTable.Obstacles ~= nil then\r\n        tempObstacleBag = getObjectFromGUID('203cb8').clone({position = PosBag3}) -- Obstacles bag\r\n        obstacleAcc = tempObstacleBag.getObjects()\r\n        for i, obstacleName in ipairs(listTable.Obstacles) do\r\n            local found = false\r\n            for j, obstacle in ipairs(obstacleAcc) do\r\n                if obstacle.name == obstacleName then\r\n                    print(\"Found obstacle: \" .. obstacle.name .. \" - \" .. obstacleName)\r\n                    pos =  LocalPos(spawnCard, {0, 3, 0})\r\n                    obstacleToken = tempObstacleBag.takeObject({rotation = spawnCard.getRotation(), guid = obstacle.guid, smooth = false})\r\n                    obstacleClone = obstacleToken.clone()\r\n                    obstacleClone.setPosition(pos)\r\n                    tempObstacleBag.putObject(obstacleToken)\r\n                    found = true\r\n                    break\r\n                end\r\n            end\r\n            if not found then\r\n                print(\"Couldnt find obstacle: \" .. obstacleName)\r\n            else\r\n                finalPos = LocalPos(spawnCard, {-4, 0, 0})\r\n                spawnCard.setPosition(finalPos)\r\n            end\r\n        end\r\n        tempObstacleBag.destruct()\r\n    end\r\n\r\n    --returns Quick Build Card to initial position\r\n    spawnCard.setPosition(storePos)\r\n    spawnCard.setRotation(storeRot)\r\nend\r\n\r\n\r\n\r\nfunction RotMatrix(axis, angDeg)\r\n    local ang = math.rad(angDeg)\r\n    local cs = math.cos\r\n    local sn = math.sin\r\n\r\n    if axis == 'x' then\r\n        return {\r\n                    { 1,        0,             0 },\r\n                    { 0,   cs(ang),   -1*sn(ang) },\r\n                    { 0,   sn(ang),      cs(ang) }\r\n               }\r\n    elseif axis == 'y' then\r\n        return {\r\n                    {    cs(ang),   0,   sn(ang) },\r\n                    {          0,   1,         0 },\r\n                    { -1*sn(ang),   0,   cs(ang) }\r\n               }\r\n    elseif axis == 'z' then\r\n        return {\r\n                    { cs(ang),   -1*sn(ang),   0 },\r\n                    { sn(ang),      cs(ang),   0 },\r\n                    { 0,                  0,   1 }\r\n               }\r\n    end\r\nend\r\n\r\n-- Apply given rotation matrix on given vector\r\n-- (multiply matrix and column vector)\r\nfunction RotateVector(rotMat, vect)\r\n    local out = {0, 0, 0}\r\n    for i=1,3,1 do\r\n        for j=1,3,1 do\r\n            out[i] = out[i] + rotMat[i][j]*vect[j]\r\n        end\r\n    end\r\n    return out\r\nend\r\n\r\n-- Sum of two vectors (of any size)\r\nfunction Vect_Sum(vec1, vec2)\r\n    local out = {}\r\n    local k = 1\r\n    while vec1[k] ~= nil and vec2[k] ~= nil do\r\n        out[k] = vec1[k] + vec2[k]\r\n        k = k+1\r\n    end\r\n    return out\r\nend\r\n\r\n--Decker module\r\n\r\ndo\r\n    Decker = {}\r\n\r\n    -- provide unique ID starting from 20 for present decks\r\n    local nextID\r\n    do\r\n        local _nextID = 20\r\n        nextID = function()\r\n            _nextID = _nextID + 1\r\n            return tostring(_nextID)\r\n        end\r\n    end\r\n\r\n    -- Asset signature (equality comparison)\r\n    local function assetSignature(assetData)\r\n        return table.concat({\r\n            assetData.FaceURL,\r\n            assetData.BackURL,\r\n            assetData.NumWidth,\r\n            assetData.NumHeight,\r\n            assetData.BackIsHidden and 'hb' or '',\r\n            assetData.UniqueBack and 'ub' or ''\r\n        })\r\n    end\r\n    -- Asset ID storage to avoid new ones for identical assets\r\n    local idLookup = {}\r\n    local function assetID(assetData)\r\n        local sig = assetSignature(assetData)\r\n        local key = idLookup[sig]\r\n        if not key then\r\n            key = nextID()\r\n            idLookup[sig] = key\r\n        end\r\n        return key\r\n    end\r\n\r\n    local assetMeta = {\r\n        deck = function(self, cardNum, options)\r\n            return Decker.AssetDeck(self, cardNum, options)\r\n        end\r\n    }\r\n    assetMeta = {__index = assetMeta}\r\n\r\n    -- Create a new CustomDeck asset\r\n    function Decker.Asset(face, back, options)\r\n        local asset = {}\r\n        options = options or {}\r\n        asset.data = {\r\n            FaceURL = face or error('Decker.Asset: faceImg link required'),\r\n            BackURL = back or error('Decker.Asset: backImg link required'),\r\n            NumWidth = options.width or 1,\r\n            NumHeight = options.height or 1,\r\n            BackIsHidden = options.hiddenBack or false,\r\n            UniqueBack = options.uniqueBack or false\r\n        }\r\n        -- Reuse ID if asset existing\r\n        asset.id = assetID(asset.data)\r\n        return setmetatable(asset, assetMeta)\r\n    end\r\n\r\n    function Decker.AssetFromData(assetData)\r\n        return setmetatable({data = assetData, id = assetID(assetData)}, assetMeta)\r\n    end\r\n\r\n    -- Create a base for JSON objects\r\n    function Decker.BaseObject()\r\n        return {\r\n            Name = 'Base',\r\n            Transform = {\r\n                posX = 0, posY = 5, posZ = 0,\r\n                rotX = 0, rotY = 0, rotZ = 0,\r\n                scaleX = 1, scaleY = 1, scaleZ = 1\r\n            },\r\n            Nickname = '',\r\n            Description = '',\r\n            ColorDiffuse = { r = 1, g = 1, b = 1 },\r\n            Locked = false,\r\n            Grid = true,\r\n            Snap = true,\r\n            Autoraise = true,\r\n            Sticky = true,\r\n            Tooltip = true,\r\n            GridProjection = false,\r\n            Hands = false,\r\n            XmlUI = '',\r\n            LuaScript = '',\r\n            LuaScriptState = '',\r\n            GUID = 'deadbf'\r\n        }\r\n    end\r\n    -- Apply some basic parameters on base JSON object\r\n    function Decker.SetCommonOptions(obj, options)\r\n        options = options or {}\r\n        obj.Nickname = options.name or ''\r\n        obj.Description = options.desc or ''\r\n        obj.LuaScript = options.script or ''\r\n        obj.XmlUI = options.xmlui or ''\r\n        obj.LuaScriptState = options.scriptState or ''\r\n        obj.Locked = options.locked or false\r\n        obj.Tooltip = options.tooltip or true\r\n        obj.GUID = options.guid or 'deadbf'\r\n    end\r\n    -- default spawnObjectJSON params since it doesn't like blank fields\r\n    local function defaultParams(params, json)\r\n        params = params or {}\r\n        params.json = json\r\n        params.position = params.position or {0, 5, 0}\r\n        params.rotation = params.rotation or {0, 0, 0}\r\n        params.scale = params.scale or {1, 1, 1}\r\n        if params.sound == nil then\r\n            params.sound = true\r\n        end\r\n        return params\r\n    end\r\n\r\n    -- For copy method\r\n    local deepcopy\r\n    deepcopy = function(t)\r\n        local copy = {}\r\n        for k,v in pairs(t) do\r\n           if type(v) == 'table' then\r\n               copy[k] = deepcopy(v)\r\n           else\r\n               copy[k] = v\r\n           end\r\n        end\r\n        return copy\r\n    end\r\n    -- meta for all Decker derived objects\r\n    local commonMeta = {\r\n        -- return object JSON string, used cached if present\r\n        _cache = function(self)\r\n            if not self.json then\r\n                self.json = JSON.encode(self.data)\r\n            end\r\n            return self.json\r\n        end,\r\n        -- invalidate JSON string cache\r\n        _recache = function(self)\r\n            self.json = nil\r\n            return self\r\n        end,\r\n        spawn = function(self, params)\r\n            params = defaultParams(params, self:_cache())\r\n            return spawnObjectJSON(params)\r\n        end,\r\n        copy = function(self)\r\n            return setmetatable(deepcopy(self), getmetatable(self))\r\n        end,\r\n        setCommon = function(self, options)\r\n            Decker.SetCommonOptions(self.data, options)\r\n            return self\r\n        end,\r\n    }\r\n    -- apply common part on a specific metatable\r\n    local function customMeta(mt)\r\n        for k,v in pairs(commonMeta) do\r\n            mt[k] = v\r\n        end\r\n        mt.__index = mt\r\n        return mt\r\n    end\r\n\r\n    -- DeckerCard metatable\r\n    local cardMeta = {\r\n        setAsset = function(self, asset)\r\n            local cardIndex = self.data.CardID:sub(-2, -1)\r\n            self.data.CardID = asset.id .. cardIndex\r\n            self.data.CustomDeck = {[asset.id] = asset.data}\r\n            return self:_recache()\r\n        end,\r\n        getAsset = function(self)\r\n            local deckID = next(self.data.CustomDeck)\r\n            return Decker.AssetFromData(self.data.CustomDeck[deckID])\r\n        end,\r\n        -- reset deck ID to a consistent value script-wise\r\n        _recheckDeckID = function(self)\r\n            local oldID = next(self.data.CustomDeck)\r\n            local correctID = assetID(self.data.CustomDeck[oldID])\r\n            if oldID ~= correctID then\r\n                local cardIndex = self.data.CardID:sub(-2, -1)\r\n                self.data.CardID = correctID .. cardIndex\r\n                self.data.CustomDeck[correctID] = self.data.CustomDeck[oldID]\r\n                self.data.CustomDeck[oldID] = nil\r\n            end\r\n            return self\r\n        end\r\n    }\r\n    cardMeta = customMeta(cardMeta)\r\n    -- Create a DeckerCard from an asset\r\n    function Decker.Card(asset, row, col, options)\r\n        options = options or {}\r\n        local card = Decker.BaseObject()\r\n        card.Name = 'Card'\r\n        -- optional custom fields\r\n        Decker.SetCommonOptions(card, options)\r\n        if options.sideways ~= nil then\r\n            card.SidewaysCard = options.sideways\r\n        end\r\n        -- CardID string is parent deck ID concat with its 0-based index (always two digits)\r\n        local num = (row-1)*asset.data.NumWidth + col - 1\r\n        num = string.format('%02d', num)\r\n        card.CardID = asset.id .. num\r\n        -- just the parent asset reference needed\r\n        card.CustomDeck = {[asset.id] = asset.data}\r\n\r\n        local obj = setmetatable({data = card}, cardMeta)\r\n        obj:_cache()\r\n        return obj\r\n    end\r\n\r\n\r\n    -- DeckerDeck meta\r\n    local deckMeta = {\r\n        count = function(self)\r\n            return #self.data.DeckIDs\r\n        end,\r\n        -- Transform index into positive\r\n        index = function(self, ind)\r\n            if ind < 0 then\r\n                return self:count() + ind + 1\r\n            else\r\n                return ind\r\n            end\r\n        end,\r\n        swap = function(self, i1, i2)\r\n            local ri1, ri2 = self:index(i1), self:index(i2)\r\n            assert(ri1 > 0 and ri1 <= self:count(), 'DeckObj.rearrange: index ' .. i1 .. ' out of bounds')\r\n            assert(ri2 > 0 and ri2 <= self:count(), 'DeckObj.rearrange: index ' .. i2 .. ' out of bounds')\r\n            self.data.DeckIDs[ri1], self.data.DeckIDs[ri2] = self.data.DeckIDs[ri2], self.data.DeckIDs[ri1]\r\n            local co = self.data.ContainedObjects\r\n            co[ri1], co[ri2] = co[ri2], co[ri1]\r\n            return self:_recache()\r\n        end,\r\n        -- rebuild self.data.CustomDeck based on contained cards\r\n        _rescanDeckIDs = function(self, id)\r\n            local cardIDs = {}\r\n            for k,card in ipairs(self.data.ContainedObjects) do\r\n                local cardID = next(card.CustomDeck)\r\n                if not cardIDs[cardID] then\r\n                    cardIDs[cardID] = card.CustomDeck[cardID]\r\n                end\r\n            end\r\n            --[[\r\n            for id,data in pairs(cardIDs) do\r\n                self.data.CustomDeck[id] = data\r\n            end\r\n            for id,data in pairs(self.data.CustomDeck) do\r\n                if not cardIDs[id] then\r\n                    self.data.CustomDeck[id] = nil\r\n                end\r\n            end\r\n            ]]--\r\n            -- eeh, GC gotta earn its keep as well\r\n            self.data.CustomDeck = cardIDs\r\n        end,\r\n        remove = function(self, ind, skipRescan)\r\n            local rind = self:index(ind)\r\n            assert(rind > 0 and rind <= self:count(), 'DeckObj.remove: index ' .. ind .. ' out of bounds')\r\n            local card = self.data.ContainedObjects[rind]\r\n            table.remove(self.data.DeckIDs, rind)\r\n            table.remove(self.data.ContainedObjects, rind)\r\n            if not skipRescan then\r\n                self:_rescanDeckIDs(next(card.CustomDeck))\r\n            end\r\n            return self:_recache()\r\n        end,\r\n        removeMany = function(self, ...)\r\n            local indices = {...}\r\n            table.sort(indices, function(e1,e2) return self:index(e1) > self:index(e2) end)\r\n            for _,ind in ipairs(indices) do\r\n                self:remove(ind, true)\r\n            end\r\n            self:_rescanDeckIDs()\r\n            return self:_recache()\r\n        end,\r\n        insert = function(self, card, ind)\r\n            local rind = self:index(ind)\r\n            assert(rind > 0 and rind <= (self:count()+1), 'DeckObj.insert: index ' .. ind .. ' out of bounds')\r\n            table.insert(self.data.DeckIDs, rind, card.data.CardID)\r\n            table.insert(self.data.ContainedObjects, rind, card.data)\r\n            local id = next(card.data.CustomDeck)\r\n            if not self.data.CustomDeck[id] then\r\n                self.data.CustomDeck[id] = card.data.CustomDeck[id]\r\n            end\r\n            return self:_recache()\r\n        end,\r\n        reverse = function(self)\r\n            local s,e = 1, self:count()\r\n            while s < e do\r\n                self:swap(s, e)\r\n                s = s+1\r\n                e = e-1\r\n            end\r\n            return self:_recache()\r\n        end,\r\n        cardAt = function(self, ind)\r\n            local rind = self:index(ind)\r\n            assert(rind > 0 and rind <= (self:count()+1), 'DeckObj.insert: index ' .. ind .. ' out of bounds')\r\n            local card = setmetatable({data = deepcopy(self.data.ContainedObjects[rind])}, cardMeta)\r\n            card:_cache()\r\n            return card\r\n        end,\r\n        switchAssets = function(self, replaceTable)\r\n            -- destructure replace table into\r\n            -- [ID_to_replace] -> [ID_to_replace_with]\r\n            -- [new_asset_ID] -> [new_asset_data]\r\n            local idReplace = {}\r\n            local assets = {}\r\n            for oldAsset, newAsset in pairs(replaceTable) do\r\n                assets[newAsset.id] = newAsset.data\r\n                idReplace[oldAsset.id] = newAsset.id\r\n            end\r\n            -- update deckIDs\r\n            for k,cardID in ipairs(self.data.DeckIDs) do\r\n                local deckID, cardInd = cardID:sub(1, -3), cardID:sub(-2, -1)\r\n                if idReplace[deckID] then\r\n                    self.data.DeckIDs[k] = idReplace[deckID] .. cardInd\r\n                end\r\n            end\r\n            -- update CustomDeck data - nil replaced\r\n            for replacedID in pairs(idReplace) do\r\n                if self.data.CustomDeck[replacedID] then\r\n                    self.data.CustomDeck[replacedID] = nil\r\n                end\r\n            end\r\n            -- update CustomDeck data - add replacing\r\n            for _,replacingID in pairs(idReplace) do\r\n                self.data.CustomDeck[replacingID] = assets[replacingID]\r\n            end\r\n            -- update card data\r\n            for k,cardData in ipairs(self.data.ContainedObjects) do\r\n                local deckID = next(cardData.CustomDeck)\r\n                if idReplace[deckID] then\r\n                    cardData.CustomDeck[deckID] = nil\r\n                    cardData.CustomDeck[idReplace[deckID]] = assets[idReplace[deckID]]\r\n                end\r\n            end\r\n            return self:_recache()\r\n        end,\r\n        getAssets = function(self)\r\n            local assets = {}\r\n            for id,assetData in pairs(self.data.CustomDeck) do\r\n                assets[#assets+1] = Decker.AssetFromData(assetData)\r\n            end\r\n            return assets\r\n        end\r\n    }\r\n    deckMeta = customMeta(deckMeta)\r\n    -- Create DeckerDeck object from DeckerCards\r\n    function Decker.Deck(cards, options)\r\n        local deck = Decker.BaseObject()\r\n        deck.Name = 'Deck'\r\n        Decker.SetCommonOptions(deck, options)\r\n        deck.DeckIDs = {}\r\n        deck.CustomDeck = {}\r\n        deck.ContainedObjects = {}\r\n        for _,card in ipairs(cards) do\r\n            deck.DeckIDs[#deck.DeckIDs+1] = card.data.CardID\r\n            local id = next(card.data.CustomDeck)\r\n            if not deck.CustomDeck[id] then\r\n                deck.CustomDeck[id] = card.data.CustomDeck[id]\r\n            end\r\n            deck.ContainedObjects[#deck.ContainedObjects+1] = card.data\r\n        end\r\n\r\n        local obj = setmetatable({data = deck}, deckMeta)\r\n        obj:_cache()\r\n        return obj\r\n    end\r\n    -- Create DeckerDeck from an asset using X cards on its sheet\r\n    function Decker.AssetDeck(asset, cardNum, options)\r\n        cardNum = cardNum or asset.data.NumWidth * asset.data.NumHeight\r\n        local row, col, width = 1, 1, asset.data.NumWidth\r\n        local cards = {}\r\n        for k=1,cardNum do\r\n            cards[#cards+1] = Decker.Card(asset, row, col)\r\n            col = col+1\r\n            if col > width then\r\n                row, col = row+1, 1\r\n            end\r\n        end\r\n        return Decker.Deck(cards, options)\r\n    end\r\nend\r\n\r\n-- for use with Epic Wing Tool to check if the landing space is empty\r\nfunction epicMoveWingmate(table)\r\n    local ship = table[1]\r\n    local desiredPosRot = {pos=table[2], rot=table[3]}\r\n    print(\"Ship size=\" .. ship.getTable(\"Data\").Size)\r\n    local info = {size=ship.getTable(\"Data\").Size, code=\"dummy\", type=\"\"}\r\n    local fullFunc = function(info,ship) return desiredPosRot end\r\n    result = MoveModule.MoveProbe.TryFullMove(info, ship, fullFunc)\r\n    if result.done then\r\n      MoveModule.MoveShip(ship, {finPos=desiredPosRot})\r\n      return true\r\n    else\r\n      -- Todo announce some stuff\r\n      return false\r\n    end\r\nend\r\n\nend)\n__bundle_register(\"TTS_xwing/src/DialManager\", function(require, _LOADED, __bundle_register, __bundle_modules)\n-- Dial manager module, By Eirik W. Munthe (eirikmun)\r\nlocal D = {}\r\n\r\nD.announceColor = color(0.1, 1, 0.1)\r\n\r\nD.assignedDials = {}\r\n\r\nD.assignDial = function(dial, ship, player)\r\n  if ship then\r\n    D.assignedDials[dial.getGUID()] = {dial = dial, ship = ship, player = player, set = false}\r\n  else\r\n    D.assignedDials[dial.getGUID()] = nil\r\n  end\r\nend\r\n\r\nD.setDial = function(dial)\r\n  if D.assignedDials[dial.getGUID()] then\r\n    D.assignedDials[dial.getGUID()].set = true\r\n\r\n    local unset_dials = false\r\n    for _, dial in pairs(D.assignedDials) do\r\n      if dial.set == false then\r\n        unset_dials = true\r\n        break\r\n      end\r\n    end\r\n    if unset_dials == false then\r\n      printToAll(\"All dials have been set by all players\", D.announceColor)\r\n    end\r\n  else\r\n    printToAll(\"Attempted to set dial, but dial not assigned\", D.announceColor)\r\n  end\r\nend\r\n\r\nD.unSetDial = function(dial)\r\n  if D.assignedDials[dial.getGUID()] then\r\n    D.assignedDials[dial.getGUID()].set = false\r\n  else\r\n    printToAll(\"Attempted to unset dial, but dial not assigned\", D.announceColor)\r\n  end\r\nend\r\n\r\nD.onObjectDestroyed = function(obj)\r\n  print(\"In table: \" .. tostring(D.assignedDials[obj.getGUID()]))\r\n  if D.assignedDials[obj.getGUID()] ~= nil then\r\n    D.assignedDials[obj.getGUID()] = nil\r\n    return\r\n  end\r\n  print(\"Deleted obj: \" .. tostring(obj))\r\n  for idx, dial in pairs(D.assignedDials) do\r\n    print(\"In table: \" .. tostring(dial.ship))\r\n    if dial.ship == obj then\r\n      D.assignedDials[idx] = nil\r\n    end\r\n  end\r\nend\r\n\r\nreturn D\r\n\nend)\n__bundle_register(\"TTS_xwing/src/PlayerActionModule\", function(require, _LOADED, __bundle_register, __bundle_modules)\n\r\n-- ~~~~~~\r\n-- Script by Eirik 'Flippster' Munthe\r\n--\r\n--\r\n-- X-Wing player action module\r\n-- Handles playe action events\r\n-- ~~~~~~\r\n\r\nlocal PlayerActionModule = {}\r\n\r\nfunction onPlayerAction(player, action, targets)\r\n  if action == Player.Action.Randomize then\r\n      if DiceControlModule.enabled then\r\n        for _, object in pairs(targets) do\r\n          DiceControlModule.onObjectRandomize(object, player)\r\n        end\r\n      end\r\n  elseif action == Player.Action.FlipOver then\r\n      for _, object in pairs(targets) do\r\n          if object.hasTag(\"ConfigCard\") then\r\n              for _, ship in pairs(getObjectsWithTag(\"Ship\")) do\r\n                ship_data = ship.getTable(\"Data\")\r\n                if ship_data.Config and (ship_data.Config.CardGUID == object.getGUID()) then\r\n                  ship.call(\"SetConfiguration\", {ConfigId = object.is_face_down and 1 or 2})\r\n                  break\r\n                end\r\n              end\r\n          elseif object.hasTag(\"Flippable\") then\r\n            if object.call(\"onFlip\",{player=player}) == false then\r\n              return false\r\n            end\r\n          end\r\n      end\r\n  end\r\nend\r\n\r\n\r\nreturn PlayerActionModule\r\n\nend)\n__bundle_register(\"TTS_xwing/src/HotkeyManager\", function(require, _LOADED, __bundle_register, __bundle_modules)\n-- Hotkey module, By Eirik W. Munthe (eirikmun)\r\nlocal H = {}\r\n\r\nH.arcCheckFixedArcs = function(player_color, hovered_object, world_position, key_down_up)\r\n  if hovered_object and ObjType.IsOfType(hovered_object, 'ship') then\r\n    local fixed_arcs = hovered_object.call(\"GetFixedArcs\")\r\n    if #fixed_arcs > 0 then\r\n      hovered_object.setDescription(Global.getTable(\"arcToCmnd\")[fixed_arcs[1]])\r\n    end\r\n  end\r\nend\r\n\r\nH.arcCheckTurretArcs = function(player_color, hovered_object, world_position, key_down_up)\r\n  if hovered_object and ObjType.IsOfType(hovered_object, 'ship') then\r\n    hovered_object.setDescription(\"turret\")\r\n  end\r\nend\r\n\r\nH.TlAndRangeCheck = function(player_color, hovered_object, world_position, key_down_up)\r\n  if hovered_object and ObjType.IsOfType(hovered_object, 'ship') then\r\n    hovered_object.setDescription(\"r3a\")\r\n    proxyPerformAction({hovered_object, 'Target Lock', player_color})\r\n  end\r\nend\r\n\r\nH.onLoad = function()\r\n    addHotkey(\"Arc Check, Fixed arcs\",H.arcCheckFixedArcs, false)\r\n    addHotkey(\"Arc Check, Turret arcs\",H.arcCheckTurretArcs, false)\r\n    addHotkey(\"R3 and TL\",H.TlAndRangeCheck, false)\r\nend\r\n\r\nEventSub.Register('onLoad', H.onLoad)\r\n\r\n\r\nreturn H\r\n\nend)\nreturn __bundle_require(\"__root\")",
    "LuaScriptState": "[]",
    "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
    "SnapPoints": [
      {
        "Position": {
          "x": 32.15591,
          "y": 1.01200235,
          "z": 2.50911784
        },
        "Rotation": {
          "x": 0.0,
          "y": -4.46236E-05,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 30.121109,
          "y": 1.01200235,
          "z": -2.44039536
        },
        "Rotation": {
          "x": 0.0,
          "y": 180.0,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 28.01504,
          "y": 1.01200235,
          "z": 2.53418016
        },
        "Rotation": {
          "x": 0.0,
          "y": -4.46236E-05,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 22.5231972,
          "y": 1.01200235,
          "z": -2.48891449
        },
        "Rotation": {
          "x": 0.0,
          "y": 180.0,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 20.4886875,
          "y": 1.01200235,
          "z": 2.518198
        },
        "Rotation": {
          "x": 0.0,
          "y": -4.46236E-05,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 18.4733677,
          "y": 1.01200235,
          "z": -2.45480132
        },
        "Rotation": {
          "x": 0.0,
          "y": 180.0,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 6.59246731,
          "y": 1.01200235,
          "z": -10.2641745
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 10.5579128,
          "y": 1.01200235,
          "z": -10.21457
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 6.51588154,
          "y": 1.01200235,
          "z": -6.844751
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 10.5709867,
          "y": 1.01200235,
          "z": -6.77763557
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 6.50052261,
          "y": 1.01200235,
          "z": -3.30484438
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 10.6459818,
          "y": 1.01200235,
          "z": -3.329019
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 6.605976,
          "y": 1.01200235,
          "z": 0.0227471832
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 10.6045771,
          "y": 1.01200235,
          "z": 0.0301529486
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 6.605976,
          "y": 1.01200235,
          "z": 3.49533057
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 10.6183329,
          "y": 1.01200235,
          "z": 3.4735465
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 6.56008339,
          "y": 1.01200235,
          "z": 6.954245
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 10.6072979,
          "y": 1.01200235,
          "z": 6.96988964
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 6.467988,
          "y": 1.01200235,
          "z": 10.2614584
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      },
      {
        "Position": {
          "x": 10.5770521,
          "y": 1.01200235,
          "z": 10.2600222
        },
        "Rotation": {
          "x": 0.0,
          "y": 89.99996,
          "z": 0.0
        }
      }
    ],
    "ObjectStates": [
      {
        "GUID": "1d0c48",
        "Name": "3DText",
        "Transform": {
          "posX": -85.6984253,
          "posY": 5.08309937,
          "posZ": 25.7933,
          "rotX": -1.35474947E-05,
          "rotY": 90.0,
          "rotZ": 1.54305435E-05,
          "scaleX": 1.0,
          "scaleY": 1.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "Text": {
          "Text": "1.11.11",
          "colorstate": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "fontSize": 64
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "3d90c5",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -1.34500515E-05,
          "rotY": 3.2824812E-06,
          "rotZ": 180.0,
          "scaleX": 0.063,
          "scaleY": 0.063,
          "scaleZ": 0.063
        },
        "Nickname": "Range 1-5 Rulers",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/Items/rulers/range15.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/Items/rulers/range15.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "67877e",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -32.3510857,
              "posY": 1.09393215,
              "posZ": 0.672862053,
              "rotX": -0.000206234938,
              "rotY": 0.00586966239,
              "rotZ": 359.7243,
              "scaleX": 0.625,
              "scaleY": 0.625,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/Items/rulers/range15.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/Items/rulers/range15.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "53ad3d",
        "Name": "Bag",
        "Transform": {
          "posX": -51.0000458,
          "posY": -3.0,
          "posZ": -10.0000744,
          "rotX": -9.49699552E-06,
          "rotY": 269.9952,
          "rotZ": 1.94594049E-05,
          "scaleX": 1.0,
          "scaleY": 1.0,
          "scaleZ": 1.0
        },
        "Nickname": "Accessories",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.7058823,
          "g": 0.366520882,
          "b": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "Bag": {
          "Order": 0
        },
        "LuaScript": "local surface = false\n\r\nfunction onLoad(save_state)\r\n    if surface == false then\r\n        local sPos = self.getPosition()\r\n        self.setPosition({sPos[1], -3, sPos[3]})\r\n        self.interactable = false\r\n        self.tooltip = false\r\n        self.lock()\r\n    else\r\n        local sPos = self.getPosition()\r\n        self.setPosition({sPos[1], 3, sPos[3]})\r\n        self.interactable = true\r\n        self.tooltip = true\r\n        self.lock()\r\n    end\r\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b460f9",
            "Name": "Card",
            "Transform": {
              "posX": -27.3807125,
              "posY": 1.04918623,
              "posZ": -0.2522582,
              "rotX": -9.864988E-08,
              "rotY": 270.00293,
              "rotZ": -1.32882761E-07,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Optimized Prototype",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 21517,
            "SidewaysCard": false,
            "CustomDeck": {
              "215": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/930441531075384015/7A07F64BBF17A94E4675FC16FA701B895FECF60B/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/930441531075385016/4697AFC0F0FFA01F3A9BCCD60465CAD21A312277/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": true,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "356eeb",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -27.356596,
              "posY": 1.01479447,
              "posZ": -0.230086625,
              "rotX": -2.7609272E-07,
              "rotY": 269.971863,
              "rotZ": 180.0,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Optimized Prototype",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/930441531075436209/79207B629229C29301AA4EFF7EC00FE9337E65FE/",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "5d6522",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.3100853,
              "posY": 1.05616415,
              "posZ": -48.3244629,
              "rotX": 358.548523,
              "rotY": 270.026428,
              "rotZ": 180.0056,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Hunted",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/930441531075406826/54F556B6D4090C5F99EDD27E940B4ADB113F6544/",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "4efe95",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.1356,
              "posY": 1.05081367,
              "posZ": -46.9203758,
              "rotX": 359.4434,
              "rotY": 269.981934,
              "rotZ": 180.0004,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Listening Device",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/930441531075421221/6EABBE023B3A5A2D95454A5F9C34970285045A9E/",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "a6b03d",
            "Name": "Card",
            "Transform": {
              "posX": -19.5372181,
              "posY": 1.04678154,
              "posZ": -28.555109,
              "rotX": 0.000235821615,
              "rotY": 270.005432,
              "rotZ": 0.2005561,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Suppressive Fire",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "Hands": true,
            "CardID": 21518,
            "SidewaysCard": false,
            "CustomDeck": {
              "215": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/930441531075384015/7A07F64BBF17A94E4675FC16FA701B895FECF60B/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/930441531075385016/4697AFC0F0FFA01F3A9BCCD60465CAD21A312277/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": true,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "f34ebc",
            "Name": "Card",
            "Transform": {
              "posX": -16.653738,
              "posY": 1.046658,
              "posZ": -29.0080357,
              "rotX": -0.000192552645,
              "rotY": 270.0067,
              "rotZ": 0.1941815,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Listening Device",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "Hands": true,
            "CardID": 21516,
            "SidewaysCard": false,
            "CustomDeck": {
              "215": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/930441531075384015/7A07F64BBF17A94E4675FC16FA701B895FECF60B/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/930441531075385016/4697AFC0F0FFA01F3A9BCCD60465CAD21A312277/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": true,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "bf755f",
            "Name": "Card",
            "Transform": {
              "posX": -16.6521549,
              "posY": 1.04652548,
              "posZ": -28.58725,
              "rotX": -0.000124457525,
              "rotY": 269.9996,
              "rotZ": 0.187361345,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Hunted",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "Hands": true,
            "CardID": 21515,
            "SidewaysCard": false,
            "CustomDeck": {
              "215": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/930441531075384015/7A07F64BBF17A94E4675FC16FA701B895FECF60B/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/930441531075385016/4697AFC0F0FFA01F3A9BCCD60465CAD21A312277/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": true,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "a927d4",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.4088173,
              "posY": 5.285847,
              "posZ": -9.621728,
              "rotX": 359.598816,
              "rotY": 179.948608,
              "rotZ": 359.52652,
              "scaleX": 0.375000447,
              "scaleY": 0.375000447,
              "scaleZ": 0.375000447
            },
            "Nickname": "I'll Show You the Dark Side",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/condtoken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/illshowyouthedarkside.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/condtoken.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "bf953d",
            "Name": "Card",
            "Transform": {
              "posX": -51.41821,
              "posY": 5.327764,
              "posZ": -9.423031,
              "rotX": 359.865845,
              "rotY": 180.007462,
              "rotZ": 359.79895,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "I'll Show You the Dark Side",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CardID": 21600,
            "SidewaysCard": false,
            "CustomDeck": {
              "216": {
                "FaceURL": "https://images-cdn.fantasyflightgames.com/filer_public/d1/43/d143413b-c3ee-4eca-b489-9ca1f463980a/swz18_ill-show-you_a3.png",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/940587165302402936/DC0C5D97D7B4E0F6CF6910D0C92D3CCE2FF3BFA6/",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "a43f4e",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -49.89412,
              "posY": 1.01272321,
              "posZ": -13.5078983,
              "rotX": 8.371511E-07,
              "rotY": 60.0000076,
              "rotZ": 180.0,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "It's the Resistance",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/itstheresistance.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b0cab4",
            "Name": "Card",
            "Transform": {
              "posX": -45.2523575,
              "posY": 1.04693663,
              "posZ": 11.6286268,
              "rotX": 6.11633E-08,
              "rotY": 179.971588,
              "rotZ": 2.00152812E-07,
              "scaleX": 0.9319501,
              "scaleY": 1.0,
              "scaleZ": 0.9319501
            },
            "Nickname": "DRK-1 Probe Droid",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CardID": 27800,
            "SidewaysCard": false,
            "CustomDeck": {
              "278": {
                "FaceURL": "https://images-cdn.fantasyflightgames.com/filer_public/d1/a7/d1a70245-95d9-4d20-931f-3cadd8a11ed8/swz30_probe-card.png",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/937214408389615589/542EFD82413853B67E28EA30E2BE606E3097E288/",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "c9c04e",
            "Name": "Card",
            "Transform": {
              "posX": 19.4052162,
              "posY": 1.05282748,
              "posZ": 13.1044712,
              "rotX": 0.142667517,
              "rotY": 179.966858,
              "rotZ": 0.0002460112,
              "scaleX": 0.9319501,
              "scaleY": 1.0,
              "scaleZ": 0.9319501
            },
            "Nickname": "Buzz Droid Swarm",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CardID": 27600,
            "SidewaysCard": false,
            "CustomDeck": {
              "276": {
                "FaceURL": "https://images-cdn.fantasyflightgames.com/filer_public/91/15/9115ba58-611d-4e11-91cd-da1aadff79ee/swz31_buzz-droid-swarm.png",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/937214408389615589/542EFD82413853B67E28EA30E2BE606E3097E288/",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "dd6f51",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 21.8726311,
              "posY": 4.47205973,
              "posZ": 3.5534656,
              "rotX": 346.035522,
              "rotY": 153.894592,
              "rotZ": 344.2704,
              "scaleX": 0.5750004,
              "scaleY": 0.5750004,
              "scaleZ": 0.5750004
            },
            "Nickname": "Shuttle Launcher (assigned to mothership)",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tools/DockTool.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "SpecularIntensity": 0.0,
                "SpecularSharpness": 2.0,
                "FresnelStrength": 0.0
              },
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\r\n-- Script by CrazyVulcan, based on BombDrop token by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Shuttle launch gizmo token\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = false\r\n__XW_TokenType = 'helper:shuttleLaunch'\r\n\r\n-- Ref to assigned ship if there is one\r\nassignedShip = nil\r\nassignedShuttle = nil\r\nlocal s1 = 0.225\r\nnameUnassigned = 'Shuttle Launcher (assigned to mothership)'\r\nnameAssigned = '\\'s Shuttle Launcher Token'\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n --       local state = {assignedShipGUID=assignedShip.getGUID()&& assignedShuttleGUID=assignedShuttle.getGUID()}\r\n--        return JSON.encode(state)\r\n\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(save_state)\r\n    self.setName(nameUnassigned)\r\n    if save_state ~= '' and save_state ~= 'null' and save_state ~= nil then\r\n        local assignedShipGUID = JSON.decode(save_state).assignedShipGUID\r\n        if assignedShipGUID ~= nil and getObjectFromGUID(assignedShipGUID) ~= nil then\r\n            assignedShip = getObjectFromGUID(assignedShipGUID)\r\n\t\t\tassignedShuttle = getObjectFromGUID(assignedShuttleGUID)\r\n            self.setName(assignedShip.getName() .. nameAssigned)\r\n            SpawnFirstButtons()\r\n        end\r\n    end\r\nend\r\n\r\n-- Spawn initial drop/unsassign buttons\r\nfunction SpawnFirstButtons()\r\n    self.clearButtons()\r\n    local decloakButton = {['function_owner'] = self, ['click_function'] = 'SpawnLaunchButtons', ['label'] = 'Launch Shuttle', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1500, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(decloakButton)\r\n    local deleteButton = {['function_owner'] = self , ['click_function'] = 'selfUnassign', ['label'] = 'Unassign', ['position'] = {0, 0.25, 1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1100, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(deleteButton)\r\nend\r\nfunction SpawnShuttleFindButtons()\r\n\tself.clearButtons()\r\n    local shuttleButton = {['function_owner'] = self, ['click_function'] = 'SYNCshuttle', ['label'] = 'SYNC Shuttle', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1500, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(shuttleButton)\r\nend\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped()\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.type== 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            printToAll('Shuttle Launcher Token assigned to ' .. nearest.getName(), {0.2, 0.2, 1})\r\n            SpawnShuttleFindButtons()\r\n            assignedShip = nearest\r\n            self.setName(assignedShip.getName() .. nameAssigned)\r\n        end\r\n    end\r\nend\r\n\r\n-- Assign Shuttle to this ship\r\nfunction SYNCshuttle ()\r\n    if assignedShuttle == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.type== 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            printToAll(nearest.getName() .. ' is docked to ' ..  assignedShip.getName())\r\n            SpawnFirstButtons()\r\n            assignedShuttle = nearest\r\n            self.setName(assignedShuttle.getName() .. nameAssigned)\r\n        end\r\n    end\r\nend\r\n-- <><><><><><><><><><><><> --\r\n\r\nfunction SpawnLaunchButtons ()\r\n    self.clearButtons()\r\n    local launchShuttle = {['function_owner'] = self, ['click_function'] = 'launchShuttleButton', ['label'] = 'Launch Shuttle', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 2000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(launchShuttle)\r\n    local dropShuttle = {['function_owner'] = self , ['click_function'] = 'dropShuttleButton', ['label'] = 'Drop Shuttle', ['position'] = {0, 0.25, 1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 2000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(dropShuttle)\r\n\tlocal setShuttle = {['function_owner'] = self , ['click_function'] = 'setShuttleButton', ['label'] = 'Set Shuttle', ['position'] = {1, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 2000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(setShuttle)\r\nend\r\n\r\nfunction dropShuttleButton()\r\nlocal MS_POS = assignedShip.getPosition()\r\nlocal MS_ROT = assignedShip.getRotation()\r\n\t\tassignedShuttle.setLock(true)\r\n\t\tassignedShip.setLock(true)\r\n\t\tassignedShuttle.setPosition({MS_POS.x,MS_POS.y+0.5,MS_POS.z})\r\n\t\tassignedShuttle.setRotation({MS_ROT.x, MS_ROT.y+180, MS_ROT.z})\r\n\r\n\t\tposZ= math.sin(math.rad(MS_ROT.y-90))*(s1*3)\r\n\t\tposX= math.cos(math.rad(MS_ROT.y-90))*(s1*3)\r\n\r\n\t\tassignedShuttle.setPosition({MS_POS.x+posX, MS_POS.y, MS_POS.z-posZ})\r\n\t\tassignedShuttle.setPositionSmooth({MS_POS.x+posX, MS_POS.y, MS_POS.z-posZ})\r\n\t\tassignedShuttle.setPosition({MS_POS.x+posX, MS_POS.y, MS_POS.z-posZ})\r\nend\r\n\r\nfunction launchShuttleButton()\r\nlocal MS_POS = assignedShip.getPosition()\r\nlocal MS_ROT = assignedShip.getRotation()\r\n\t\tassignedShuttle.setLock(true)\r\n\t\tassignedShip.setLock(true)\r\n\t\tassignedShuttle.setPosition({MS_POS.x,MS_POS.y+0.5,MS_POS.z})\r\n\t\tassignedShuttle.setRotation({MS_ROT.x, MS_ROT.y, MS_ROT.z})\r\n\r\n\t\tposZ= math.sin(math.rad(MS_ROT.y+90))*(s1*3)\r\n\t\tposX= math.cos(math.rad(MS_ROT.y+90))*(s1*3)\r\n\r\n\t\tassignedShuttle.setPosition({MS_POS.x+posX, MS_POS.y, MS_POS.z-posZ})\r\n\t\tassignedShuttle.setPositionSmooth({MS_POS.x+posX, MS_POS.y, MS_POS.z-posZ})\r\n\t\tassignedShuttle.setPosition({MS_POS.x+posX, MS_POS.y, MS_POS.z-posZ})\r\nend\r\n-- Unassign the ship\r\nfunction selfUnassign()\r\n    assignedShip = nil\r\n\tassignedShuttle = nil\r\n    self.clearButtons()\r\n    self.setName(nameUnassigned)\r\nend\r\n\r\nfunction setShuttleButton()\r\n\tSpawnFirstButtons()\r\nend\r\n\r\nfunction dummy() return end",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "d05464",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 49.73236,
              "posY": 4.178974,
              "posZ": 6.073814,
              "rotX": -3.12835141E-06,
              "rotY": 359.9848,
              "rotZ": 1.05929644E-06,
              "scaleX": 0.5750004,
              "scaleY": 0.5750004,
              "scaleZ": 0.5750004
            },
            "Nickname": "Bomb drop token (unassigned)",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Bomb drop gizmo token\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = false\r\n__XW_TokenType = 'helper:bombDrop'\r\n\r\n-- Ref to assigned ship if there is one\r\nassignedShip = nil\r\n\r\nnameUnassigned = 'Bomb drop token (unassigned)'\r\nnameAssigned = '\\'s bomb drop token'\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n        local state = {assignedShipGUID=assignedShip.getGUID()}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(save_state)\r\n    self.setName(nameUnassigned)\r\n    if save_state ~= '' and save_state ~= 'null' and save_state ~= nil then\r\n        local assignedShipGUID = JSON.decode(save_state).assignedShipGUID\r\n        if assignedShipGUID ~= nil and getObjectFromGUID(assignedShipGUID) ~= nil then\r\n            assignedShip = getObjectFromGUID(assignedShipGUID)\r\n            self.setName(assignedShip.getName() .. nameAssigned)\r\n            SpawnFirstButtons()\r\n        end\r\n    end\r\nend\r\n\r\n-- Spawn initial drop/unsassign buttons\r\nfunction SpawnFirstButtons()\r\n    self.clearButtons()\r\n    local decloakButton = {['function_owner'] = self, ['click_function'] = 'SpawnDropButtons', ['label'] = 'Drop bomb', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1500, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(decloakButton)\r\n    local deleteButton = {['function_owner'] = self , ['click_function'] = 'selfUnassign', ['label'] = 'Unassign', ['position'] = {0, 0.25, 1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1100, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(deleteButton)\r\nend\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped()\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.type== 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            printToAll('Bomb drop token assigned to ' .. nearest.getName(), {0.2, 0.2, 1})\r\n            SpawnFirstButtons()\r\n            assignedShip = nearest\r\n            self.setName(assignedShip.getName() .. nameAssigned)\r\n        end\r\n    end\r\nend\r\n\r\n-- Button spacing\r\nlocal sp = 0.7\r\n-- Base drop buttons positions\r\nlocal butPos = {}\r\nbutPos['s1'] = {0, 1*sp}\r\nbutPos['s2'] = {0, 2*sp}\r\nbutPos['s3'] = {0, 3*sp}\r\nbutPos['s4'] = {0, 4*sp}\r\nbutPos['s5'] = {0, 5*sp}\r\nbutPos['br1'] = {1*sp, 1*sp}\r\nbutPos['br2'] = {1*sp, 2*sp}\r\nbutPos['br3'] = {1*sp, 3*sp}\r\nbutPos['tr1'] = {2*sp, 1*sp}\r\nbutPos['tr2'] = {2*sp, 2*sp}\r\nbutPos['tr3'] = {2*sp, 3*sp}\r\n\r\n-- Get a drop buttons position (left/front variant included)\r\nfunction ButtonPos(butCode)\r\n    local rev = false\r\n    local left = false\r\n    if butCode:sub(-1, -1) == 'r' then\r\n        rev = true\r\n        butCode = butCode:sub(1, -2)\r\n    end\r\n    if butCode:sub(2, 2) == 'e' or butCode:sub(2, 2) == 'l' then\r\n        left = true\r\n        butCode = butCode:sub(1, 1) .. 'r' .. butCode:sub(3, -1)\r\n    end\r\n    local height = 0.3\r\n    local src = butPos[butCode]\r\n    if src == nil then return nil end\r\n    local pos = {src[1], height, src[2]}\r\n    if rev then pos[3] = -1*pos[3] end\r\n    if left then pos[1] = -1*pos[1] end\r\n    return pos\r\nend\r\n\r\n-- Spawn drop buttons based on self description\r\nfunction SpawnDropButtons()\r\n    self.clearButtons()\r\n    local drops = {{code='s1', pos=ButtonPos('s1')}}\r\n    for drop in string.gmatch(self.getDescription(), \"[^:]+\") do\r\n        if ButtonPos(drop) ~= nil then\r\n            table.insert(drops, {code=drop, pos=ButtonPos(drop)})\r\n        end\r\n    end\r\n    local labBut = {position={0, 0.3, 0}, width=1300, height=250, font_size=120, label='(choose drop template)', click_function = 'dummy'}\r\n    self.createButton(labBut)\r\n    local dBut = {width=350, height=350, function_owner=self, font_size=200}\r\n    for k, dTable in pairs(drops) do\r\n        dBut.position = dTable.pos\r\n        dBut.label = dTable.code\r\n        _G[dTable.code] = function() DropBomb(dTable.code) end\r\n        dBut.click_function = dTable.code\r\n        self.createButton(dBut)\r\n    end\r\nend\r\n\r\n-- Start a bomb drop on a ship\r\nfunction DropBomb(code)\r\n    assignedShip.setDescription('b:' .. code)\r\n    SpawnFirstButtons()\r\nend\r\n\r\n-- Unassign the ship\r\nfunction selfUnassign()\r\n    assignedShip = nil\r\n    self.clearButtons()\r\n    self.setName(nameUnassigned)\r\nend\r\n\r\nfunction dummy() return end",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "3857f8",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.4756241,
              "posY": 5.018522,
              "posZ": -10.8825836,
              "rotX": 3.35090044E-06,
              "rotY": 210.020447,
              "rotZ": 180.0,
              "scaleX": 0.3750004,
              "scaleY": 0.3750004,
              "scaleZ": 0.3750004
            },
            "Nickname": "StarViper Mk.II roll token",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
              "DiffuseURL": "http://i.imgur.com/BcFFWSl.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Token for easy barrel rolls with StarViper Mk.II title\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'helper:viperRoll'\r\n\r\n-- Ref to assigned ship if there is one\r\nassignedShip = nil\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n        local state = {assignedShipGUID=assignedShip.getGUID()}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(save_state)\r\n    self.setName('StarViper Mk.II roll token')\r\n    if save_state ~= '' and save_state ~= 'null' and save_state ~= nil then\r\n        local assignedShipGUID = JSON.decode(save_state).assignedShipGUID\r\n        if assignedShipGUID ~= nil and getObjectFromGUID(assignedShipGUID) ~= nil then\r\n            assignedShip = getObjectFromGUID(assignedShipGUID)\r\n            self.setName(assignedShip.getName() .. '\\'s roll token')\r\n            SpawnFirstButtons()\r\n        end\r\n    end\r\nend\r\n\r\n-- Spawn initial roll/unassign buttons\r\nfunction SpawnFirstButtons()\r\n    __XW_TokenIdle = true\r\n    self.clearButtons()\r\n    local decloakButton = {['function_owner'] = self, ['click_function'] = 'SpawnRollButtons', ['label'] = 'Roll', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(decloakButton)\r\n    local deleteButton = {['function_owner'] = self , ['click_function'] = 'selfUnassign', ['label'] = 'Unassign', ['position'] = {0, 0.25, 1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(deleteButton)\r\nend\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped()\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.type== 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            printToAll('SV Mk.II roll token assigned to ' .. nearest.getName(), {0.2, 0.2, 1})\r\n            self.setRotation(nearest.getRotation())\r\n            SpawnFirstButtons()\r\n            assignedShip = nearest\r\n            self.setName(assignedShip.getName() .. '\\'s roll token')\r\n        end\r\n    end\r\nend\r\n\r\n-- Spawn undo/OK/slide buttons (after a roll)\r\nfunction SpawnFinalButtons()\r\n    undoToBackCount = 1\r\n    self.clearButtons()\r\n    local undoButton = {['function_owner'] = self , ['click_function'] = 'performUndo', ['label'] = 'Undo', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(undoButton)\r\n    local deleteButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'OK', ['position'] = {0, 0.25, 1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(deleteButton)\r\nend\r\n\r\n-- Spawn first set, choosing Right/Left and Front/Back\r\nfunction SpawnRollButtons()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local rollLF_Button = {['function_owner'] = self,['click_function'] = 'spawnSetLF', ['label'] = 'LF', ['position'] = {-1.5, 0.25, -0.6}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(rollLF_Button)\r\n    local rollLB_Button = {['function_owner'] = self,['click_function'] = 'spawnSetLB', ['label'] = 'LB', ['position'] = {-1.5, 0.25, 0.6}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(rollLB_Button)\r\n    local rollRF_Button = {['function_owner'] = self,['click_function'] = 'spawnSetRF', ['label'] = 'RF', ['position'] = {1.5, 0.25, -0.6}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(rollRF_Button)\r\n    local rollRB_Button = {['function_owner'] = self,['click_function'] = 'spawnSetRB', ['label'] = 'RB', ['position'] = {1.5, 0.25, 0.6}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(rollRB_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2}, ['rotation'] =  {0, 0, 0}, ['width'] = 750, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\n-- Spawn second set, choosing front, middle and back adjustment\r\nfunction spawnSetLF()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local viperRollLF1_Button = {['function_owner'] = self,['click_function'] = 'viperRollLF1', ['label'] = 'Forward', ['position'] = {0, 0.25, -1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollLF1_Button)\r\n    local viperRollLF2_Button = {['function_owner'] = self,['click_function'] = 'viperRollLF2', ['label'] = 'Middle', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollLF2_Button)\r\n    local viperRollLF3_Button = {['function_owner'] = self,['click_function'] = 'viperRollLF3', ['label'] = 'Backward', ['position'] = {0, 0.25, 1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollLF3_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\nfunction spawnSetLB()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local viperRollLB1_Button = {['function_owner'] = self,['click_function'] = 'viperRollLB1', ['label'] = 'Forward', ['position'] = {0, 0.25, -1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollLB1_Button)\r\n    local viperRollLB2_Button = {['function_owner'] = self,['click_function'] = 'viperRollLB2', ['label'] = 'Middle', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollLB2_Button)\r\n    local viperRollLB3_Button = {['function_owner'] = self,['click_function'] = 'viperRollLB3', ['label'] = 'Backward', ['position'] = {0, 0.25, 1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollLB3_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\nfunction spawnSetRF()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local viperRollRF1_Button = {['function_owner'] = self,['click_function'] = 'viperRollRF1', ['label'] = 'Forward', ['position'] = {0, 0.25, -1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollRF1_Button)\r\n    local viperRollRF2_Button = {['function_owner'] = self,['click_function'] = 'viperRollRF2', ['label'] = 'Middle', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollRF2_Button)\r\n    local viperRollRF3_Button = {['function_owner'] = self,['click_function'] = 'viperRollRF3', ['label'] = 'Backward', ['position'] = {0, 0.25, 1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollRF3_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\nfunction spawnSetRB()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local viperRollRB1_Button = {['function_owner'] = self,['click_function'] = 'viperRollRB1', ['label'] = 'Forward', ['position'] = {0, 0.25, -1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollRB1_Button)\r\n    local viperRollRB2_Button = {['function_owner'] = self,['click_function'] = 'viperRollRB2', ['label'] = 'Middle', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollRB2_Button)\r\n    local viperRollRB3_Button = {['function_owner'] = self,['click_function'] = 'viperRollRB3', ['label'] = 'Backward', ['position'] = {0, 0.25, 1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(viperRollRB3_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\n--------\r\n-- ROLL MOVES\r\nfunction viperRollRF1()\r\n    if assignedShip.setDescription('vrf1') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction viperRollRF2()\r\n    if assignedShip.setDescription('vrf2') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction viperRollRF3()\r\n    if assignedShip.setDescription('vrf3') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n\r\nfunction viperRollRB1()\r\n    if assignedShip.setDescription('vrb1') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction viperRollRB2()\r\n    if assignedShip.setDescription('vrb2') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction viperRollRB3()\r\n    if assignedShip.setDescription('vrb3') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n\r\nfunction viperRollLF1()\r\n    if assignedShip.setDescription('vlf1') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction viperRollLF2()\r\n    if assignedShip.setDescription('vlf2') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction viperRollLF3()\r\n    if assignedShip.setDescription('vlf3') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n\r\nfunction viperRollLB1()\r\n    if assignedShip.setDescription('vlb1') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction viperRollLB2()\r\n    if assignedShip.setDescription('vlb2') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction viperRollLB3()\r\n    if assignedShip.setDescription('vlb3') then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n\r\n-- END DECLOAK MOVES\r\n--------\r\n\r\n-- Unassign ship\r\nfunction selfUnassign()\r\n    assignedShip = nil\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    self.setName('StarViper Mk.II roll token')\r\nend\r\n-- Back to first buttons\r\nfunction resetToFirst()\r\n    SpawnFirstButtons()\r\nend\r\n-- Undo move, if undid all back to roll buttons\r\nfunction performUndo()\r\n    assignedShip.setDescription('q')\r\n    undoToBackCount = undoToBackCount - 1\r\n    if undoToBackCount <= 0 then\r\n        SpawnRollButtons()\r\n    end\r\nend\r\n",
            "LuaScriptState": "{\"assignedShipGUID\":\"e9df57\"}",
            "XmlUI": ""
          },
          {
            "GUID": "20f28e",
            "Name": "CardCustom",
            "Transform": {
              "posX": -51.26077,
              "posY": 5.32713127,
              "posZ": -10.7047262,
              "rotX": 0.05111114,
              "rotY": 270.023438,
              "rotZ": 0.264059067,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "It's the Resistance",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 27600,
            "SidewaysCard": false,
            "CustomDeck": {
              "276": {
                "FaceURL": "https://images-cdn.fantasyflightgames.com/filer_public/cc/3c/cc3c697d-0940-4af6-8df7-86747f9ec0a7/swz45_its-the-resistance.png",
                "BackURL": "https://images-cdn.fantasyflightgames.com/filer_public/cc/3c/cc3c697d-0940-4af6-8df7-86747f9ec0a7/swz45_its-the-resistance.png",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "9bd2a9",
            "Name": "CardCustom",
            "Transform": {
              "posX": -50.5452538,
              "posY": 5.32862234,
              "posZ": -9.938803,
              "rotX": 359.981964,
              "rotY": 180.01593,
              "rotZ": 0.256842256,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Decoyed",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 27600,
            "SidewaysCard": false,
            "CustomDeck": {
              "276": {
                "FaceURL": "https://images-cdn.fantasyflightgames.com/filer_public/7e/38/7e38aca8-b0ea-4ddc-8ec4-64efca1544c8/swz40_decoyed.png",
                "BackURL": "https://images-cdn.fantasyflightgames.com/filer_public/7e/38/7e38aca8-b0ea-4ddc-8ec4-64efca1544c8/swz40_decoyed.png",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "6e92c1",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.6300659,
              "posY": 5.22156048,
              "posZ": -10.7485256,
              "rotX": 359.9023,
              "rotY": 269.977875,
              "rotZ": 180.0874,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Suppressive Fire",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/suppressivefire.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "6c9f72",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.5385246,
              "posY": 5.20358372,
              "posZ": -10.7695484,
              "rotX": 359.81427,
              "rotY": 269.9842,
              "rotZ": 180.1658,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Decoyed",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/decoyed.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "c8cfb0",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -38.5960121,
              "posY": 1.00878251,
              "posZ": 29.3144169,
              "rotX": 359.9908,
              "rotY": 0.0005512739,
              "rotZ": 359.98468,
              "scaleX": 0.3750001,
              "scaleY": 0.3750001,
              "scaleZ": 0.3750001
            },
            "Nickname": "Energy",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/energy.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Energy'",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "613879",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -36.57783,
              "posY": 1.00868559,
              "posZ": 29.0079422,
              "rotX": 0.00246011955,
              "rotY": 255.009064,
              "rotZ": 359.99408,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Shield",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/shield.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Shield'",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "7f0875",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -37.4703827,
              "posY": 1.008731,
              "posZ": 28.93856,
              "rotX": 0.00380774471,
              "rotY": 225.020462,
              "rotZ": 359.987885,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Charge",
            "Description": "Assigned to Soontir Fel",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/charge.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Charge'",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "4628a2",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -36.13583,
              "posY": 1.00867,
              "posZ": 29.1805153,
              "rotX": -0.00115374522,
              "rotY": 90.0000153,
              "rotZ": 0.00460977526,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Force",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/force.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Force'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "f60181",
            "Name": "CardCustom",
            "Transform": {
              "posX": -51.913063,
              "posY": 5.26837063,
              "posZ": -9.392667,
              "rotX": 359.861938,
              "rotY": 89.99901,
              "rotZ": 0.180617824,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Sensor Buoy (Blue)",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 27400,
            "SidewaysCard": false,
            "CustomDeck": {
              "274": {
                "FaceURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Cards/Pilots/First%20Order/Sensor%20Buoy%20(Blue).png",
                "BackURL": "http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/FOback.png",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "687e55",
            "Name": "CardCustom",
            "Transform": {
              "posX": -51.8717155,
              "posY": 4.44361353,
              "posZ": -6.59274,
              "rotX": 1.83379747E-08,
              "rotY": 89.99996,
              "rotZ": 2.17373874E-09,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Sensor Buoy (Red)",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 27600,
            "SidewaysCard": false,
            "CustomDeck": {
              "276": {
                "FaceURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Cards/Pilots/First%20Order/Sensor%20Buoy%20(Red)%20.png",
                "BackURL": "http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/FOback.png",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "8a6c44",
            "Name": "Card",
            "Transform": {
              "posX": -51.9662,
              "posY": 5.267758,
              "posZ": -10.8507118,
              "rotX": 359.88855,
              "rotY": 90.03249,
              "rotZ": 359.807922,
              "scaleX": 0.9567914,
              "scaleY": 1.0,
              "scaleZ": 0.9567914
            },
            "Nickname": "Fearful Prey",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CardID": 2100,
            "SidewaysCard": false,
            "CustomDeck": {
              "21": {
                "FaceURL": "https://images-cdn.fantasyflightgames.com/filer_public/4c/b2/4cb268d8-346f-4a42-a4bf-aa04a7d312ec/swz81_fearful-prey_cutout.png",
                "BackURL": "https://images-cdn.fantasyflightgames.com/filer_public/4c/b2/4cb268d8-346f-4a42-a4bf-aa04a7d312ec/swz81_fearful-prey_cutout.png",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "cf0a2e",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.893856,
              "posY": 4.77239227,
              "posZ": -15.0453892,
              "rotX": 2.612743E-09,
              "rotY": 90.02071,
              "rotZ": 1.92223638E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Fearful Prey",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/fearfulprey.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "299139",
            "Name": "Card",
            "Transform": {
              "posX": -52.0548325,
              "posY": 5.268846,
              "posZ": -9.957794,
              "rotX": 359.803619,
              "rotY": 89.9999542,
              "rotZ": 0.0153637733,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Zam Wesell",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CardID": 2100,
            "SidewaysCard": false,
            "CustomDeck": {
              "21": {
                "FaceURL": "https://images-cdn.fantasyflightgames.com/filer_public/30/68/3068be81-f299-4c69-b5ee-307ac1da9c89/swz82_a1_thank-me.png",
                "BackURL": "http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/CISback.jpg",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "dial = nil\nship = nil\nfunction addTintObject(params)\n    if params[1] == \"ship\" then\n      ship = params[2]\n    elseif params[1] == \"dial\" then\n      dial = params[2]\n    end\nend\n\nfunction onUpdate()\n    local tint = self.getColorTint()\n    if tint ~= color(1,1,1,1) then\n      self.setColorTint(color(1,1,1,1))\n      if dial ~= nil then\n        dial.setColorTint(tint)\n      end\n\n      for i, attachment in pairs(self.getAttachments()) do\n        id = self.removeAttachment(attachment.index)\n        id.setColorTint(tint)\n        self.addAttachment(id)\n      end\n\n      if ship ~= nil then\n        for i, attachment in pairs(ship.getAttachments()) do\n          id = ship.removeAttachment(attachment.index)\n          id.setColorTint(tint)\n          ship.addAttachment(id)\n        end\n      end\n\n    end\nend\n\nloaded = false\n\nfunction onLoad(savestate)\n  loaded = true\nend\n\nfunction isLoadedAndStill()\n  return loaded and self.resting\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "1fb1f1",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.6999474,
              "posY": 5.29219055,
              "posZ": -10.1308994,
              "rotX": 0.7291186,
              "rotY": 90.02834,
              "rotZ": 359.748169,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Zam Wesell",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/ZamWesell.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "70aaf5",
            "Name": "Card",
            "Transform": {
              "posX": -81.18952,
              "posY": 1.02360487,
              "posZ": 16.6237774,
              "rotX": 4.864985E-08,
              "rotY": 89.9995346,
              "rotZ": -1.7847897E-07,
              "scaleX": 0.68,
              "scaleY": 1.0,
              "scaleZ": 0.68
            },
            "Nickname": "Compromising Intel",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CardID": 27400,
            "SidewaysCard": false,
            "CustomDeck": {
              "274": {
                "FaceURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/compromising-intel.png",
                "BackURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/compromising-intel.png",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "deadbf",
            "Name": "Card",
            "Transform": {
              "posX": -81.33536,
              "posY": 1.02360487,
              "posZ": 11.1561575,
              "rotX": 1.09036009E-07,
              "rotY": 90.0003052,
              "rotZ": -5.69532155E-08,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Zam Wesell",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CardID": 2200,
            "SidewaysCard": false,
            "CustomDeck": {
              "22": {
                "FaceURL": "https://images-cdn.fantasyflightgames.com/filer_public/24/92/2492e698-3402-4ec8-9a8d-bc7e30aea98c/swz82_a1_mean-business.png",
                "BackURL": "http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/CISback.jpg",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "dial = nil\nship = nil\nfunction addTintObject(params)\n    if params[1] == \"ship\" then\n      ship = params[2]\n    elseif params[1] == \"dial\" then\n      dial = params[2]\n    end\nend\n\nfunction onUpdate()\n    local tint = self.getColorTint()\n    if tint ~= color(1,1,1,1) then\n      self.setColorTint(color(1,1,1,1))\n      if dial ~= nil then\n        dial.setColorTint(tint)\n      end\n\n      for i, attachment in pairs(self.getAttachments()) do\n        id = self.removeAttachment(attachment.index)\n        id.setColorTint(tint)\n        self.addAttachment(id)\n      end\n\n      if ship ~= nil then\n        for i, attachment in pairs(ship.getAttachments()) do\n          id = ship.removeAttachment(attachment.index)\n          id.setColorTint(tint)\n          ship.addAttachment(id)\n        end\n      end\n\n    end\nend\n\nloaded = false\n\nfunction onLoad(savestate)\n  loaded = true\nend\n\nfunction isLoadedAndStill()\n  return loaded and self.resting\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "dcd44b",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -79.56975,
              "posY": 1.0474999,
              "posZ": 11.4420338,
              "rotX": -1.27964682E-07,
              "rotY": 90.00412,
              "rotZ": -3.78134821E-08,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Compromising Intel",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/comp_intel.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.7186966,
              "posY": 5.008511,
              "posZ": -9.34362,
              "rotX": -1.86830817E-07,
              "rotY": 90.0010452,
              "rotZ": -6.769254E-07,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Arc Indicator2",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverde.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.4061623,
              "posY": 5.2342205,
              "posZ": -9.531726,
              "rotX": -1.01327782E-06,
              "rotY": 90.00102,
              "rotZ": 8.99676934E-07,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Arc Indicator3",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.7091866,
              "posY": 5.03089333,
              "posZ": -9.387806,
              "rotX": -3.91262745E-07,
              "rotY": 90.0009842,
              "rotZ": -1.239516E-06,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Arc Indicator7",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.5909538,
              "posY": 4.897165,
              "posZ": -9.121004,
              "rotX": 5.78785261E-07,
              "rotY": 90.0012054,
              "rotZ": -1.288961E-06,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Arc Indicator0",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverm.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.5180664,
              "posY": 5.012714,
              "posZ": -9.198547,
              "rotX": -3.06061935E-07,
              "rotY": 90.00115,
              "rotZ": 1.31593117E-06,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Arc Indicator5",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverde.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -76.1560745,
              "posY": 1.02624989,
              "posZ": 21.10404,
              "rotX": -8.66409152E-07,
              "rotY": 90.00131,
              "rotZ": -7.007847E-07,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Arc Indicator4",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverm.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.685112,
              "posY": 5.040887,
              "posZ": -9.361525,
              "rotX": -3.17809935E-07,
              "rotY": 90.0007858,
              "rotZ": -1.23854946E-07,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Arc Indicator6",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverm.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.86589,
              "posY": 4.876752,
              "posZ": -9.368348,
              "rotX": -9.09043152E-08,
              "rotY": 90.00083,
              "rotZ": 4.90815751E-07,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Arc Indicator1",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverm.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "5c8c05",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.4332,
              "posY": 5.183486,
              "posZ": -9.331404,
              "rotX": -5.361057E-07,
              "rotY": 89.99613,
              "rotZ": -4.123887E-07,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Dual Arc Indicator5",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverde.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "5ab115",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.750248,
              "posY": 4.359057,
              "posZ": -11.2368517,
              "rotX": -8.349412E-07,
              "rotY": 89.99614,
              "rotZ": 3.17912537E-07,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Dual Arc Indicator2",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverde.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "5ab115",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.1594467,
              "posY": 5.20201874,
              "posZ": -9.282449,
              "rotX": 2.95132168E-07,
              "rotY": 89.9961548,
              "rotZ": -3.2162626E-07,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Dual Arc Indicator3",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "5c4509",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.767807,
              "posY": 4.37819767,
              "posZ": -8.048785,
              "rotX": -4.7286477E-08,
              "rotY": 89.9962158,
              "rotZ": 1.1159289E-07,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Dual Arc Indicator7",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "041edc",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.9659157,
              "posY": 5.277096,
              "posZ": -10.086175,
              "rotX": 0.418477029,
              "rotY": 89.98243,
              "rotZ": 357.794922,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Dual Arc Indicator1",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverm.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "5ab115",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.63103,
              "posY": 5.26132536,
              "posZ": -13.0691051,
              "rotX": -2.23506134E-07,
              "rotY": 89.9961243,
              "rotZ": 7.71050054E-07,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Dual Arc Indicator0",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverm.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "eaa639",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -51.107563,
              "posY": 5.26132536,
              "posZ": -11.2721558,
              "rotX": 1.20573475E-06,
              "rotY": 89.99625,
              "rotZ": -1.27644819E-06,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Dual Arc Indicator6",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverm.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "148709",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.9118156,
              "posY": 5.26130152,
              "posZ": -9.184621,
              "rotX": -2.652888E-06,
              "rotY": 89.99627,
              "rotZ": -1.843364E-06,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Dual Arc Indicator4",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverm.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          },
          {
            "GUID": "4cc140",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.609333,
              "posY": 5.246348,
              "posZ": -10.3611383,
              "rotX": 1.17327249,
              "rotY": 179.9843,
              "rotZ": 1.234156,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Epic Wing Token",
            "Description": "Test",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "http://cloud-3.steamusercontent.com/ugc/772864005379606525/22973716170E85B420FAFDCD386F9F3CDE2D7784/",
              "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/772864005379607458/65B8F0711DA05AE27B198979B0A4BE951284FD4E/",
              "NormalURL": "",
              "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/772864005379606525/22973716170E85B420FAFDCD386F9F3CDE2D7784/",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "SpecularIntensity": 0.0,
                "SpecularSharpness": 2.0,
                "FresnelStrength": 0.0
              },
              "CastShadows": true
            },
            "LuaScript": "\r\n-- ~~~~~~\r\n-- Script by CrazyVulcan\r\n-- Based on work by dzikakulka\r\n-- Issues, history at: TBD\r\n--\r\n-- Epic Wing gizmo token v0.1 test canadate.\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = false\r\n__XW_TokenType = 'helper:epicWing'\r\n\r\nlocal s1 = 0.73\r\n\r\nwingPositions = {\r\n\tleader = {\r\n\t\tposName = \"leader\",\r\n\t\tposOffset = vector(0, 0, 0),\r\n\t},\r\n\tleftFlank = {\r\n\t\tposName = \"left flank\",\r\n\t\tposOffset = vector(s1*3, 0, 0)\r\n\t},\r\n\trightFlank = {\r\n\t\tposName = \"right flank\",\r\n\t\tposOffset = vector(-s1*3, 0, 0)\r\n\t},\r\n\tleftSupport = {\r\n\t\tposName = \"left support\",\r\n\t\tposOffset = vector(s1*3, 0, s1*3)\r\n\t},\r\n\trearSupport = {\r\n\t\tposName = \"rear support\",\r\n\t\tposOffset = vector(0, 0, s1*3)\r\n\t},\r\n\trightSupport = {\r\n\t\tposName = \"right support\",\r\n\t\tposOffset = vector(-s1*3, 0, s1*3)\r\n\t},\r\n}\r\n\r\nwingConfigurations = {\r\n\t[3] = {\t[1] = \"leftFlank\",\r\n\t \t\t[2] = \"rightFlank\"},\r\n\t[4] = {\t[1] = \"leftFlank\",\r\n\t \t\t[2] = \"rightFlank\",\r\n\t\t\t[3] = \"rearSupport\"},\r\n\t[5] = {\t[1] = \"leftFlank\",\r\n\t \t\t[2] = \"rightFlank\",\r\n\t\t\t[3] = \"leftSupport\",\r\n\t\t\t[4] = \"rightSupport\"},\r\n\t[6] = {\t[1] = \"leftFlank\",\r\n\t \t\t[2] = \"rightFlank\",\r\n\t\t\t[3] = \"rearSupport\",\r\n\t\t\t[4] = \"leftSupport\",\r\n\t\t\t[5] = \"rightSupport\"}\r\n}\r\n\r\nposNames = { \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"}\r\n\r\nassignedShips = {}\r\n\r\nconfigured = false\r\n\r\n\r\nleader = nil\r\nnameUnassigned = 'Epic Wing Token'\r\nnameAssigned = '\\'s Wing'\r\nwingName = ''\r\nconfiguration = 0\r\n\r\ntoolOpen = false\r\n\r\nfunction onLoad()\r\n\tnameAssigned = self.getName()\r\n\tSpawnFirstButtons()\r\nend\r\n\r\nfunction SpawnFirstButtons()\r\n\tif nameAssigned == 'Epic Wing Token' then\r\n\t    self.clearButtons()\r\n\t\tlocal nameWingButton = {['function_owner'] = self , ['click_function'] = 'nameWingButton', ['label'] = 'Click to Start', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 700, ['height'] = 200, ['font_size'] = 100}\r\n\t    self.createButton(nameWingButton)\r\n\telse\r\n\t\tSpawnLastButtons()\r\n\tend\r\n\r\nend\r\n\r\nfunction onDrop()\r\n\tif toolOpen == true then\r\n\t\tAddWingmate()\r\n\tend\r\nend\r\n\r\n\r\n\r\nfunction SpawnLastButtons()\r\n    self.clearButtons()\r\n    local ResetButton = {['function_owner'] = self , ['click_function'] = 'selfReset', ['label'] = 'Reset', ['position'] = {0, 0.25, 0.8}, ['rotation'] =  {0, 0, 0}, ['width'] = 700, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(ResetButton)\r\n\tlocal formWingButton = {['function_owner'] = self , ['click_function'] = 'SetWing', ['label'] = 'Form Wing', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 700, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(formWingButton)\r\n\ttoolOpen = true\r\n\twingName = self.getName()\r\nend\r\n\r\n\r\n-- Unassign the ship\r\nfunction selfReset()\r\n\r\n\tlocal selfParams = self.getCustomObject()\r\n\tselfParams.diffuse = \"http://cloud-3.steamusercontent.com/ugc/772864005379607458/65B8F0711DA05AE27B198979B0A4BE951284FD4E/\"\r\n\tself.setCustomObject(selfParams)\r\n\tassignedShips = {}\r\n    self.clearButtons()\r\n    self.setName(nameUnassigned)\r\n\tnameAssigned = nameUnassigned\r\n\tself.call('SpawnFirstButtons')\r\n\tlocal newSelf = self.reload()\r\nend\r\n\r\n\r\n--asign ships to wing Place token on the ship and press the Left Wing Button\r\n-- Assign on drop near a small base ship\r\n-- Add a wingmate to the wing\r\nfunction AddWingmate ()\r\n\t--find which posistion to fill next\r\n\tlocal spos = self.getPosition()\r\n    local nearest = nil\r\n    local minDist = 2.89 -- 80mm\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ship.type== 'Figurine' and ship.name ~= '' then\r\n            local pos = ship.getPosition()\r\n            local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n            if dist < minDist then\r\n                nearest = ship\r\n                minDist = dist\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n\t\tif leader == nil then\r\n        \tprintToAll('Epic wing token assigned to ' .. nearest.getName())\r\n\t\t\tleader = nearest\r\n        \tSpawnFirstButtons()\r\n\t\telseif #assignedShips < 5 then\r\n\t\t\tif nearest == leader then\r\n\t\t\t\tprintToAll(\"Unable to add \" .. nearest.getName() ..\" to \" .. wingName .. \", it is allready in it\")\r\n\t\t\t\treturn\r\n\t\t\tend\r\n\t\t\tfor i, assignment in pairs(assignedShips) do\r\n\t\t\t\tif assignment.ship == nearest then\r\n\t\t\t\t\tprintToAll(\"Unable to add \" .. nearest.getName() ..\" to \" .. wingName .. \", it is allready in it\")\r\n\t\t\t\t\treturn\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\ttable.insert(assignedShips, {ship = nearest, active = true})\r\n\t\t\tnearest.addContextMenuItem(\"Rejoin wing\", function() rejoin(nearest) end, false)\r\n\t\t\tnearest.addContextMenuItem(\"Split from wing\", function() split(nearest) end, false)\r\n\t\t\tprintToAll(wingName .. ' ' .. posNames[#assignedShips] .. ': assigned to ' .. nearest.getName())\r\n\t\t\treturn\r\n\t\telse\r\n\t\t\tprintToAll(\"Unable to add \" .. nearest.getName() ..\" to \" .. wingName .. \", it is allready full\")\r\n\t\t\treturn\r\n\t\tend\r\n\tend\r\nend\r\n\r\n\r\n\r\n-------------------------------------------\r\n----Flavor Script for Nameing Squadrons----\r\n\r\nfunction nameWingButton()\r\n\tself.clearButtons()\r\n\r\n\tlocal SetRedSquadron = {['function_owner'] = self, ['click_function'] = 'SetRedSquadron', ['label'] = 'Red Squadron', ['position'] = {-2.5, 0.25, 1}, ['rotation'] =  {0, 0, 0}, ['width'] = 900, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(SetRedSquadron)\r\n\tlocal SetGoldSquadron = {['function_owner'] = self, ['click_function'] = 'SetGoldSquadron', ['label'] = 'Gold Squadron', ['position'] = {-2.5, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 900, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(SetGoldSquadron)\r\n\tlocal SetBlueSquadron = {['function_owner'] = self, ['click_function'] = 'SetBlueSquadron', ['label'] = 'Blue Squadron', ['position'] = {-2.5, 0.25, -1}, ['rotation'] =  {0, 0, 0}, ['width'] = 900, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(SetBlueSquadron)\r\n\tlocal SetGreenSquadron = {['function_owner'] = self, ['click_function'] = 'SetGreenSquadron', ['label'] = 'Green Squadron', ['position'] = {2.5, 0.25, 1}, ['rotation'] =  {0, 0, 0}, ['width'] = 900, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(SetGreenSquadron)\r\n\tlocal SetBlackSquadron = {['function_owner'] = self, ['click_function'] = 'SetBlackSquadron', ['label'] = 'Black Squadron', ['position'] = {2.5, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 900, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(SetBlackSquadron)\r\n\tlocal SetWhiteSquadron = {['function_owner'] = self, ['click_function'] = 'SetWhiteSquadron', ['label'] = 'White Squadron', ['position'] = {2.5, 0.25, -1}, ['rotation'] =  {0, 0, 0}, ['width'] = 900, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(SetWhiteSquadron)\r\n\r\nend\r\n\r\n\r\nfunction SetRedSquadron()\r\n\twingName = 'Red'\r\n\tself.setName(wingName)\r\n\tlocal selfParams = self.getCustomObject()\r\n\tselfParams.diffuse = \"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tools/RedSquadron.png\"\r\n\tself.setCustomObject(selfParams)\r\n\tlocal newSelf = self.reload()\r\n\tself.call('SpawnLastButtons')\r\nend\r\nfunction SetGoldSquadron()\r\n\twingName = 'Gold'\r\n\tself.setName(wingName)\r\n\tlocal selfParams = self.getCustomObject()\r\n\tselfParams.diffuse = \"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tools/GoldSquadron.png\"\r\n\tself.setCustomObject(selfParams)\r\n\tlocal newSelf = self.reload()\r\n\tself.call('SpawnLastButtons')\r\nend\r\nfunction SetBlueSquadron()\r\n\twingName = 'Blue'\r\n\tself.setName(wingName)\r\n\tlocal selfParams = self.getCustomObject()\r\n\tselfParams.diffuse = \"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tools/BlueSquadron.png\"\r\n\tself.setCustomObject(selfParams)\r\n\tself.call('SpawnLastButtons')\r\n\tlocal newSelf = self.reload()\r\n\r\nend\r\nfunction SetGreenSquadron()\r\n\twingName = 'Green'\r\n\tself.setName(wingName)\r\n\tlocal selfParams = self.getCustomObject()\r\n\tselfParams.diffuse = \"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tools/GreenSquadron.png\"\r\n\tself.setCustomObject(selfParams)\r\n\tself.call('SpawnLastButtons')\r\n\tlocal newSelf = self.reload()\r\n\r\nend\r\n\r\nfunction SetBlackSquadron()\r\n\twingName = 'Black'\r\n\tself.setName(wingName)\r\n\tlocal selfParams = self.getCustomObject()\r\n\tselfParams.diffuse = \"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tools/BlackSquadron.png\"\r\n\tself.setCustomObject(selfParams)\r\n\tself.call('SpawnLastButtons')\r\n\tlocal newSelf = self.reload()\r\n\r\nend\r\n\r\nfunction SetWhiteSquadron()\r\n\twingName = 'White'\r\n\tself.setName(wingName)\r\n\tlocal selfParams = self.getCustomObject()\r\n\tselfParams.diffuse = \"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tools/WhiteSquadron.png\"\r\n\tself.setCustomObject(selfParams)\r\n\tlocal newSelf = self.reload()\r\n\tself.call('SpawnLastButtons')\r\n\r\nend\r\n\r\n\r\nfunction SetWing()\r\n\tif not configured then\r\n\t\tif #assignedShips < 2 then\r\n\t\t\tprint('A Wing needs to have at least 3 ships to form')\r\n\t\t\treturn\r\n\t\tend\r\n\t\tconfigured = true\r\n\t\tconfiguration = #assignedShips + 1\r\n\t\ttoolOpen = false\r\n\tend\r\n\tself.clearButtons()\r\n\tWingMateLand(1, true)\r\n\tlocal formWingButton = {['function_owner'] = self , ['click_function'] = 'SetWing', ['label'] = 'Form Wing', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 700, ['height'] = 200, ['font_size'] = 100}\r\n    self.createButton(formWingButton)\r\n\r\nend\r\n\r\n\r\nfunction WingMateLand(index, recursive)\r\n\tlocal ship = assignedShips[index].ship\r\n\tlocal wingpos = wingPositions[wingConfigurations[configuration][index]]\r\n\tif ship ~= nil and assignedShips[index].active then\r\n\t\tdesiredpos = LocalPos(leader,wingpos.posOffset)\r\n\r\n\t\tlocal success = Global.call(\"epicMoveWingmate\",{ship, desiredpos, leader.getRotation()})\r\n\t\tif not success then\r\n\t\t\tprint(wingpos.posName .. ' needs to break off')-- Break from wing, and mark for movement after all other wing members have been moved\r\n\t\t\tassignedShips[index].active = false\r\n\t\tend\r\n\tend\r\n\tif index < configuration -1 and recursive then\r\n\t\tif ship ~= nil then\r\n\t\t\tWait.condition(function() WingMateLand(index +1, recursive) end , function() return ship.resting and not ship.isSmoothMoving() end)\r\n\t\telse\r\n\t\t\tWingMateLand(index +1, recursive)\r\n\t\tend\r\n\tend\r\nend\r\n\r\n\r\nfunction rejoin(ship)\r\n\tfor i, shipinfo in pairs(assignedShips) do\r\n\t\tif shipinfo.ship == ship then\r\n\t\t\tassignedShips[i].active = true\r\n\t\t\tWingMateLand(i, false)\r\n\t\t\treturn\r\n\t\tend\r\n\tend\r\nend\r\n\r\nfunction split(ship)\r\n\tfor i, shipinfo in pairs(assignedShips) do\r\n\t\tif shipinfo.ship == ship then\r\n\t\t\tassignedShips[i].active = false\r\n\t\t\treturn\r\n\t\tend\r\n\tend\r\nend\r\n\r\n-------\r\n-- Local Reference function, for spawning items relative to the quick build card\r\nfunction LocalPos(object, position)\r\n    local rot = object.getRotation()\r\n    local lPos = {position[1], position[2], position[3]}\r\n    -- Z-X-Y extrinsic\r\n    local zRot = RotMatrix('z', rot['z'])\r\n    lPos = RotateVector(zRot, lPos)\r\n    local xRot = RotMatrix('x', rot['x'])\r\n    lPos = RotateVector(xRot, lPos)\r\n    local yRot = RotMatrix('y', rot['y'])\r\n    lPos = RotateVector(yRot, lPos)\r\n\r\n    return Vect_Sum(lPos, object.getPosition())\r\nend\r\n\r\n\r\n\r\nfunction RotMatrix(axis, angDeg)\r\n    local ang = math.rad(angDeg)\r\n    local cs = math.cos\r\n    local sn = math.sin\r\n\r\n    if axis == 'x' then\r\n        return {\r\n                    { 1,        0,             0 },\r\n                    { 0,   cs(ang),   -1*sn(ang) },\r\n                    { 0,   sn(ang),      cs(ang) }\r\n               }\r\n    elseif axis == 'y' then\r\n        return {\r\n                    {    cs(ang),   0,   sn(ang) },\r\n                    {          0,   1,         0 },\r\n                    { -1*sn(ang),   0,   cs(ang) }\r\n               }\r\n    elseif axis == 'z' then\r\n        return {\r\n                    { cs(ang),   -1*sn(ang),   0 },\r\n                    { sn(ang),      cs(ang),   0 },\r\n                    { 0,                  0,   1 }\r\n               }\r\n    end\r\nend\r\n\r\n-- Apply given rotation matrix on given vector\r\n-- (multiply matrix and column vector)\r\nfunction RotateVector(rotMat, vect)\r\n    local out = {0, 0, 0}\r\n    for i=1,3,1 do\r\n        for j=1,3,1 do\r\n            out[i] = out[i] + rotMat[i][j]*vect[j]\r\n        end\r\n    end\r\n    return out\r\nend\r\n\r\n-- Sum of two vectors (of any size)\r\nfunction Vect_Sum(vec1, vec2)\r\n    local out = {}\r\n    local k = 1\r\n    while vec1[k] ~= nil and vec2[k] ~= nil do\r\n        out[k] = vec1[k] + vec2[k]\r\n        k = k+1\r\n    end\r\n    return out\r\nend\r\n",
            "LuaScriptState": "{\"assignedShipGUID\":\"caf191\"}",
            "XmlUI": ""
          },
          {
            "GUID": "f29b8d",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.0,
              "posY": 0.03999996,
              "posZ": 0.0,
              "rotX": 359.8775,
              "rotY": 270.006653,
              "rotZ": 359.939575,
              "scaleX": 3.74999642,
              "scaleY": 3.74999642,
              "scaleZ": 3.74999642
            },
            "Nickname": "Data Card",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "http://cloud-3.steamusercontent.com/ugc/950707037729472574/7665F8325FA50331A3FA97F59CE058B978646904/",
              "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/950707037729410479/5104E13140078AFBE9CCAF26B53D27E013C86FCB/",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 0,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "7967ed",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.9650955,
              "posY": 5.237076,
              "posZ": -10.4158421,
              "rotX": 0.0199311189,
              "rotY": 90.01801,
              "rotZ": 359.634552,
              "scaleX": 0.625000358,
              "scaleY": 0.625000358,
              "scaleZ": 0.625000358
            },
            "Nickname": "Unassigned Dial",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.0,
              "g": 0.0,
              "b": 0.0,
              "a": 0.0
            },
            "Tags": [
              "Flippable"
            ],
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/dialmodel.obj",
              "DiffuseURL": "http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/skin/1/Empire.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/dialcollider.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "SpecularIntensity": 0.0,
                "SpecularSharpness": 6.966666,
                "FresnelStrength": 0.5777779
              },
              "CastShadows": true
            },
            "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\nmenu   = require(\"TTS_xwing/src/Dial/Menu\")\r\nbutton = require(\"TTS_xwing/src/Dial/Button\")\r\nproxy  = require(\"TTS_xwing/src/Dial/Proxy\")\r\n\r\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Token for easy barrel rolls with StarViper Mk.II title\r\n-- ~~~~~~\r\n\r\n\r\n-- Scripted token properties\r\n__XW_Token = false\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'helper:Dial'\r\n\r\nself.addTag(\"Flippable\")\r\n\r\n-- Ref to assigned ship if there is one\r\nassignedShip = nil\r\nplayerColor = nil\r\nplayerTeam = nil\r\nteamVisibility = \"\"\r\nopenpanel = nil\r\nopenbutton = nil\r\nopencolor = \"#555555\"\r\nclosedcolor = \"#222222\"\r\nsetMan = nil\r\nprevMan = nil\r\nmanButtonId = nil\r\n\r\nclickMode = false\r\nproxyMode = true\r\nfinished_setup = true\r\n\r\ntimeoutDuration = 5\r\n\r\nclicktimer = nil\r\n\r\narcCommands = {\r\n    Range1 = \"r1\",\r\n    Range2 = \"r2\",\r\n    Range3 = \"r3\",\r\n    FrontArc = \"f\",\r\n    LeftArc = \"sl\",\r\n    RightArc = \"sr\",\r\n    RearArc = \"b\",\r\n    BullseyeArc = \"bull\",\r\n    FullFrontArc = \"ff\",\r\n    FullBackArc = \"fb\",\r\n    FixedArc = \"f\"\r\n}\r\n\r\narcToCmnd = {\r\n  front = \"f\",\r\n  left = \"sl\",\r\n  back = \"b\",\r\n  right = \"sr\",\r\n  frontback = \"frontback\",\r\n  leftright = \"leftright\",\r\n  fullfront = \"ff\",\r\n  fullback = \"fb\",\r\n  bull = \"bull\",\r\n}\r\n\r\nmountToId = {\r\n  main = \"1\",\r\n  front = \"1\",\r\n  rear = \"2\"\r\n}\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n        local state = {assignedShipGUID=assignedShip.getGUID(),\r\n                        owningPlayer=playerColor,\r\n                        owningPlayerTeam=playerTeam,\r\n                        clickMode = clickMode,\r\n                        proxyMode = proxyMode,\r\n                        timeoutDuration = timeoutDuration\r\n                    }\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\nfirstSet=false\r\nsetSinceTemplatePlaced = false -- True if the user has set a movement since the movement template was last placed on the table\r\ntemplatePlaced = false  -- True if the movement template is currently on the table (as far as we can tell based on just dial button clicks, anyway)\r\n\r\nexOptions = {}\r\nexOptSelected = false\r\nexOptValue = {}\r\nexOptButtons = { \"ExOpt1\", \"ExOpt2\", \"ExOpt3\", \"ExOpt4\", \"ExOpt5\",  \"ExOpt6\", \"ExOpt7\", \"ExOpt8\", \"ExOpt9\", \"ExOpt10\", \"ExOpt11\", \"ExOpt12\", \"ExOpt13\"}\r\n\r\n\r\n-- Restore self state\r\nfunction onLoad(savedData)\r\n    --self.UI.setCustomAssets(assetTable)\r\n    clearDial()\r\n    if savedData ~= nil and savedData ~= \"\" then\r\n        state = JSON.decode(savedData)\r\n        clickMode = state.clickMode\r\n        proxyMode = state.proxyMode\r\n        playerColor = state.owningPlayer\r\n        playerTeam = state.playerTeam\r\n        local savedShipGuid = state.assignedShipGUID\r\n        assignedShip = nil\r\n\r\n        local dial = self\r\n        if savedShipGuid then\r\n          Wait.frames(\r\n            function()\r\n              local savedShip = getObjectFromGUID(savedShipGuid)\r\n              if savedShip then\r\n                dial.call(\"assignShip\", {ship=savedShip})\r\n              end\r\n            end, 1)\r\n        end\r\n    end\r\n\r\n    timeoutDuration = clickMode and 20 or 2\r\n\r\n    menu.addToggleItem(\"clickMode\", \"click mode\", toggleClickMode)\r\n    menu.addToggleItem(\"proxyMode\", \"proxy mode\", toggleProxyMode)\r\n    menu.addToggleItem(nil,\"Reset dial\", resetDial, true)\r\n    menu.update()\r\nend\r\n\r\nfunction clearOpenPanel()\r\n    if openpanel ~= nil then\r\n        self.UI.hide(openpanel)\r\n        self.UI.setAttribute(openbutton, \"color\", closedcolor)\r\n        self.UI.setAttribute(openbutton, \"textColor\", \"#FFFFFF\")\r\n    end\r\n    openpanel = nil\r\n    openbutton = nil\r\nend\r\n\r\nfunction clearDial()\r\n\r\n    self.UI.hide('TalonPanel') -- Talon has to come before CenterFU which it is inside -- hide doesn't work when the parent is already hidden (could also use active=false instead)\r\n    self.UI.hide(\"ExecutionOptionsPanel\")\r\n    self.UI.hide(\"CenterFD\")\r\n    self.UI.hide('CenterFU')\r\n    self.UI.hide('Setup')\r\n    self.UI.hide(\"ManWin\")\r\n    self.UI.hide('arcPanel')\r\n    self.UI.hide('relocPanel')\r\n    self.UI.hide('tokenPanel')\r\n    self.UI.hide(\"setManPeekPanel\")\r\n    winStat = false\r\n    clearOpenPanel()\r\nend\r\n\r\nfunction onFlip()\r\n    local face_down = not self.is_face_down\r\n    redraw(face_down)\r\nend\r\n\r\nfunction redraw(face_down)\r\n    if assignedShip ~= nil then\r\n        if not face_down then\r\n            clearDial()\r\n            self.UI.setAttribute(\"Main\", \"rotation\", \"0 0 0\")\r\n            if finished_setup then\r\n                self.UI.show(\"CenterFD\")\r\n            else\r\n                self.UI.show('Setup')\r\n            end\r\n            button.setAttributeFacing(\"Setup\", \"Down\")\r\n            button.setAttributeFacing(\"proxyPanel\", \"Down\")\r\n        else\r\n            clearDial()\r\n            manSetting()\r\n            if finished_setup then\r\n                self.UI.show(\"CenterFU\")\r\n            else\r\n                self.UI.show('Setup')\r\n            end\r\n            button.setAttributeFacing(\"Setup\", \"Up\")\r\n            button.setAttributeFacing(\"proxyPanel\", \"Up\")\r\n        end\r\n    end\r\nend\r\n\r\n\r\nfunction getManouverIcons(manouver)\r\n    if manouver:sub(1,1) == 'w' then\r\n        manColor=\"White\"\r\n    elseif manouver:sub(1,1) == 'b' then\r\n        manColor=\"Blue\"\r\n    elseif manouver:sub(1,1) == 'r' then\r\n        manColor=\"Red\"\r\n    elseif manouver:sub(1,1) == 'p' then\r\n        manColor=\"Purple\"\r\n    end\r\n\r\n    if manouver:sub(-1,-1) == 't' then\r\n        manType = \"Talon\"\r\n    elseif manouver:sub(-1,-1) == 's' then\r\n        if manouver:sub(2,2) == 't' then\r\n            manType = \"TurnSloop\"\r\n        else\r\n            manType = \"Sloop\"\r\n        end\r\n    elseif manouver:sub(-1,-1) == 'z' then\r\n        if manouver:sub(2,2) == 't' then\r\n            manType = \"TurnSlip\"\r\n        else\r\n            manType = \"BankSlip\"\r\n        end\r\n    elseif manouver:sub(-1,-1) == 'r' then\r\n        if manouver:sub(2,2) == 'b' then\r\n            manType = \"ReverseBank\"\r\n        else\r\n            manType = \"ReverseStraight\"\r\n        end\r\n    elseif manouver:sub(2,2) == 't' then\r\n        manType = \"Turn\"\r\n    elseif manouver:sub(2,2) == 'b' then\r\n        manType = \"Bank\"\r\n    elseif manouver:sub(2,2) == 's' then\r\n        manType = \"Straight\"\r\n    elseif manouver:sub(2,2) == 'k' then\r\n        manType = 'K'\r\n    end\r\n\r\n    local Char= manouver:find(\"%d\")\r\n    manSpeed = manouver:sub(Char,Char)\r\n\r\n    if manouver:sub(3,3) == 'l' then\r\n        manBear = \"L\"\r\n    elseif manouver:sub(3,3) == 'r' then\r\n        manBear = \"R\"\r\n    else\r\n        manBear = \"\"\r\n    end\r\n    if manSpeed==\"0\" and manType==\"Straight\" then\r\n        manType='Stall'\r\n    end\r\n\r\n    return {speed = \"Speed\"..manSpeed, type = manColor .. manType .. manBear }\r\nend\r\n\r\nfunction manSelect(p, option, id)\r\n    if spectReturn(p) == true or option == false then\r\n        return\r\n    end\r\n    firstSet=true\r\n    self.UI.setAttribute(\"ManBtnGroup\",\"allowSwitchOff\",\"false\")\r\n    manButtonId = id\r\n    curMan=string.lower(id)\r\n    icons = getManouverIcons(curMan)\r\n    speedIcon= icons.speed\r\n    typeIcon= icons.type\r\n    setMan = curMan:sub(2)\r\n    befAft = '_B'\r\nend\r\n\r\nfunction manSetting()\r\n    if setStat == true then\r\n        self.UI.setAttribute(\"TypeIcon\", \"image\", typeIcon)\r\n        self.UI.setAttribute(\"SpeedIcon\", \"image\", speedIcon)\r\n        self.UI.setAttribute(\"TypeIcon\", \"active\", \"true\")\r\n        self.UI.setAttribute(\"SpeedIcon\", \"active\", \"true\")\r\n        self.UI.setAttribute(\"MoveBtn\", \"active\", \"true\")\r\n        self.UI.setAttribute(\"MoveBtn\", \"textColor\", \"#FFFFFF\")\r\n        self.UI.setAttribute(\"UndoBtn\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"Templ\", \"active\", \"true\")\r\n        self.UI.setAttribute(\"Templ\", \"textColor\", \"#222222\") -- Make the text same color as the background since goal is to only have the type / speed icons showing anyway\r\n    else\r\n        self.UI.setAttribute(\"TypeIcon\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"SpeedIcon\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"MoveBtn\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"UndoBtn\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"Templ\", \"textColor\", \"#FFFFFF\")\r\n\r\n        -- Hide the template button when there isn't a manuver set, since it's confusing and undefined in some cases what template should be shown then\r\n        if not templatePlaced then\r\n          self.UI.setAttribute(\"Templ\", \"active\", \"false\")\r\n        end\r\n    end\r\n    if firstSet== false then\r\n        self.UI.setAttribute(\"TypeIcon\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"SpeedIcon\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"MoveBtn\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"UndoBtn\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"Templ\", \"textColor\", \"#FFFFFF\")\r\n\r\n        -- Hide the template button when there isn't a manuver set, since it's confusing and undefined in some cases what template should be shown then\r\n        if not templatePlaced then\r\n          self.UI.setAttribute(\"Templ\", \"active\", \"false\")\r\n        end\r\n    end\r\n\r\n    -- Remove template if a new manuver has been set since it was shown, since it could be confusing to still show the old template (and to show the new one you would have to click the button twice, which would be confusing)\r\n    if setSinceTemplatePlaced and templatePlaced then\r\n      deleteTemplate()\r\n    end\r\nend\r\n\r\nfunction Undo(p)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    assignedShip.setDescription(\"q\")\r\n    self.UI.setAttribute(\"UndoBtn\", \"active\", \"false\")\r\n    if prevMan:sub(-1,-1) ~='t' or proxyMode then\r\n        setMan = prevMan\r\n        setStat = true\r\n        self.UI.setAttribute(\"setBtnFD\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"MoveBtn\", \"active\", \"true\")\r\n        self.UI.setAttribute(\"MoveBtn\", \"textColor\", \"#FFFFFF\")\r\n    else\r\n        self.UI.show(\"TalonPanel\")\r\n    end\r\n    befAft='_B'\r\nend\r\n\r\nfunction allignShip(P)\r\n    if spectReturn(P) == true then\r\n        return\r\n    end\r\n    rot = assignedShip.getRotation()\r\n    modint,modfrac = math.modf(rot.y/45)\r\n    if modfrac < 0.5 then\r\n        rot.y = modint*45\r\n    else\r\n        rot.y = (modint+1)*45\r\n    end\r\n    assignedShip.setRotation(rot)\r\nend\r\n\r\nfunction placeShip(P)\r\n    if spectReturn(P) == true then\r\n        return\r\n    end\r\n    finished_setup = true\r\n    assignedShip.setVar(\"finished_setup\", true)\r\n    assignedShip.setLock(true)\r\n    redraw(self.is_face_down)\r\nend\r\n\r\nsetupRotations = {\r\n    Rot1DegLBut = -1,\r\n    Rot5DegLBut = -5,\r\n    Rot225DegLBut = -22.5,\r\n    Rot1DegRBut = 1,\r\n    Rot5DegRBut = 5,\r\n    Rot225DegRBut = 22.5,\r\n}\r\n\r\nfunction setupRot(P, option, id)\r\n    if (option ~= '-1') or (spectReturn(P) == true) then\r\n        return\r\n    end\r\n    local rot = assignedShip.getRotation()\r\n    rot.y = rot.y + (setupRotations[id] or 0)\r\n    assignedShip.setLock(true)\r\n    assignedShip.setRotation(rot)\r\nend\r\n\r\nsetupShifts = {\r\n    AdjustFBut = vector(0,0,-0.05),\r\n    AdjustBBut = vector(0,0,0.05),\r\n    AdjustLBut = vector(0.05,0,0),\r\n    AdjustRBut = vector(-0.05,0,0),\r\n}\r\n\r\nfunction setupShift(P, option, id)\r\n    if (option ~= '-1') or (spectReturn(P) == true) then\r\n        return\r\n    end\r\n    pos = assignedShip.positionToWorld(setupShifts[id] or vector(0,0,0))\r\n    assignedShip.setLock(true)\r\n    assignedShip.setPosition(pos)\r\nend\r\n\r\n\r\nfunction performMove(P)\r\n    if spectReturn(P) == true then\r\n        return\r\n    end\r\n    if setMan ~= nil and setMan ~=\"\" then\r\n        self.UI.setAttribute(\"MoveBtn\", \"active\", \"false\")\r\n        -- Check alternate execution options\r\n        --print(\"curMan:\" .. curMan)\r\n        if exOptions[curMan] ~= nil and exOptSelected == false then\r\n            setupAlternateExecutionPanel(P, exOptions[curMan])\r\n        elseif setMan:sub(-1,-1) == 't' then\r\n            if proxyMode then\r\n                proxy_settings = {\r\n                    ship_guid   = assignedShip.getGUID(),\r\n                    move_code   = setMan,\r\n                    offsets     = {front = 'ft', center = 't', back = 'bt'},\r\n                    button_func = button.setProxyState,\r\n                }\r\n                proxy.spawn(proxy_settings)\r\n                clearOpenPanel()\r\n                exOptSelected = false\r\n                setDial(P)\r\n            else\r\n                self.UI.show(\"TalonPanel\")\r\n            end\r\n        else\r\n            self.UI.setAttribute(\"UndoBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"UndoBtn\", \"textColor\", \"#FFFFFF\")\r\n            assignedShip.setDescription(setMan)\r\n            exOptSelected = false\r\n            befAft = '_A'\r\n            setDial(P)\r\n        end\r\n        prevMan = setMan\r\n        setMan = nil\r\n        Global.call(\"API_SetDial\", {dial=self,set=false})\r\n        self.UI.setAttribute(manButtonId, \"isOn\", \"false\")\r\n\r\n    end\r\nend\r\n\r\nfunction setupAlternateExecutionPanel(P, executionOptions)\r\n    self.UI.setAttribute(\"TypeIcon\", \"active\", \"false\")\r\n    self.UI.setAttribute(\"SpeedIcon\", \"active\", \"false\")\r\n    self.UI.setAttribute(\"Templ\", \"active\", \"false\")\r\n    self.UI.setAttribute(\"undoFU\", \"active\", \"false\")\r\n    self.UI.show(\"ExecutionOptionsPanel\")\r\n    for i, button in pairs(exOptButtons) do\r\n        self.UI.setAttribute(button .. 'But', \"active\", \"false\")\r\n    end\r\n    for i, option in pairs(executionOptions) do\r\n        self.UI.setAttribute(exOptButtons[i] .. \"But\", \"active\", \"true\")\r\n        exOptValue[exOptButtons[i] .. 'But'] = option\r\n        local icons = getManouverIcons(option)\r\n        self.UI.setAttribute(exOptButtons[i] .. \"TypeIcon\", \"image\", icons.type)\r\n        self.UI.setAttribute(exOptButtons[i] .. \"SpeedIcon\", \"image\", icons.speed)\r\n    end\r\nend\r\n\r\nfunction selectExecuteOption(P, option, id)\r\n    if spectReturn(P) == true then\r\n        return\r\n    end\r\n    self.UI.hide(\"ExecutionOptionsPanel\")\r\n    exOptSelected = true\r\n    setMan = exOptValue[id]:sub(2)\r\n    local icons = getManouverIcons(exOptValue[id])\r\n    self.UI.setAttribute(\"TypeIcon\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"SpeedIcon\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"Templ\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"Templ\", \"textColor\", \"#222222\")\r\n    self.UI.setAttribute(\"undoFU\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"undoFU\", \"textColor\", \"#FFFFFF\")\r\n    self.UI.setAttribute(\"TypeIcon\", \"image\", icons.type)\r\n    self.UI.setAttribute(\"SpeedIcon\", \"image\", icons.speed)\r\n    performMove(P)\r\n\r\nend\r\n\r\n\r\nfunction performTalon(P,option,id)\r\n    if spectReturn(P) == true then\r\n        return\r\n    end\r\n\r\n    self.UI.hide(\"TalonPanel\")\r\n    self.UI.setAttribute(\"UndoBtn\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"UndoBtn\", \"textColor\", \"#FFFFFF\")\r\n    if id==\"TalonMidBtn\" then\r\n        assignedShip.setDescription(setMan)\r\n    elseif id==\"TalonReaBtn\" then\r\n        talonMove = setMan:sub(1,3)..\"b\"..setMan:sub(-1,-1)\r\n        assignedShip.setDescription(talonMove)\r\n    elseif id==\"TalonForBtn\" then\r\n        talonMove = setMan:sub(1,3)..\"f\"..setMan:sub(-1,-1)\r\n        assignedShip.setDescription(talonMove)\r\n    end\r\n    exOptSelected = false\r\n    befAft ='_A'\r\n    setDial(P)\r\nend\r\n\r\nfunction onPickUp(player_color)\r\n    if assignedShip == nil then\r\n        pColor = self.held_by_color\r\n    end\r\nend\r\n\r\n-- Assign a ship to the dial\r\nfunction assignShip(args)\r\n    self.UI.setAttribute(\"CenterFD\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"CenterFU\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"arcPanel\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"tokenPanel\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"proxyPanel\", \"active\", \"true\")\r\n    self.UI.hide(\"proxyPanel\")\r\n    self.UI.setAttribute(\"relocPanel\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"setManPeekPanel\", \"active\", \"true\")\r\n    assignedShip = args.ship\r\n    Name=assignedShip.getName()\r\n    self.setName(Name)\r\n    finished_setup = assignedShip.getVar(\"finished_setup\") or false\r\n    --self.UI.setAttribute(\"DialName\", Name)\r\n    self.UI.setValue(\"Name\",Name)\r\n    self.UI.setValue(\"SetupName\",Name)\r\n    shipData=assignedShip.getTable(\"Data\")\r\n    if shipData.arcs and shipData.arcs.fixed then\r\n      self.UI.setAttribute(\"FixedArc\", \"active\", \"true\")\r\n      arcCommands['FixedArc'] = arcToCmnd[shipData.arcs.fixed.type[1]] or \"f\"\r\n    else\r\n      self.UI.setAttribute(\"FixedArc\", \"active\", \"false\")\r\n    end\r\n    if shipData.arcs and shipData.arcs.turret then\r\n      local buttonname = \"TurretArc\"\r\n      for mount, turret in pairs(shipData.arcs.turret) do\r\n        local id = mountToId[mount]\r\n        local command_id = id\r\n        if mount == \"main\" then\r\n          command_id = \"\"\r\n        end\r\n        self.UI.setAttribute(\"TurretArc\" .. id , \"active\", \"true\")\r\n        self.UI.setAttribute(\"TurretArc\" .. id  .. \"Panel\", \"active\", \"true\")\r\n        if turret.type[1] == \"doubleturret\" then\r\n          self.UI.setAttribute(\"TurretArc\" .. id  .. \"Icon\", \"image\", \"DoubleTurretArc\")\r\n          arcCommands[\"RotateLeft\" .. id] = \"rot\" .. command_id\r\n          self.UI.setAttribute(\"RotateLeft\" .. id , \"active\", \"true\")\r\n        else\r\n          arcCommands[\"RotateLeft\" .. id] = \"rotl\" .. command_id\r\n          self.UI.setAttribute(\"RotateLeft\" .. id , \"active\", \"true\")\r\n          arcCommands[\"RotateRight\" .. id] = \"rotr\" .. command_id\r\n          self.UI.setAttribute(\"RotateRight\" .. id , \"active\", \"true\")\r\n        end\r\n        arcCommands[\"TurretArc\" .. id] = \"turret\" .. command_id\r\n\r\n      end\r\n    end\r\n\r\n    exOptions = shipData.executeOptions or {}\r\n    self.UI.setAttribute(\"BackGround\", \"image\", tostring(shipData['Faction'])..\"BG\")\r\n    for k,v in pairs(shipData['moveSet']) do\r\n        self.UI.setAttribute(string.upper(v), \"active\", \"true\")\r\n    end\r\n    setMan=\"\"\r\n    prevMan=\"\"\r\n    local repos = false\r\n    for k,v in pairs(shipData['actSet']) do\r\n        if v == 'F' then\r\n            self.UI.setAttribute('FocusBtn', 'active', 'true')\r\n        elseif v == 'TL' then\r\n            self.UI.setAttribute(\"TargetLockBtn\", 'active', 'true')\r\n        elseif v == 'E' then\r\n            self.UI.setAttribute(\"EvadeBtn\", 'active', 'true')\r\n        elseif v == 'R' then\r\n            self.UI.setAttribute(\"ReinforceBtn\", 'active', 'true')\r\n        elseif v == 'C' then\r\n            self.UI.setAttribute(\"CalculateBtn\", 'active', 'true')\r\n        elseif v == 'CL' then\r\n            self.UI.setAttribute(\"CloakBtn\", 'active', 'true')\r\n        elseif v == 'BR' then\r\n            repos = true\r\n            button.setBarrelRollState(proxyMode, true)\r\n        elseif v == 'B' then\r\n            repos = true\r\n            self.UI.setAttribute(\"BoostFD\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostSBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostRBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostLBtn\", \"active\", \"true\")\r\n        elseif v =='Ail' then\r\n            repos = true\r\n            self.UI.setAttribute(\"AileronFD\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"AilSBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"AilRBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"AilLBtn\", \"active\", \"true\")\r\n        elseif v =='Piv' then\r\n            repos = true\r\n            self.UI.setAttribute(\"PivotFD\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"PivKBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"PivRBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"PivLBtn\", \"active\", \"true\")\r\n        elseif v == 'Dare' then\r\n            repos = true\r\n            self.UI.setAttribute(\"BoostFD\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostFD\", \"preferredWidth\", \"330\")\r\n            self.UI.setAttribute(\"Boost2FD\", \"preferredWidth\", \"330\")\r\n            self.UI.setAttribute(\"BoostLTBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostRTBtn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostLT2Btn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostRT2Btn\", \"active\", \"true\")\r\n        elseif v == '2B' then\r\n            repos = true\r\n            self.UI.setAttribute(\"Boost2FD\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostS2Btn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostL2Btn\", \"active\", \"true\")\r\n            self.UI.setAttribute(\"BoostR2Btn\", \"active\", \"true\")\r\n        elseif v == '2BR' then\r\n            repos = true\r\n            button.setBarrelRoll2State(proxyMode, true)\r\n        elseif v == 'VR' then\r\n            repos = true\r\n            button.setViperBarrelRollState(proxyMode, true)\r\n        end\r\n    end\r\n\r\n    if repos == false then\r\n        self.UI.setAttribute(\"RelocMenu\", \"active\", \"false\")\r\n        self.UI.setAttribute(\"RelocMenuFU\", \"active\", \"false\")\r\n\r\n    end\r\n\r\n    Global.call(\"API_AssignDial\", {dial=self, ship=assignedShip, player=pColor})\r\n    redraw(self.is_face_down)\r\n\r\nend\r\n\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped()\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.tag == 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            if pColor==\"White\" then\r\n                printToAll(\"Please, pick a color before assigning dials\")\r\n            else\r\n                assignedShip = nearest\r\n                playerColor=pColor\r\n\r\n                playerTeam = nil\r\n                teamVisibility = \"\"\r\n                for k, player in pairs(Player.getPlayers()) do\r\n                    if player.color == playerColor then\r\n                      if player.team != \"None\" then\r\n                        playerTeam = player.team\r\n                        teamVisibility = \"|\" .. playerTeam\r\n                      end\r\n\r\n                    end\r\n                end\r\n\r\n                nearest.setVar('owningPlayer', pColor)\r\n                printToAll('Dial assigned to to ' .. nearest.getName(), {0.3, 0.3, 1})\r\n                --printToAll('Controlled by the '.. playerColor .. ' player')\r\n                --if playerTeam then\r\n                  --printToAll('Of the '.. tostring(playerTeam) .. ' team')\r\n                --end\r\n\r\n                --sprintToAll('')\r\n                self.setRotation(nearest.getRotation())\r\n                assignShip({ship=nearest})\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n-- functions called when buttons are pressed\r\nfunction genericAction(a,b,c,d)\r\n    print(a)\r\n    print(b)\r\n    print(c)\r\n    print(d)\r\nend\r\n\r\nfunction focusTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Focus', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction evadeTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Evade', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction tlTok(p, id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    if id == '-1' then\r\n        Global.call('proxyPerformAction', {assignedShip, 'Target Lock', playerColor})\r\n    end\r\nend\r\n\r\nfunction tractorTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Tractor', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction jamTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Jam', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction disarmTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Disarm', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction cloakTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Cloak', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction calcTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Calculate', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction reinforceTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Reinforce', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction stressTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Stress', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction strainTok(p,id)\r\n  if spectReturn(p) == true then\r\n      return\r\n  end\r\n  Global.call('proxyPerformAction', {assignedShip, 'Strain', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction depleteTok(p,id)\r\n  if spectReturn(p) == true then\r\n      return\r\n  end\r\n  Global.call('proxyPerformAction', {assignedShip, 'Deplete', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nfunction ionTok(p,id)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    Global.call('proxyPerformAction', {assignedShip, 'Ion', playerColor, {remove = id ~= '-1'} })\r\nend\r\n\r\nreposCommands = {\r\n    BoostSBtn = \"s1b\",\r\n    BoostLBtn = \"bl1b\",\r\n    BoostRBtn = \"br1b\",\r\n    BoostLTBtn = \"tl1b\",\r\n    BoostRTBtn = \"tr1b\",\r\n    BoostS2Btn = \"s2b\",\r\n    BoostL2Btn = \"bl2b\",\r\n    BoostR2Btn = \"br2b\",\r\n    BoostLT2Btn = \"tl2b\",\r\n    BoostRT2Btn = \"tr2b\",\r\n    AilLBtn = \"bl1\",\r\n    AilSBtn = \"s1\",\r\n    AilRBtn = \"br1\",\r\n    BarrelLFBtn = \"rl1\",\r\n    BarrelLBtn = \"rl2\",\r\n    BarrelLBBtn = \"rl3\",\r\n    BarrelRFBtn = \"rr1\",\r\n    BarrelRBtn = \"rr2\",\r\n    BarrelRBBtn = \"rr3\",\r\n\r\n    BarrelLF2Btn = \"cl1\",\r\n    BarrelL2Btn = \"cl2\",\r\n    BarrelLB2Btn = \"cl3\",\r\n    BarrelRF2Btn = \"cr1\",\r\n    BarrelR2Btn = \"cr2\",\r\n    BarrelRB2Btn = \"cr3\",\r\n\r\n    BarrelVLUBtn = \"vlf2\",\r\n    BarrelVLDBtn = \"vlb2\",\r\n    BarrelVRUBtn = \"vrf2\",\r\n    BarrelVRDBtn = \"vrb2\",\r\n\r\n}\r\n\r\nfunction Repos(P, option, id)\r\n    if (option ~= '-1') or (spectReturn(P) == true) then\r\n        return\r\n    end\r\n\r\n    local move_code = reposCommands[id] or \"\"\r\n    if proxyMode and proxy.isProxyable(move_code) then\r\n        proxy_settings = {\r\n            ship_guid   = assignedShip.getGUID(),\r\n            move_code   = move_code,\r\n            offsets     = {front = '1', center = '2', back = '3'},\r\n            cancellable = true,\r\n            button_func = button.setProxyState,\r\n        }\r\n        proxy.spawn(proxy_settings)\r\n        clearOpenPanel()\r\n\r\n    else\r\n        assignedShip.setDescription(move_code)\r\n    end\r\nend\r\n\r\nfunction CancelProxy(player, option, id)\r\n    proxy.cancel(assignedShip.getGUID())\r\nend\r\n\r\n\r\nfunction Arc(P, option, id)\r\n    if  spectReturn(P)then\r\n        return\r\n    end\r\n    includeFriendlies = \"\"\r\n    if (option ~= '-1') then\r\n        includeFriendlies = \"a\"\r\n    end\r\n    assignedShip.setDescription((arcCommands[id] or \"\") .. includeFriendlies )\r\nend\r\n\r\n\r\nfunction pivK(p)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    assignedShip.setDescription('k0')\r\nend\r\n\r\nfunction pivR(p)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    assignedShip.setDescription('tr4')\r\nend\r\n\r\nfunction pivL(p)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    assignedShip.setDescription('tl4')\r\nend\r\n\r\nfunction Window(p)\r\n    if winStat ==  nil then\r\n        winStat = false\r\n    end\r\n    if spectReturn(p) == false then\r\n        if winStat == false then\r\n            winStat = true\r\n            self.UI.show(\"ManWin\")\r\n            self.UI.setAttribute(\"ManWin\", \"visibility\", playerColor .. teamVisibility ..  \"|Black\")\r\n            self.UI.setAttribute(\"ManBtnGroup\", \"active\", \"true\")\r\n            clearOpenPanel()\r\n        else\r\n            winStat = false\r\n            self.UI.setAttribute(\"ManBtnGroup\", \"active\", \"false\")\r\n            self.UI.hide('ManWin')\r\n        end\r\n    end\r\nend\r\n\r\nfunction spectReturn(p)\r\n    if p.color == 'Black' then\r\n      return false\r\n    elseif p.color == playerColor then\r\n      return false\r\n    elseif p.team == playerTeam then\r\n      return false\r\n    else\r\n      return true\r\n    end\r\nend\r\n\r\nfunction showSetMan(p)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    self.UI.show(\"setManPeekPanel\")\r\n    self.UI.setAttribute(\"setManPeekPanel\", \"visibility\", playerColor .. teamVisibility)\r\n    self.UI.setAttribute(\"setManTypeIcon\", \"image\", typeIcon)\r\n    self.UI.setAttribute(\"setManSpeedIcon\", \"image\", speedIcon)\r\n    self.UI.setAttribute(\"setManTypeIcon\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"setManSpeedIcon\", \"active\", \"true\")\r\n    self.UI.setAttribute(\"setManPeekPanel\", \"position\", \"-100 -150 -50\")\r\n    self.UI.setAttribute(\"setManPeekPanel\", \"rotation\", \"180 180 0\")\r\nend\r\n\r\nfunction hideSetMan(p)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    self.UI.hide(\"setManPeekPanel\")\r\nend\r\n\r\nclick_functions = {\r\n    ArcMenu = {show= function() showArcMFD() end,\r\n                hide= function() hideArcM() end },\r\n    ArcMenuFU = {show= function() showArcMFU() end,\r\n                hide= function() hideArcM() end },\r\n    RelocMenu = {show= function() showRelocMFD() end,\r\n                hide= function() hideRelocM() end },\r\n    RelocMenuFU = {show= function() showRelocMFU() end,\r\n                hide= function() hideRelocM() end },\r\n    TokenMenu = {show= function() showTokMFD() end,\r\n                hide= function() hideTokM() end },\r\n    TokenMenuFU = {show= function() showTokMFU() end,\r\n                hide= function() hideTokM() end },\r\n}\r\n\r\nhover_functions = {\r\n    ArcMenu = function()\r\n                stopClicktimer()\r\n                showArcMFD()\r\n              end,\r\n    ArcMenuFU = function()\r\n                showArcMFU()\r\n                stopClicktimer()\r\n              end,\r\n    arcPanel = function()\r\n                restartClicktimer()\r\n              end,\r\n    RelocMenu = function()\r\n                showRelocMFD()\r\n                stopClicktimer()\r\n              end,\r\n    RelocMenuFU = function()\r\n                showRelocMFU()\r\n                stopClicktimer()\r\n              end,\r\n    relocPanel = function()\r\n                restartClicktimer()\r\n              end,\r\n    TokenMenu = function()\r\n                showTokMFD()\r\n                stopClicktimer()\r\n              end,\r\n    TokenMenuFU = function()\r\n                showTokMFU()\r\n                stopClicktimer()\r\n              end,\r\n    tokenPanel = function()\r\n                restartClicktimer()\r\n              end,\r\n}\r\n\r\nfunction toggleClickMode(enable)\r\n    clickMode = enable\r\n\r\n    self.UI.setAttribute(\"arcPanel\", \"raycastTarget\", not clickMode)\r\n    self.UI.setAttribute(\"tokenPanel\", \"raycastTarget\", not clickMode)\r\n    self.UI.setAttribute(\"relocPanel\", \"raycastTarget\", not clickMode)\r\n    if clickMode then\r\n      timeoutDuration = 20\r\n    else\r\n      timeoutDuration = 2\r\n    end\r\n\r\n    menu.update()\r\nend\r\n\r\nfunction toggleProxyMode(enable)\r\n    proxyMode = enable\r\n\r\n    button.setBarrelRollState(proxyMode)\r\n    button.setBarrelRoll2State(proxyMode)\r\n    button.setViperBarrelRollState(proxyMode)\r\n    menu.update()\r\nend\r\n\r\nfunction resetDial(enable)\r\n    clearDial()\r\n    self.setName(\"Unassigned Dial\")\r\n    playerColor = nil\r\n    playerTeam = nil\r\n    finished_setup = false\r\n    self.UI.setValue(\"Name\",\"\")\r\n    self.UI.setValue(\"SetupName\",\"\")\r\n    assignedShip = nil\r\n    self.script_state = nil\r\nend\r\n\r\n\r\nfunction stopClicktimer()\r\n  if clicktimer then\r\n    Wait.stop(clicktimer)\r\n  end\r\nend\r\n\r\nfunction restartClicktimer()\r\n    stopClicktimer()\r\n    clicktimer = Wait.time(clickTimeout, timeoutDuration)\r\nend\r\n\r\nfunction clickTimeout()\r\n  if openbutton then\r\n    click_functions[openbutton].hide()\r\n  end\r\n    clicktimer = nil\r\nend\r\n\r\nfunction menuClick(p, option, id)\r\n    if winStat or (not clickMode) or proxy.isActive() or spectReturn(p) == true then\r\n        return\r\n    end\r\n    if openbutton == id then\r\n        click_functions[id].hide(p)\r\n        stopClicktimer()\r\n    else\r\n        click_functions[id].show(p)\r\n        restartClicktimer()\r\n    end\r\nend\r\n\r\nfunction menuHover(p, option, id)\r\n    if winStat or clickMode or proxy.isActive() or spectReturn(p) == true then\r\n        return\r\n    end\r\n    hover_functions[id]()\r\nend\r\n\r\n\r\n\r\nfunction showTokMFD()\r\n    self.UI.show(\"tokenPanel\")\r\n    self.UI.setAttribute(\"TokenMenu\", \"color\", opencolor)\r\n    clearOpenPanel()\r\n    openpanel = \"tokenPanel\"\r\n    openbutton = \"TokenMenu\"\r\n    self.UI.setAttribute(\"tokenPanel\", \"position\", \"-360 -165 -25\")\r\n    self.UI.setAttribute(\"tokenPanel\", \"rotation\", \"180 180 0\")\r\nend\r\n\r\nfunction showTokMFU()\r\n    self.UI.show(\"tokenPanel\")\r\n    self.UI.setAttribute(\"TokenMenuFU\", \"color\", opencolor)\r\n    clearOpenPanel()\r\n    openpanel = \"tokenPanel\"\r\n    openbutton = \"TokenMenuFU\"\r\n    self.UI.setAttribute(\"tokenPanel\", \"position\", \"360 -165 1\")\r\n    self.UI.setAttribute(\"tokenPanel\", \"rotation\", \"180 0 0\")\r\nend\r\n\r\nfunction hideTokM()\r\n    if openpanel == \"tokenPanel\" then\r\n        self.UI.hide(openpanel)\r\n        self.UI.setAttribute(openbutton, \"color\", closedcolor)\r\n        self.UI.setAttribute(openbutton, \"textColor\", \"#FFFFFF\")\r\n        openpanel = nil\r\n        openbutton = nil\r\n    end\r\nend\r\n\r\n\r\n\r\nfunction showArcMFD()\r\n    self.UI.show(\"arcPanel\")\r\n    self.UI.setAttribute(\"ArcMenu\", \"color\", opencolor)\r\n    clearOpenPanel()\r\n    openpanel = \"arcPanel\"\r\n    openbutton = \"ArcMenu\"\r\n\r\n    self.UI.setAttribute(\"arcPanel\", \"position\", \"340 -150 -25\")\r\n    self.UI.setAttribute(\"arcPanel\", \"rotation\", \"180 180 0\")\r\nend\r\n\r\nfunction showArcMFU()\r\n    self.UI.show(\"arcPanel\")\r\n    self.UI.setAttribute(\"ArcMenuFu\", \"color\", opencolor)\r\n    clearOpenPanel()\r\n    openpanel = \"arcPanel\"\r\n    openbutton = \"ArcMenuFU\"\r\n\r\n    self.UI.setAttribute(\"arcPanel\", \"position\", \"-340 -150 1\")\r\n    self.UI.setAttribute(\"arcPanel\", \"rotation\", \"180 0 0\")\r\nend\r\n\r\nfunction hideArcM()\r\n    if openpanel == \"arcPanel\" then\r\n        self.UI.hide(openpanel)\r\n        self.UI.setAttribute(openbutton, \"color\", closedcolor)\r\n        self.UI.setAttribute(openbutton, \"textColor\", \"#FFFFFF\")\r\n        openpanel = nil\r\n        openbutton = nil\r\n    end\r\nend\r\n\r\nfunction showRelocMFD()\r\n    self.UI.show(\"relocPanel\")\r\n    self.UI.setAttribute(\"RelocMenu\", \"color\", opencolor)\r\n    clearOpenPanel()\r\n    openpanel = \"relocPanel\"\r\n    openbutton = \"RelocMenu\"\r\n\r\n    self.UI.setAttribute(\"relocPanel\", \"position\", \"0 -215 -25\")\r\n    self.UI.setAttribute(\"relocPanel\", \"rotation\", \"180 180 0\")\r\nend\r\n\r\nfunction showRelocMFU()\r\n    self.UI.show(\"relocPanel\")\r\n    self.UI.setAttribute(\"RelocMenuFu\", \"color\", opencolor)\r\n    clearOpenPanel()\r\n    openpanel = \"relocPanel\"\r\n    openbutton = \"RelocMenuFU\"\r\n\r\n    self.UI.setAttribute(\"relocPanel\", \"position\", \"0 -215 1\")\r\n    self.UI.setAttribute(\"relocPanel\", \"rotation\", \"180 0 0\")\r\nend\r\n\r\nfunction hideRelocM()\r\n    if openpanel == \"relocPanel\" then\r\n        self.UI.hide(openpanel)\r\n        self.UI.setAttribute(openbutton, \"color\", closedcolor)\r\n        self.UI.setAttribute(openbutton, \"textColor\", \"#FFFFFF\")\r\n        openpanel = nil\r\n        openbutton = nil\r\n    end\r\nend\r\n\r\nfunction nextMan(P, opt, id)\r\n    if spectReturn(P) == true then\r\n        return\r\n    end\r\n    local dir = 1\r\n    if id == \"prevManBut\" then\r\n        dir = -1\r\n    end\r\n    for k,v in pairs(shipData.moveSet) do\r\n        if v == curMan then\r\n            local newman = k + dir\r\n            if newman == 0 then\r\n                newman = #shipData.moveSet\r\n            elseif newman > #shipData.moveSet then\r\n                newman = 1\r\n            end\r\n            manSelect(P,opt,shipData.moveSet[newman])\r\n            self.UI.setAttribute(string.upper(curMan), \"isOn\", \"true\")\r\n            return\r\n        end\r\n    end\r\n    manSelect(P,opt,shipData.moveSet[1])\r\n    self.UI.setAttribute(string.upper(curMan), \"isOn\", \"true\")\r\nend\r\n\r\nfunction setDial(P)\r\n    if spectReturn(P) == false then\r\n        if setMan and setMan ~= '' then\r\n            if setStat == nil then\r\n                setStat = false\r\n            end\r\n\r\n            if setStat == false then\r\n                self.UI.setAttribute(\"setBtnFD\", \"color\", playerColor)\r\n                self.UI.setAttribute(\"setBtnFD\", \"active\", \"true\")\r\n                self.UI.setAttribute(\"setBtnFD\", \"textColor\", \"#FFFFFF\")\r\n                if (P.color == \"Yellow\") then\r\n                   -- White text on yellow button is pretty hard to read, so for the Yellow player change the text to black instead\r\n                  self.UI.setAttribute(\"setBtnFD\", \"textColor\", \"#000000\")\r\n                end\r\n                self.UI.setAttribute(\"moveWindow\", \"active\", \"false\")\r\n                setStat = true\r\n                setSinceTemplatePlaced = true\r\n                printToAll(P.color..\" player has set the maneuver for \"..assignedShip.getName(), P.color)\r\n                Global.call(\"API_SetDial\", {dial=self, set=true})\r\n                if winStat==true then\r\n                    Window(P)\r\n                end\r\n\r\n            else\r\n                --TODO: Now that the set dial and unset dial buttons are 2 different buttons, this file's code would probably be more readable with this function split in to setDial() and unsetDial()\r\n                self.UI.setAttribute(\"setBtnFD\", \"active\", \"false\")\r\n                self.UI.setAttribute(\"setManPeekPanel\", \"active\", \"false\")\r\n                self.UI.setAttribute(\"moveWindow\", \"active\", \"true\")\r\n                self.UI.setAttribute(\"moveWindow\", \"textColor\", \"#FFFFFF\")\r\n                Global.call(\"API_SetDial\", {dial=self, set=false})\r\n                setStat = false\r\n            end\r\n        else\r\n            print(\"Pick a maneuver before setting the dial\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction spawnTemplate(p)\r\n    if spectReturn(p) == true then\r\n        return\r\n    end\r\n    if setMan and setMan~='' then\r\n        setSinceTemplatePlaced = false\r\n        templatePlaced = not templatePlaced\r\n\r\n        -- if a manuver is not visible on dial, template button is only here to allow removal, and after that it can be hidden again\r\n        if self.UI.getAttribute(\"SpeedIcon\", \"active\") == \"false\" then\r\n          self.UI.setAttribute(\"Templ\", \"active\", \"false\")\r\n        end\r\n\r\n        Table={[1]=assignedShip,[2]='spawnMoveTemplate:'..setMan..befAft,[3]=playerColor}\r\n        Global.call(\"proxyPerformAction\",Table)\r\n    end\r\nend\r\n\r\nfunction deleteTemplate()\r\n  templatePlaced = false\r\n  Table={[1]=assignedShip,[2]='deleteMoveTemplate',[3]=playerColor}\r\n  Global.call(\"proxyPerformAction\",Table)\r\nend\r\n\nend)\n__bundle_register(\"TTS_xwing/src/Dial/Proxy\", function(require, _LOADED, __bundle_register, __bundle_modules)\nlocal obj = self\r\n\r\nlocal P = {}\r\n\r\nlocal active_proxies = {}\r\n\r\nlocal function createOffsets(move_code, offsets)\r\n    local outputs = {}\r\n\r\n    if move_code:sub(1,1) == \"r\" then\r\n        move_code = move_code:sub(1,2)\r\n    elseif move_code:sub(1,1) == \"c\" then\r\n        move_code = move_code:sub(1,2)\r\n    elseif move_code:sub(1,1) == \"v\" then\r\n        move_code = move_code:sub(1,3)\r\n    elseif move_code:sub(-1,-1) == \"t\" then\r\n        move_code = move_code:sub(1,3)\r\n    end\r\n\r\n    for c, v in pairs(offsets) do\r\n        outputs[c] = move_code..v\r\n    end\r\n\r\n    return outputs\r\nend\r\n\r\nlocal function isDone(proxy)\r\n    return proxy.state == \"term\"\r\nend\r\n\r\nlocal function isReady(proxy)\r\n    return proxy.state == \"active\"\r\nend\r\n\r\nlocal function setActiveProxies(proxies)\r\n    for position, proxy in pairs(proxies) do\r\n       active_proxies[position] = proxy.getGUID()\r\n    end\r\nend\r\n\r\nlocal function unsetActiveProxies()\r\n    active_proxies = {}\r\nend\r\n\r\nfunction P.isActive()\r\n  if not active_proxies then return false end\r\n\r\n  for k, v in pairs(active_proxies)do return true end\r\n  return false\r\nend\r\n\r\nfunction P.cancel(ship_guid)\r\n    Global.call(\"DeleteShipProxies\", {ship_guid = ship_guid})\r\nend\r\n\r\nfunction P.isProxyable(move_code)\r\n    if move_code:sub(1,1) == \"r\" then\r\n      return true\r\n    elseif move_code:sub(1,1) == \"c\" then\r\n      return true\r\n    elseif move_code:sub(1,1) == \"v\" then\r\n      return true\r\n    end\r\n    return false\r\nend\r\n\r\nfunction P.spawn(args)\r\n    if P.isActive() then\r\n        printToAll(\"Please finish this ship's active proxy maneuver before setting another one\")\r\n        return\r\n    end\r\n\r\n    local ship_guid   = args.ship_guid\r\n    local move_code   = args.move_code\r\n    local offsets     = args.offsets\r\n    local cancellable = args.cancellable\r\n    local button_func = args.button_func\r\n\r\n    local move_codes = createOffsets(move_code, offsets)\r\n    local proxy_args = {\r\n        ship_guid  = ship_guid,\r\n        move_codes = move_codes,\r\n    }\r\n\r\n    local proxy_objects, success = Global.call(\"SpawnProxyOptions\", proxy_args)\r\n\r\n    if not success then return end\r\n\r\n    Wait.condition(|| setActiveProxies(proxy_objects.proxy_table),    || isReady(proxy_objects))\r\n    Wait.condition(|| button_func(true, cancellable, active_proxies), || isReady(proxy_objects))\r\n\r\n    Wait.condition(   unsetActiveProxies,         || isDone(proxy_objects))\r\n    Wait.condition(|| button_func(false),         || isDone(proxy_objects))\r\n    Wait.condition(|| obj.setVar(\"befAft\", \"_A\"), || isDone(proxy_objects))\r\nend\r\n\r\nreturn P\r\n\nend)\n__bundle_register(\"TTS_xwing/src/Dial/Button\", function(require, _LOADED, __bundle_register, __bundle_modules)\nlocal obj = self\r\n\r\nlocal B = {}\r\n\r\nlocal offsetXY = {\r\n    Setup = \"0 0\",\r\n    proxyPanel = \"0 -215\",\r\n}\r\n\r\nlocal function changeButtonState(button, activate)\r\n    if activate then\r\n        obj.UI.setAttribute(button, \"active\", \"true\")\r\n        -- deactivating a button resets text color to black, we have to set it again\r\n        obj.UI.setAttribute(button, \"textColor\", \"#FFFFFF\")\r\n    else\r\n       obj.UI.setAttribute(button, \"active\", \"false\")\r\n    end\r\nend\r\n\r\nfunction B.setAttributeFacing(attribute, face_state)\r\n    local up_rotation   = \"0 180 0\"\r\n    local down_rotation = \"0 0 0\"\r\n    local up_z          = \"1\"\r\n    local down_z        = \"-25\"\r\n    local base_xy = offsetXY[attribute]\r\n\r\n    local attributes = {}\r\n    if face_state == \"Down\" then\r\n        attributes = {\r\n            position = base_xy .. \" \" .. down_z,\r\n            rotation = down_rotation,\r\n        }\r\n    elseif face_state == \"Up\" then\r\n        attributes = {\r\n            position = base_xy .. \" \" .. up_z,\r\n            rotation = up_rotation,\r\n        }\r\n    end\r\n\r\n    obj.UI.setAttributes(attribute, attributes)\r\nend\r\n\r\nfunction B.setProxyState(activate, cancellable, active_proxies)\r\n    if activate then\r\n        obj.UI.show(\"proxyPanel\")\r\n    else\r\n        obj.UI.hide(\"proxyPanel\")\r\n    end\r\n\r\n    changeButtonState(\"proxyCancelBtn\", cancellable)\r\n\r\n    if not cancellable then\r\n        changeButtonState(\"UndoBtn\", not activate)\r\n    end\r\n\r\n    if not active_proxies then\r\n        obj.UI.setAttribute(\"proxyFrontBtn\", \"active\", \"false\")\r\n        obj.UI.setAttribute(\"proxyCenterBtn\", \"active\", \"false\")\r\n        obj.UI.setAttribute(\"proxyBackBtn\", \"active\", \"false\")\r\n\r\n        return\r\n    end\r\n    for position, guid in pairs(active_proxies) do\r\n        local attribute_name = string.upper(position:sub(1,1)) .. position:sub(2,-1)\r\n        obj.UI.setAttribute(\"proxy\"..attribute_name..\"Btn\", \"onMouseEnter\", guid..\"/onHoverEnter\")\r\n        obj.UI.setAttribute(\"proxy\"..attribute_name..\"Btn\", \"onMouseExit\", guid..\"/onHoverLeave\")\r\n        obj.UI.setAttribute(\"proxy\"..attribute_name..\"Btn\", \"onClick\", guid..\"/select\")\r\n        obj.UI.setAttribute(\"proxy\"..attribute_name..\"Btn\", \"active\", \"true\")\r\n    end\r\nend\r\n\r\nfunction B.setBarrelRollState(proxyMode, activate)\r\n    if activate then\r\n        obj.UI.setAttribute(\"BarrelRightFD\", \"active\", \"true\")\r\n        obj.UI.setAttribute(\"BarrelLeftFD\", \"active\", \"true\")\r\n        obj.UI.setAttribute(\"BarrelRBtn\", \"active\", \"true\")\r\n        obj.UI.setAttribute(\"BarrelLBtn\", \"active\", \"true\")\r\n    end\r\n\r\n    local extra_buttons = tostring(not proxyMode)\r\n    obj.UI.setAttribute(\"BarrelRFBtn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelRBBtn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelLFBtn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelLBBtn\", \"active\", extra_buttons)\r\nend\r\n\r\nfunction B.setBarrelRoll2State(proxyMode, activate)\r\n    if activate then\r\n        obj.UI.setAttribute(\"BarrelRight2FD\", \"active\", \"true\")\r\n        obj.UI.setAttribute(\"BarrelLeft2FD\", \"active\", \"true\")\r\n        obj.UI.setAttribute(\"BarrelL2Btn\", \"active\", \"true\")\r\n        obj.UI.setAttribute(\"BarrelR2Btn\", \"active\", \"true\")\r\n    end\r\n\r\n    local extra_buttons = tostring(not proxyMode)\r\n    obj.UI.setAttribute(\"BarrelRF2Btn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelRB2Btn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelLF2Btn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelLB2Btn\", \"active\", extra_buttons)\r\nend\r\n\r\nfunction B.setViperBarrelRollState(proxyMode, activate)\r\n    if activate then\r\n        obj.UI.setAttribute(\"BarrelRightFD\", \"active\", \"true\")\r\n        obj.UI.setAttribute(\"BarrelLeftFD\", \"active\", \"true\")\r\n    end\r\n    local extra_buttons = tostring(proxyMode)\r\n    obj.UI.setAttribute(\"BarrelVRUBtn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelVRDBtn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelVLUBtn\", \"active\", extra_buttons)\r\n    obj.UI.setAttribute(\"BarrelVLDBtn\", \"active\", extra_buttons)\r\nend\r\n\r\n\r\n\r\n\r\n\r\nreturn B\r\n\nend)\n__bundle_register(\"TTS_xwing/src/Dial/Menu\", function(require, _LOADED, __bundle_register, __bundle_modules)\nlocal obj = self\r\n\r\nlocal M = {}\r\n\r\nlocal toggleItems = {}\r\n\r\nfunction M.addToggleItem(name, text, func, noToggle)\r\n    local i = {\r\n        name = name,\r\n        text = text,\r\n        func = func,\r\n        noToggle = noToggle\r\n    }\r\n\r\n    table.insert(toggleItems, i)\r\nend\r\n\r\nfunction M.update()\r\n    obj.clearContextMenu()\r\n\r\n    for i, v in ipairs(toggleItems) do\r\n        local text = \"\"\r\n        local value = _G[v.name] or false\r\n        if v.noToggle then\r\n          text = v.text\r\n        elseif value then\r\n            text = \"Disable \" .. v.text\r\n        else\r\n            text = \"Enable \" .. v.text\r\n        end\r\n\r\n        obj.addContextMenuItem(text, || v.func(not value))\r\n    end\r\nend\r\n\r\nreturn M\r\n\nend)\nreturn __bundle_require(\"__root\")",
            "LuaScriptState": "",
            "XmlUI": "<!-- Defaults apply styles to every element with the same class -->\r\n<Defaults>\r\n    <Button class=\"TokenButtons\" height=\"50\" width=\"50\" color=\"#aaffaa00\" active=\"false\"/>\r\n    <Button class=\"RelocButtons\" height=\"60\" width=\"60\" preferredWidth=\"60\" preferredHeight=\"60\" minWidth=\"60\" minHeight=\"60\" color=\"#aaffaa00\" active=\"false\"/>\r\n    <Button class=\"ArcButtons\" height=\"80\" width=\"80\" preferredWidth=\"80\" preferredHeight=\"80\" minWidth=\"80\" minHeight=\"80\" color=\"#aaffaa00\"/>\r\n    <Button class=\"DarkButton\" color=\"#222222\" outline=\"#BBBBBB\" outlineSize=\"2 2\" fontSize=\"22\" minWidth=\"65\" preferredWidth=\"80\" textColor=\"#FFFFFF\" fontStyle=\"Bold\"/>\r\n    <Button class=\"CenterMenuButtons\" rotation=\"0 0 180\" height=\"60\" width=\"60\" color=\"#222222\" outline=\"#BBBBBB\" outlineSize=\"2 2\" fontSize=\"22\" textColor=\"#FFFFFF\" fontStyle=\"Bold\"/>\r\n    <Button class=\"topButton\" width=\"40\" height=\"40\" rectAlignment=\"UpperRight\"/>\r\n    <Button class=\"CenterButtons\" fontSize=\"22\" fontStyle=\"Bold\" rotation=\"0 0 180\" color=\"#222222\" outline=\"#BBBBBB\" outlineSize=\"2 2\" textColor=\"#FFFFFF\" height=\"40\" width=\"80\" active=\"false\"/>\r\n\r\n    <ToggleButton class=\"ManBtn\" height=\"75\" width=\"75\" active=\"false\" preferredWidth=\"60\" preferredHeight=\"60\" onValueChanged=\"manSelect\"  outline=\"#BBBBBB\" colors=\"#888888|Orange|Red|Orange\" deselectedBackgroundColor=\"#555555\" selectedBackgroundColor=\"#B24915\"/>\r\n\r\n    <Panel class=\"Window\" color=\"#aaffaa00\" width=\"1000\" height=\"800\" rectAlignment=\"MiddleRight\"/>\r\n    <Panel class=\"TopBar\" color=\"#aaffaa00\" height=\"30\" rectAlignment=\"UpperCenter\"/>\r\n    <Panel class=\"BoostPanel\" color=\"#aaffaa00\" preferredWidth=\"200\" preferredHeight=\"100\" flexibleWidth=\"0\"/>\r\n    <Panel class=\"TalonP\" color=\"#aaffaa00\" rotation=\"0 0 0\" height=\"100\" width=\"350\"/>\r\n    <Panel class=\"BarrelPanel\" color=\"Green\" minWidth=\"80\" flexibleWidth=\"false\"/>\r\n    <Panel class=\"WinElements\" color=\"#aaffaa00\" width=\"600\" height=\"550\" rectAlignment=\"UpperCenter\"/>\r\n\r\n    <Image class=\"TIcon\" color=\"#ffffff\"/>\r\n    <Image class=\"RIcon\" height=\"60\" width=\"60\" color=\"#ffffff\"/>\r\n    <Image class=\"MIcon\" />\r\n    <Image class=\"BGImage\" color=\"#ffffff\"/>\r\n    <Image class=\"SpeedImg\" height=\"85\" width=\"85\" />\r\n    <Image class=\"SetIcon\" rotation=\"0 0 180\" height=\"55\" width=\"55\" preserveAspect=\"true\"/>\r\n</Defaults>\r\n\r\n<Panel id=\"Setup\"\r\n    active=\"false\"\r\n    width=\"300\"\r\n    height=\"300\"\r\n    position=\"0 0 -25\"\r\n    rotation=\"180 180 180\"\r\n    color=\"#aaffaa00\">\r\n        <Button id=\"placeShip\" class=\"CenterButtons\" height=\"100\" width=\"160\" position=\"0 170 -5\" active=\"true\" onClick=\"placeShip\">Place Ship</Button>\r\n        <Text id=\"SetupName\" class=\"DialName\" position=\"0 70 3\" rotation=\"180 180 0\" height=\"80\" fontSize=\"25\" fontStyle=\"Bold\">Name</Text>\r\n        <Button id=\"allignShip\" class=\"CenterMenuButtons\" position=\"0 -180 -5\" active=\"true\" onClick=\"allignShip\" height=\"90\" width=\"90\" fontSize=\"18\" fontStyle=\"Bold\">Align</Button>\r\n        <Button id=\"Rot1DegLBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"90 -175 -5\" active=\"true\" onClick=\"setupRot\">\r\n            <Image id=\"Rot1DegL\" image=\"Rot1DegL\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n        <Button id=\"Rot1DegRBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"-90 -175 -5\" active=\"true\" onClick=\"setupRot\">\r\n            <Image id=\"Rot1DegR\" image=\"Rot1DegR\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n        <Button id=\"Rot5DegLBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"165 -100 -5\" active=\"true\" onClick=\"setupRot\">\r\n            <Image id=\"Rot5DegL\" image=\"Rot5DegL\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n        <Button id=\"Rot5DegRBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"-165 -100 -5\" active=\"true\" onClick=\"setupRot\">\r\n            <Image id=\"Rot5DegR\" image=\"Rot5DegR\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n        <Button id=\"Rot225DegLBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"185 0 -5\" active=\"true\" onClick=\"setupRot\">\r\n            <Image id=\"Rot225DegL\" image=\"Rot225DegL\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n        <Button id=\"Rot225DegRBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"-185 0 -5\" active=\"true\" onClick=\"setupRot\">\r\n            <Image id=\"Rot225DegR\" image=\"Rot225DegR\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n\r\n        <Button id=\"AdjustFBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"0 -90 -5\" active=\"true\" onClick=\"setupShift\">\r\n            <Image id=\"AdjustF\" image=\"AdjustF\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n        <Button id=\"AdjustBBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"0 0 -5\" active=\"true\" onClick=\"setupShift\">\r\n            <Image id=\"AdjustB\" image=\"AdjustB\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n        <Button id=\"AdjustLBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"90 -35 -5\" active=\"true\" onClick=\"setupShift\">\r\n            <Image id=\"AdjustL\" image=\"AdjustL\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n        <Button id=\"AdjustRBut\" height=\"80\" width=\"80\" class=\"ArcButtons\" position=\"-90 -35 -5\" active=\"true\" onClick=\"setupShift\">\r\n            <Image id=\"AdjustR\" image=\"AdjustR\" height=\"80\" width=\"80\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n        </Button>\r\n</Panel>\r\n\r\n<Panel id=\"CenterFD\"\r\n    active=\"false\"\r\n    width=\"300\"\r\n    height=\"300\"\r\n    position=\"0 0 -25\"\r\n    rotation=\"180 180 180\"\r\n    color=\"#aaffaa00\">\r\n        <Button id=\"moveWindow\" class=\"CenterButtons\" height=\"75\" width=\"100\" position=\"0 10 -2\" active=\"true\" onClick=\"Window\">Moves</Button>\r\n        <Button id=\"setBtnFD\" class=\"CenterButtons\" height=\"75\" position=\"0 10 -2\" active=\"false\" onClick=\"setDial\" onMouseEnter=\"showSetMan\" onMouseExit=\"hideSetMan\">Set</Button>\r\n        <Text   id=\"Name\" class=\"DialName\" position=\"0 70 3\" rotation=\"180 180 0\" height=\"80\" fontSize=\"25\" fontStyle=\"Bold\">Name</Text>\r\n        <Button id=\"TokenMenu\" class=\"CenterMenuButtons\" offsetXY=\"-110 15\" active=\"true\" onClick=\"menuClick\" onMouseEnter=\"menuHover\">T</Button>\r\n        <Button id=\"ArcMenu\" class=\"CenterMenuButtons\" offsetXY=\"110 15\" active=\"true\" onClick=\"menuClick\" onMouseEnter=\"menuHover\">A</Button>\r\n        <Button id=\"undoFD\" class=\"CenterMenuButtons\" offsetXY=\"0 -51\" active=\"true\" onClick=\"Undo\" height=\"30\" width=\"60\" fontSize=\"18\" fontStyle=\"Bold\">Undo</Button>\r\n        <Button id=\"RelocMenu\" class=\"CenterMenuButtons\" offsetXY=\"0 -105\" active=\"true\" onClick=\"menuClick\" onMouseEnter=\"menuHover\">R</Button>\r\n</Panel>\r\n\r\n<Panel id=\"CenterFU\"\r\n    active=\"false\"\r\n    width=\"300\"\r\n    height=\"300\"\r\n    position=\"0 0 0\"\r\n    rotation=\"0 180 0\"\r\n    color=\"#aaffff00\">\r\n    <Panel id=\"TalonPanel\" class=\"TalonP\" offsetXY=\"0 117\" active=\"true\">\r\n        <Button id=\"TalonMidBtn\" class=\"RelocButtons\" offsetXY=\"0 0\" active=\"true\" onClick=\"performTalon\">\r\n            <Image id=\"TalonMidIcon\" class=\"RIcon\"  image=\"TalonMid\" preserveAspect=\"true\"></Image></Button>\r\n        <Button id=\"TalonForBtn\" class=\"RelocButtons\" offsetXY=\"-60 0\" active=\"true\" onClick=\"performTalon\">\r\n            <Image id=\"TalonForIcon\" class=\"RIcon\"  image=\"TalonFront\" preserveAspect=\"true\"></Image></Button>\r\n        <Button id=\"TalonReaBtn\" class=\"RelocButtons\" offsetXY=\"60 0\" active=\"true\" onClick=\"performTalon\">\r\n            <Image id=\"TalonReaIcon\" class=\"RIcon\"  image=\"TalonRear\" preserveAspect=\"true\"></Image></Button>\r\n    </Panel>\r\n\r\n    <Panel id=\"ExecutionOptionsPanel\" position=\"0 0 -10\" rotation=\"0 0 0\"  color=\"#aaffaa00\" width=\"700\" height=\"100\" offsetXY=\"0 117\" active=\"true\">\r\n        <HorizontalLayout childForceExpandWidth=\"false\" childAlignment=\"MiddleCenter\" >\r\n          <Button id=\"ExOpt13But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n              <VerticalLayout>\r\n                  <Image id=\"ExOpt13TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                  <Image id=\"ExOpt13SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n              </VerticalLayout>\r\n          </Button>\r\n          <Button id=\"ExOpt12But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n              <VerticalLayout>\r\n                  <Image id=\"ExOpt12TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                  <Image id=\"ExOpt12SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n              </VerticalLayout>\r\n          </Button>\r\n          <Button id=\"ExOpt11But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n              <VerticalLayout>\r\n                  <Image id=\"ExOpt11TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                  <Image id=\"ExOpt11SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n              </VerticalLayout>\r\n          </Button>\r\n          <Button id=\"ExOpt10But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n              <VerticalLayout>\r\n                  <Image id=\"ExOpt10TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                  <Image id=\"ExOpt10SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n              </VerticalLayout>\r\n          </Button>\r\n            <Button id=\"ExOpt9But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt9TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt9SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n            <Button id=\"ExOpt8But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt8TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt8SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n            <Button id=\"ExOpt7But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt7TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt7SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n            <Button id=\"ExOpt6But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt6TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt6SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n            <Button id=\"ExOpt5But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt5TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt5SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n            <Button id=\"ExOpt4But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt4TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt4SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n            <Button id=\"ExOpt3But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt3TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt3SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n            <Button id=\"ExOpt2But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt2TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt2SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n            <Button id=\"ExOpt1But\" class=\"DarkButton\" active=\"true\" onClick=\"selectExecuteOption\">\r\n                <VerticalLayout>\r\n                    <Image id=\"ExOpt1TypeIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                    <Image id=\"ExOpt1SpeedIcon\" class=\"SetIcon\" preserveAspect=\"true\"></Image>\r\n                </VerticalLayout>\r\n            </Button>\r\n        </HorizontalLayout>\r\n    </Panel>\r\n\r\n    <Button id=\"MoveBtn\" class=\"CenterButtons\" offsetXY=\"0 97\" height=\"60\" width=\"120\" active=\"true\" fontSize=\"24\" onClick=\"performMove\">Move</Button>\r\n    <Button id=\"UndoBtn\" class=\"CenterButtons\" offsetXY=\"0 97\" height=\"60\" width=\"120\" active=\"false\"  fontSize=\"24\" onClick=\"Undo\">Undo</Button>\r\n    <Button id=\"TokenMenuFU\" class=\"CenterMenuButtons\" offsetXY=\"-110 15\" active=\"true\" onClick=\"menuClick\" onMouseEnter=\"menuHover\">T</Button>\r\n    <Button id=\"ArcMenuFU\" class=\"CenterMenuButtons\" offsetXY=\"110 15\" active=\"true\" onClick=\"menuClick\" onMouseEnter=\"menuHover\">A</Button>\r\n    <Button id=\"undoFU\" class=\"CenterMenuButtons\" offsetXY=\"0 -51\" active=\"true\" onClick=\"Undo\" height=\"30\" width=\"60\" fontSize=\"18\" fontStyle=\"Bold\">Undo</Button>\r\n    <Button id=\"Templ\" class=\"CenterMenuButtons\" offsetXY=\"0 15\" active=\"true\" height=\"60\" width=\"120\" fontSize=\"18\" onClick=\"spawnTemplate\"></Button>\r\n    <Button id=\"RelocMenuFU\" class=\"CenterMenuButtons\" offsetXY=\"0 -106\" active=\"true\" onClick=\"menuClick\" onMouseEnter=\"menuHover\">R</Button>\r\n    <Image id=\"SpeedIcon\" class=\"SetIcon\" active=\"false\" image=\"Speed1\" offsetXY=\"30 15\" height=\"60\" width=\"60\"></Image>\r\n    <Image id=\"TypeIcon\" class=\"SetIcon\" active=\"false\" image=\"BlueStraight\" offsetXY=\"-30 15\" height=\"60\" width=\"60\"></Image>\r\n</Panel>\r\n\r\n<Panel id=\"arcPanel\"\r\n    active=\"false\"\r\n    width=\"600\"\r\n    height=\"500\"\r\n    color=\"#ffaaaa00\"\r\n    raycastTarget=\"true\"\r\n    onMouseExit=\"menuHover\">\r\n    <HorizontalLayout childForceExpandWidth=\"false\"\r\n                    childForceExpandHeight=\"true\"\r\n                    childAlignment=\"MiddleRight\" >\r\n      <Panel\r\n        outline=\"Black\"\r\n        color=\"#aaffaa00\"\r\n        showAnimation=\"FadeIn\"\r\n        hideAnimation=\"FadeOut\"\r\n        minHeight=\"500\"\r\n        minWidth=\"400\">\r\n          <VerticalLayout childForceExpandWidth=\"true\"\r\n                          childForceExpandHeight=\"true\"\r\n                          childAlignment=\"MiddleCenter\"\r\n                          spacing=\"5\">\r\n            <Panel\r\n              outline=\"Black\"\r\n              color=\"#aaffff00\"\r\n              showAnimation=\"FadeIn\"\r\n              hideAnimation=\"FadeOut\"\r\n              minHeight=\"80\">\r\n              <HorizontalLayout childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"\r\n                              childAlignment=\"MiddleCenter\"\r\n                              spacing=\"20\">\r\n                <Button id=\"Range1\" class=\"ArcButtons\" onClick=\"Arc\" >\r\n                    <Image id=\"R1Icon\" height=\"80\" width=\"80\" image=\"R1\"></Image></Button>\r\n                <Button id=\"Range2\" class=\"ArcButtons\" onClick=\"Arc\" >\r\n                    <Image id=\"R2Icon\" height=\"80\" width=\"80\" image=\"R2\"></Image></Button>\r\n                <Button id=\"Range3\" class=\"ArcButtons\" onClick=\"Arc\" >\r\n                    <Image id=\"R3Icon\" height=\"80\" width=\"80\" image=\"R3\"></Image></Button>\r\n              </HorizontalLayout>\r\n            </Panel>\r\n            <Panel\r\n              outline=\"Black\"\r\n              color=\"#ffff3300\"\r\n              showAnimation=\"FadeIn\"\r\n              hideAnimation=\"FadeOut\"\r\n              minHeight=\"300\">\r\n              <HorizontalLayout childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"\r\n                              childAlignment=\"MiddleCenter\" spacing=\"5\">\r\n                <Panel\r\n                  outline=\"Black\"\r\n                  color=\"#ffff3300\"\r\n                  showAnimation=\"FadeIn\"\r\n                  hideAnimation=\"FadeOut\"\r\n                  minWidth=\"80\"\r\n                  minHeight=\"300\">\r\n                  <VerticalLayout childForceExpandWidth=\"true\"\r\n                                  childForceExpandHeight=\"true\"\r\n                                  childAlignment=\"MiddleRight\">\r\n                    <Button id=\"FullFrontArc\" class=\"ArcButtons\" onClick=\"Arc\">\r\n                        <Image id=\"FullFrontArcIcon\" height=\"80\" width=\"80\" image=\"FullFront\"></Image></Button>\r\n                    <Button id=\"FullBackArc\" class=\"ArcButtons\" onClick=\"Arc\">\r\n                        <Image id=\"FullBackArcIcon\" height=\"80\" width=\"80\" image=\"FullBack\"></Image></Button>\r\n                  </VerticalLayout>\r\n                </Panel>\r\n                <Button id=\"LeftArc\" class=\"ArcButtons\" onClick=\"Arc\">\r\n                    <Image id=\"LeftArcIcon\" height=\"80\" width=\"80\" image=\"LeftArc\"></Image></Button>\r\n                <Panel\r\n                  outline=\"Black\"\r\n                  color=\"#ffff3300\"\r\n                  showAnimation=\"FadeIn\"\r\n                  hideAnimation=\"FadeOut\"\r\n                  minWidth=\"80\"\r\n                  minHeight=\"300\">\r\n                  <VerticalLayout childForceExpandWidth=\"true\"\r\n                                  childForceExpandHeight=\"false\"\r\n                                  childAlignment=\"MiddleRight\">\r\n                    <Button id=\"FrontArc\" class=\"ArcButtons\" onClick=\"Arc\">\r\n                        <Image id=\"FrontArcIcon\" height=\"80\" width=\"80\" image=\"FrontArc\"></Image></Button>\r\n                    <Button id=\"BullseyeArc\" class=\"ArcButtons\" onClick=\"Arc\">\r\n                        <Image id=\"BullseyeIcon\" height=\"80\" width=\"80\" image=\"Bullseye\"></Image></Button>\r\n                    <Button id=\"RearArc\" class=\"ArcButtons\" onClick=\"Arc\" >\r\n                        <Image id=\"BackArcIcon\" height=\"80\" width=\"80\" image=\"BackArc\"></Image></Button>\r\n                  </VerticalLayout>\r\n                </Panel>\r\n                <Button id=\"RightArc\" class=\"ArcButtons\" onClick=\"Arc\" >\r\n                    <Image id=\"RightArcIcon\" height=\"80\" width=\"80\" image=\"RightArc\"></Image></Button>\r\n              </HorizontalLayout>\r\n            </Panel>\r\n            <Panel id=\"TurretArc1Panel\"\r\n              outline=\"Black\"\r\n              color=\"#aaffff00\"\r\n              showAnimation=\"FadeIn\"\r\n              hideAnimation=\"FadeOut\"\r\n              minHeight=\"80\"\r\n              active=\"false\">\r\n              <HorizontalLayout childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"\r\n                              childAlignment=\"MiddleCenter\"\r\n                              spacing=\"40\">\r\n                <Button id=\"RotateLeft1\" class=\"ArcButtons\" onClick=\"Arc\" active=\"false\">\r\n                    <Image id=\"RotateLeft1Icon\" height=\"80\" width=\"80\" image=\"RotACW\"></Image></Button>\r\n                <Button id=\"RotateRight1\" class=\"ArcButtons\" onClick=\"Arc\" active=\"false\">\r\n                    <Image id=\"RotateRight1Icon\" height=\"80\" width=\"80\" image=\"RotCW\"></Image></Button>\r\n              </HorizontalLayout>\r\n            </Panel>\r\n            <Panel id=\"TurretArc2Panel\"\r\n              outline=\"Black\"\r\n              color=\"#aaffff00\"\r\n              showAnimation=\"FadeIn\"\r\n              hideAnimation=\"FadeOut\"\r\n              minHeight=\"80\"\r\n              active=\"false\">\r\n              <HorizontalLayout childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"\r\n                              childAlignment=\"MiddleCenter\"\r\n                              spacing=\"40\">\r\n                <Button id=\"RotateLeft2\" class=\"ArcButtons\" onClick=\"Arc\"  active=\"false\">\r\n                    <Image id=\"RotateLeft2Icon\" height=\"80\" width=\"80\" image=\"RotACW\"></Image></Button>\r\n                <Button id=\"RotateRight2\" class=\"ArcButtons\" onClick=\"Arc\" active=\"false\">\r\n                    <Image id=\"RotateRight2Icon\" height=\"80\" width=\"80\" image=\"RotCW\"></Image></Button>\r\n              </HorizontalLayout>\r\n            </Panel>\r\n          </VerticalLayout>\r\n        </Panel>\r\n        <Panel\r\n          outline=\"Black\"\r\n          color=\"#aaffff00\"\r\n          showAnimation=\"FadeIn\"\r\n          hideAnimation=\"FadeOut\"\r\n          minWidth=\"120\"\r\n          maxWidth=\"120\"\r\n          active=\"true\">\r\n          <VerticalLayout childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"\r\n                          childAlignment=\"MiddleCenter\"\r\n                          spacing=\"20\">\r\n            <Button id=\"FixedArc\" class=\"ArcButtons\" onClick=\"Arc\" preferredWidth=\"120\" preferredHeight=\"120\">\r\n                <Image id=\"FixedArcIcon\" height=\"120\" width=\"120\" image=\"FrontArc\"></Image></Button>\r\n            <Button id=\"TurretArc1\" class=\"ArcButtons\" onClick=\"Arc\" preferredWidth=\"120\" preferredHeight=\"120\" active=\"false\">\r\n                <Image id=\"TurretArc1Icon\" height=\"120\" width=\"120\" image=\"SingleTurretArc\"></Image></Button>\r\n            <Button id=\"TurretArc2\" class=\"ArcButtons\" onClick=\"Arc\" preferredWidth=\"120\" preferredHeight=\"120\" active=\"false\">\r\n                <Image id=\"TurretArc2Icon\" height=\"120\" width=\"120\" image=\"SingleTurretArc\"></Image></Button>\r\n          </VerticalLayout>\r\n        </Panel>\r\n      </HorizontalLayout>\r\n</Panel>\r\n\r\n<Panel id=\"setManPeekPanel\"\r\n    active=\"false\"\r\n    width=\"70\"\r\n    height=\"140\"\r\n    color=\"#555555ff\"\r\n    showAnimation=\"FadeIn\"\r\n    hideAnimation=\"FadeOut\">\r\n        <Image id=\"setManTypeIcon\" height=\"60\" width=\"60\" image=\"BlueStraight\" offsetXY=\"0 35\"></Image>\r\n        <Image id=\"setManSpeedIcon\" height=\"60\" width=\"60\" image=\"Speed1\" offsetXY=\"0 -35\"></Image>\r\n</Panel>\r\n\r\n<Panel id=\"tokenPanel\"\r\n    active=\"false\"\r\n    width=\"600\"\r\n    height=\"450\"\r\n    color=\"#aaffaa00\"\r\n    raycastTarget=\"true\"\r\n    onMouseExit=\"menuHover\">\r\n    <Panel id=\"TokenButtonPanel\"\r\n        width=\"400\"\r\n        height=\"350\"\r\n        rectAlignment=\"TopRight\"\r\n        outline=\"Black\"\r\n        color=\"#aaffaa00\"\r\n        showAnimation=\"FadeIn\"\r\n        hideAnimation=\"FadeOut\">\r\n        <HorizontalLayout>\r\n            <Panel id = \"GreenTokens\"\r\n                width=\"70\"\r\n                height=\"280\"\r\n                color=\"#aaffaa00\">\r\n                <VerticalLayout>\r\n                    <Button id=\"FocusBtn\" class=\"TokenButtons\" onClick=\"focusTok\">\r\n                        <Image id= \"FocusIcon\" class=\"TIcon\" image=\"Focus\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"EvadeBtn\" class=\"TokenButtons\" onClick=\"evadeTok\">\r\n                        <Image id= \"EvadeIcon\" class=\"TIcon\" image=\"Evade\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"TargetLockBtn\" class=\"TokenButtons\"  onClick=\"tlTok\">\r\n                        <Image id= \"TLIcon\" class=\"TIcon\" image=\"TL\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"CalculateBtn\" class=\"TokenButtons\"  onClick=\"calcTok\">\r\n                        <Image id= \"CalculateIcon\" class=\"TIcon\" image=\"Calculate\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"ReinforceBtn\" class=\"TokenButtons\" onClick=\"reinforceTok\">\r\n                        <Image id= \"ReinforceIcon\" class=\"TIcon\" image=\"Reinforce\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                </VerticalLayout>\r\n            </Panel>\r\n            <Panel id = \"RedTokenShed\"\r\n                width=\"70\"\r\n                height=\"280\"\r\n                color=\"#aaffaa00\">\r\n                <VerticalLayout>\r\n                    <Button id=\"StressBtn\" class=\"TokenButtons\" onClick=\"stressTok\" active=\"true\">\r\n                        <image  id= \"StressIcon\" class=\"TIcon\" image=\"Stress\" preserveAspect=\"true\"></image></Button>\r\n                    <Button id=\"StrainBtn\" class=\"TokenButtons\" onClick=\"strainTok\" active=\"true\">\r\n                        <image  id= \"StrainIcon\" class=\"TIcon\" image=\"Strain\" preserveAspect=\"true\"></image></Button>\r\n                    <Button id=\"DepleteBtn\" class=\"TokenButtons\" onClick=\"depleteTok\" active=\"true\">\r\n                        <image  id= \"DepleteIcon\" class=\"TIcon\" image=\"Deplete\" preserveAspect=\"true\"></image></Button>\r\n                    <Button id=\"IonBtn\" class=\"TokenButtons\" onClick=\"ionTok\" active=\"true\">\r\n                        <image  id= \"IonIcon\" class=\"TIcon\" image=\"Ion\" preserveAspect=\"true\"></image></Button>\r\n                </VerticalLayout>\r\n            </Panel>\r\n            <Panel id = \"OrangeTokens\"\r\n                width=\"70\"\r\n                height=\"280\"\r\n                rectAlignment=\"MiddleLeft\"\r\n                color=\"#aaffaa00\">\r\n                <VerticalLayout>\r\n                    <Button id=\"DisarmBtn\" class=\"TokenButtons\" onClick=\"disarmTok\" active=\"true\">\r\n                        <image  id= \"DisarmIcon\" class=\"TIcon\" image=\"Disarm\" preserveAspect=\"true\"></image></Button>\r\n                    <Button id=\"JamBtn\" class=\"TokenButtons\" onClick=\"jamTok\" active=\"true\">\r\n                        <image  id= \"JamIcon\" class=\"TIcon\" image=\"Jam\" preserveAspect=\"true\"></image></Button>\r\n                    <Button id=\"TractorBtn\" class=\"TokenButtons\" onClick=\"tractorTok\" active=\"true\">\r\n                        <image  id= \"TractorIcon\" class=\"TIcon\" image=\"Tractor\" preserveAspect=\"true\"></image></Button>\r\n                </VerticalLayout>\r\n            </Panel>\r\n            <Panel id = \"BlueTokens\"\r\n                width=\"70\"\r\n                height=\"280\"\r\n                rectAlignment=\"MiddleLeft\"\r\n                color=\"#aaffaa00\">\r\n                <VerticalLayout>\r\n                    <Button id=\"CloakBtn\" class=\"TokenButtons\" onClick=\"cloakTok\" active=\"true\">\r\n                        <image  id= \"CloakIcon\" class=\"TIcon\" image=\"Cloak\" preserveAspect=\"true\"></image></Button>\r\n                </VerticalLayout>\r\n            </Panel>\r\n        </HorizontalLayout>\r\n    </Panel>\r\n</Panel>\r\n\r\n<Panel id=\"proxyPanel\"\r\n\tactive=\"false\"\r\n\twidth=\"700\"\r\n\theight=\"150\"\r\n\tposition=\"0 -265 -25\"\r\n\tcolor=\"#aaaaaa00\"\r\n\tshowAnimation=\"FadeIn\"\r\n\thideAnimation=\"FadeOut\"\r\n\traycastTarget=\"true\">\r\n\t<VerticalLayout childAlignment=\"MiddleBottom\"\r\n\t\tchildForceExpandHeight=\"false\"\r\n\t\tspacing=\"5\">\r\n\t\t<HorizontalLayout childAlignment=\"MiddleCenter\"\r\n\t\t\tchildForceExpandWidth=\"false\"\r\n\t\t\tspacing=\"5\">\r\n\t\t\t<Button id=\"proxyFrontBtn\"\r\n\t\t\t\tclass=\"RelocButtons\"\r\n\t\t\t\tactive=\"false\">\r\n\t\t\t\t<Image id=\"TalonForIcon\"\r\n\t\t\t\t\tclass=\"RIcon\"\r\n\t\t\t\t\timage=\"TalonFront\"\r\n\t\t\t\t\tpreserveAspect=\"true\"></Image>\r\n\t\t\t</Button>\r\n\t\t\t<Button id=\"proxyCenterBtn\"\r\n\t\t\t\tclass=\"RelocButtons\"\r\n\t\t\t\tactive=\"false\">\r\n\t\t\t\t<Image id=\"TalonMidIcon\"\r\n\t\t\t\t\tclass=\"RIcon\"\r\n\t\t\t\t\timage=\"TalonMid\"\r\n\t\t\t\t\tpreserveAspect=\"true\"></Image>\r\n\t\t\t</Button>\r\n\t\t\t<Button id=\"proxyBackBtn\"\r\n\t\t\t\tclass=\"RelocButtons\"\r\n\t\t\t\tactive=\"false\">\r\n\t\t\t\t<Image id=\"TalonReaIcon\"\r\n\t\t\t\t\tclass=\"RIcon\"\r\n\t\t\t\t\timage=\"TalonRear\"\r\n\t\t\t\t\tpreserveAspect=\"true\"></Image>\r\n\t\t\t</Button>\r\n\t\t</HorizontalLayout>\r\n\t\t<Panel>\r\n\t\t\t<Button id=\"proxyCancelBtn\"\r\n\t\t\t\tclass=\"DarkButton\"\r\n\t\t\t\tonClick=\"CancelProxy\"\r\n\t\t\t\theight=\"60\"\r\n\t\t\t\twidth=\"180\"\r\n\t\t\t\trotation=\"0 0 180\"\r\n\t\t\t\tfontStyle=\"Bold\">Cancel</Button>\r\n\t\t</Panel>\r\n\t</VerticalLayout>\r\n</Panel>\r\n\r\n<Panel id=\"relocPanel\"\r\n    active=\"false\"\r\n    width=\"700\"\r\n    height=\"300\"\r\n    color=\"#aaaaaa00\"\r\n    raycastTarget=\"true\"\r\n    onMouseExit=\"menuHover\">\r\n    <HorizontalLayout childForceExpandWidth=\"false\" childAlignment=\"MiddleCenter\">\r\n        <Panel id=\"BarrelLeft2FD\"\r\n            class=\"BarrelPanel\"\r\n            color=\"#aaffff00\"\r\n            showAnimation=\"FadeIn\"\r\n            hideAnimation=\"FadeOut\"\r\n            active=\"false\">\r\n            <VerticalLayout childAlignment=\"MiddleRight\"  childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"  spacing=\"5\" padding=\"0 10 0 0\">\r\n                <Button id=\"BarrelLF2Btn\" class=\"RelocButtons\" width=\"200\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelLFIcon\" class=\"RIcon\" image=\"BarrelLF\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelL2Btn\" class=\"RelocButtons\" width=\"200\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelLIcon\" class=\"RIcon\" image=\"BarrelL\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelLB2Btn\" class=\"RelocButtons\" width=\"200\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelLBIcon\" class=\"RIcon\" image=\"BarrelLB\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n            </VerticalLayout>\r\n        </Panel>\r\n        <Panel id=\"BarrelLeftFD\"\r\n            class=\"BarrelPanel\"\r\n            color=\"#aaffff00\"\r\n            showAnimation=\"FadeIn\"\r\n            hideAnimation=\"FadeOut\"\r\n            active=\"false\">\r\n            <VerticalLayout childAlignment=\"MiddleRight\"  childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"  spacing=\"5\" padding=\"0 10 0 0\">\r\n                <Button id=\"BarrelLFBtn\" class=\"RelocButtons\" width=\"200\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelLFIcon\" class=\"RIcon\" image=\"BarrelLF\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelVLUBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelVLUIcon\" class=\"RIcon\" image=\"BarrelVLU\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelLBtn\" class=\"RelocButtons\" width=\"200\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelLIcon\" class=\"RIcon\" image=\"BarrelL\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelVLDBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelVLDIcon\" class=\"RIcon\" image=\"BarrelVLD\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelLBBtn\" class=\"RelocButtons\" width=\"200\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelLBIcon\" class=\"RIcon\" image=\"BarrelLB\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n            </VerticalLayout>\r\n        </Panel>\r\n        <VerticalLayout id=\"relocCenterLayout\"\r\n            childAlignment=\"LowerCenter\"\r\n            childForceExpandHeight=\"false\"\r\n            childForceExpandWidth=\"false\"\r\n            padding=\"0 0 0 100\" minWidth=\"140\"\r\n            flexibleWidth=\"false\">\r\n            <Panel id=\"PivotFD\"\r\n                class=\"BoostPanel\"\r\n                color=\"#aaffaa00\"\r\n                showAnimation=\"FadeIn\"\r\n                hideAnimation=\"FadeOut\"\r\n                active=\"false\">\r\n                <HorizontalLayout childAlignment=\"MiddleCenter\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\" spacing=\"5\">\r\n                    <Button id=\"pivLBtn\" class=\"RelocButtons\" onClick=\"pivL\">\r\n                        <Image id= \"PivLIcon\" class=\"RIcon\" image=\"PivotLeft\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"PivKBtn\" class=\"RelocButtons\" onClick=\"pivK\">\r\n                        <Image id= \"PivKIcon\" class=\"RIcon\" image=\"Pivot180\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"pivRBtn\" class=\"RelocButtons\" onClick=\"pivR\">\r\n                        <Image id= \"PivRIcon\" class=\"RIcon\" image=\"PivotRight\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                </HorizontalLayout>\r\n            </Panel>\r\n\r\n            <Panel id=\"AileronFD\"\r\n                class=\"BoostPanel\"\r\n                color=\"#ffffaa00\"\r\n                showAnimation=\"FadeIn\"\r\n                hideAnimation=\"FadeOut\"\r\n                active=\"false\">\r\n                <HorizontalLayout childAlignment=\"MiddleCenter\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\" spacing=\"5\">\r\n                    <Button id=\"AilLBtn\" class=\"RelocButtons\" onClick=\"Repos\"  color=\"#888888\">\r\n                        <Image id= \"BoostLIcon\" class=\"RIcon\" image=\"WhiteBankL\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"AilSBtn\" class=\"RelocButtons\" onClick=\"Repos\" color=\"#888888\">\r\n                        <Image id= \"BoostSIcon\" class=\"RIcon\" image=\"WhiteStraight\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"AilRBtn\" class=\"RelocButtons\" onClick=\"Repos\" color=\"#888888\">\r\n                        <Image id= \"BoostRIcon\" class=\"RIcon\" image=\"WhiteBankR\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                </HorizontalLayout>\r\n            </Panel>\r\n\r\n            <Panel id=\"Boost2FD\"\r\n                class=\"BoostPanel\"\r\n                color=\"#aaaaff00\"\r\n                showAnimation=\"FadeIn\"\r\n                hideAnimation=\"FadeOut\"\r\n                active=\"false\">\r\n                <HorizontalLayout childAlignment=\"MiddleCenter\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\" spacing=\"5\">\r\n                    <Button id=\"BoostLT2Btn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostLTIcon\" class=\"RIcon\" image=\"BoostLT\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"BoostL2Btn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostLIcon\" class=\"RIcon\" image=\"BoostL\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"BoostS2Btn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostSIcon\" class=\"RIcon\" image=\"BoostS\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"BoostR2Btn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostRIcon\" class=\"RIcon\" image=\"BoostR\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"BoostRT2Btn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostRTIcon\" class=\"RIcon\" image=\"BoostRT\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                </HorizontalLayout>\r\n            </Panel>\r\n\r\n            <Panel id=\"BoostFD\"\r\n                class=\"BoostPanel\"\r\n                color=\"#aaffaa00\"\r\n                showAnimation=\"FadeIn\"\r\n                hideAnimation=\"FadeOut\"\r\n                active=\"false\">\r\n                <HorizontalLayout childAlignment=\"MiddleCenter\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\" spacing=\"5\">\r\n                    <Button id=\"BoostLTBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostLTIcon\" class=\"RIcon\" image=\"BoostLT\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"BoostLBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostLIcon\" class=\"RIcon\" image=\"BoostL\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"BoostSBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostSIcon\" class=\"RIcon\" image=\"BoostS\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"BoostRBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostRIcon\" class=\"RIcon\" image=\"BoostR\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                    <Button id=\"BoostRTBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                        <Image id= \"BoostRTIcon\" class=\"RIcon\" image=\"BoostRT\" preserveAspect=\"true\"></Image>\r\n                    </Button>\r\n                </HorizontalLayout>\r\n            </Panel>\r\n\r\n        </VerticalLayout>\r\n\r\n        <Panel id=\"BarrelRightFD\"\r\n            class=\"BarrelPanel\"\r\n            color=\"#ffaaaa00\"\r\n            showAnimation=\"FadeIn\"\r\n            hideAnimation=\"FadeOut\"\r\n            active=\"false\">\r\n            <VerticalLayout childAlignment=\"MiddleLeft\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"  spacing=\"5\" padding=\"10 0 0 0\">\r\n                <Button id=\"BarrelRFBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelRFIcon\" class=\"RIcon\" image=\"BarrelRF\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelVRUBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelVRUIcon\" class=\"RIcon\" image=\"BarrelVRU\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelRBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelRIcon\" class=\"RIcon\" image=\"BarrelR\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelVRDBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelVRDIcon\" class=\"RIcon\" image=\"BarrelVRD\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelRBBtn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelRBIcon\" class=\"RIcon\" image=\"BarrelRB\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n            </VerticalLayout>\r\n        </Panel>\r\n        <Panel id=\"BarrelRight2FD\"\r\n            class=\"BarrelPanel\"\r\n            color=\"#ffaaaa00\"\r\n            showAnimation=\"FadeIn\"\r\n            hideAnimation=\"FadeOut\"\r\n            active=\"false\">\r\n            <VerticalLayout childAlignment=\"MiddleLeft\" childForceExpandWidth=\"false\" childForceExpandHeight=\"false\"  spacing=\"5\" padding=\"10 0 0 0\">\r\n                <Button id=\"BarrelRF2Btn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelRFIcon\" class=\"RIcon\" image=\"BarrelRF\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelR2Btn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelRIcon\" class=\"RIcon\" image=\"BarrelR\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n                <Button id=\"BarrelRB2Btn\" class=\"RelocButtons\" onClick=\"Repos\">\r\n                    <Image id= \"BarrelRBIcon\" class=\"RIcon\" image=\"BarrelRB\" preserveAspect=\"true\"></Image>\r\n                </Button>\r\n            </VerticalLayout>\r\n        </Panel>\r\n    </HorizontalLayout>\r\n</Panel>\r\n\r\n\r\n<Panel id = \"ManWin\"\r\n    active=\"false\"\r\n    class=\"Window\"\r\n    position=\"200 -200 -100\"\r\n    rotation=\"180 180 0\"\r\n    showAnimation=\"FadeIn\"\r\n    hideAnimation=\"FadeOut\">\r\n    <image id=\"BackGround\" class=\"BGImage\" image=\"1BG\" preserveAspect=\"true\"></image>\r\n    <Image id=\"Spd0\" class=\"SpeedImg\" image=\"Speed0\" offsetXY=\"-355 -190\" color=\"#ffffff\" preserveAspect=\"true\"></Image>\r\n    <Image id=\"Spd1\" class=\"SpeedImg\" image=\"Speed1\" offsetXY=\"-355 -100\" color=\"#ffffff\" preserveAspect=\"true\"></Image>\r\n    <Image id=\"Spd2\" class=\"SpeedImg\" image=\"Speed2\" offsetXY=\"-355 -10\" color=\"#ffffff\" preserveAspect=\"true\"></Image>\r\n    <Image id=\"Spd3\" class=\"SpeedImg\" image=\"Speed3\" offsetXY=\"-355 80\" color=\"#ffffff\" preserveAspect=\"true\"></Image>\r\n    <Image id=\"Spd4\" class=\"SpeedImg\" image=\"Speed4\" offsetXY=\"-355 170\" color=\"#ffffff\" preserveAspect=\"true\"></Image>\r\n    <Image id=\"Spd5\" class=\"SpeedImg\" image=\"Speed5\" offsetXY=\"-355 260\" color=\"#ffffff\" preserveAspect=\"true\"></Image>\r\n    <ToggleGroup id=\"ManBtnGroup\" interactable=\"false\" allowSwitchOff=\"true\">\r\n\r\n      <ToggleButton id=\"RBL0\" class=\"ManBtn\" offsetXY=\"-165 -190\">\r\n          <Image id=\"RBL0Icon\" class=\"MIcon\"  image=\"RedBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RS0\" class=\"ManBtn\" offsetXY=\"-75 -190\">\r\n          <Image id=\"RS0Icon\" class=\"MIcon\"  image=\"RedStall\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBR0\" class=\"ManBtn\" offsetXY=\"15 -190\">\r\n           <Image id=\"RBR0Icon\" class=\"MIcon\"  image=\"RedBankR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"BTL1\" class=\"ManBtn\" offsetXY=\"-255 -100\">\r\n          <Image id=\"BTL1Icon\" class=\"MIcon\"  image=\"BlueTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BBL1\" class=\"ManBtn\" offsetXY=\"-165 -100\">\r\n          <Image id=\"BBL1Icon\" class=\"MIcon\" image=\"BlueBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BS1\" class=\"ManBtn\" offsetXY=\"-75 -100\">\r\n          <Image id=\"BS1Icon\" class=\"MIcon\" image=\"BlueStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BBR1\" class=\"ManBtn\" offsetXY=\"15 -100\">\r\n          <Image id=\"BBR1Icon\" class=\"MIcon\" image=\"BlueBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BTR1\" class=\"ManBtn\" offsetXY=\"105 -100\">\r\n          <Image id=\"BTR1Icon\" class=\"MIcon\" image=\"BlueTurnR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"WTL1\" class=\"ManBtn\" offsetXY=\"-255 -100\">\r\n          <Image id=\"WTL1Icon\" class=\"MIcon\"  image=\"WhiteTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WBL1\" class=\"ManBtn\" offsetXY=\"-165 -100\">\r\n          <Image id=\"WBL1Icon\" class=\"MIcon\" image=\"WhiteBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WS1\" class=\"ManBtn\" offsetXY=\"-75 -100\">\r\n          <Image id=\"WS1Icon\" class=\"MIcon\" image=\"WhiteStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WBR1\" class=\"ManBtn\" offsetXY=\"15 -100\">\r\n          <Image id=\"WBR1Icon\" class=\"MIcon\" image=\"WhiteBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WTR1\" class=\"ManBtn\" offsetXY=\"105 -100\">\r\n          <Image id=\"WTR1Icon\" class=\"MIcon\" image=\"WhiteTurnR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RTL1\" class=\"ManBtn\" offsetXY=\"-255 -100\">\r\n          <Image id=\"RTL1Icon\" class=\"MIcon\"  image=\"RedTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBL1\" class=\"ManBtn\" offsetXY=\"-165 -100\">\r\n          <Image id=\"RBL1Icon\" class=\"MIcon\" image=\"RedBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RS1\" class=\"ManBtn\" offsetXY=\"-75 -100\">\r\n          <Image id=\"RS1Icon\" class=\"MIcon\" image=\"RedStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBR1\" class=\"ManBtn\" offsetXY=\"15 -100\">\r\n          <Image id=\"RBR1Icon\" class=\"MIcon\" image=\"RedBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RTR1\" class=\"ManBtn\" offsetXY=\"105 -100\">\r\n          <Image id=\"RTR1Icon\" class=\"MIcon\"  image=\"RedTurnR\"></Image></ToggleButton>\r\n\r\n\r\n      <ToggleButton id=\"RBL1R\" class=\"ManBtn\" offsetXY=\"195 -100\">\r\n          <Image id=\"RBL1RIcon\" class=\"MIcon\"  image=\"RedReverseBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBR1R\" class=\"ManBtn\" offsetXY=\"285 -100\">\r\n          <Image id=\"RBR1RIcon\" class=\"MIcon\"  image=\"RedReverseBankR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RTL1T\" class=\"ManBtn\" offsetXY=\"195 -100\">\r\n          <Image id=\"RTL1TIcon\" class=\"MIcon\" image=\"RedTalonL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RTR1T\" class=\"ManBtn\" offsetXY=\"285 -100\">\r\n          <Image id=\"RTR1TIcon\" class=\"MIcon\" image=\"RedTalonR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RBL1S\" class=\"ManBtn\" offsetXY=\"195 -100\">\r\n          <Image id=\"RBL1SIcon\" class=\"MIcon\" image=\"RedSloopL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBR1S\" class=\"ManBtn\" offsetXY=\"285 -100\">\r\n          <Image id=\"RBR1SIcon\" class=\"MIcon\" image=\"RedSloopR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RK1\" class=\"ManBtn\" offsetXY=\"375 -100\">\r\n          <Image id=\"RK1Icon\" class=\"MIcon\" image=\"RedK\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RS1R\" class=\"ManBtn\" offsetXY=\"375 -100\">\r\n          <Image id=\"RS1RIcon\" class=\"MIcon\" image=\"RedReverseStraight\"></Image></ToggleButton>\r\n\r\n\r\n\r\n      <ToggleButton id=\"BTL2\" class=\"ManBtn\" offsetXY=\"-255 -10\">\r\n          <Image id=\"BTL2Icon\" class=\"MIcon\"  image=\"BlueTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BBL2\" class=\"ManBtn\" offsetXY=\"-165 -10\">\r\n          <Image id=\"BBL2Icon\" class=\"MIcon\" image=\"BlueBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BS2\" class=\"ManBtn\" offsetXY=\"-75 -10\">\r\n          <Image id=\"BS2Icon\" class=\"MIcon\" image=\"BlueStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BBR2\" class=\"ManBtn\" offsetXY=\"15 -10\">\r\n          <Image id=\"BBR2Icon\" class=\"MIcon\" image=\"BlueBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BTR2\" class=\"ManBtn\" offsetXY=\"105 -10\">\r\n          <Image id=\"BTR2Icon\" class=\"MIcon\" image=\"BlueTurnR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"WTL2\" class=\"ManBtn\" offsetXY=\"-255 -10\">\r\n          <Image id=\"WTL2Icon\" class=\"MIcon\"  image=\"WhiteTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WBL2\" class=\"ManBtn\" offsetXY=\"-165 -10\">\r\n          <Image id=\"WBL2Icon\" class=\"MIcon\" image=\"WhiteBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WS2\" class=\"ManBtn\" offsetXY=\"-75 -10\">\r\n          <Image id=\"WS2Icon\" class=\"MIcon\" image=\"WhiteStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WBR2\" class=\"ManBtn\" offsetXY=\"15 -10\">\r\n          <Image id=\"WBR2Icon\" class=\"MIcon\" image=\"WhiteBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WTR2\" class=\"ManBtn\" offsetXY=\"105 -10\">\r\n          <Image id=\"WTR2Icon\" class=\"MIcon\" image=\"WhiteTurnR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RTL2\" class=\"ManBtn\" offsetXY=\"-255 -10\">\r\n          <Image id=\"RTL2Icon\" class=\"MIcon\" image=\"RedTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBL2\" class=\"ManBtn\" offsetXY=\"-165 -10\">\r\n          <Image id=\"RBL2Icon\" class=\"MIcon\" image=\"RedBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RS2\" class=\"ManBtn\" offsetXY=\"-75 -10\">\r\n          <Image id=\"RS2Icon\" class=\"MIcon\" image=\"RedStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBR2\" class=\"ManBtn\" offsetXY=\"15 -10\">\r\n          <Image id=\"RBR2Icon\" class=\"MIcon\" image=\"RedBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RTR2\" class=\"ManBtn\" offsetXY=\"105 -10\">\r\n          <Image id=\"RTR2Icon\" class=\"MIcon\" image=\"RedTurnR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"PTL2T\" class=\"ManBtn\" offsetXY=\"195 -10\">\r\n          <Image id=\"PTL2TIcon\" class=\"MIcon\" image=\"PurpleTalonL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"PTR2T\" class=\"ManBtn\" offsetXY=\"285 -10\">\r\n          <Image id=\"PTR2TIcon\" class=\"MIcon\" image=\"PurpleTalonR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RTL2T\" class=\"ManBtn\" offsetXY=\"195 -10\">\r\n          <Image id=\"RTL2TIcon\" class=\"MIcon\" image=\"RedTalonL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RTR2T\" class=\"ManBtn\" offsetXY=\"285 -10\">\r\n          <Image id=\"RTR2TIcon\" class=\"MIcon\" image=\"RedTalonR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBL2S\" class=\"ManBtn\" offsetXY=\"195 -10\">\r\n          <Image id=\"RBL2SIcon\" class=\"MIcon\" image=\"RedSloopL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBR2S\" class=\"ManBtn\" offsetXY=\"285 -10\">\r\n          <Image id=\"RBR2SIcon\" class=\"MIcon\" image=\"RedSloopR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RK2\" class=\"ManBtn\" offsetXY=\"375 -10\">\r\n          <Image id=\"RK2Icon\" class=\"MIcon\" image=\"RedK\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RS2R\" class=\"ManBtn\" offsetXY=\"375 -10\">\r\n          <Image id=\"RS2RIcon\" class=\"MIcon\" image=\"RedReverseStraight\"></Image></ToggleButton>\r\n\r\n\r\n      <ToggleButton id=\"BTL3\" class=\"ManBtn\" offsetXY=\"-255 80\">\r\n          <Image id=\"BTL3Icon\" class=\"MIcon\"  image=\"BlueTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BBL3\" class=\"ManBtn\" offsetXY=\"-165 80\">\r\n          <Image id=\"BBL3Icon\" class=\"MIcon\" image=\"BlueBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BS3\" class=\"ManBtn\" offsetXY=\"-75 80\">\r\n          <Image id=\"BS3Icon\" class=\"MIcon\" image=\"BlueStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BBR3\" class=\"ManBtn\" offsetXY=\"15 80\">\r\n          <Image id=\"BBR3Icon\" class=\"MIcon\" image=\"BlueBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"BTR3\" class=\"ManBtn\" offsetXY=\"105 80\">\r\n          <Image id=\"BTR3Icon\" class=\"MIcon\" image=\"BlueTurnR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"WTL3\" class=\"ManBtn\" offsetXY=\"-255 80\">\r\n          <Image id=\"WTL3Icon\" class=\"MIcon\"  image=\"WhiteTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WBL3\" class=\"ManBtn\" offsetXY=\"-165 80\">\r\n          <Image id=\"WBL3Icon\" class=\"MIcon\" image=\"WhiteBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WS3\" class=\"ManBtn\" offsetXY=\"-75 80\">\r\n          <Image id=\"WS3Icon\" class=\"MIcon\" image=\"WhiteStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WBR3\" class=\"ManBtn\" offsetXY=\"15 80\">\r\n          <Image id=\"WBR3Icon\" class=\"MIcon\" image=\"WhiteBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WTR3\" class=\"ManBtn\" offsetXY=\"105 80\">\r\n          <Image id=\"WTR3Icon\" class=\"MIcon\" image=\"WhiteTurnR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RTL3\" class=\"ManBtn\" offsetXY=\"-255 80\">\r\n          <Image id=\"RTL3Icon\" class=\"MIcon\" image=\"RedTurnL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBL3\" class=\"ManBtn\" offsetXY=\"-165 80\">\r\n          <Image id=\"RBL3Icon\" class=\"MIcon\" image=\"RedBankL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RS3\" class=\"ManBtn\" offsetXY=\"-75 80\">\r\n          <Image id=\"RS3Icon\" class=\"MIcon\" image=\"RedStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBR3\" class=\"ManBtn\" offsetXY=\"15 80\">\r\n          <Image id=\"RBR3Icon\" class=\"MIcon\" image=\"RedBankR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RTR3\" class=\"ManBtn\" offsetXY=\"105 80\">\r\n          <Image id=\"RTR3Icon\" class=\"MIcon\" image=\"RedTurnR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RTL3T\" class=\"ManBtn\" offsetXY=\"195 80\">\r\n          <Image id=\"RTL3TIcon\" class=\"MIcon\" image=\"RedTalonL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RTR3T\" class=\"ManBtn\" offsetXY=\"285 80\">\r\n          <Image id=\"RTR3TIcon\" class=\"MIcon\" image=\"RedTalonR\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBL3S\" class=\"ManBtn\" offsetXY=\"195 80\">\r\n          <Image id=\"RBL3SIcon\" class=\"MIcon\" image=\"RedSloopL\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RBR3S\" class=\"ManBtn\" offsetXY=\"285 80\">\r\n          <Image id=\"RBR3SIcon\" class=\"MIcon\" image=\"RedSloopR\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RK3\" class=\"ManBtn\" offsetXY=\"375 80\">\r\n          <Image id=\"RK3Icon\" class=\"MIcon\" image=\"RedK\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"BS4\" class=\"ManBtn\" offsetXY=\"-75 170\">\r\n          <Image id=\"BS4Icon\" class=\"MIcon\" image=\"BlueStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WS4\" class=\"ManBtn\" offsetXY=\"-75 170\">\r\n          <Image id=\"WS4Icon\" class=\"MIcon\" image=\"WhiteStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RS4\" class=\"ManBtn\" offsetXY=\"-75 170\">\r\n          <Image id=\"RS4Icon\" class=\"MIcon\" image=\"RedStraight\"></Image></ToggleButton>\r\n\r\n      <ToggleButton id=\"RK4\" class=\"ManBtn\" offsetXY=\"375 170\">\r\n          <Image id=\"RK4Icon\" class=\"MIcon\" image=\"RedK\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WK4\" class=\"ManBtn\" offsetXY=\"375 170\">\r\n          <Image id=\"WK4Icon\" class=\"MIcon\" image=\"WhiteK\"></Image></ToggleButton>\r\n\r\n\r\n      <ToggleButton id=\"BS5\" class=\"ManBtn\" offsetXY=\"-75 260\">\r\n          <Image id=\"BS5Icon\" class=\"MIcon\" image=\"BlueStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"WS5\" class=\"ManBtn\" offsetXY=\"-75 260\">\r\n          <Image id=\"WS5Icon\" class=\"MIcon\" image=\"WhiteStraight\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RS5\" class=\"ManBtn\" offsetXY=\"-75 260\">\r\n          <Image id=\"RS5Icon\" class=\"MIcon\" image=\"RedStraight\"></Image></ToggleButton>\r\n\r\n\r\n      <ToggleButton id=\"WK5\" class=\"ManBtn\" offsetXY=\"375 260\">\r\n          <Image id=\"WK5Icon\" class=\"MIcon\" image=\"WhiteK\"></Image></ToggleButton>\r\n      <ToggleButton id=\"RK5\" class=\"ManBtn\" offsetXY=\"375 260\">\r\n          <Image id=\"RK5Icon\" class=\"MIcon\" image=\"RedK\"></Image></ToggleButton>\r\n\r\n    </ToggleGroup>\r\n\r\n    <Button id=\"prevManBut\" class=\"DarkButton\" fontSize=\"24\" offsetXY=\"-150 -290\" width=\"120\" height=\"65\" onClick=\"nextMan\">Prev</Button>\r\n    <Button id=\"nextManBut\" class=\"DarkButton\" fontSize=\"24\" offsetXY=\"0 -290\" width=\"120\" height=\"65\" onClick=\"nextMan\">Next</Button>\r\n    <Button id=\"setBtnManWin\" class=\"DarkButton\" fontSize=\"30\" offsetXY=\"300 -290\" width=\"180\" height=\"85\" onClick=\"setDial\">Set</Button>\r\n    <Panel\r\n      class=\"TopBar\"\r\n      id=\"TopBar\">\r\n      <Button class =\"topButton\" offsetXY=\"45 -25\" textColor=\"White\" color=\"Red\" onClick=\"Window\">X</Button>\r\n    </Panel>\r\n    <Panel id=\"WinElements\">\r\n    </Panel>\r\n</Panel>",
            "CustomUIAssets": [
              {
                "Name": "Focus",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/focus.png"
              },
              {
                "Name": "Evade",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/evade.png"
              },
              {
                "Name": "TL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/TL.png"
              },
              {
                "Name": "Calculate",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/calculate.png"
              },
              {
                "Name": "Reinforce",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/reinforce.png"
              },
              {
                "Name": "Stress",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/stress.png"
              },
              {
                "Name": "Ion",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/ion.png"
              },
              {
                "Name": "Cloak",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/cloak.png"
              },
              {
                "Name": "Jam",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/jam.png"
              },
              {
                "Name": "Disarm",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/disarm.png"
              },
              {
                "Name": "Tractor",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/tractor.png"
              },
              {
                "Name": "Strain",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/strain.png"
              },
              {
                "Name": "RotCW",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/RotateHorario.png"
              },
              {
                "Name": "RotACW",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/128x128/RotateAntiHorario.png"
              },
              {
                "Name": "Speed0",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/v0.png"
              },
              {
                "Name": "Speed1",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/v1.png"
              },
              {
                "Name": "Speed2",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/v2.png"
              },
              {
                "Name": "Speed3",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/v3.png"
              },
              {
                "Name": "Speed4",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/v4.png"
              },
              {
                "Name": "Speed5",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/v5.png"
              },
              {
                "Name": "BlueTurnL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/teb.png"
              },
              {
                "Name": "BlueBankL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/beb.png"
              },
              {
                "Name": "BlueStraight",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/sb.png"
              },
              {
                "Name": "BlueBankR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/brb.png"
              },
              {
                "Name": "BlueTurnR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trb.png"
              },
              {
                "Name": "WhiteTurnL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/tew.png"
              },
              {
                "Name": "WhiteBankL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/bew.png"
              },
              {
                "Name": "WhiteStraight",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/sw.png"
              },
              {
                "Name": "WhiteBankR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/brw.png"
              },
              {
                "Name": "WhiteTurnR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trw.png"
              },
              {
                "Name": "RedTurnL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/ter.png"
              },
              {
                "Name": "RedBankL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/ber.png"
              },
              {
                "Name": "RedStraight",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/sr.png"
              },
              {
                "Name": "RedBankR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/brr.png"
              },
              {
                "Name": "RedTurnR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trr.png"
              },
              {
                "Name": "WhiteK",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/kw.png"
              },
              {
                "Name": "RedK",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/kr.png"
              },
              {
                "Name": "RedTalonL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trer.png"
              },
              {
                "Name": "RedTalonR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trrr.png"
              },
              {
                "Name": "RedSloopL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/s-looper.png"
              },
              {
                "Name": "RedSloopR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/s-looprr.png"
              },
              {
                "Name": "RedStall",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/stopr.png"
              },
              {
                "Name": "RedReverseBankL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/rer.png"
              },
              {
                "Name": "RedReverseBankR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/rrr.png"
              },
              {
                "Name": "RedReverseStraight",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/rsr.png"
              },
              {
                "Name": "1BG",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/BackgroundReb.png"
              },
              {
                "Name": "2BG",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/BackgroundEmpire.png"
              },
              {
                "Name": "3BG",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/BackgroundScum.png"
              },
              {
                "Name": "4BG",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/BackgroundRes.png"
              },
              {
                "Name": "5BG",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/BackgroundFO.png"
              },
              {
                "Name": "6BG",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/BackgroundRep.png"
              },
              {
                "Name": "7BG",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/BackgroundCIS.png"
              },
              {
                "Name": "BoostS",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/boost/BoostFwd.png"
              },
              {
                "Name": "BoostL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/boost/BoostLeft.png"
              },
              {
                "Name": "BoostR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/boost/BoostRight.png"
              },
              {
                "Name": "BarrelL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollLeft.png"
              },
              {
                "Name": "BarrelLF",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollLeftFwd.png"
              },
              {
                "Name": "BarrelLB",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollLeftRe.png"
              },
              {
                "Name": "BarrelR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollRight.png"
              },
              {
                "Name": "BarrelRF",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollRightFwd.png"
              },
              {
                "Name": "BarrelRB",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollRightRe.png"
              },
              {
                "Name": "R1",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/RR1.png"
              },
              {
                "Name": "R2",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/RR2.png"
              },
              {
                "Name": "R3",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/RR3.png"
              },
              {
                "Name": "FrontArc",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/Front.png"
              },
              {
                "Name": "RightArc",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/Right.png"
              },
              {
                "Name": "LeftArc",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/Left.png"
              },
              {
                "Name": "BackArc",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/Rear.png"
              },
              {
                "Name": "TalonFront",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/TrollFront.png"
              },
              {
                "Name": "TalonMid",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/TrollMid.png"
              },
              {
                "Name": "TalonRear",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/TrollRear.png"
              },
              {
                "Name": "PivotLeft",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/Pivot90Left.png"
              },
              {
                "Name": "Pivot180",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/Pivot180.png"
              },
              {
                "Name": "PivotRight",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/Pivot90Right.png"
              },
              {
                "Name": "FullBack",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/FullBack.png"
              },
              {
                "Name": "FullFront",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/FullFront.png"
              },
              {
                "Name": "Deplete",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/deplete.png"
              },
              {
                "Name": "RedTurnSloopR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trsr.png"
              },
              {
                "Name": "RedTurnSloopL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/tesr.png"
              },
              {
                "Name": "RedBankSlipR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/bezr.png"
              },
              {
                "Name": "RedBankSlipL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/brzr.png"
              },
              {
                "Name": "WhiteBankSlipL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/brzw.png"
              },
              {
                "Name": "WhiteBankSlipR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/bezw.png"
              },
              {
                "Name": "BlueBankSlipR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/bezb.png"
              },
              {
                "Name": "BlueBankSlipL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/brzb.png"
              },
              {
                "Name": "BlueTurnSlipL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trzb.png"
              },
              {
                "Name": "BlueTurnSlipR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/tezb.png"
              },
              {
                "Name": "WhiteTurnSlipR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/tezw.png"
              },
              {
                "Name": "WhiteTurnSlipL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trzw.png"
              },
              {
                "Name": "RedTurnSlipL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trzr.png"
              },
              {
                "Name": "RedTurnSlipR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/tezr.png"
              },
              {
                "Name": "Bullseye",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/bullseye.png"
              },
              {
                "Name": "Rot1DegL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/rot1degleft.png"
              },
              {
                "Name": "Rot5DegL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/rot5degleft.png"
              },
              {
                "Name": "Rot225DegL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/rot225degleft.png"
              },
              {
                "Name": "Rot225DegR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/rot225degright.png"
              },
              {
                "Name": "Rot5DegR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/rot5degright.png"
              },
              {
                "Name": "Rot1DegR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/rot1degright.png"
              },
              {
                "Name": "AdjustF",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/nudgeUp.png"
              },
              {
                "Name": "AdjustB",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/nudgeBack.png"
              },
              {
                "Name": "AdjustL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/nudgeLeft.png"
              },
              {
                "Name": "AdjustR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/nudgeRight.png"
              },
              {
                "Name": "BoostLT",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/boost/BoostLeftTurn.png"
              },
              {
                "Name": "BoostRT",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/boost/BoostRightTurn.png"
              },
              {
                "Name": "PurpleTalonL",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trep.png"
              },
              {
                "Name": "PurpleTalonR",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/trrp.png"
              },
              {
                "Name": "SingleTurretArc",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/singlearc.png"
              },
              {
                "Name": "DoubleTurretArc",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/arcranges/doublearc.png"
              },
              {
                "Name": "BarrelVLD",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollVLeftdown.png"
              },
              {
                "Name": "BarrelVLU",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollVLeftup.png"
              },
              {
                "Name": "BarrelVRU",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollVRightup.png"
              },
              {
                "Name": "BarrelVRD",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/actions/broll/brollVRightdown.png"
              }
            ]
          }
        ]
      },
      {
        "GUID": "e76065",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.35,
          "posY": 0.96,
          "posZ": 12.53,
          "rotX": -5.45902139E-07,
          "rotY": 90.0057144,
          "rotZ": 9.512684E-07,
          "scaleX": 0.57,
          "scaleY": 0.83,
          "scaleZ": 0.57
        },
        "Nickname": "All Bombs",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9303135,
          "g": 0.9303135,
          "b": 0.9303135
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/bombbag.obj",
          "DiffuseURL": "https://i.imgur.com/78DuPYX.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/bombbag.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "982496",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.17031932,
              "posY": 1.13637328,
              "posZ": 12.4124537,
              "rotX": 4.66555321E-07,
              "rotY": 90.02695,
              "rotZ": 3.57198644E-08,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Bomblet",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992191732,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/bomb_collider.obj",
              "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/960842582371685764/DE3C740123B0960FFE23B7DC62D3AF41FA71EFFA/",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_collider.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "SpecularIntensity": 0.0,
                "SpecularSharpness": 2.0,
                "FresnelStrength": 0.0
              },
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\n-- Script by Eirik 'Flippster' Munthe\n--\n-- ~~~~~~\n\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n-- Call bomb drop stick\nfunction onDropped()\n    Global.call('API_BombTokenDrop', {token=self})\nend\n\nlocal spawnedRuler = nil\nfunction update()\n    if self.getDescription() == 'r' then\n        if ToggleRuler() then\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\n        end\n        self.setDescription('')\n    end\nend\n\nfunction ToggleRuler()\n    if spawnedRuler then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0.4, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_range_1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/minicollider.obj'\n    }\n    local removeButton = {\n        click_function = 'ToggleRuler',\n        label = 'DEL',\n        function_owner = self,\n        position = {0, 0.1, 0},\n        rotation = {0, 270, 0},\n        width = 750,\n        height = 750,\n        font_size = 250,\n        color = {0.7, 0.7, 0.7}\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.createButton(removeButton)\n    spawnedRuler.lock()\n    return true\nend\n\n\n\nfunction onLoad()\n    if self.getName() == 'AoE Bomb source' then\n        self.setPosition({0, -3, 18.28})\n        self.setRotation({0, 0, 0})\n        self.lock()\n        self.tooltip = false\n        self.interactable = false\n        update = nil\n    else\n        self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler, false)\n    end\n\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "c1e43d",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -11.9986057,
                  "posY": 1.01200247,
                  "posZ": -3.93103766,
                  "rotX": 1.52666111E-08,
                  "rotY": 180.05835,
                  "rotZ": 9.17354548E-09,
                  "scaleX": 0.375,
                  "scaleY": 0.375,
                  "scaleZ": 0.375
                },
                "Nickname": "Proton Bomb",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992160261,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/bomb_collider.obj",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/960842582371703122/24B44D44B2D0AA56F50E4D0E7040201A3385BB70/",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_collider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "-- ~~~~~~\n-- Script by Eirik 'Flippster' Munthe\n--\n-- ~~~~~~\n\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n-- Call bomb drop stick\nfunction onDropped()\n    Global.call('API_BombTokenDrop', {token=self})\nend\n\nlocal spawnedRuler = nil\nfunction update()\n    if self.getDescription() == 'r' then\n        if ToggleRuler() then\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\n        end\n        self.setDescription('')\n    end\nend\n\nfunction ToggleRuler()\n    if spawnedRuler then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0.4, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_range_1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/minicollider.obj'\n    }\n    local removeButton = {\n        click_function = 'ToggleRuler',\n        label = 'DEL',\n        function_owner = self,\n        position = {0, 0.1, 0},\n        rotation = {0, 270, 0},\n        width = 750,\n        height = 750,\n        font_size = 250,\n        color = {0.7, 0.7, 0.7}\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.createButton(removeButton)\n    spawnedRuler.lock()\n    return true\nend\n\n\n\nfunction onLoad()\n    if self.getName() == 'AoE Bomb source' then\n        self.setPosition({0, -3, 18.28})\n        self.setRotation({0, 0, 0})\n        self.lock()\n        self.tooltip = false\n        self.interactable = false\n        update = nil\n    else\n        self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler, false)\n    end\n\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "3178e1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -11.976511,
                  "posY": 1.01200247,
                  "posZ": -1.09156489,
                  "rotX": 1.60268421E-08,
                  "rotY": 180.05835,
                  "rotZ": 2.66304028E-08,
                  "scaleX": 0.375,
                  "scaleY": 0.375,
                  "scaleZ": 0.375
                },
                "Nickname": "Seismic Charge",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992160261,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/bomb_collider.obj",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/960842582371711287/850714D54F13E65D616BE37375CE774A33E1B3C7/",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_collider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "-- ~~~~~~\n-- Script by Eirik 'Flippster' Munthe\n--\n-- ~~~~~~\n\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n-- Call bomb drop stick\nfunction onDropped()\n    Global.call('API_BombTokenDrop', {token=self})\nend\n\nlocal spawnedRuler = nil\nfunction update()\n    if self.getDescription() == 'r' then\n        if ToggleRuler() then\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\n        end\n        self.setDescription('')\n    end\nend\n\nfunction ToggleRuler()\n    if spawnedRuler then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0.4, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_range_1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/minicollider.obj'\n    }\n    local removeButton = {\n        click_function = 'ToggleRuler',\n        label = 'DEL',\n        function_owner = self,\n        position = {0, 0.1, 0},\n        rotation = {0, 270, 0},\n        width = 750,\n        height = 750,\n        font_size = 250,\n        color = {0.7, 0.7, 0.7}\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.getVar('__XW_Obstacle') ~= nil then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.createButton(removeButton)\n    spawnedRuler.lock()\n    return true\nend\n\n\n\nfunction onLoad()\n    if self.getName() == 'AoE Bomb source' then\n        self.setPosition({0, -3, 18.28})\n        self.setRotation({0, 0, 0})\n        self.lock()\n        self.tooltip = false\n        self.interactable = false\n        update = nil\n    else\n        self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler, false)\n    end\n\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "89529a",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -11.864337,
                  "posY": 1.01200247,
                  "posZ": 1.54664707,
                  "rotX": -4.41815E-08,
                  "rotY": 180.05835,
                  "rotZ": 1.12656275E-08,
                  "scaleX": 0.375,
                  "scaleY": 0.375,
                  "scaleZ": 0.375
                },
                "Nickname": "Electro-Proton Bomb",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992191732,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/bomb_collider.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/bombs/electroproton.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_collider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "-- ~~~~~~\n-- Script by Eirik 'Flippster' Munthe\n--\n-- ~~~~~~\n\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n-- Call bomb drop stick\nfunction onDropped()\n    Global.call('API_BombTokenDrop', {token=self})\nend\n\nlocal spawnedRuler = nil\nfunction update()\n    if self.getDescription() == 'r' then\n        if ToggleRuler2() then\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\n        end\n        self.setDescription('')\n    end\nend\n\nfunction ToggleRuler1()\n    return ToggleRuler(1)\nend\n\nfunction ToggleRuler2()\n    return ToggleRuler(2)\nend\n\nfunction DeleteRuler()\n    if spawnedRuler  then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n    end\nend\n\nfunction ToggleRuler(range)\n    if spawnedRuler  then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        if spawnedRulerRange == range then\n            return false\n        end\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0.4, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_range_' .. tostring(range) .. '.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/minicollider.obj'\n    }\n    local removeButton = {\n        click_function = 'DeleteRuler',\n        label = 'DEL',\n        function_owner = self,\n        position = {0, 0.1, 0},\n        rotation = {0, 270, 0},\n        width = 750,\n        height = 750,\n        font_size = 250,\n        color = {0.7, 0.7, 0.7}\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100*range then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.createButton(removeButton)\n    spawnedRuler.lock()\n    spawnedRulerRange = range\n    return true\nend\n\n\n\nfunction onLoad()\n    if self.getName() == 'AoE Bomb source' then\n        self.setPosition({0, -3, 18.28})\n        self.setRotation({0, 0, 0})\n        self.lock()\n        self.tooltip = false\n        self.interactable = false\n        update = nil\n    else\n        self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler1, false)\n        self.addContextMenuItem(\"Toggle Range 2\", ToggleRuler2, false)\n    end\n\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "57f281",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -11.8347569,
                  "posY": 1.01200247,
                  "posZ": 4.11403131,
                  "rotX": 4.105487E-08,
                  "rotY": 180.05835,
                  "rotZ": 1.43203218E-08,
                  "scaleX": 0.375,
                  "scaleY": 0.375,
                  "scaleZ": 0.375
                },
                "Nickname": "Ion Bomb",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992191732,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/bomb_collider.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/bombs/ionbomb.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_collider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "-- ~~~~~~\n-- Script by Eirik 'Flippster' Munthe\n--\n-- ~~~~~~\n\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n-- Call bomb drop stick\nfunction onDropped()\n    Global.call('API_BombTokenDrop', {token=self})\nend\n\nlocal spawnedRuler = nil\nfunction update()\n    if self.getDescription() == 'r' then\n        if ToggleRuler() then\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\n        end\n        self.setDescription('')\n    end\nend\n\nfunction ToggleRuler()\n    if spawnedRuler then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0.4, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_range_1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/minicollider.obj'\n    }\n    local removeButton = {\n        click_function = 'ToggleRuler',\n        label = 'DEL',\n        function_owner = self,\n        position = {0, 0.1, 0},\n        rotation = {0, 270, 0},\n        width = 750,\n        height = 750,\n        font_size = 250,\n        color = {0.7, 0.7, 0.7}\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.createButton(removeButton)\n    spawnedRuler.lock()\n    return true\nend\n\n\n\nfunction onLoad()\n    if self.getName() == 'AoE Bomb source' then\n        self.setPosition({0, -3, 18.28})\n        self.setRotation({0, 0, 0})\n        self.lock()\n        self.tooltip = false\n        self.interactable = false\n        update = nil\n    else\n        self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler, false)\n    end\n\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "13c91e",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -11.8656025,
                  "posY": 1.01200247,
                  "posZ": 6.818882,
                  "rotX": 7.682135E-09,
                  "rotY": 180.05835,
                  "rotZ": 3.63157646E-08,
                  "scaleX": 0.375,
                  "scaleY": 0.375,
                  "scaleZ": 0.375
                },
                "Nickname": "Concussion Bomb",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992160261,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/bomb_collider.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Concussion%20Bomb%20Token.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_collider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "-- ~~~~~~\n-- Script by Eirik 'Flippster' Munthe\n--\n-- ~~~~~~\n\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n-- Call bomb drop stick\nfunction onDropped()\n    Global.call('API_BombTokenDrop', {token=self})\nend\n\nlocal spawnedRuler = nil\nfunction update()\n    if self.getDescription() == 'r' then\n        if ToggleRuler() then\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\n        end\n        self.setDescription('')\n    end\nend\n\nfunction ToggleRuler()\n    if spawnedRuler then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0.4, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_range_1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/minicollider.obj'\n    }\n    local removeButton = {\n        click_function = 'ToggleRuler',\n        label = 'DEL',\n        function_owner = self,\n        position = {0, 0.1, 0},\n        rotation = {0, 270, 0},\n        width = 750,\n        height = 750,\n        font_size = 250,\n        color = {0.7, 0.7, 0.7}\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.createButton(removeButton)\n    spawnedRuler.lock()\n    return true\nend\n\n\n\nfunction onLoad()\n    if self.getName() == 'AoE Bomb source' then\n        self.setPosition({0, -3, 18.28})\n        self.setRotation({0, 0, 0})\n        self.lock()\n        self.tooltip = false\n        self.interactable = false\n        update = nil\n    else\n        self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler, false)\n    end\n\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "7": {
                "GUID": "4a2359",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -11.8730955,
                  "posY": 1.01200247,
                  "posZ": 9.527215,
                  "rotX": 5.59478E-07,
                  "rotY": 180.032623,
                  "rotZ": -6.21552E-07,
                  "scaleX": 0.375,
                  "scaleY": 0.375,
                  "scaleZ": 0.375
                },
                "Nickname": "Thermal Detonator",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992160261,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/bomb_collider.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/bombs/thermalbomb.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_collider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "-- ~~~~~~\n-- Script by Eirik 'Flippster' Munthe\n--\n-- ~~~~~~\n\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n-- Call bomb drop stick\nfunction onDropped()\n    Global.call('API_BombTokenDrop', {token=self})\nend\n\nlocal spawnedRuler = nil\nfunction update()\n    if self.getDescription() == 'r' then\n        if ToggleRuler() then\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\n        end\n        self.setDescription('')\n    end\nend\n\nfunction ToggleRuler()\n    if spawnedRuler then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0.4, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/new/bomb_range_1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/colliders/minicollider.obj'\n    }\n    local removeButton = {\n        click_function = 'ToggleRuler',\n        label = 'DEL',\n        function_owner = self,\n        position = {0, 0.1, 0},\n        rotation = {0, 270, 0},\n        width = 750,\n        height = 750,\n        font_size = 250,\n        color = {0.7, 0.7, 0.7}\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.createButton(removeButton)\n    spawnedRuler.lock()\n    return true\nend\n\n\n\nfunction onLoad()\n    if self.getName() == 'AoE Bomb source' then\n        self.setPosition({0, -3, 18.28})\n        self.setRotation({0, 0, 0})\n        self.lock()\n        self.tooltip = false\n        self.interactable = false\n        update = nil\n    else\n        self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler, false)\n    end\n\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "cad233",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 65.0,
          "posY": 0.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 1.5,
          "scaleY": 0.5,
          "scaleZ": 1.5
        },
        "Nickname": "Rules Browser module",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/949592465030047822/AB48EAD0379830CA11C9F6E305161604254A40B5/",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 4,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "a76c4f",
        "Name": "Custom_Model",
        "Transform": {
          "posX": -69.54222,
          "posY": 0.0161247253,
          "posZ": -5.414752E-07,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 2.000029,
          "scaleY": 0.5,
          "scaleZ": 2.93357635
        },
        "Nickname": "Squad Builder module",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/949592465030047822/AB48EAD0379830CA11C9F6E305161604254A40B5/",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 4,
          "CastShadows": true
        },
        "LuaScript": "function onLoad(save_state)\r\n    self.interactable = false\r\n    self.tooltip = false\r\n    self.lock()\r\nend",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "5a92c4",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 180.0,
          "scaleX": 0.189,
          "scaleY": 0.05,
          "scaleZ": 0.123
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/949592465030047822/AB48EAD0379830CA11C9F6E305161604254A40B5/",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 4,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_xwing/src/ZoneExtension\nstate = {\r\n    extended = false,\r\n    parent = nil,\r\n    child = nil\r\n}\r\n\r\n__XW_LayoutHandlers = { hide = 'DestroyChild' }\r\n\r\nscaleConstant = {0.0272, 0.5, 0.1025}\r\nextendDistance = 12\r\n\r\nfunction FitToZone(arg)\r\n    function DelayedFit()\r\n        repeat\r\n            coroutine.yield(0)\r\n        until (not arg.zone.isSmoothMoving()) and arg.zone.resting\r\n        local zoneScale = arg.zone.getScale()\r\n        local targetScale = {zoneScale[1]*scaleConstant[1], scaleConstant[2], zoneScale[3]*scaleConstant[3]}\r\n        local targetRot = arg.zone.getRotation()\r\n        targetRot.z = targetRot.z + 180\r\n        local targetPos = arg.zone.getPosition()\r\n        targetPos.y = targetPos.y - 0.5*zoneScale[2] + 0.15\r\n        self.setRotation(targetRot)\r\n        self.setScale(targetScale)\r\n        self.setPosition(targetPos)\r\n        state.extended = false\r\n        state.parent = arg.zone\r\n        if state.child then state.child.destruct() state.child = nil end\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, 'DelayedFit')\r\nend\r\n\r\nfunction SpawnChild()\r\n    if not state.parent then return end\r\n    DestroyChild()\r\n    state.child = state.parent.clone()\r\n    local sPos = self.getPosition()\r\n    sPos.y = sPos.y + 1.85\r\n    state.child.setPosition(sPos)\r\n    state.child.setValue(state.parent.getValue())\r\nend\r\n\r\nfunction DestroyChild()\r\n    if state.child then state.child.destruct() state.child = nil end\r\nend\r\n\r\nfunction onLoad(saveState)\r\n    if saveState ~= nil and saveState ~= '' then\r\n        local load = JSON.decode(saveState)\r\n        state.extended = load.extended\r\n        state.parent = getObjectFromGUID(load.parent)\r\n        state.child = getObjectFromGUID(load.child)\r\n    end\r\n    self.interactable = false\r\n    self.tooltip = false\r\n    self.lock()\r\nend\r\n\r\nfunction onSave()\r\n    local save = {}\r\n    save.extended = state.extended\r\n    if state.parent then save.parent = state.parent.getGUID() end\r\n    if state.child then save.child = state.child.getGUID() end\r\n    return JSON.encode(save)\r\nend\r\n\r\nfunction retract()\r\n    if state.extended then\r\n        DestroyChild()\r\n        local targetLocal = {0, 0, extendDistance/self.getScale()[3]}\r\n        self.setPosition(self.positionToWorld(targetLocal))\r\n        state.extended = false\r\n    end\r\nend\r\n\r\nfunction extend()\r\n    if not state.extended then\r\n        local targetLocal = {0, 0, -1*extendDistance/self.getScale()[3]}\r\n        self.setPosition(self.positionToWorld(targetLocal))\r\n        SpawnChild()\r\n        state.extended = true\r\n    end\r\nend\r\n\r\nfunction toggle()\r\n    if state.extended then\r\n        retract()\r\n    else\r\n        extend()\r\n    end\r\nend\r\n\n----#include TTS_xwing/src/ZoneExtension",
        "LuaScriptState": "{\"extended\":false}",
        "XmlUI": ""
      },
      {
        "GUID": "c9a7f6",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 180.0,
          "scaleX": 0.189,
          "scaleY": 0.05,
          "scaleZ": 0.123
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/949592465030047822/AB48EAD0379830CA11C9F6E305161604254A40B5/",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 4,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_xwing/src/ZoneExtension\nstate = {\r\n    extended = false,\r\n    parent = nil,\r\n    child = nil\r\n}\r\n\r\n__XW_LayoutHandlers = { hide = 'DestroyChild' }\r\n\r\nscaleConstant = {0.0272, 0.5, 0.1025}\r\nextendDistance = 12\r\n\r\nfunction FitToZone(arg)\r\n    function DelayedFit()\r\n        repeat\r\n            coroutine.yield(0)\r\n        until (not arg.zone.isSmoothMoving()) and arg.zone.resting\r\n        local zoneScale = arg.zone.getScale()\r\n        local targetScale = {zoneScale[1]*scaleConstant[1], scaleConstant[2], zoneScale[3]*scaleConstant[3]}\r\n        local targetRot = arg.zone.getRotation()\r\n        targetRot.z = targetRot.z + 180\r\n        local targetPos = arg.zone.getPosition()\r\n        targetPos.y = targetPos.y - 0.5*zoneScale[2] + 0.15\r\n        self.setRotation(targetRot)\r\n        self.setScale(targetScale)\r\n        self.setPosition(targetPos)\r\n        state.extended = false\r\n        state.parent = arg.zone\r\n        if state.child then state.child.destruct() state.child = nil end\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, 'DelayedFit')\r\nend\r\n\r\nfunction SpawnChild()\r\n    if not state.parent then return end\r\n    DestroyChild()\r\n    state.child = state.parent.clone()\r\n    local sPos = self.getPosition()\r\n    sPos.y = sPos.y + 1.85\r\n    state.child.setPosition(sPos)\r\n    state.child.setValue(state.parent.getValue())\r\nend\r\n\r\nfunction DestroyChild()\r\n    if state.child then state.child.destruct() state.child = nil end\r\nend\r\n\r\nfunction onLoad(saveState)\r\n    if saveState ~= nil and saveState ~= '' then\r\n        local load = JSON.decode(saveState)\r\n        state.extended = load.extended\r\n        state.parent = getObjectFromGUID(load.parent)\r\n        state.child = getObjectFromGUID(load.child)\r\n    end\r\n    self.interactable = false\r\n    self.tooltip = false\r\n    self.lock()\r\nend\r\n\r\nfunction onSave()\r\n    local save = {}\r\n    save.extended = state.extended\r\n    if state.parent then save.parent = state.parent.getGUID() end\r\n    if state.child then save.child = state.child.getGUID() end\r\n    return JSON.encode(save)\r\nend\r\n\r\nfunction retract()\r\n    if state.extended then\r\n        DestroyChild()\r\n        local targetLocal = {0, 0, extendDistance/self.getScale()[3]}\r\n        self.setPosition(self.positionToWorld(targetLocal))\r\n        state.extended = false\r\n    end\r\nend\r\n\r\nfunction extend()\r\n    if not state.extended then\r\n        local targetLocal = {0, 0, -1*extendDistance/self.getScale()[3]}\r\n        self.setPosition(self.positionToWorld(targetLocal))\r\n        SpawnChild()\r\n        state.extended = true\r\n    end\r\nend\r\n\r\nfunction toggle()\r\n    if state.extended then\r\n        retract()\r\n    else\r\n        extend()\r\n    end\r\nend\r\n\n----#include TTS_xwing/src/ZoneExtension",
        "LuaScriptState": "{\"extended\":false}",
        "XmlUI": ""
      },
      {
        "GUID": "b5f9c9",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 180.0,
          "scaleX": 0.189,
          "scaleY": 0.05,
          "scaleZ": 0.4
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/949592465030047822/AB48EAD0379830CA11C9F6E305161604254A40B5/",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 4,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_xwing/src/ZoneExtension\nstate = {\r\n    extended = false,\r\n    parent = nil,\r\n    child = nil\r\n}\r\n\r\n__XW_LayoutHandlers = { hide = 'DestroyChild' }\r\n\r\nscaleConstant = {0.0272, 0.5, 0.1025}\r\nextendDistance = 12\r\n\r\nfunction FitToZone(arg)\r\n    function DelayedFit()\r\n        repeat\r\n            coroutine.yield(0)\r\n        until (not arg.zone.isSmoothMoving()) and arg.zone.resting\r\n        local zoneScale = arg.zone.getScale()\r\n        local targetScale = {zoneScale[1]*scaleConstant[1], scaleConstant[2], zoneScale[3]*scaleConstant[3]}\r\n        local targetRot = arg.zone.getRotation()\r\n        targetRot.z = targetRot.z + 180\r\n        local targetPos = arg.zone.getPosition()\r\n        targetPos.y = targetPos.y - 0.5*zoneScale[2] + 0.15\r\n        self.setRotation(targetRot)\r\n        self.setScale(targetScale)\r\n        self.setPosition(targetPos)\r\n        state.extended = false\r\n        state.parent = arg.zone\r\n        if state.child then state.child.destruct() state.child = nil end\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, 'DelayedFit')\r\nend\r\n\r\nfunction SpawnChild()\r\n    if not state.parent then return end\r\n    DestroyChild()\r\n    state.child = state.parent.clone()\r\n    local sPos = self.getPosition()\r\n    sPos.y = sPos.y + 1.85\r\n    state.child.setPosition(sPos)\r\n    state.child.setValue(state.parent.getValue())\r\nend\r\n\r\nfunction DestroyChild()\r\n    if state.child then state.child.destruct() state.child = nil end\r\nend\r\n\r\nfunction onLoad(saveState)\r\n    if saveState ~= nil and saveState ~= '' then\r\n        local load = JSON.decode(saveState)\r\n        state.extended = load.extended\r\n        state.parent = getObjectFromGUID(load.parent)\r\n        state.child = getObjectFromGUID(load.child)\r\n    end\r\n    self.interactable = false\r\n    self.tooltip = false\r\n    self.lock()\r\nend\r\n\r\nfunction onSave()\r\n    local save = {}\r\n    save.extended = state.extended\r\n    if state.parent then save.parent = state.parent.getGUID() end\r\n    if state.child then save.child = state.child.getGUID() end\r\n    return JSON.encode(save)\r\nend\r\n\r\nfunction retract()\r\n    if state.extended then\r\n        DestroyChild()\r\n        local targetLocal = {0, 0, extendDistance/self.getScale()[3]}\r\n        self.setPosition(self.positionToWorld(targetLocal))\r\n        state.extended = false\r\n    end\r\nend\r\n\r\nfunction extend()\r\n    if not state.extended then\r\n        local targetLocal = {0, 0, -1*extendDistance/self.getScale()[3]}\r\n        self.setPosition(self.positionToWorld(targetLocal))\r\n        SpawnChild()\r\n        state.extended = true\r\n    end\r\nend\r\n\r\nfunction toggle()\r\n    if state.extended then\r\n        retract()\r\n    else\r\n        extend()\r\n    end\r\nend\r\n\n----#include TTS_xwing/src/ZoneExtension",
        "LuaScriptState": "{\"extended\":false}",
        "XmlUI": ""
      },
      {
        "GUID": "e76836",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 180.0,
          "scaleX": 0.189,
          "scaleY": 0.05,
          "scaleZ": 0.4
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/949592465030047822/AB48EAD0379830CA11C9F6E305161604254A40B5/",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/trayextension.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 4,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_xwing/src/ZoneExtension\nstate = {\r\n    extended = false,\r\n    parent = nil,\r\n    child = nil\r\n}\r\n\r\n__XW_LayoutHandlers = { hide = 'DestroyChild' }\r\n\r\nscaleConstant = {0.0272, 0.5, 0.1025}\r\nextendDistance = 12\r\n\r\nfunction FitToZone(arg)\r\n    function DelayedFit()\r\n        repeat\r\n            coroutine.yield(0)\r\n        until (not arg.zone.isSmoothMoving()) and arg.zone.resting\r\n        local zoneScale = arg.zone.getScale()\r\n        local targetScale = {zoneScale[1]*scaleConstant[1], scaleConstant[2], zoneScale[3]*scaleConstant[3]}\r\n        local targetRot = arg.zone.getRotation()\r\n        targetRot.z = targetRot.z + 180\r\n        local targetPos = arg.zone.getPosition()\r\n        targetPos.y = targetPos.y - 0.5*zoneScale[2] + 0.15\r\n        self.setRotation(targetRot)\r\n        self.setScale(targetScale)\r\n        self.setPosition(targetPos)\r\n        state.extended = false\r\n        state.parent = arg.zone\r\n        if state.child then state.child.destruct() state.child = nil end\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, 'DelayedFit')\r\nend\r\n\r\nfunction SpawnChild()\r\n    if not state.parent then return end\r\n    DestroyChild()\r\n    state.child = state.parent.clone()\r\n    local sPos = self.getPosition()\r\n    sPos.y = sPos.y + 1.85\r\n    state.child.setPosition(sPos)\r\n    state.child.setValue(state.parent.getValue())\r\nend\r\n\r\nfunction DestroyChild()\r\n    if state.child then state.child.destruct() state.child = nil end\r\nend\r\n\r\nfunction onLoad(saveState)\r\n    if saveState ~= nil and saveState ~= '' then\r\n        local load = JSON.decode(saveState)\r\n        state.extended = load.extended\r\n        state.parent = getObjectFromGUID(load.parent)\r\n        state.child = getObjectFromGUID(load.child)\r\n    end\r\n    self.interactable = false\r\n    self.tooltip = false\r\n    self.lock()\r\nend\r\n\r\nfunction onSave()\r\n    local save = {}\r\n    save.extended = state.extended\r\n    if state.parent then save.parent = state.parent.getGUID() end\r\n    if state.child then save.child = state.child.getGUID() end\r\n    return JSON.encode(save)\r\nend\r\n\r\nfunction retract()\r\n    if state.extended then\r\n        DestroyChild()\r\n        local targetLocal = {0, 0, extendDistance/self.getScale()[3]}\r\n        self.setPosition(self.positionToWorld(targetLocal))\r\n        state.extended = false\r\n    end\r\nend\r\n\r\nfunction extend()\r\n    if not state.extended then\r\n        local targetLocal = {0, 0, -1*extendDistance/self.getScale()[3]}\r\n        self.setPosition(self.positionToWorld(targetLocal))\r\n        SpawnChild()\r\n        state.extended = true\r\n    end\r\nend\r\n\r\nfunction toggle()\r\n    if state.extended then\r\n        retract()\r\n    else\r\n        extend()\r\n    end\r\nend\r\n\n----#include TTS_xwing/src/ZoneExtension",
        "LuaScriptState": "{\"extended\":false}",
        "XmlUI": ""
      },
      {
        "GUID": "03bb8a",
        "Name": "Digital_Clock",
        "Transform": {
          "posX": -42.6657181,
          "posY": 1.03179467,
          "posZ": 0.3347354,
          "rotX": 35.51859,
          "rotY": 270.435242,
          "rotZ": 0.00676786434,
          "scaleX": 0.75,
          "scaleY": 0.75,
          "scaleZ": 0.13
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.585365832,
          "g": 0.585365832,
          "b": 0.585365832
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": false,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "Clock": {
          "Mode": 1,
          "SecondsPassed": 4495,
          "Paused": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "df35c0",
        "Name": "BlockTriangle",
        "Transform": {
          "posX": -43.38491,
          "posY": 1.205723,
          "posZ": -0.009129848,
          "rotX": -0.0056563057,
          "rotY": 358.4476,
          "rotZ": 359.724335,
          "scaleX": 0.696301758,
          "scaleY": 1.13736629,
          "scaleZ": 2.4344573
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.585365832,
          "g": 0.585365832,
          "b": 0.585365832
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": false,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "a4dbbf",
        "Name": "Custom_Model",
        "Transform": {
          "posX": -76.84321,
          "posY": -0.477534562,
          "posZ": -22.5838757,
          "rotX": 6.600007,
          "rotY": 90.01792,
          "rotZ": -1.71893907E-06,
          "scaleX": 4.5,
          "scaleY": 4.5,
          "scaleZ": 4.5
        },
        "Nickname": "DataPad",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/950707037730411112/2FF02D535765885C8B262CDB37271E3875C3E176/",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/951845529575572281/03B11CCF478BC107BA4569666BF40D73BBDC1447/",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/950707037730411112/2FF02D535765885C8B262CDB37271E3875C3E176/",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\n-- List Builder for X-Wing 2.0\r\n-- ~~~~~~\r\n-- Script by Johnny Cheese\r\n--\r\n-- This module creates a set of buttons and text input on an object.\r\n-- Script has 3 main modules: FFG spawner, TTS spawner and Squad Builder.\r\n-- FFG spawner receives the link for a saved FFG web site squad and spawns said squad.\r\n-- TTS spawner receives a string containingthe name of all pilots and upgrades and set up a table wich will be passed to the global newSpawner function.\r\n-- Squad Builder offers options to build a squad, but does not apply any restrictions other than faction specific cards.\r\n-- The cards with the same name are diferentiated by faction when possible, and will if needed, the script inquires the player wich version is being summoned.\r\n-- The inquire happens in cases of pilots on the same faction using different ships (Sabine, Ezra, \"Zeb\") and in cases of upgrades with the same name (R2-D2 crew and astromech)\r\n-- ~~~~~~\r\n\r\n\r\n----#include TTS_lib/Util/Util\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Misc functions for extending Lua functionality\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['Util'] then\r\n\r\n    package.loaded['Util'] = true\r\n\r\n    -- Return value limited by min and max bounds\r\n    math.clamp = function(var, min, max)\r\n        if min and var < min then\r\n            return min\r\n        elseif max and var > max then\r\n            return max\r\n        end\r\n        return var\r\n    end\r\n\r\n    -- Sign function, zero for zero\r\n    math.sgn = function(arg)\r\n        if arg < 0 then\r\n            return -1\r\n        elseif arg > 0 then\r\n            return 1\r\n        end\r\n        return 0\r\n    end\r\n\r\n    -- Round to decPlaces decimal places\r\n    -- if decPlaces nil round to nearest integer\r\n    math.round = function(arg, decPlaces)\r\n        if decPlaces == nil then decPlaces = 0 end\r\n        if decPlaces == 0 then\r\n            frac = arg - math.floor(arg)\r\n            if frac >= 0.5 then\r\n                return math.ceil(arg)\r\n            else\r\n                return math.floor(arg)\r\n            end\r\n        else\r\n            local mult = 10^(decPlaces or 0)\r\n            return math.floor(arg * mult + 0.5) / mult\r\n        end\r\n    end\r\n\r\n    -- Check if table is empty\r\n    table.empty = function(tab)\r\n        return (next(tab) == nil)\r\n    end\r\n\r\n    -- Mash together two tables\r\n    table.join = function(tab1, tab2)\r\n        local out = {}\r\n        for k=1,#tab1 do\r\n            out[k] = tab1[k]\r\n        end\r\n        local off = #tab1\r\n        for k=1,#tab2 do\r\n            out[k+off] = tab2[k]\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Shallow table copy\r\n    -- Does not include metatables\r\n    table.shallowcopy = function(orig)\r\n        local orig_type = type(orig)\r\n        local copy\r\n        if orig_type == 'table' then\r\n            copy = {}\r\n            for orig_key, orig_value in pairs(orig) do\r\n                copy[orig_key] = orig_value\r\n            end\r\n        else\r\n            copy = orig\r\n        end\r\n        return copy\r\n    end\r\n\r\n    -- Deep table copy\r\n    -- Includes metatables, avoids __pairs, recursive\r\n    table.deepcopy = function(orig)\r\n        local orig_type = type(orig)\r\n        local copy\r\n        if orig_type == 'table' then\r\n            copy = {}\r\n            for orig_key, orig_value in next, orig, nil do\r\n                copy[table.deepcopy(orig_key)] = table.deepcopy(orig_value)\r\n            end\r\n            if getmetatable(orig) then\r\n                setmetatable(copy, table.deepcopy(getmetatable(orig)))\r\n            end\r\n        else\r\n            copy = orig\r\n        end\r\n        return copy\r\n    end\r\n\r\n    -- Elements count\r\n    -- Unlike #table, also counts non-number keyed values\r\n    table.size = function(tab)\r\n        local count = 0\r\n        for _ in pairs(tab) do\r\n            count = count + 1\r\n        end\r\n        return count\r\n    end\r\n\r\n    -- Return the element that return minimal value from eval function\r\n    -- Only iterates through numeric keys part\r\n    table.min = function(tab, eval)\r\n        if not tab[1] then return end\r\n        local min = { el = tab[1], val = eval(tab[1]) }\r\n        for k=2,#tab do\r\n            local val = eval(tab[k])\r\n            if val < min.val then\r\n                min.val = val\r\n                min.el = tab[k]\r\n            end\r\n        end\r\n        return min.el, min.val\r\n    end\r\n\r\n    -- Same as table.min, but takes the maximum\r\n    table.max = function(tab, eval)\r\n        local function invEval(el)\r\n            return -1*eval(el)\r\n        end\r\n        local el, min = table.min(tab, invEval)\r\n        return el, -1*min\r\n    end\r\n\r\n    -- Return those values in tab that return true from valid function\r\n    table.sieve = function(tab, valid)\r\n        local passed = {}\r\n        local rejected = {}\r\n        for k,v in ipairs(tab) do\r\n            if valid(v) then\r\n                if type(k) == 'number' then\r\n                    table.insert(passed, v)\r\n                else\r\n                    passed[k] = v\r\n                end\r\n            else\r\n                if type(k) == 'number' then\r\n                    table.insert(rejected, v)\r\n                else\r\n                    rejected[k] = v\r\n                end\r\n            end\r\n        end\r\n        return passed, rejected\r\n    end\r\n\r\n    -- Try to find en element in the table, return key if found, nil otherwise\r\n    table.find = function(tab, el)\r\n        for k,v in pairs(tab) do\r\n            if v == el then\r\n                return k\r\n            end\r\n        end\r\n    end\r\n\r\n    -- Shallow table print\r\n    table.print = function(tab, prefix)\r\n        prefix = prefix or 'Table'\r\n        print(prefix .. ':')\r\n        local function stringify(v)\r\n            local str = tostring(v)\r\n            if type(v) == 'string' then\r\n                str = '\\'' .. str .. '\\''\r\n            end\r\n            return str\r\n        end\r\n        for k,v in pairs(tab) do\r\n            print('   [' .. stringify(k) .. '] -> ' .. stringify(v))\r\n        end\r\n        print('')\r\n    end\r\n\r\n    -- Deep table print (sensitive to cycles!)\r\n    table.print_r = function(tab, prefix, indent)\r\n        prefix = prefix or 'Table'\r\n        local indent = indent or 1\r\n        print(prefix .. ':')\r\n        local function stringify(v)\r\n            local str = tostring(v)\r\n            if type(v) == 'string' then\r\n                str = '\\'' .. str .. '\\''\r\n            end\r\n            return str\r\n        end\r\n        local indentStr = string.rep('    ', indent)\r\n        for k,v in pairs(tab) do\r\n            print(indentStr .. '[' .. stringify(k) .. '] -> ' .. stringify(v))\r\n            if type(v) == 'table' then\r\n                table.print_r(v, indentStr .. stringify(v), indent+1)\r\n            end\r\n        end\r\n        if indent == 1 then\r\n            print('')\r\n        end\r\n    end\r\n\r\n    -- Apply a function on each table element\r\n    table.process = function(tab, fcn)\r\n        local out = {}\r\n        for k,v in pairs(tab) do\r\n            out[k] = fcn(v)\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Returns a copy of a table with the elements in a random order.\r\n    table.shuffle = function(tab)\r\n        local shuffled_table = {}\r\n        for i = 1, #tab do\r\n            shuffled_table[i] = tab[i]\r\n        end\r\n        for i = #shuffled_table, 2, -1 do\r\n            local j = math.random(i)\r\n            shuffled_table[i], shuffled_table[j] = shuffled_table[j], shuffled_table[i]\r\n        end\r\n        return shuffled_table\r\n    end\r\n\r\n    -- Check if string begins with the argument (no regex)\r\n    string.beginswith = function(str, prefix)\r\n        return (str:sub(1, prefix:len()) == prefix)\r\n    end\r\n    string.startswith = string.beginswith\r\n\r\n    -- Check if the string ends with the argument (no regex)\r\n    string.endswith = function(str, prefix)\r\n        return (str:sub(-1*prefix:len(), -1) == prefix)\r\n    end\r\n\r\n    -- CHeck if string contains argument anywhere in it (no regex)\r\n    string.contains = function(str, query)\r\n        return (str:find(query, 1, true) ~= nil)\r\n    end\r\n\r\nend\r\n\n----#include TTS_lib/Util/Util\n\r\nself.interactable = false\r\n\r\n --[[\r\n tintColors = {}\r\n tintColors[0] = color(0,0,0,0.0)\r\n tintColors[1] = color(255/255, 230/255, 137/255, 0.8)\r\n tintColors[2] = color(243/255,  99/255,  28/255, 0.8)\r\n tintColors[3] = color(230/255,  40/255,  56/255, 0.8)\r\n tintColors[4] = color(173/255, 250/255, 190/255, 0.8)\r\n tintColors[5] = color( 21/255,  21/255, 168/255, 0.8)\r\n tintColors[6] = color(238/255, 120/255, 234/255 ,0.8)\r\n tintColors[7] = color(255/255, 255/255, 255/255, 0.8)\r\n tintColors[8] = color(168/255, 241/255, 249/255, 0.8)]]\r\n\r\ntintColors = {}\r\ntintColors[0] = color(0,0,0,0.0)\r\ntintColors[1] = color(1,0,0,1.0)\r\ntintColors[2] = color(1,1,0,1.0)\r\ntintColors[3] = color(0,0.5,0,2.0)\r\ntintColors[4] = color(0,0,1,1.0)\r\ntintColors[5] = color(1,0,0.8,1.0)\r\ntintColors[6] = color(0.5,0.25,0.1,1.0)\r\ntintColors[7] = color(1,1,1,1.0)\r\ntintColors[8] = color(0.5,0.5,0.5,1.0)\r\n\r\n-- List and cost of variable cost upgrades based on base sizea\r\nvarCostS={}\r\nvarCostS[296] = {small = 2, medium = 4, large = 7, huge = 0} --Engine Upgrade\r\nvarCostS[234] = {small = 2, medium = 3, large = 4, huge = 0} --Expert Handling\r\nvarCostS[489] = {small = 3, medium = 6, large = 9, huge = 0} --Hate\r\nvarCostS[612] = {small = 7, medium = 8, large = 9, huge = 12} --Snap Shot\r\nvarCostS[281] = {small = 11, medium = 8, large = 7, huge = 7} --Veteran turret gunner\r\nvarCostS[388] = {small = 6, medium = 5, large = 4, huge = 3} -- Agile gunner\r\nvarCostS[689] = {small = 8, medium = 7, large = 6, huge = 3} -- Suppressive gunner\r\n\r\n-- List and cost of variable cost upgrades based on agility value\r\nvarCostA={}\r\nvarCostA[282] = {[0] = 3,[1] = 4,[2] = 5,[3] = 8} --R2 Astromech\r\nvarCostA[297] = {[0] = 2,[1] = 3,[2] = 5,[3] = 7} --Hull Upgrade\r\nvarCostA[299] = {[0] = 3,[1] = 4,[2] = 6,[3] = 8} --Shield Upgrade\r\nvarCostA[301] = {[0] = 3,[1] = 4,[2] = 6,[3] = 8} --Stealth Device\r\nvarCostA[324] = {[0] = 4,[1] = 6,[2] = 8,[3] = 10} --R2-D2 (Astromech)\r\nvarCostA[593] = {[0] = 6,[1] = 3,[2] = 1,[3] = 1} --Angled deflectors\r\nvarCostA[471] = {[0] = 1,[1] = 1,[2] = 1,[3] = 2} -- Heroic\r\nvarCostA[860] = {[0] = 4,[1] = 6,[2] = 8,[3] = 10} -- Republc R2-D2\r\n\r\n\r\nvarCostI={}\r\nvarCostI[245]={[0]=2,[1]=4,[2]=6,[3]=8,[4]=10,[5]=12,[6]=14} --Squad Leader\r\nvarCostI[246]={[0]=3,[1]=3,[2]=3,[3]=3,[4]=3,[5]=4,[6]=5} --Swarm Tactics\r\nvarCostI[276]={[0]=2,[1]=3,[2]=4,[3]=5,[4]=6,[5]=7,[6]=8} --Seasoned Navigator\r\nvarCostI[290]={[0]=0,[1]=1,[2]=2,[3]=3,[4]=4,[5]=5,[6]=6} --Inertial Dampeners\r\nvarCostI[463]={[0]=4,[1]=5,[2]=6,[3]=7,[4]=8,[5]=9,[6]=10} -- Primed Thrusters\r\nvarCostI[251]={[0]=4,[1]=4,[2]=4,[3]=8,[4]=16,[5]=24,[6]=32} --Supernatural Reflexes\r\nvarCostI[479]={[0]=2,[1]=3,[2]=4,[3]=5,[4]=6,[5]=7,[6]=8} -- BB8\r\nvarCostI[480]={[0]=0,[1]=1,[2]=2,[3]=3,[4]=4,[5]=5,[6]=6} -- bb astromech\r\nvarCostI[545]={[0]=3,[1]=3,[2]=3,[3]=3,[4]=4,[5]=6,[6]=8} -- Battle Meditation\r\nvarCostI[548]={[0]=4,[1]=4,[2]=8,[3]=12,[4]=16,[5]=20,[6]=24} -- Delta-7B\r\nvarCostI[549]={[0]=0,[1]=0,[2]=1,[3]=2,[4]=3,[5]=4,[6]=5} -- Calibrated laser Targeting\r\nvarCostI[614]={[0]=3,[1]=3,[2]=3,[3]=4,[4]=7,[5]=10,[6]=13} -- Precognitive Reflexes\r\nvarCostI[610]={[0]=21,[1]=21,[2]=21,[3]=21,[4]=21,[5]=24,[6]=28} -- Ensnare\r\nvarCostI[577]={[0]=2,[1]=2,[2]=2,[3]=2,[4]=2,[5]=4,[6]=6} -- Passive Sensors\r\nvarCostI[721]={[0]=0,[1]=1,[2]=2,[3]=3,[4]=4,[5]=5,[6]=6} --Overdrive Thruster\r\nvarCostI[294]={[0]=4,[1]=4,[2]=4,[3]=4,[4]=5,[5]=6,[6]=7} --Afterburners\r\n\r\n-- FFG uses full name on factions, so a conversion is needed\r\nffgFaction = {}\r\nffgFaction[0] = 'Dum'\r\nffgFaction[1] = 'Reb'\r\nffgFaction[2] = 'Imp'\r\nffgFaction[3] = 'Scu'\r\nffgFaction[4] = 'Res'\r\nffgFaction[5] = 'For'\r\nffgFaction[6] = 'Rep'\r\nffgFaction[7] = 'Cis'\r\n\r\ncardBackDB = {}\r\ncardBackDB.Dum = ''\r\ncardBackDB.Reb = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Rebelback.png'\r\ncardBackDB.Imp = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Empireback.png'\r\ncardBackDB.Scu = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Scumback.png'\r\ncardBackDB.Res = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Resback.jpg'\r\ncardBackDB.For = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/FOback.png'\r\ncardBackDB.Rep = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/REPback.jpg'\r\ncardBackDB.Cis = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/CISback.jpg'\r\ncardBackDB['1'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Eptupgrade.png' -- EPT\r\ncardBackDB['2'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/systemupg.png' -- Sensor\r\ncardBackDB['3'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Cannonup.png' -- Cannon\r\ncardBackDB['3b'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Cannonup.png' -- Dule Cannon NEEDS ART\r\ncardBackDB['4'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/turrups.png' -- Turret\r\ncardBackDB['5'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/torpups.png' -- Torpedo\r\ncardBackDB['6'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/missileupg.png' -- Missile\r\ncardBackDB['6b'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/DualMissile.png' -- Dual Missile\r\ncardBackDB['7'] = '' --\r\ncardBackDB['8'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Crew.png' -- Crew\r\ncardBackDB['8b'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/DualCrew.png' -- Dual Crew\r\ncardBackDB['9'] = ''\r\ncardBackDB['10'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Astro.png' --Astromech\r\ncardBackDB['11'] = ''\r\ncardBackDB['12'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Device.png' -- Device\r\ncardBackDB['12b'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/DualDevice.png' -- DualDevice\r\ncardBackDB['13'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Illicit.png' -- Ilicit\r\ncardBackDB['14'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Modification.png' -- Modification\r\ncardBackDB['15'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Title.png' -- Title\r\ncardBackDB['16'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Gunner.png' -- Gunner\r\ncardBackDB['17'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Force.png' -- Force Power\r\ncardBackDB['18'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Config.png' -- Configuration\r\ncardBackDB['19'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Tech.jpg' -- Tech\r\ncardBackDB['20'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Relay.jpg' -- Droid (PLACEHOLDER - TO DO)\r\ncardBackDB['21'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic.png' -- Command\r\ncardBackDB['22'] = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Cargo.png' -- Cargo\r\ncardBackDB['23'] = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Staff.png' -- Team\r\ncardBackDB.mc = 'http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/ModConfig.jpg' -- mod and config\r\n\r\n\r\nmasterShipDB = require(\"TTS_xwing/src/ShipDb\")\r\nmasterPilotDB = require(\"TTS_xwing/src/PilotDb\")\r\nmasterUpgradesDB = require(\"TTS_xwing/src/UpgradeDb\")\r\n\r\n\r\nffgSpecial = {}\r\nffgSpecial[315]= 'Crew'--r2d2crew\r\nffgSpecial[324]= 'Astr'--r2d2astro\r\nffgSpecial[321]= 'Rebel Gunner'--hanReb\r\nffgSpecial[389]= 'Scum Gunner'--hanScu\r\nffgSpecial[474]= 'Resist. Crew'--Han Res\r\nffgSpecial[311]= 'Rebel Crew'--landoReb\r\nffgSpecial[385]= 'Scum Crew' --landoScu\r\nffgSpecial[306]= 'Rebel Crew' --chewReb\r\nffgSpecial[382]= 'Scum Crew' --chewScu\r\nffgSpecial[473]= 'Resist. Crew' --chewRes\r\nffgSpecial[472]= 'Resist. Crew'--3po Res\r\nffgSpecial[304]= 'Rebel Crew' --3po Reb\r\n\r\ndualUpgradeList = {}\r\ndualUpgradeList[538] = 556 -- Chancellor Palp / Darth Sidious\r\ndualUpgradeList[332] = 331 -- Pivot wing\r\ndualUpgradeList[334] = 333 -- Servomotor S-foils\r\ndualUpgradeList[384] = 383 -- L3-37\r\ndualUpgradeList[487] = 486 -- Integrated S-foils\r\ndualUpgradeList[535] = 555 -- Grappling Struts\r\ndualUpgradeList[595] = 594 -- Landing Struts\r\ndualUpgradeList[646] = 645 -- Stabilized S-Foils\r\ndualUpgradeList[652] = 653 -- Proud tradition\r\ndualUpgradeList[683] = 684 -- Commander Malarus\r\ndualUpgradeList[685] = 686 -- Agent terex\r\ndualUpgradeList[691] = 692 -- Repulsorlift Stabilizers\r\ndualUpgradeList[617] = 618 -- C1-10P\r\n\r\n\r\n\r\n\r\n-- on load initiate the process\r\nfunction onLoad()\r\n    initiate()\r\nend\r\n\r\n-- Initial function: Creates a start button for each mode: FFG Spawner (paste the link of the squad in the FFG web site and spawn), TTS Spawner (write or paste a snippet and spawn) and List Builder (offers options to build a squadron on the fly)\r\nfunction initiate()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    self.createButton({click_function = 'ffgStart', function_owner = self, label = 'FFG Spawner', position = {-0.45,0.45,-0.1}, width = 1600, height = 380, font_size = 250, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'xwsStart', function_owner = self, label = 'XWS Spawner', position = {0.5,0.45,-0.1}, width = 1600, height = 380, font_size = 250, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'singleSpawner', function_owner = self, label = 'Single Spawner', position = {-0.45,0.45,0.2}, width = 1600, height = 380, font_size = 200, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'spawnerStart', function_owner = self, label = 'TTS Spawner', position = {0.5,0.45,0.2}, width = 1600, height = 380, font_size = 250, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'builderStart', function_owner = self, label = 'Builder', position = {0.0,0.45,0.5}, width = 1600, height = 380, font_size = 250, scale = {0.25,0.25,0.25}})\r\nend\r\n\r\n\r\n--Spawn from XWS JSON\r\nfunction xwsStart()\r\n    self.clearButtons()\r\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Paste XWS', position = {0,0.45,-0.3}, width = 1800, height = 520, font_size = 240,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'xwsClick', function_owner = self, label = 'Spawn Ships', position = {-0.3,0.45,0.6}, width = 1800, height = 520, font_size = 240,  scale = {0.15,0.15,0.15}})\r\n    self.createButton({click_function = 'xwsSave', function_owner = self, label = 'Spawn as Disk', position = {0.3,0.45,0.6}, width = 1800, height = 520, font_size = 240,  scale = {0.15,0.15,0.15}})\r\n    self.createInput({input_function = 'xwsAction', function_owner = self, position = {0,0.45,0.2}, width = 1000, height = 500, font_size = 50, scale = {0.5,0.5,0.5}})\r\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Back', position = {-0.5,0.45,0.8}, width = 1000, height = 300, font_size = 150,  scale = {0.21,0.21,0.21}})\r\nend\r\n\r\n--XWS spawner input field\r\nfunction xwsAction(obj, playerColor, value, editing)\r\n    if not editing then\r\n        lista = value\r\n    else\r\n        nl_index = string.find(value, '\\n')\r\n        if nl_index != nil then\r\n            lista = string.sub(value, 1, nl_index - 1)\r\n            xwsLoad(playerColor)\r\n        end\r\n    end\r\nend\r\n\r\n--XWS spawner button\r\nfunction xwsClick(obj, playerColor, alt_click)\r\n    savingList = false\r\n    xwsLoad(playerColor)\r\nend\r\n\r\n--XWS spawner disk button\r\nfunction xwsSave(obj, playerColor, alt_click)\r\n    savingList = true\r\n    xwsLoad(playerColor)\r\nend\r\n\r\n--Load list and ffg <-> xws map\r\nXWS_TO_FFG = nil\r\nfunction xwsLoad(playerColor)\r\n    if lista ~= nil then\r\n        local list = JSON.decode(lista)\r\n\r\n        -- Load ffg <-> xws map if it hasn't been loaded yet\r\n        if XWS_TO_FFG == nil then\r\n            WebRequest.get('https://raw.githubusercontent.com/guidokessels/xwing-data2/master/data/ffg-xws.json', function(request)\r\n                if request.is_error then\r\n                    print(\"Failed to load ffg-xws.json which is required to map XWS ids to FFG ids.\")\r\n                    print(\"Cannot spawn squad... Please try again later\");\r\n                elseif request.is_done then\r\n                    local ffgToXws = JSON.decode(request.text)\r\n                    XWS_TO_FFG = {}\r\n                    XWS_TO_FFG.pilots = table_invert(ffgToXws.pilots)\r\n                    XWS_TO_FFG.upgrades = table_invert(ffgToXws.upgrades)\r\n                    XWS_TO_FFG.factions = table_invert(ffgToXws.factions)\r\n                    xwsSpawn(list, XWS_TO_FFG, playerColor)\r\n                end\r\n            end)\r\n        else\r\n            xwsSpawn(list, XWS_TO_FFG, playerColor)\r\n        end\r\n    else\r\n        print('Please paste XWS')\r\n    end\r\nend\r\n\r\nfunction table_invert(t)\r\n    local s = {}\r\n    for k,v in pairs (t) do\r\n        s[v] = k\r\n    end\r\n    return s\r\nend\r\n\r\nfunction findByXws(table, xws_id)\r\n  for i, record in pairs(table) do\r\n    if record.XWS and record.XWS == xws_id then\r\n      return i\r\n    end\r\n  end\r\n  return nil\r\nend\r\n\r\n--Takes the XWS JSON and the xws <-> FFG ID map and constructs a parts list to pass to idSpawner\r\nfunction xwsSpawn(list, XWS_TO_FFG, playerColor)\r\n    if list then\r\n        local parts = {}\r\n        parts.Pilots = {}\r\n        parts.Upgrades = {}\r\n        parts.spawnCard = self\r\n        parts.Faction = tonumber(XWS_TO_FFG.factions[list.faction])\r\n        parts.Obstacles = {}\r\n\r\n        for k,v in pairs (list.pilots) do\r\n            local pilotId = findByXws(masterPilotDB, v.id) or XWS_TO_FFG.pilots[v.id]\r\n            if pilotId == nil then\r\n              printToAll(\"Unable to find pilot with xws value: \" .. v.id, {1,0,0})\r\n              break;\r\n            end\r\n            parts.Pilots[k] = tonumber(pilotId)\r\n            parts.Upgrades[k] = {}\r\n\r\n            if v.upgrades then\r\n                local upgradeCount = 1\r\n                for slot,upgrades in pairs (v.upgrades) do\r\n                    for i,upgrade in pairs (upgrades) do\r\n                        upgradeId = XWS_TO_FFG.upgrades[upgrade]\r\n                        local upgradeId = findByXws(masterUpgradesDB, upgrade) or XWS_TO_FFG.upgrades[upgrade]\r\n                        if upgradeId == nil then\r\n                          printToAll(\"Unable to find upgrade with xws value: \" .. v.id, {1,0,0})\r\n                          break;\r\n                        end\r\n                        parts.Upgrades[k][upgradeCount] = tonumber(upgradeId)\r\n                        upgradeCount = upgradeCount + 1\r\n                    end\r\n                end\r\n            end\r\n        end\r\n\r\n        if list.obstacles then\r\n            for i, obstacle in ipairs(list.obstacles) do\r\n                if obstacleNames[obstacle] then\r\n                    table.insert(parts.Obstacles, obstacleNames[obstacle])\r\n                else\r\n                    printToAll(\"Unable to find obstacle: \" .. obstacle .. \" please check correct spelling\", {1,0,0})\r\n                end\r\n            end\r\n        end\r\n\r\n        idSpawner(parts)\r\n\r\n        local player = Player[playerColor]\r\n        local message  = player.steam_name .. \" spawned a list\"\r\n\r\n        if list.name then\r\n            message = message .. \" \\\"\" .. list.name .. \"\\\"\"\r\n        end\r\n\r\n        if list.points then\r\n            message = message .. \". The list reports \" .. list.points .. \" points\"\r\n        end\r\n\r\n        print(message .. \".\");\r\n\r\n        FFGinitiate()\r\n    else\r\n        print('Please paste XWS')\r\n    end\r\nend\r\n\r\n\r\n--Spawn from FFG squad shareable link. User must paste his link on the input field, load the squad, then press the spawn squad button. Maybe streamline the process and do it with one button?\r\nfunction ffgStart()\r\n    self.clearButtons()\r\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Paste squad link', position = {0,0.45,-0.3}, width = 1800, height = 520, font_size = 240,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'ffgLoad', function_owner = self, label = 'Load Squad', position = {0,0.45,0.6}, width = 1800, height = 520, font_size = 240,  scale = {0.15,0.15,0.15}})\r\n    self.createInput({input_function = 'action2', function_owner = self, position = {0,0.45,0.2}, width = 1000, height = 500, font_size = 50, scale = {0.5,0.5,0.5}})\r\n    self.createButton({click_function = 'FFGinitiate', function_owner = self, label = 'Back', position = {-0.5,0.45,0.8}, width = 1000, height = 300, font_size = 150,  scale = {0.21,0.21,0.21}})\r\n    --self.createButton({click_function = 'printInput', function_owner = self, label = 'Print Input', position = {0,0.6,0.5}, width = 1000, height = 200, font_size = 150, tooltip = 'Print'})\r\n    --self.createButton({click_function = 'parseList', function_owner = self, label = 'Parse', position = {0,0,3.2}, width = 1000, height = 200, font_size = 150, tooltip = 'Parse'})\r\nend\r\n\r\nfunction DummyFFG()\r\nend\r\n\r\n--prepares the link and call the json extractor\r\nfunction FFGinitiate()\r\n    if lista ~= nil then\r\n        lista =  nil\r\n    end\r\n    if partList ~= nil then\r\n        partList = nil\r\n    end\r\n    initiate()\r\nend\r\n\r\n--takes a link and converts it for the API link\r\nfunction ffgLoad(obj, playerColor, alt_click)\r\n    if lista ~= nil then\r\n        --print(\"lista:\" .. lista)\r\n        requesturl = string.gsub(lista,'https://squadbuilder%.fantasyflightgames%.com/.*/', 'http://squad2xws.herokuapp.com/translate/')\r\n        --print(\"Request:\" .. requesturl)\r\n        ffgLoad2(requesturl, playerColor)\r\n    else\r\n        print ('Please paste a link')\r\n    end\r\nend\r\n\r\nfunction ffgClearName(string)  --Clars FFG name from all of their shenannigans\r\n    name = string.gsub(string, '•', '')\r\n    name = string.gsub(name, '’', '')\r\n    name = string.gsub(name, '”', '\"')\r\n    name = string.gsub(name, '��', '\"')\r\n    name = string.gsub(name, '<italic>', '') --So stupid....\r\n    name = string.gsub(name, '</italic>', '')\r\n    name = string.gsub(name, ' %(Open%)', '')\r\n    newName = string.gsub(name, ' %(Closed%)', '')\r\n    return newName\r\nend\r\n\r\n--parses and organize the extracted json table and calls the spawner (TO-DO)\r\nfunction ffgSpawn()\r\n    if JSONlist ~=nil then\r\n        partList = {}\r\n        partList.Pilots = {}\r\n        partList.Upgrades = {}\r\n        partList.nameCounts = {}\r\n        partList.spawnCard = self\r\n        partList.Faction = JSONlist.faction.id\r\n        for k,v in pairs (JSONlist.deck) do\r\n\r\n            --[[for key, value in pairs(v[\"pilot_card\"]) do\r\n                print(key .. \" \" .. tostring(value))\r\n            end]]\r\n\r\n            partList.Pilots[k] = v.pilot_card.id\r\n            --[[\r\n            print(\"Pilot Name: \"..v[\"pilot_card\"].name)\r\n            print(\"Pilot ID: \"..v.pilot_card.id)\r\n            print(\"Pilot Cost: \"..v.pilot_card.cost)\r\n            print(\"Ship Type: \"..v.pilot_card.ship_type)\r\n            print()--]]\r\n            partList.Upgrades[k] ={}\r\n            for key,value in pairs (v.slots) do\r\n                partList.Upgrades[k][key] = value.id\r\n                --[[for i, uval in pairs(value) do\r\n                    print(\"upgrade[\" .. tostring(i) .. \"]=\" .. tostring(uval))\r\n                end]]\r\n                --[[\r\n                print(\"Upgrade Name: \"..value.name)\r\n                print(\"Upgrade Id: \"..value.id)\r\n                print(\"Upgrade Cost: \"..value.cost)\r\n                print()\r\n                --]]\r\n\r\n            end\r\n        end\r\n        idSpawner(partList)\r\n        partList = nil\r\n        JSONlist = nil\r\n        lista = nil\r\n        FFGinitiate()\r\n    else\r\n        print('Please paste a link')\r\n    end\r\n\r\nend\r\n\r\n--Extracts the json table from FFG site, reporting success or failure\r\nfunction ffgLoad2(squadId, playerColor)\r\n    squadJson = squadId\r\n    WebRequest.get(squadJson, function(request)\r\n        if request.is_error then\r\n            error(\"Failed to load squad JSON.\")\r\n        elseif request.is_done then\r\n            --print(\"List:\" .. request.text)\r\n            lista = request.text\r\n            --list = JSON.decode(request.text)\r\n            --JSONlist = JSON.decode(request.text)\r\n            --print(\"You've loaded a squad: \"..JSONlist.name)\r\n            --print()\r\n            --ffgSpawn()\r\n            xwsLoad(playerColor)\r\n        end\r\n    end)\r\nend\r\n\r\n--FFG spawner input field\r\nfunction action2(obj, playerColor, value, editing)\r\n    if not editing then\r\n        lista = value\r\n    else\r\n        nl_index = string.find(value, '\\n')\r\n        if nl_index != nil then\r\n            lista = string.sub(value, 1,nl_index-1)\r\n            ffgLoad(playerColor)\r\n        end\r\n    end\r\nend\r\n\r\n--TTS spawner input field\r\nfunction action(obj, playerColor, value, editing)\r\n    if not editing then\r\n        lista = value\r\n    else\r\n        nl_index = string.find(value, '\\n')\r\n        if nl_index != nil then\r\n            lista = string.sub(value, 1,nl_index-1)\r\n            validCheck()\r\n        end\r\n    end\r\nend\r\n\r\n-- Single Spawner input field\r\nfunction action3(obj, playerColor, value, editing)\r\n    if not editing then\r\n        single = value\r\n    else\r\n        nl_index = string.find(value, '\\n')\r\n        if nl_index != nil then\r\n            single = string.sub(value, 1,nl_index-1)\r\n            singleSearch()\r\n        end\r\n    end\r\nend\r\n\r\n-- Single Spawner: Receives a string, then goes across all card names and spawns that card with its appropriate components.\r\nfunction singleSpawner()\r\n    self.clearInputs()\r\n    self.clearButtons()\r\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Type a card name', position = {0,0.45,-0.37}, width = 1800, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'singleSearch', function_owner = self, label = 'Search', position = {0.45,0.45,-0.17}, width = 1200, height = 320, font_size = 200,  scale = {0.15,0.15,0.15}})\r\n    self.createInput({input_function = 'action3', function_owner = self, position = {-0.3,0.45,-0.17}, width = 1800, height = 200, font_size = 160, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Back', position = {0.7,0.45,0.8}, width = 1000, height = 300, font_size = 150,  scale = {0.21,0.21,0.21}})\r\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Pilots', position = {-0.45,0.45,-0.025}, width = 1000, height = 280, font_size = 200,  scale = {0.20,0.20,0.20}})\r\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Upgrades', position = {0.45,0.45,-0.025}, width = 1000, height = 280, font_size = 200,  scale = {0.20,0.20,0.20}})\r\nend\r\n\r\nfunction singleSearch()\r\n    savingList = false\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    singleSpawner()\r\n    butPilCount = 0\r\n    butPilData = {}\r\n    butUpCount = 0\r\n    butUpData = {}\r\n    if single ~= nil then\r\n        for k, v in pairs(masterPilotDB) do\r\n            if string.find(string.lower(v.name), string.lower(single), 1, true) then\r\n                if butPilCount < 7 then\r\n                    butPilCount = butPilCount + 1\r\n                    local title = ''\r\n                    if v.title ~= nil then\r\n                        title = ' - ' .. v.title\r\n                    end\r\n                    self.createButton({click_function = 'singlePil'..butPilCount, function_owner = self, label = v.name..title..' ('..masterShipDB[v.ship_type].name..')', position = {-0.45,0.45,0+butPilCount*0.09}, width = 2800, height = 230, font_size = 120,  scale = {0.15,0.15,0.15}})\r\n                    butPilData[butPilCount] = k\r\n                end\r\n            end\r\n        end\r\n        for k, v in pairs(masterUpgradesDB) do\r\n            if string.find(string.lower(v.name), string.lower(single), 1, true) then\r\n                if butUpCount < 7 then\r\n                    butUpCount = butUpCount+1\r\n\r\n                    local title = ''\r\n                    if v.title ~= nil then\r\n                        title = ' - ' .. v.title\r\n                    end\r\n                    local upName = v.name .. title\r\n                    if ffgSpecial[k] ~= nil then\r\n                        upName = upName.. title .. ' ('..ffgSpecial[k]..')'\r\n                    end\r\n\r\n                    butUpData[butUpCount] = k\r\n                    self.createButton({click_function = 'singleUp'..butUpCount, function_owner = self, label = upName, position = {0.45,0.45,0+butUpCount*0.09}, width = 2800, height = 230, font_size = 120,  scale = {0.15,0.15,0.15}})\r\n                end\r\n            end\r\n        end\r\n    else\r\n        print('Please type a card name')\r\n    end\r\n    single = nil\r\nend\r\n\r\nfunction singlePil1()\r\n    local pilotPick = butPilData[1]\r\n    singlePilotSpawn(pilotPick)\r\nend\r\nfunction singlePil2()\r\n    local pilotPick = butPilData[2]\r\n    singlePilotSpawn(pilotPick)\r\nend\r\nfunction singlePil3()\r\n    local pilotPick = butPilData[3]\r\n    singlePilotSpawn(pilotPick)\r\nend\r\nfunction singlePil4()\r\n    local pilotPick = butPilData[4]\r\n    singlePilotSpawn(pilotPick)\r\nend\r\nfunction singlePil5()\r\n    local pilotPick = butPilData[5]\r\n    singlePilotSpawn(pilotPick)\r\nend\r\nfunction singlePil6()\r\n    local pilotPick = butPilData[6]\r\n    singlePilotSpawn(pilotPick)\r\nend\r\nfunction singlePil7()\r\n    local pilotPick = butPilData[7]\r\n    singlePilotSpawn(pilotPick)\r\nend\r\n\r\nfunction singleUp1()\r\n    local upPick = butUpData[1]\r\n    singleUpSpawn(upPick)\r\nend\r\nfunction singleUp2()\r\n    local upPick = butUpData[2]\r\n    singleUpSpawn(upPick)\r\nend\r\nfunction singleUp3()\r\n    local upPick = butUpData[3]\r\n    singleUpSpawn(upPick)\r\nend\r\nfunction singleUp4()\r\n    local upPick = butUpData[4]\r\n    singleUpSpawn(upPick)\r\nend\r\nfunction singleUp5()\r\n    local upPick = butUpData[5]\r\n    singleUpSpawn(upPick)\r\nend\r\nfunction singleUp6()\r\n    local upPick = butUpData[6]\r\n    singleUpSpawn(upPick)\r\nend\r\nfunction singleUp7()\r\n    local upPick = butUpData[7]\r\n    singleUpSpawn(upPick)\r\nend\r\n\r\n\r\nfunction singlePilotSpawn(Id)\r\n    partList={}\r\n    partList.spawnCard = self\r\n    partList.Pilots = {}\r\n    partList.Pilots[1] = Id\r\n    partList.Upgrades = {}\r\n    partList.Upgrades[1] = {}\r\n    partList.Faction = masterPilotDB[Id].Faction\r\n\r\n    idSpawner(partList)\r\n    singleSpawner()\r\nend\r\n\r\nfunction singleUpSpawn(upId)\r\n    partList={}\r\n    partList.spawnCard = self\r\n    partList.Pilots = {}\r\n    partList.Pilots[1] = 0\r\n    partList.Upgrades = {}\r\n    partList.Upgrades[1] = {}\r\n    partList.Upgrades[1][1] = upId\r\n    partList.Faction = ffgFaction[0]\r\n    idSpawner(partList)\r\n    singleSpawner()\r\nend\r\n\r\n--[[\r\n    id table should look like this:\r\n    idTable.Pilots = {[1]=id1, [2]=id2}\r\n    idTable.Upgrades = {[1] = {[1]=upId1, [2]=upId2},\r\n                        [2]={[1]=upId3, [2]=upId3}}\r\n    idTable.Faction = masterPilotDB[id1].Faction\r\n]]\r\n\r\ndialSkin={\r\n  [1]='http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/skin/1/Rebel.png',\r\n  [2]='http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/skin/1/Empire.png',\r\n  [3]='http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/skin/1/Scum.png',\r\n  [4]='http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/skin/1/Resistance.png',\r\n  [5]='http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/skin/1/FO.png',\r\n  [6]='http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/skin/1/Republic.png',\r\n  [7]='http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/skin/1/CIS.png',}\r\n\r\nfunction calculateShipIndicators(idTable)\r\n  shipTable = {}\r\n  for k,v in pairs (idTable.Pilots) do\r\n      local ship = masterPilotDB[v].ship_type\r\n      if shipTable[ship] == nil then\r\n        shipTable[ship] = {k}\r\n      else\r\n        table.insert(shipTable[ship], k)\r\n      end\r\n    end\r\n    pilotIndicators = {}\r\n    local i = 1\r\n    for ship, pilots in pairs(shipTable) do\r\n      if #pilots > 1 then\r\n        for k, pilot in pairs(pilots) do\r\n          pilotIndicators[pilot] = i\r\n          i = i+1\r\n        end\r\n      else\r\n        pilotIndicators[pilots[1]] = 0\r\n      end\r\n    end\r\n    return pilotIndicators\r\nend\r\n\r\nfunction idSpawner(idTable)\r\n    spawnedPilotList = {}\r\n    fList={}\r\n    fList.SqdExecOptions = {}\r\n    fList.Pilots = {}\r\n    fList.Upgrades = {}\r\n    fList.Remotes = {}\r\n    fList.Obstacles = idTable.Obstacles\r\n    fList.Customization = {}\r\n    if idTable.Faction == nil then\r\n        fList.Faction = masterPilotDB[idTable.Pilots[1]].Faction\r\n    else\r\n        fList.Faction = idTable.Faction\r\n    end\r\n    fList.factionDial=dialSkin[fList.Faction]\r\n    fList.sqdAction = {}\r\n    pilotIndicators = calculateShipIndicators(idTable)\r\n    for k,v in pairs (idTable.Pilots) do\r\n        local pilotName = masterPilotDB[v].name\r\n        spawnedPilotList[pilotName] = spawnedPilotList[pilotName] or 0\r\n        spawnedPilotList[pilotName] = spawnedPilotList[pilotName] + 1\r\n        if spawnedPilotList[pilotName] > 1 then\r\n            pilotName = pilotName .. ' ' .. tostring(spawnedPilotList[pilotName])\r\n        end\r\n        fList.Pilots[k] ={}\r\n        fList.Pilots[k].id = v\r\n        fList.Pilots[k].name = pilotName\r\n        local cost = masterPilotDB[v].cost\r\n        fList.Pilots[k].cost = cost\r\n        fList.Customization[pilotName] = masterPilotDB[v].Customization or {}\r\n        fList.Customization[pilotName].tint = tintColors[pilotIndicators[k]]\r\n        if (masterPilotDB[v].tintFriendly ~= nil) and (pilotIndicators[k] > 0) then\r\n            fList.Customization[pilotName].modeltint = tintColors[pilotIndicators[k]]\r\n            fList.Customization[pilotName].texture = masterPilotDB[v].tintFriendly.texture\r\n            fList.Customization[pilotName].model = masterPilotDB[v].tintFriendly.mesh\r\n        end\r\n        --fList.Pilots[k].tint = tintColors[pilotIndicators[k]]\r\n        --fList.Pilots[k].card = masterPilotDB[v].card\r\n        fList.Pilots[k].card = \"https://raw.githubusercontent.com/CrazyVulcan/x-wing2.0-project-goldenrod/main/src/images/En/pilots/\"..masterPilotDB[v].XWS..\".png\"\r\n        fList.Pilots[k].cardB = cardBackDB[ffgFaction[fList.Faction]]\r\n        local Ship = masterPilotDB[v].ship_type\r\n        fList.Pilots[k].Ship = Ship\r\n\r\n        fList.Pilots[k].Size = masterShipDB[Ship].size\r\n        fList.Pilots[k].Shield = masterShipDB[Ship].Shield\r\n        fList.Pilots[k].Energy = masterShipDB[Ship].Energy\r\n        fList.Pilots[k].Hull = masterShipDB[Ship].Hull\r\n        fList.Pilots[k].list = pilotName..' - '..masterShipDB[Ship].name ..' (' .. cost .. ')\\n'\r\n        fList.Pilots[k].mesh = masterShipDB[Ship].mesh\r\n        fList.Pilots[k].texture = masterPilotDB[v].texture\r\n        fList.Pilots[k].bombD = 's1'\r\n        fList.Pilots[k].Docking = masterShipDB[Ship].Docking\r\n        fList.Pilots[k].Data = {}\r\n        fList.Pilots[k].Data.shipId = Ship\r\n        fList.Pilots[k].Data.initiative = masterPilotDB[v].init\r\n        fList.Pilots[k].Data.moveSet = masterShipDB[Ship].moveSet\r\n        fList.Pilots[k].Data.Config = masterShipDB[Ship].Config\r\n        fList.Pilots[k].Data.mountingPoints = masterShipDB[Ship].mountingPoints or {main = {0,0}}\r\n        fList.Pilots[k].Data.arcs = masterShipDB[Ship].arcs\r\n        fList.Pilots[k].Data.actSet = masterPilotDB[v].actSet\r\n        fList.Pilots[k].Data.executeOptions = masterPilotDB[v].executeOptions or {}\r\n        fList.Pilots[k].Data.movethrough = masterPilotDB[v].movethrough or false\r\n\r\n        if masterPilotDB[v].sqdExecuteOptions ~= nil then\r\n            table.insert(fList.SqdExecOptions, masterPilotDB[v].sqdExecuteOptionss )\r\n        end\r\n\r\n        fList.Pilots[k].Data.Faction = fList.Faction\r\n        fList.Pilots[k].Data.Size = fList.Pilots[k].Size\r\n        if v == 150 then  -- Emon Azzameen special drops\r\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':s3:tr3:te3'\r\n        elseif v == 205 then  -- Sol Sixxa special drops\r\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':te1:be1:br1:tr1'\r\n        elseif Ship == 19 then -- TIE Bomber special drops\r\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':be1:br1'\r\n        elseif v == 161 then -- Constable Zuvio\r\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':s1r'\r\n        elseif v == 565 then -- Bombardment Drone\r\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':s1r'\r\n        end\r\n\r\n        id = v\r\n        if masterPilotDB[id].Condition ~= nil then\r\n            fList.Pilots[k].Condition = masterPilotDB[id].Condition\r\n        end\r\n        for K,V in pairs(masterPilotDB[id].addSqdAction or {}) do\r\n            table.insert(fList.sqdAction,V)\r\n        end\r\n\r\n        fList.Pilots[k].Charge = (masterShipDB[Ship].Charge or 0) + (masterPilotDB[id].Charge or 0)\r\n        fList.Pilots[k].Force = masterPilotDB[id].Force or 0\r\n        fList.Upgrades[k] = {}\r\n        local skilled_bombardier = false\r\n        for key,value in pairs (idTable.Upgrades[k]) do\r\n          --print(\"Upg[\" .. tostring(k) .. \"] = \".. tostring(value))\r\n            value = dualUpgradeList[value] or value\r\n            local name = masterUpgradesDB[value].name\r\n            local upSlot = masterUpgradesDB[value].slot\r\n            fList.Upgrades[k][key] = {}\r\n            fList.Upgrades[k][key].name = name\r\n            local cost = masterUpgradesDB[value].cost\r\n            if cost == 'a' then\r\n                local agi = masterShipDB[Ship].agi\r\n                cost = varCostA[value][agi]\r\n            elseif cost == 'i' then\r\n                local init = masterPilotDB[v].init\r\n                cost = varCostI[value][init]\r\n            elseif cost == 's' then\r\n                local shipSize = masterShipDB[Ship].size\r\n                cost = varCostS[value][shipSize]\r\n            end\r\n            fList.Pilots[k].list = fList.Pilots[k].list .. '   '..name..' ('..cost..')\\n'\r\n            fList.Pilots[k].cost = fList.Pilots[k].cost + cost\r\n\r\n            --fList.Upgrades[k][key].card = masterUpgradesDB[value].card\r\n            fList.Upgrades[k][key].card = \"https://raw.githubusercontent.com/CrazyVulcan/x-wing2.0-project-goldenrod/main/src/images/En/upgrades/\"..masterUpgradesDB[value].XWS..\".png\"\r\n            if masterUpgradesDB[value].dual == true then\r\n              fList.Upgrades[k][key].cardB = \"https://raw.githubusercontent.com/CrazyVulcan/x-wing2.0-project-goldenrod/main/src/images/En/upgrades/\"..masterUpgradesDB[value].XWS..\"-sideb.png\"\r\n            elseif masterUpgradesDB[value].cardB ==  nil then\r\n              fList.Upgrades[k][key].cardB = cardBackDB[tostring(upSlot)]\r\n            else\r\n              fList.Upgrades[k][key].cardB = masterUpgradesDB[value].cardB\r\n            end\r\n            for K,V in pairs(masterUpgradesDB[value].addAction or {}) do --Upgrades that adds an action to a ship\r\n                table.insert(fList.Pilots[k].Data.actSet,V)\r\n            end\r\n            for K,V in pairs(masterUpgradesDB[value].addSqdAction or {}) do --upgrades that adds an action to the whole squad, sets up a list of actions that will be added later\r\n                table.insert(fList.sqdAction,V)\r\n            end\r\n\r\n            if masterUpgradesDB[value].Charge ~= nil then\r\n                fList.Upgrades[k][key].Charge = masterUpgradesDB[value].Charge\r\n            else\r\n                fList.Upgrades[k][key].Charge = 0\r\n            end\r\n            if masterUpgradesDB[value].arcs then\r\n                if masterUpgradesDB[value].arcs.fixed then\r\n                  fList.Pilots[k].Data.arcs.fixed = fList.Pilots[k].Data.arcs.fixed or {name = 'primary', type = {}}\r\n                  for new_arc_idx, new_arc in pairs(masterUpgradesDB[value].arcs.fixed.type) do\r\n                    local found = false\r\n                    for arc_idx, arc in pairs(fList.Pilots[k].Data.arcs.fixed.type) do\r\n                      -- check if new arc allready in arc list\r\n                      if arc == new_arc then\r\n                        found = true\r\n                      end\r\n                    end\r\n                    if not found then\r\n                      -- new arc, insert into list\r\n                      table.insert(fList.Pilots[k].Data.arcs.fixed.type, new_arc)\r\n                    end\r\n                  end\r\n                end\r\n                if masterUpgradesDB[value].arcs.turret then\r\n                  local mounting_point = nil\r\n                  local found = false\r\n                  fList.Pilots[k].Data.arcs.turret = fList.Pilots[k].Data.arcs.turret or {}\r\n                  for mount, pos in pairs(fList.Pilots[k].Data.mountingPoints) do\r\n                    -- Find next available mounting point\r\n                    if not found and not fList.Pilots[k].Data.arcs.turret[mount] then\r\n                      --print(\"Found mounting point \" .. mount .. \" for \" .. masterUpgradesDB[value].arcs.turret.name )\r\n                      mounting_point = mount\r\n                      found = true\r\n                    end\r\n                  end\r\n                  if found then\r\n                    -- Add the turret to the available mounting point\r\n                    fList.Pilots[k].Data.arcs.turret[mounting_point] = masterUpgradesDB[value].arcs.turret\r\n                  end\r\n                end\r\n            end\r\n            if masterUpgradesDB[value].Force ~= nil then\r\n                fList.Pilots[k].Force = fList.Pilots[k].Force + masterUpgradesDB[value].Force\r\n            end\r\n            if masterUpgradesDB[value].shd ~= nil then\r\n                fList.Pilots[k].Shield = fList.Pilots[k].Shield + masterUpgradesDB[value].shd\r\n            end\r\n            if masterUpgradesDB[value].Energy ~= nil then\r\n                fList.Pilots[k].Energy = fList.Pilots[k].Energy + masterUpgradesDB[value].Energy\r\n            end\r\n            if masterUpgradesDB[value].Hull ~= nil then\r\n                fList.Pilots[k].Hull = fList.Pilots[k].Hull + masterUpgradesDB[value].Hull\r\n            end\r\n\r\n            fList.Upgrades[k][key].Condition = masterUpgradesDB[value].Condition or nil\r\n            for i, r in pairs(masterUpgradesDB[value].remotes or {}) do\r\n                table.insert(fList.Remotes, r)\r\n            end\r\n\r\n            if masterUpgradesDB[value].Bomb then\r\n                fList.Pilots[k].Bomb= true\r\n            elseif upSlot == 18 then\r\n                fList.Upgrades[k][key].Config = true\r\n            end\r\n            if masterUpgradesDB[value].Docking ~= nil then\r\n                fList.Pilots[k].Docking = masterUpgradesDB[value].Docking\r\n            end\r\n            fList.Pilots[k].Data.movethrough = masterUpgradesDB[value].movethrough or fList.Pilots[k].Data.movethrough\r\n            if masterUpgradesDB[value].wingleader ~= nil then\r\n                fList.Pilots[k].wingleader = masterUpgradesDB[value].wingleader\r\n            end\r\n            --print(\"Test value:\".. tostring(value) .. \" name:\" .. masterUpgradesDB[value].name .. tostring(masterUpgradesDB[value].executeOptions))\r\n            if masterUpgradesDB[value].executeOptions ~= nil then\r\n                --print(\"Got upgrade execute options\")\r\n                local newexecuteoptions = masterUpgradesDB[value].executeOptions(idTable, idTable.Pilots[k])\r\n                --print(\"Test \" .. masterUpgradesDB[value].name)\r\n                combineExecuteOptions(fList.Pilots[k].Data.executeOptions, newexecuteoptions)\r\n            end\r\n\r\n            if masterUpgradesDB[value].sqdExecuteOptions ~= nil then\r\n                table.insert(fList.SqdExecOptions,masterUpgradesDB[value].sqdExecuteOptions)\r\n            end\r\n\r\n            if value == 279 then  -- Skilled Bombardier special drops\r\n                skilled_bombardier = true\r\n                --fList.Pilots[k].bombD = fList.Pilots[k].bombD ..  ':s2:tr2:te2:be2:br2'\r\n            elseif value == 255 then  -- Trajectory Simulator special drop\r\n                fList.Pilots[k].bombD = fList.Pilots[k].bombD ..  ':s5r'\r\n            elseif value == 864 then -- Thermal Detinators\r\n                if Ship == 19 then -- TIE Bomber special drops\r\n                    fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':be2:s2:br2'\r\n                else\r\n                    fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':s2'\r\n                end\r\n            end\r\n        end\r\n        if skilled_bombardier then\r\n            local bombD = fList.Pilots[k].bombD\r\n            parts = mysplit(bombD,':')\r\n            for k, part in pairs(parts) do\r\n                pre, speedstr, post = string.match(part, \"(%a+)(%d)(%a*)\")\r\n                speed = tonumber(speedstr)\r\n                if speed > 1 then\r\n                    bombD = bombD .. \":\" .. pre .. tostring(speed - 1) ..  post\r\n                end\r\n                if (pre == 's' and (speed < 5)) or (speed < 3) then\r\n                    bombD = bombD .. \":\" .. pre .. tostring(speed + 1) ..  post\r\n                end\r\n            end\r\n            fList.Pilots[k].bombD = bombD\r\n        end\r\n        local threshold = 0\r\n        fList.Pilots[k].list = fList.Pilots[k].list .. '\\nShip Cost = '..cost..'      Half Ship = '..math.ceil(cost/2)..'      Threshold = '.. math.floor( fList.Pilots[k].Shield + fList.Pilots[k].Hull ) ..'\\n'\r\n    end\r\n    for k,v in pairs(fList.sqdAction) do -- adds Squad actions coming from specific upgrades\r\n        for K,V in pairs(fList.Pilots) do\r\n            table.insert(V.Data.actSet,v)\r\n        end\r\n    end\r\n\r\n    for _, sqExOpt in pairs(fList.SqdExecOptions) do\r\n        for k, pilot in pairs(fList.Pilots) do\r\n            local newexecuteoptions = sqExOpt(fList, fList.Pilots[k])\r\n            combineExecuteOptions(pilot.Data.executeOptions, newexecuteoptions)\r\n        end\r\n    end\r\n    fList.listCost = 0\r\n    for k, v in pairs (fList.Pilots) do\r\n        --print(v.list)\r\n        fList.listCost = fList.listCost + v.cost\r\n    end\r\n    --print('Total List Cost = '.. fList.listCost)\r\n    if savingList == true then\r\n        saveToDisk(fList)\r\n    else\r\n        fList.spawnCard = self\r\n        spawnNow(fList)\r\n    end\r\nend\r\n\r\ncardLua = [[\r\nself.createButton({\r\n  click_function = 'spawnerCaller',\r\n  function_owner = self,\r\n  label          = 'Spawn',\r\n  position       = {0,0.02,0.35},\r\n  rotation       = {0,0,0},\r\n  scale          = {0.1,0.1,0.1},\r\n  width          = 2000,\r\n  height         = 500,\r\n  font_size      = 400,\r\n  color          = 'Black',\r\n  font_color     = 'White',\r\n  tooltip        = 'Click here to spawn the saved list',\r\n})\r\n\r\ncustomizing = true\r\n\r\nfunction spawnerCaller()\r\n    spawnTable = self.getTable(\"List\")\r\n    spawnTable.spawnCard = self\r\n    Global.call('newSpawner', spawnTable)\r\n    spawnTable = nil\r\nend\r\n\r\nfunction onSave()\r\n    if state == nil then\r\n        local state = {cardData=self.getTable(\"List\")}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\nfunction onObjectDrop(player_color, dropped_object)\r\n    if customizing then\r\n        local relpos = self.positionToLocal(dropped_object.getPosition())\r\n        local distance = math.sqrt(relpos[1]*relpos[1] + relpos[2]*relpos[2] + relpos[3]*relpos[3])\r\n        if distance < 1 then\r\n            if (dropped_object.tag == 'Figurine') and (dropped_object.getVar(\"__XW_Ship\") == true) then\r\n                printToAll(self.getName() .. \" gets the customization of \" .. dropped_object.getName(), color(1.0,0.5,0.0))\r\n                local customobj = dropped_object.getCustomObject()\r\n                customization = List.Customization[dropped_object.getName()] or {}\r\n                customization.model = customobj.mesh\r\n                customization.texture = customobj.diffuse\r\n                customization.modeltint = dropped_object.getColorTint()\r\n                for i, attachment in pairs(dropped_object.getAttachments()) do\r\n                    if attachment.name == \"ColorId\" then\r\n                      id = dropped_object.removeAttachment(attachment.index)\r\n                      customization.tint = id.getColorTint(tint)\r\n                      dropped_object.addAttachment(id)\r\n                    end\r\n                end\r\n                List.Customization[dropped_object.getName()] = customization\r\n            elseif dropped_object.tag == 'Card' then\r\n              printToAll(self.getName() .. \" gets the customization of \" .. dropped_object.getName() ..\" card\", color(1.0,0.5,0.0))\r\n               customization = List.Customization[dropped_object.getName()] or {}\r\n               customization.face = dropped_object.getCustomObject().face\r\n               customization.back = dropped_object.getCustomObject().back\r\n               List.Customization[dropped_object.getName()] = customization\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(savedData)\r\n    --print(\"OnLoad: \".. self.getName() .. \" \" .. savedData)\r\n    if savedData ~= \"\" then\r\n        self.setTable(\"List\", JSON.decode(savedData).cardData)\r\n    end\r\nend\r\n]]\r\n\r\nfunction saveToDisk(finalList)\r\n    print('Saving to Disk')\r\n    local accBag = getObjectFromGUID('53ad3d')-- Accessories bag\r\n    local accList = accBag.getObjects()\r\n    for k, v in pairs(accBag.getObjects()) do\r\n        if v.name == 'Data Card' then\r\n            dataDisk = accBag.takeObject({position = {-66,1,-15}, rotation = {0,90,0},scale={3.75,3.75,3.75}, guid = v.guid})\r\n            dataDiskClone = dataDisk.clone()\r\n            accBag.putObject(dataDiskClone)\r\n            dataDisk.setTable(\"List\",finalList)\r\n            dataDisk.setName(\"New Disk\")\r\n            dataDisk.setLuaScript(cardLua)\r\n            print(\"Done\")\r\n        end\r\n    end\r\n    initiate()\r\nend\r\n\r\n\r\n-- Builder first step: sets up basic list table and select faction.\r\nfunction builderStart()\r\n    self.clearButtons()\r\n    partList = {}\r\n    partList.Pilots = {}\r\n    partList.Upgrades = {}\r\n    partList.nameCounts = {}\r\n    partList.spawnCard = self\r\n    availablePilots = {}\r\n    availableUps = {}\r\n    shipSlots = {}\r\n    currentIndex = nil\r\n    totalCost = nil\r\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'Choose Faction', position = {0,0.45,-0.3}, width = 1800, height = 520, font_size = 240,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'buiReb', function_owner = self, label = 'Rebel', position = {-0.6,0.45,0.1}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'buiImp', function_owner = self, label = 'Imperial', position = {-0.6,0.45,0.4}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'buiScu', function_owner = self, label = 'Scum', position = {-0.6,0.45,0.7}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'buiRes', function_owner = self, label = 'Resistance', position = {0,0.45,0.1}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'buiFor', function_owner = self, label = 'First Order', position = {0,0.45,0.4}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Back', position = {0.55,0.45,0.75}, width = 900, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'buiRep', function_owner = self, label = 'Republic', position = {0.6,0.45,0.1}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'buiCis', function_owner = self, label = 'CIS', position = {0.6,0.45,0.4}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\nend\r\n\r\n\r\n-- One function for each faction, forwards to main menu.\r\nfunction buiReb()\r\n    partList.Faction = 1\r\n    mainMenu()\r\nend\r\n\r\nfunction buiImp()\r\n    partList.Faction = 2\r\n    mainMenu()\r\nend\r\n\r\nfunction buiScu()\r\n    partList.Faction = 3\r\n    mainMenu()\r\nend\r\n\r\nfunction buiRes()\r\n    partList.Faction = 4\r\n    mainMenu()\r\nend\r\n\r\nfunction buiFor()\r\n    partList.Faction = 5\r\n    mainMenu()\r\nend\r\n\r\nfunction buiRep()\r\n    partList.Faction = 6\r\n    mainMenu()\r\nend\r\n\r\nfunction buiCis()\r\n    partList.Faction = 7\r\n    mainMenu()\r\nend\r\n\r\nfunction initialSetUp()\r\n\r\nend\r\n\r\n-- Main Menu: shows wich ship is on the list, indicates how many points is dedicated to each ship.\r\n-- Offers 3 options: reset (Back to initiate), add ship and spawn.\r\nfunction mainMenu()\r\n    totalCost = {}\r\n    self.clearButtons()\r\n    self.createButton({click_function = 'addShip', function_owner = self, label = 'Add Ship', position = {-0.45,0.45,-0.3}, width = 1300, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'builderSpawn', function_owner = self, label = 'Spawn List', position = {0.45,0.45,-0.3}, width = 1300, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    for i, pilot in pairs(partList.Pilots) do\r\n        local cost = pilot[3]\r\n        for k,v in pairs (partList.Upgrades[i]) do\r\n            if v[3]~= nil then\r\n                cost = cost+v[3]\r\n            end\r\n        end\r\n        self.createButton({click_function = 'selectShip'..i, function_owner = self, label = pilot[2]..' ('..cost..')', position = {-0.4,0.45,-0.2+i*0.15}, width = 1500, height = 300, font_size = 130,  scale = {0.25,0.25,0.25}})\r\n        totalCost[i] = cost\r\n    end\r\n    listCost = 0\r\n    for i, cost in pairs(totalCost) do\r\n        listCost = listCost + cost\r\n    end\r\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'List cost: '..listCost, position = {0.4,0.45,0.8}, width = 1300, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'RESET', position = {-0.5,0.45,0.8}, width = 1300, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\r\nend\r\n\r\n-- Adding a ship will open a list of all available ship types.\r\nfunction addShip()\r\n    self.clearButtons()\r\n    if partList.Pilots == nil then\r\n        shipIndex = 1\r\n    else\r\n        shipIndex=1\r\n        for i, pilot in pairs(partList.Pilots) do\r\n            shipIndex = shipIndex + 1\r\n        end\r\n    end\r\n    local modelIndex = 1\r\n    local aux = 1\r\n    local auxB = 0\r\n    availableShips = {}\r\n    for i, shipModel in pairs(masterShipDB) do\r\n        for k, fac in pairs (shipModel.Fac) do\r\n            if  k == partList.Faction then\r\n                Font=100\r\n                availableShips[modelIndex] = i\r\n                if aux > 7 then\r\n                    aux=1\r\n                    auxB=auxB+1\r\n                end\r\n                if string.len(i)>18 then\r\n                    Font = 80\r\n                end\r\n                self.createButton({click_function = 'selectModel'..modelIndex, function_owner = self, label = shipModel.name, position = {-0.52+auxB*0.6,0.45,aux*0.16-0.35}, width = 1000, height = 220, font_size = Font,  scale = {0.25,0.25,0.25}})\r\n                aux = aux+1\r\n                modelIndex=modelIndex+1\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\n\r\nfunction selectModelGeneric(arg)\r\n    chosenModel = availableShips[arg]\r\n    availableShips = {}\r\n    self.clearButtons()\r\n    availablePilots = {}\r\n\r\n    local aux = 0\r\n    local auxB = 0\r\n    local index = 1\r\n    for k, v in pairs(masterPilotDB) do\r\n        if v.ship_type == chosenModel then\r\n            local validOption = true\r\n            if v.limited ~= nil then\r\n                if v.limited <= (partList.nameCounts[v.name] or 0) then\r\n                    validOption=false\r\n                end\r\n            end\r\n            if validOption and v.Faction==partList.Faction then\r\n                cost = v.cost\r\n                availablePilots[index] = {}\r\n                availablePilots[index][1] = k\r\n                availablePilots[index][2] = v.name\r\n                availablePilots[index][3] = cost\r\n                local title = ''\r\n                if v.title ~= nil then\r\n                    title = '\\n' .. v.title\r\n                end\r\n                self.createButton({click_function = 'setPilot'..index, function_owner = self, label = v.name..title..' ('..cost..')',  position = {-0.615+auxB*0.65,0.45,aux*0.16-0.35}, width = 1200, height = 220, font_size = 90,  scale = {0.25,0.25,0.25}})\r\n\r\n\r\n                aux= aux+1\r\n                if aux>6 then\r\n                    aux = 0\r\n                    auxB = auxB+1\r\n                end\r\n                index = index+1\r\n            end\r\n        end\r\n    end\r\n    chosenModel = nil\r\nend\r\n\r\n--selecting a ship type will open a list of every pilot for that ship. MUST REWRITE! 18 ship types, with more to come. Each option should set a variable and call an unified function to spawn the pilot buttons!\r\nfunction selectModel1()\r\n    selectModelGeneric(1)\r\nend\r\n\r\nfunction selectModel2()\r\n    selectModelGeneric(2)\r\nend\r\n\r\nfunction selectModel3()\r\n    selectModelGeneric(3)\r\nend\r\n\r\nfunction selectModel4()\r\n    selectModelGeneric(4)\r\nend\r\n\r\nfunction selectModel5()\r\n    selectModelGeneric(5)\r\nend\r\n\r\nfunction selectModel6()\r\n    selectModelGeneric(6)\r\nend\r\n\r\nfunction selectModel7()\r\n    selectModelGeneric(7)\r\nend\r\n\r\nfunction selectModel8()\r\n    selectModelGeneric(8)\r\nend\r\n\r\nfunction selectModel9()\r\n    selectModelGeneric(9)\r\nend\r\n\r\nfunction selectModel10()\r\n    selectModelGeneric(10)\r\nend\r\n\r\nfunction selectModel11()\r\n    selectModelGeneric(11)\r\nend\r\n\r\nfunction selectModel12()\r\n    selectModelGeneric(12)\r\nend\r\n\r\nfunction selectModel13()\r\n    selectModelGeneric(13)\r\nend\r\n\r\nfunction selectModel14()\r\n    selectModelGeneric(14)\r\nend\r\n\r\nfunction selectModel15()\r\n    selectModelGeneric(15)\r\nend\r\n\r\nfunction selectModel16()\r\n    selectModelGeneric(16)\r\nend\r\n\r\nfunction selectModel17()\r\n    selectModelGeneric(17)\r\nend\r\n\r\nfunction selectModel18()\r\n    selectModelGeneric(18)\r\nend\r\n\r\nfunction selectModel19()\r\n    selectModelGeneric(19)\r\nend\r\n\r\nfunction selectModel20()\r\n    selectModelGeneric(20)\r\nend\r\n\r\n\r\n-- Selecting a pilot will add ship model and pilot to part list, update max index and go back to main menu. MUST REWRITE! Each pilot option should set variables and call an unified function to set up the part list!\r\nfunction setPilotGeneric(arg)\r\n    self.clearButtons()\r\n    local name = masterPilotDB[availablePilots[arg][1]].name\r\n    partList.nameCounts[name] = (partList.nameCounts[name] or 0) + 1\r\n    partList.Pilots[shipIndex] = {}\r\n    partList.Pilots[shipIndex][1] = availablePilots[arg][1]\r\n    partList.Pilots[shipIndex][2] = availablePilots[arg][2]\r\n    partList.Pilots[shipIndex][3] = availablePilots[arg][3]\r\n    partList.Upgrades[shipIndex] = {}\r\n    for ind, slot in pairs(masterPilotDB[availablePilots[arg][1]].slot) do\r\n        partList.Upgrades[shipIndex][ind] = {}\r\n        partList.Upgrades[shipIndex][ind][4]= slot        --id of the slot\r\n        local slotNam = slotName[slot]\r\n        partList.Upgrades[shipIndex][ind][5]= slotNam     --String of the Slot Name\r\n        partList.Upgrades[shipIndex][ind][6]=false        --slot has been removed? T for yes, F for no\r\n    end\r\n    availablePilots = nil\r\n    mainMenu()\r\nend\r\n\r\n\r\nfunction setPilot1()\r\n    setPilotGeneric(1)\r\nend\r\n\r\nfunction setPilot2()\r\n    setPilotGeneric(2)\r\nend\r\n\r\nfunction setPilot3()\r\n    setPilotGeneric(3)\r\nend\r\n\r\nfunction setPilot4()\r\n    setPilotGeneric(4)\r\nend\r\n\r\nfunction setPilot5()\r\n    setPilotGeneric(5)\r\nend\r\n\r\nfunction setPilot6()\r\n    setPilotGeneric(6)\r\nend\r\n\r\nfunction setPilot7()\r\n    setPilotGeneric(7)\r\nend\r\n\r\nfunction setPilot8()\r\n    setPilotGeneric(8)\r\nend\r\n\r\nfunction setPilot9()\r\n    setPilotGeneric(9)\r\nend\r\n\r\nfunction setPilot10()\r\n    setPilotGeneric(10)\r\nend\r\n\r\nfunction setPilot11()\r\n    setPilotGeneric(11)\r\nend\r\n\r\nfunction setPilot12()\r\n    setPilotGeneric(12)\r\nend\r\n\r\nfunction setPilot13()\r\n    setPilotGeneric(13)\r\nend\r\n\r\nfunction setPilot14()\r\n    setPilotGeneric(14)\r\nend\r\n\r\nfunction setPilot15()\r\n    setPilotGeneric(15)\r\nend\r\n\r\nfunction setPilot16()\r\n    setPilotGeneric(16)\r\nend\r\n\r\nfunction builderSpawn()\r\n    finalList = {}\r\n    finalList.Pilots = {}\r\n    for i, pilot in pairs(partList.Pilots) do\r\n        finalList.Pilots[i] = pilot[1]\r\n    end\r\n    finalList.Faction = partList.Faction\r\n    finalList.spawnCard = partList.spawnCard\r\n    finalList.Upgrades = {}\r\n    for i, upList in pairs(partList.Upgrades) do\r\n        finalList.Upgrades[i] = {}\r\n        for k, Up in pairs(upList) do\r\n            table.insert(finalList.Upgrades[i], Up[1])\r\n        end\r\n    end\r\n    idSpawner(finalList)\r\nend\r\n\r\n-- Selecting a ship that is on the main menu will show wich slots are empty and wich ones are taken, indicating how many points are being used on this ship and how many points the list as a whole is using.\r\n-- To Do: Set up auxiliary table with slots and upgrades so the correct buttons are spawned. Stablishes variables for special cases (Froce Powers, dual slots). Show point costs of each ship and full squad.\r\nfunction selectShipGeneric(arg)\r\n    self.clearButtons()\r\n    local aux = 1\r\n    local auxB = 0\r\n    shipIndex = arg -- constant for the select ship number\r\n    local index = 1\r\n    availableSlots = {}\r\n    addedSlot={}\r\n    lastSlot=0\r\n    slotNum=0\r\n    totalCost[shipIndex] = 0\r\n    pilotId= partList.Pilots[shipIndex][1]\r\n    pilotName= partList.Pilots[shipIndex][2]\r\n    shipCost= partList.Pilots[shipIndex][3]\r\n    shipSlots[shipIndex]={}\r\n\r\n\r\n    --Adds all possible slots for given ship\r\n    for k, v in pairs(partList.Upgrades[shipIndex]) do\r\n        partList.Upgrades[shipIndex][k][6] = true\r\n    end\r\n\r\n\r\n    for k, v in pairs(masterPilotDB[pilotId].slot) do\r\n        slotNum=slotNum+1\r\n        partList.Upgrades[shipIndex][k][6]=false\r\n        addedSlot[slotNum]=true\r\n    end\r\n\r\n    --Checks and adds slot for every upgrade that adds a slot\r\n    for k, Upg in pairs(partList.Upgrades[shipIndex]) do\r\n        if Upg[1] ~=nil then\r\n            if masterUpgradesDB[Upg[1]].addSlot ~= nil then\r\n                for i, addSlot in pairs(masterUpgradesDB[Upg[1]].addSlot) do\r\n                    slotNum=slotNum+1\r\n                    if partList.Upgrades[shipIndex][slotNum] == nil then\r\n                        partList.Upgrades[shipIndex][slotNum] = {}\r\n                        partList.Upgrades[shipIndex][slotNum][4] = addSlot\r\n                        partList.Upgrades[shipIndex][slotNum][5] = slotName[addSlot]\r\n                        partList.Upgrades[shipIndex][slotNum][6] = false\r\n                        addedSlot[slotNum]=true\r\n                    else\r\n                        partList.Upgrades[shipIndex][slotNum][6] = false\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    for k, Upg in pairs(partList.Upgrades[shipIndex]) do\r\n        if Upg[1] ~=nil then\r\n            if masterUpgradesDB[Upg[1]].remSlot ~= nil then\r\n                for u, s in pairs (masterUpgradesDB[Upg[1]].remSlot) do\r\n                    local rem = true\r\n                    for i, v in pairs (partList.Upgrades[shipIndex]) do\r\n                        if v[4] == s and rem ==true then\r\n                            v[6]=true\r\n                            rem=false\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\n\r\n    for k, v in pairs(partList.Upgrades[shipIndex]) do\r\n        if v[6]==true then\r\n            v[1]=nil\r\n            v[2]=nil\r\n            v[3]=nil\r\n        end\r\n    end\r\n\r\n    for i, slots in pairs(partList.Upgrades[shipIndex]) do\r\n        if aux > 5 then\r\n            aux = 1\r\n            auxB = auxB+1\r\n        end\r\n        if partList.Upgrades[shipIndex][i][6] == true then\r\n\r\n        elseif partList.Upgrades[shipIndex][i][1] == nil then\r\n            self.createButton({click_function = 'selectSlot'..i, function_owner = self, label = partList.Upgrades[shipIndex][i][5], position = {-0.4+auxB*0.8,0.45,-0.22+aux*0.15}, width = 1500, height = 300, font_size = 120,  scale = {0.25,0.25,0.25}})\r\n            aux=aux+1\r\n        else\r\n            self.createButton({click_function = 'selectSlot'..i, function_owner = self, label = partList.Upgrades[shipIndex][i][2]..' ('..partList.Upgrades[shipIndex][i][3]..')', position = {-0.4+auxB*0.8,0.45,-0.22+aux*0.15}, width = 1500, height = 300, font_size = 120,  scale = {0.25,0.25,0.25}})\r\n            aux=aux+1\r\n        end\r\n        local index=index+1\r\n    end\r\n\r\n    for i, pilot in pairs(partList.Pilots) do\r\n        local cost = pilot[3]\r\n        for k,v in pairs (partList.Upgrades[i]) do\r\n            if v[3]~= nil then\r\n                cost = cost+v[3]\r\n            end\r\n        end\r\n        totalCost[i] = cost\r\n    end\r\n    listCost = 0\r\n    for i, cost in pairs(totalCost) do\r\n        listCost = listCost + cost\r\n    end\r\n\r\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = partList.Pilots[shipIndex][2]..' ('..partList.Pilots[shipIndex][3]..')', position = {-0.3,0.45,-0.35}, width = 2000, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'mainMenu', function_owner = self, label = 'Back', position = { 0.5,0.45,-0.35}, width = 1000, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'removeShip', function_owner = self, label = 'Remove Ship', position = { 0.6,0.45,0.75}, width = 1000, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'Ship cost: '..totalCost[shipIndex], position = {-0.6,0.45,0.8}, width = 1000, height = 220, font_size = 150,  scale = {0.25,0.25,0.25}})\r\n\r\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'List cost: '..listCost, position = {0,0.45,0.8}, width = 1000, height = 220, font_size = 150,  scale = {0.25,0.25,0.25}})\r\nend\r\n\r\nfunction removeShip()\r\n    partList.Pilots[shipIndex] = nil\r\n    partList.Upgrades[shipIndex] = nil\r\n    totalCost[shipIndex] = nil\r\n    for i, index in pairs(partList.Pilots) do\r\n        if i > shipIndex then\r\n            partList.Pilots[i-1] = partList.Pilots[i]\r\n            partList.Pilots[i] = nil\r\n            partList.Upgrades[i-1] = partList.Upgrades[i]\r\n            partList.Upgrades[i] = nil\r\n            totalCost[i-1] = totalCost[i]\r\n            totalCost[i] = nil\r\n        end\r\n    end\r\n    mainMenu()\r\nend\r\n\r\nfunction selectShip1()\r\n    selectShipGeneric(1)\r\nend\r\n\r\nfunction selectShip2()\r\n    selectShipGeneric(2)\r\nend\r\n\r\nfunction selectShip3()\r\n    selectShipGeneric(3)\r\nend\r\n\r\nfunction selectShip4()\r\n    selectShipGeneric(4)\r\nend\r\n\r\nfunction selectShip5()\r\n    selectShipGeneric(5)\r\nend\r\n\r\nfunction selectShip6()\r\n    selectShipGeneric(6)\r\nend\r\n\r\nfunction selectShip7()\r\n    selectShipGeneric(7)\r\nend\r\n\r\nfunction selectShip8()\r\n    selectShipGeneric(8)\r\nend\r\n\r\nfunction selectSlotGeneric(slotIndex)\r\n    self.clearButtons()\r\n    slotId = partList.Upgrades[shipIndex][slotIndex][4]             -- Value tied for this function!\r\n    currSlotInd = slotIndex\r\n    local index = 1\r\n    local aux = 1\r\n    local auxB = 0\r\n    acailableUps = {}\r\n    self.createButton({click_function = 'selectUpNone', label = 'None (0)', function_owner = self, position = {-0.45+auxB*0.6,0.45,-0.2}, width = 1500, height = 220, font_size = 120,  scale = {0.25,0.25,0.25}})\r\n    for id, up in pairs(masterUpgradesDB) do\r\n        if up.slot == slotId then\r\n            local validUp=true\r\n            if up.restriction ~= nil then\r\n                if up.restriction.Faction ~= nil then\r\n                    if up.restriction.Faction[partList.Faction]~=true then\r\n                        validUp=false\r\n                    end\r\n                end\r\n                if up.restriction.Size ~= nil then\r\n                    if up.restriction.Size[masterShipDB[masterPilotDB[partList.Pilots[shipIndex][1]].ship_type].size]~=true then\r\n                        validUp=false\r\n                    end\r\n                end\r\n                if up.restriction.ship ~= nil then\r\n                    if up.restriction.ship[masterPilotDB[partList.Pilots[shipIndex][1]].ship_type] ~= true then\r\n                        validUp=false\r\n                    end\r\n                end\r\n            end\r\n            if up.limited ~= nil then\r\n                if up.limited <= (partList.nameCounts[up.name] or 0) then\r\n                    validUp=false\r\n                end\r\n            end\r\n            if validUp == true then\r\n                if up.cost =='a' then\r\n                    sAgi =   masterShipDB[masterPilotDB[ partList.Pilots[shipIndex][1] ].ship_type ].agi\r\n                    --print(\"VarCost 'a' id: \".. tostring(id))\r\n                    upCost = varCostA[id][sAgi]\r\n                elseif up.cost == 's' then\r\n                    sSize =   masterShipDB[masterPilotDB[ partList.Pilots[shipIndex][1] ].ship_type ].size\r\n                    --print(\"VarCost 's' id: \".. tostring(id))\r\n                    upCost = varCostS[id][sSize]\r\n                elseif up.cost == 'i' then\r\n                    pInit = masterPilotDB[partList.Pilots[shipIndex][1]].init\r\n                    --print(\"VarCost 'i' id: \".. tostring(id))\r\n                    upCost = varCostI[id][pInit]\r\n                else\r\n                    upCost = up.cost\r\n                end\r\n                local title = ''\r\n                if up.title ~= nil then\r\n                    title = '\\n' .. up.title\r\n                end\r\n                availableUps[index] = {[1]=id, [2]=up.name, [3]=upCost}\r\n                self.createButton({click_function = 'selectUp'..index, label = up.name..title..' ('..upCost..')', function_owner = self, position = {-0.53+auxB*0.58,0.45,aux*0.1-0.1}, width = 1100, height = 200, font_size = 100,  scale = {0.25,0.25,0.25}})\r\n                aux=aux+1\r\n                index = index+1\r\n                if aux > 8 then\r\n                    aux=1\r\n                    auxB=auxB+1\r\n                end\r\n                validUp= false\r\n            end\r\n        elseif slotId == 99 then\r\n            local hpCheck={[3]=true,[5]=true,[6]=true}\r\n            if hpCheck[up.slot] == true then\r\n                availableUps[index] = {[1]=id, [2]=up.name, [3]=up.cost}\r\n                self.createButton({click_function = 'selectUp'..index, label = up.name..' ('..up.cost..')', function_owner = self, position = {-0.53+auxB*0.58,0.45,aux*0.1-0.1}, width = 1100, height = 200, font_size = 100,  scale = {0.25,0.25,0.25}})\r\n                aux=aux+1\r\n                index = index+1\r\n                if aux > 8 then\r\n                    aux=1\r\n                    auxB=auxB+1\r\n                end\r\n            end\r\n        end\r\n\r\n    end\r\n\r\n    self.createButton({click_function = 'backFromSelectUp', function_owner = self, label = 'Back', position = { 0.5,0.45,-0.35}, width = 1000, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\r\nend\r\n\r\n\r\nfunction backFromSelectUp()\r\n        if shipIndex == 1 then\r\n            selectShip1()\r\n        elseif shipIndex == 2 then\r\n            selectShip2()\r\n        elseif shipIndex == 3 then\r\n            selectShip3()\r\n        elseif shipIndex == 4 then\r\n            selectShip4()\r\n        elseif shipIndex == 5 then\r\n            selectShip5()\r\n        elseif shipIndex == 6 then\r\n            selectShip6()\r\n        elseif shipIndex == 7 then\r\n            selectShip7()\r\n        elseif shipIndex == 8 then\r\n            selectShip8()\r\n        end\r\n    end\r\n\r\nfunction selectSlot1()\r\n    selectSlotGeneric(1)\r\nend\r\n\r\nfunction selectSlot2()\r\n    selectSlotGeneric(2)\r\nend\r\n\r\nfunction selectSlot3()\r\n    selectSlotGeneric(3)\r\nend\r\n\r\nfunction selectSlot4()\r\n    selectSlotGeneric(4)\r\nend\r\n\r\nfunction selectSlot5()\r\n    selectSlotGeneric(5)\r\nend\r\n\r\nfunction selectSlot6()\r\n    selectSlotGeneric(6)\r\nend\r\n\r\nfunction selectSlot6()\r\n    selectSlotGeneric(6)\r\nend\r\n\r\nfunction selectSlot7()\r\n    selectSlotGeneric(7)\r\nend\r\n\r\nfunction selectSlot8()\r\n    selectSlotGeneric(8)\r\nend\r\n\r\nfunction selectSlot9()\r\n    selectSlotGeneric(9)\r\nend\r\n\r\nfunction selectSlot10()\r\n    selectSlotGeneric(10)\r\nend\r\n\r\nfunction selectSlot11()\r\n    selectSlotGeneric(11)\r\nend\r\n\r\nfunction selectSlot12()\r\n    selectSlotGeneric(12)\r\nend\r\n\r\nfunction selectSlot13()\r\n    selectSlotGeneric(13)\r\nend\r\n\r\nfunction selectSlot14()\r\n    selectSlotGeneric(14)\r\nend\r\n\r\nfunction selectSlot14()\r\n    selectSlotGeneric(14)\r\nend\r\n\r\nfunction selectSlot15()\r\n    selectSlotGeneric(15)\r\nend\r\n\r\nfunction selectSlot16()\r\n    selectSlotGeneric(16)\r\nend\r\n\r\nfunction selectSlot17()\r\n    selectSlotGeneric(17)\r\nend\r\n\r\nfunction selectSlot18()\r\n    selectSlotGeneric(18)\r\nend\r\n\r\nfunction selectSlot19()\r\n    selectSlotGeneric(19)\r\nend\r\n\r\nfunction selectSlot99()\r\n    selectSlotGeneric(99)\r\nend\r\n\r\n\r\nfunction selectUpNone()\r\n    partList.Upgrades[shipIndex][currSlotInd][1] = nil     --first '1' tied to selectUp1, second value indicate the names\r\n    partList.Upgrades[shipIndex][currSlotInd][2] = nil\r\n    partList.Upgrades[shipIndex][currSlotInd][3] = nil\r\n    if shipIndex == 1 then\r\n        selectShip1()\r\n    elseif shipIndex == 2 then\r\n        selectShip2()\r\n    elseif shipIndex == 3 then\r\n        selectShip3()\r\n    elseif shipIndex == 4 then\r\n        selectShip4()\r\n    elseif shipIndex == 5 then\r\n        selectShip5()\r\n    elseif shipIndex == 6 then\r\n        selectShip6()\r\n    elseif shipIndex == 7 then\r\n        selectShip7()\r\n    elseif shipIndex == 8 then\r\n        selectShip8()\r\n    end\r\nend\r\n\r\nfunction selectUpGeneric(arg)\r\n    partList.Upgrades[shipIndex][currSlotInd][1] = availableUps[arg][1]      --first '1' tied to selectUp1, second value indicate the Id\r\n    partList.Upgrades[shipIndex][currSlotInd][2] = availableUps[arg][2]      --first '1' tied to selectUp1, second value indicate the Name\r\n    partList.Upgrades[shipIndex][currSlotInd][3] = availableUps[arg][3]      --first '1' tied to selectUp1, second value indicate the cost\r\n    local name = availableUps[arg][2]\r\n    partList.nameCounts[name] = (partList.nameCounts[name] or 0) + 1\r\n    if shipIndex == 1 then\r\n        selectShip1()\r\n    elseif shipIndex == 2 then\r\n        selectShip2()\r\n    elseif shipIndex == 3 then\r\n        selectShip3()\r\n    elseif shipIndex == 4 then\r\n        selectShip4()\r\n    elseif shipIndex == 5 then\r\n        selectShip5()\r\n    elseif shipIndex == 6 then\r\n        selectShip6()\r\n    elseif shipIndex == 7 then\r\n        selectShip7()\r\n    elseif shipIndex == 8 then\r\n        selectShip8()\r\n    end\r\nend\r\n\r\nfunction selectUp1()\r\n    selectUpGeneric(1)\r\nend\r\n\r\nfunction selectUp2()\r\n    selectUpGeneric(2)\r\nend\r\n\r\nfunction selectUp3()\r\n    selectUpGeneric(3)\r\nend\r\n\r\nfunction selectUp4()\r\n    selectUpGeneric(4)\r\nend\r\n\r\nfunction selectUp5()\r\n    selectUpGeneric(5)\r\nend\r\n\r\nfunction selectUp6()\r\n    selectUpGeneric(6)\r\nend\r\n\r\nfunction selectUp7()\r\n    selectUpGeneric(7)\r\nend\r\n\r\nfunction selectUp8()\r\n    selectUpGeneric(8)\r\nend\r\n\r\nfunction selectUp9()\r\n    selectUpGeneric(9)\r\nend\r\n\r\nfunction selectUp10()\r\n    selectUpGeneric(10)\r\nend\r\n\r\nfunction selectUp11()\r\n    selectUpGeneric(11)\r\nend\r\n\r\nfunction selectUp12()\r\n    selectUpGeneric(12)\r\nend\r\n\r\nfunction selectUp13()\r\n    selectUpGeneric(13)\r\nend\r\n\r\nfunction selectUp14()\r\n    selectUpGeneric(14)\r\nend\r\n\r\nfunction selectUp15()\r\n    selectUpGeneric(15)\r\nend\r\n\r\nfunction selectUp16()\r\n    selectUpGeneric(16)\r\nend\r\n\r\nfunction selectUp17()\r\n    selectUpGeneric(17)\r\nend\r\n\r\nfunction selectUp18()\r\n    selectUpGeneric(18)\r\nend\r\n\r\nfunction selectUp19()\r\n    selectUpGeneric(19)\r\nend\r\n\r\nfunction selectUp20()\r\n    selectUpGeneric(20)\r\nend\r\n\r\nfunction selectUp21()\r\n    selectUpGeneric(21)\r\nend\r\n\r\nfunction selectUp22()\r\n    selectUpGeneric(22)\r\nend\r\n\r\nfunction selectUp23()\r\n    selectUpGeneric(23)\r\nend\r\n\r\nfunction selectUp24()\r\n    selectUpGeneric(24)\r\nend\r\n\r\nfunction selectUp25()\r\n    selectUpGeneric(25)\r\nend\r\n\r\nfunction selectUp26()\r\n    selectUpGeneric(26)\r\nend\r\n\r\nfunction selectUp27()\r\n    selectUpGeneric(27)\r\nend\r\n\r\nfunction selectUp28()\r\n    selectUpGeneric(28)\r\nend\r\n\r\n\r\n\r\n\r\n\r\n-- List Spawner starts here\r\n-- First step: Create the table that ultimately will be provided to newSpawner. Then, inquires player wich faction his list belongs to.\r\nfunction spawnerStart ()\r\n    self.clearButtons()\r\n    finalList = {}\r\n    finalList.Pilots = {}\r\n    finalList.Upgrades = {}\r\n    finalList.Faction = 0\r\n    finalList.Aux = {}\r\n    finalList.AuxU = {}\r\n    finalList.spawnCard = self\r\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'Choose Faction', position = {0,0.45,-0.3}, width = 1800, height = 520, font_size = 240,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'Reb', function_owner = self, label = 'Rebel', position = {-0.4,0.45,0}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'Imp', function_owner = self, label = 'Imperial', position = {-0.4,0.45,0.2}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'Rep', function_owner = self, label = 'Republic', position = {-0.4,0.45,0.4}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'Res', function_owner = self, label = 'Resistance', position = {0.4,0.45,0}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'For', function_owner = self, label = 'First Order', position = {0.4,0.45,0.2}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'CIS', function_owner = self, label = 'CIS', position = {0.4,0.45,0.4}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'Scu', function_owner = self, label = 'Scum', position = {-0.4,0.45,0.6}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\r\n\r\n\r\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Back', position = {0.55,0.45,0.75}, width = 900, height = 320, font_size = 180,  scale = {0.25,0.25,0.25}})\r\nend\r\n\r\n--Set up faction in the table\r\nfunction Reb()\r\n    finalList.Faction = 1\r\n    inputList()\r\nend\r\n\r\nfunction Imp()\r\n    finalList.Faction = 2\r\n    inputList()\r\nend\r\n\r\nfunction Scu()\r\n    finalList.Faction = 3\r\n    inputList()\r\nend\r\n\r\nfunction Res()\r\n    finalList.Faction = 4\r\n    inputList()\r\nend\r\n\r\nfunction For()\r\n    finalList.Faction = 5\r\n    inputList()\r\nend\r\n\r\nfunction Rep()\r\n    finalList.Faction = 6\r\n    inputList()\r\nend\r\n\r\nfunction CIS()\r\n    finalList.Faction = 7\r\n    inputList()\r\nend\r\n\r\n-- Dummy functions for label buttons\r\nfunction Dummy()\r\nend\r\n\r\nfunction Dummy1()\r\n    print('Please pick a faction')\r\nend\r\n\r\nfunction Dummy2()\r\n    print('Please choose a ship for this pilot:')\r\nend\r\n\r\nfunction Dummy3()\r\n    print('Please type or paste your list. Refer to the manual if help is needed formating the list!')\r\nend\r\n\r\nfunction Dummy4()\r\n    print('Please choose a slot for this upgrade card:')\r\nend\r\n\r\n-- Second step: Create the input field where the list should be pasted/typed. Offers a button to spawn the list and a button to save to a data disk (FEATURE NOT IMPLEMENTED YET)\r\nfunction inputList()\r\n    savingList=false\r\n    self.clearButtons()\r\n    self.createButton({click_function = 'Dummy3', function_owner = self, label = 'Please type or paste your list', position = {-0,0.45,-0.4}, width = 2500, height = 280, font_size = 200, scale = {0.4,0.4,0.4}, tooltip = 'Click here to spawn yout list',  scale = {0.25,0.25,0.25}})\r\n    --self.createButton({click_function = 'printInput', function_owner = self, label = 'print', position = {-0.5,0.45,-1}, width = 800, height = 240, font_size = 100, scale = {0.4,0.4,0.4}, tooltip = 'Click here to spawn yout list',  scale = {0.25,0.25,0.25}})\r\n    self.createInput({input_function = 'action', function_owner = self, position = {0,0.45,0.12}, width = 3200, height = 1600, font_size = 200, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'validCheck', function_owner = self, label = 'Spawn Ships', position = {-0.5,0.45,0.7}, width = 1400, height = 400, font_size = 200, scale = {0.4,0.4,0.4}, tooltip = 'Click here to spawn yout list',  scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'saveList', function_owner = self, label = 'Spawn as Disk', position = {0.5,0.45,0.7}, width = 1400, height = 400, font_size = 200, scale = {0.4,0.4,0.4}, tooltip = 'Click here to save your list in a data disk', scale = {0.25,0.25,0.25}})\r\nend\r\n\r\n-- This function is supposed to store the list in the script of the data disk object and set up a button wich will spawn the stored list calling the list parser and providing the string.\r\n-- The disk can be saved in the TTS chest for easy retrieval. Could it be set up in a way to store and spawn several lists?\r\n\r\nfunction saveList()\r\n    print('Saving List')\r\n    savingList = true\r\n    validCheck()\r\nend\r\n\r\n-- print function to test the input\r\nfunction printInput()\r\n    print(lista)\r\n    lista = string.gsub(lista, 'v2', '')\r\n    print(lista)\r\nend\r\n\r\n-- Checks if the input is a valid string. If it is, call the list parser. If not, returns to the input list.\r\nfunction validCheck()\r\n    if lista == '' then\r\n        Dummy3()\r\n        inputList()\r\n    else\r\n        parseList()\r\n    end\r\nend\r\n\r\npilotsWithDash = {}\r\npilotsWithDash[\"g4r-gor v\"] = true\r\npilotsWithDash[\"g4r-g0r v\"] = true\r\n\r\nalternateSpelling = {}\r\nalternateSpelling[\"0-66\"] = 'O-66'\r\nalternateSpelling[\"g4r-gor v/m\"] = 'G4R-G0R V/M'\r\nalternateSpelling[\"integrated s-foils (closed)\"] = 'Integrated S-foils'\r\nalternateSpelling[\"servomotor s-foils (closed)\"] = 'Servomotor S-foils'\r\nalternateSpelling[\"stabilized s-foils (open)\"] = 'Stabilized S-foils'\r\nalternateSpelling[\"landing struts (closed)\"] = 'Landing Struts'\r\nalternateSpelling[\"grappling struts (closed)\"] = 'Grappling Struts'\r\nalternateSpelling[\"vectored cannons\"] = 'Vectored Cannons (RZ-1)'\r\n\r\n\r\n\r\nobstacleNames = {\r\n    coreasteroid0 = \"Asteroid 6\",\r\n    coreasteroid1 = \"Asteroid 3\",\r\n    coreasteroid2 = \"Asteroid 5\",\r\n    coreasteroid3 = \"Asteroid 4\",\r\n    coreasteroid4 = \"Asteroid 2\",\r\n    coreasteroid5 = \"Asteroid 1\",\r\n    yt2400debris0 = \"Debrisfield 6\",\r\n    yt2400debris1 = \"Debrisfield 5\",\r\n    yt2400debris2 = \"Debrisfield 1\",\r\n    vt49decimatordebris0 = \"Debrisfield 4\",\r\n    vt49decimatordebris1 = \"Debrisfield 2\",\r\n    vt49decimatordebris2 = \"Debrisfield 3\",\r\n    core2asteroid0 = \"TFA Asteroid 4\",\r\n    core2asteroid1 = \"TFA Asteroid 5\",\r\n    core2asteroid2 = \"TFA Asteroid 6\",\r\n    core2asteroid3 = \"TFA Asteroid 3\",\r\n    core2asteroid4 = \"TFA Asteroid 1\",\r\n    core2asteroid5 = \"TFA Asteroid 2\",\r\n    gascloud1 = \"Gas Cloud 3\",\r\n    gascloud2 = \"Gas Cloud 2\",\r\n    gascloud3 = \"Gas Cloud 1\",\r\n    gascloud4 = \"Gas Cloud 6\",\r\n    gascloud5 = \"Gas Cloud 4\",\r\n    gascloud6 = \"Gas Cloud 5\",\r\n}\r\n\r\n-- Third Step: This function will decompose the input string and will propperly alocate each value on the propper position in the table.\r\n-- Then, it calls for the next function, either inquiring for ships and version of upgrades or calling the spawner.\r\nfunction parseList()\r\n    self.clearButtons()\r\n    self.clearInputs()\r\n    if lista ~= nil then\r\n        parsedList = {}\r\n        splitlist = mysplit(lista, '|', true)\r\n        ships = splitlist[1]\r\n        obstacles = splitlist[2]\r\n        finalList.Obstacles = {}\r\n        if obstacles ~= nil then\r\n            obstacleList = mysplit(obstacles, '/', true)\r\n            for i, obstacle in ipairs(obstacleList) do\r\n                if obstacleNames[obstacle] ~= nil then\r\n                    table.insert(finalList.Obstacles, obstacleNames[obstacle])\r\n                else\r\n                    printToAll(\"Unable to find obstacle: \" .. obstacle .. \" please check correct spelling\", {1,0,0})\r\n                end\r\n            end\r\n        end\r\n\r\n        pilotsList = mysplit(ships, '/', true)\r\n        local rest = \"\"\r\n        for i, pilot in ipairs(pilotsList) do\r\n            pilot = rest .. pilot\r\n            if pilotsWithDash[string.lower(pilot)] ~= nil then\r\n                rest = pilot .. \"/\"\r\n            else\r\n                table.insert(parsedList, mysplit(pilot,'+', true))\r\n                rest = \"\"\r\n            end\r\n        end\r\n        pilotIndex = 0\r\n        Aux = 0\r\n        for i, pilot in ipairs(parsedList) do\r\n            pilotIndex = pilotIndex + 1\r\n            for k, cardN in ipairs(pilot) do\r\n                cardN = string.gsub(cardN, 'Hardpoint: ', '')\r\n                if alternateSpelling[string.lower(cardN)] ~= nil then\r\n                    cardN = alternateSpelling[string.lower(cardN)]\r\n                end\r\n                if k == 1 then -- First card, the pilot\r\n                    finalList.Aux[pilotIndex] = {}\r\n                    finalList.AuxU[pilotIndex] = {}\r\n                    local found = false\r\n                    for id, pilot in pairs(masterPilotDB) do\r\n                        if (string.lower(pilot.name) == string.lower(cardN)) and (pilot.Faction == finalList.Faction) then\r\n                            Aux = Aux + 1\r\n                            finalList.Aux[pilotIndex][Aux] = id\r\n                            finalList.Upgrades[pilotIndex] = {}\r\n                            found = true\r\n                        end\r\n                    end\r\n                    if not found then\r\n                        printToAll(\"Unable to find pilot: \" .. cardN .. \" please check correct spelling\", {1,0,0})\r\n                        pilotIndex = pilotIndex - 1\r\n                        break\r\n                    end\r\n                    if Aux == 1 then\r\n                        finalList.Pilots[pilotIndex] = finalList.Aux[pilotIndex][1]\r\n                        finalList.Aux[pilotIndex] = nil\r\n                    end\r\n                    Aux = 0\r\n                else -- The remaining cards, the upgrades\r\n                    finalList.AuxU[pilotIndex][k] ={}\r\n                    local found = false\r\n                    local restricted = false\r\n                    for id, upg in pairs(masterUpgradesDB) do\r\n                        if string.lower(upg.name) == string.lower(cardN) then\r\n                            if (upg.restriction == nil) or (upg.restriction.Faction == nil) or (upg.restriction.Faction[finalList.Faction] == true) then\r\n                                Aux = Aux + 1\r\n                                finalList.AuxU[pilotIndex][k][Aux] = id\r\n                                found = true\r\n                            else\r\n                                restricted = true\r\n                            end\r\n                        end\r\n                    end\r\n                    if not found then\r\n                        if restricted then\r\n                            printToAll('Upgrade \"'.. cardN .. '\" is restricted to another faction', {1,0,0})\r\n                        else\r\n                            printToAll(\"Unable to find upgrade: \" .. cardN .. \" please check correct spelling\", {1,0,0})\r\n                        end\r\n                        goto continue\r\n                        finalList.Upgrades[pilotIndex][k-1] = nil\r\n                    end\r\n                    if Aux == 1 then\r\n                        finalList.Upgrades[pilotIndex][k-1] = finalList.AuxU[pilotIndex][k][Aux]\r\n                        finalList.AuxU[pilotIndex][k] = nil\r\n                    end\r\n                ::continue::\r\n                Aux = 0\r\n                end -- if Pilot and upgrade\r\n\r\n            end -- for card\r\n        end\r\n        pChecker()\r\n    else\r\n        Dummy3()\r\n        initiate()\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n-- Fourth step: This function checks for pilots with the same name in the same\r\n-- faction and stores de data por future inquire. If no inquire is needed, it\r\n-- calls the newSpawner function and reset all buttons.\r\nfunction pChecker()\r\n    repPN=0\r\n    for i, pilot in pairs(finalList.Aux) do\r\n        currPIndex = i\r\n        repPL = {}\r\n        for k, v in pairs(pilot) do\r\n            repPL[k] = v\r\n            repPN=repPN+1\r\n        end\r\n        pilot = nil\r\n    end\r\n    if repPN ~= 0 then\r\n        pilotChoice(repPL)\r\n    else\r\n        uChecker()\r\n    end\r\nend\r\n\r\nfunction uChecker()\r\n    repUN=0\r\n    repUL = {}\r\n    for pilot, s in pairs(finalList.AuxU) do\r\n        repUL[pilot] = {}\r\n        for slot, up in pairs(s) do\r\n            currIndex = pilot\r\n            currSlot = slot\r\n            repUL[pilot][currSlot] = {}\r\n            for k,v in pairs(up) do\r\n                repUL[pilot][slot][k] = v\r\n                repUN=repUN+1\r\n            end\r\n        end\r\n    end\r\n    if repUN == 0 then\r\n        repUL = nil\r\n    end\r\n\r\n    if repUN ~= 0 then\r\n        upChoice(repUL)\r\n    else\r\n        idSpawner(finalList)\r\n    end\r\nend\r\n\r\n-- luke skywalker+sense\r\n-- luke skywalker + r2-d2\r\n-- lando calrissian+han solo\r\n-- sabine wren/luke skywalker + r2-d2\r\n-- sabine wren/norra wexley+r2-d2\r\n-- norra wexley+r2-d2/sabine wren\r\n-- luke skywalker + r2-d2/sabine wren\r\n\r\n-- Fifth Step: If pilots with several options of ships are present, for each pilot will create an inquire asking wich ship the pilot is in.\r\nfunction pilotChoice(options)\r\n    local name = (masterPilotDB[options[1]].name)\r\n    self.clearButtons()\r\n    self.createButton({click_function = 'Dummy2', function_owner = self, label = 'Please choose a ship for the following pilot', position = {0,0.45,-0.4}, width = 3400, height = 380, font_size = 170, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'Dummy2', function_owner = self, label = name, position = {0,0.45,-0.1}, width = 1600, height = 380, font_size = 200, scale = {0.25,0.25,0.25}})\r\n\r\n    for i, option in pairs(options) do\r\n        local name = masterPilotDB[option].name\r\n        if masterPilotDB[option].title ~= nil then\r\n            name = name .. ' - ' .. masterPilotDB[option].title .. '\\n'\r\n        end\r\n        name = name .. ' ('.. masterShipDB[masterPilotDB[option].ship_type].name ..')'\r\n        self.createButton({click_function = 'setShip' .. i , function_owner = self, label = name, position = {0,0.45,-0.1 + i*0.2}, width = 3000, height = 380, font_size = 160, scale = {0.25,0.25,0.25}})\r\n    end\r\nend\r\n\r\n\r\n\r\n-- Stores the ship option for each pilot if needed. If there is no other inquire needed, will call upgrade inquire if need, if not, will call the newSpawner function.\r\nfunction setShip1()\r\n    finalList.Pilots[currPIndex] = repPL[1]\r\n    finalList.Aux[currPIndex] = nil\r\n    repPL = nil\r\n    repPN= 0\r\n    repUN= 0\r\n    currPIndex = nil\r\n    pChecker()\r\nend\r\n\r\nfunction setShip2()\r\n    finalList.Pilots[currPIndex] = repPL[2]\r\n    finalList.Aux[currPIndex] = nil\r\n    repPL = nil\r\n    repPN= 0\r\n    repUN= 0\r\n    currPIndex = nil\r\n    pChecker()\r\nend\r\n\r\nfunction setShip3()\r\n    finalList.Pilots[currPIndex] = repPL[3]\r\n    finalList.Aux[currPIndex] = nil\r\n    repPL = nil\r\n    repPN= 0\r\n    repUN= 0\r\n    currPIndex = nil\r\n    pChecker()\r\nend\r\n\r\nfunction setShip4()\r\n    finalList.Pilots[currPIndex] = repPL[4]\r\n    finalList.Aux[currPIndex] = nil\r\n    repPL = nil\r\n    repPN= 0\r\n    repUN= 0\r\n    currPIndex = nil\r\n    pChecker()\r\nend\r\n\r\nfunction setShip5()\r\n    finalList.Pilots[currPIndex] = repPL[5]\r\n    finalList.Aux[currPIndex] = nil\r\n    repPL = nil\r\n    repPN= 0\r\n    repUN= 0\r\n    currPIndex = nil\r\n    pChecker()\r\nend\r\n\r\n\r\nslotName = {}\r\nslotName[1] = 'Talent' -- EPT\r\nslotName[2] = 'Sensors' -- Sensor\r\nslotName[3] = 'Cannon' -- Cannon\r\nslotName[4] = 'Turret' -- Turret\r\nslotName[5] = 'Torpedo' -- Torpedo\r\nslotName[6] = 'Missile' -- Missile\r\nslotName[7] = '' --\r\nslotName[8] = 'Crew' -- Crew\r\nslotName[9] = ''\r\nslotName[10] = 'Astromech' --Astromech\r\nslotName[11] = ''\r\nslotName[12] = 'Device' -- Device\r\nslotName[13] = 'Illicit' -- Ilicit\r\nslotName[14] = 'Modification' -- Modification\r\nslotName[15] = 'Title' -- Title\r\nslotName[16] = 'Gunner' -- Gunner\r\nslotName[17] = 'Force Talent' -- Force Power\r\nslotName[18] = 'Configuration' -- Configuration\r\nslotName[19] = 'Tech' -- Tech\r\nslotName[20] = 'Relay' -- Relay\r\nslotName[21] = 'Command' -- Command\r\nslotName[22] = 'Cargo' -- Cargo\r\nslotName[23] = 'Team'  -- Team\r\nslotName[24] = 'Hardpoint'\r\nslotName[25] = 'Hyperdrive'\r\nslotName[99] = 'Weapon HardPoint' -- Hardpoint\r\n\r\n\r\n\r\n-- Sixth Step: If Upgrades with several options in the same faction are present, for each upgrade will create an inquire asking wich slot the upgrade is in.\r\nfunction upChoice(options)\r\n    local name = (masterUpgradesDB[options[currIndex][currSlot][1]].name)\r\n    local Up1 = slotName[masterUpgradesDB[options[currIndex][currSlot][1]].slot]\r\n    local Up2 = slotName[masterUpgradesDB[options[currIndex][currSlot][2]].slot]\r\n    self.clearButtons()\r\n    self.createButton({click_function = 'Dummy4', function_owner = self, label = 'Please choose a slot for the following upgrade', position = {0,0.45,-0.4}, width = 3400, height = 380, font_size = 170, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'Dummy4', function_owner = self, label = name, position = {0,0.45,-0.1}, width = 1600, height = 380, font_size = 200, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'setUp1', function_owner = self, label = Up1, position = {0,0.45,0.1}, width = 1200, height = 380, font_size = 180, scale = {0.25,0.25,0.25}})\r\n    self.createButton({click_function = 'setUp2', function_owner = self, label = Up2, position = {0,0.45,0.3}, width = 1200, height = 380, font_size = 180, scale = {0.25,0.25,0.25}})\r\n    if options == 3 then\r\n        local Up3 = slotName[masterUpgradesDB[options[currIndex][currSlot][3]].slot]\r\n        self.createButton({click_function = 'setUp3', function_owner = self, label = Up3, position = {0,0.45,0.8}, width = 1200, height = 380, font_size = 180, scale = {0.25,0.25,0.25}})\r\n    end\r\nend\r\n\r\nfunction setUp1()\r\n    finalList.Upgrades[currIndex][currSlot-1] = finalList.AuxU[currIndex][currSlot][1]\r\n    finalList.AuxU[currIndex][currSlot] = nil\r\n    repUL = nil\r\n    repUN= 0\r\n    currSlot = nil\r\n    currIndex = nil\r\n    uChecker()\r\nend\r\n\r\nfunction setUp2()\r\n    finalList.Upgrades[currIndex][currSlot-1] = finalList.AuxU[currIndex][currSlot][2]\r\n    finalList.AuxU[currIndex][currSlot] = nil\r\n    repUL = nil\r\n    repUN= 0\r\n    currSlot = nil\r\n    currIndex = nil\r\n    uChecker()\r\nend\r\n\r\nfunction setUp3()\r\n    finalList.Upgrades[currIndex][currSlot-1] = finalList.AuxU[currIndex][currSlot][3]\r\n    finalList.AuxU[currIndex][currSlot] = nil\r\n    repUL = nil\r\n    repUN= 0\r\n    currSlot = nil\r\n    currIndex = nil\r\n    uChecker()\r\nend\r\n\r\n-- Calls the newSpawner, wich will set up a propper postition for the spawning ships (POSITION NEEDS TO BE REFERCENCED TO SELF, NOT GLOBAL)\r\nfunction spawnNow(arg)\r\n    storePos = self.getPosition()\r\n    pos = LocalPos(self, {3.5, 1, 4})\r\n    rot = self.getRotation()\r\n    self.setPosition(pos)\r\n    self.setRotation({0,rot.y,rot.z})\r\n    Global.call('newSpawner', arg)\r\n    self.setPosition(storePos)\r\n    self.setRotation(rot)\r\n    initiate()\r\nend\r\n\r\n\r\n-- String split function\r\nfunction mysplit(inputstr, sep, trim)\r\n    if inputstr ~= nil then\r\n        if sep == nil then\r\n          sep = \"%s\"\r\n        end\r\n        local t={}\r\n        for str in string.gmatch(inputstr, \"([^\"..sep..\"]+)\") do\r\n            if trim then\r\n                str = str:match'^%s*(.*%S)' or ''\r\n            end\r\n            if str ~= \"\" then\r\n                table.insert(t, str)\r\n            end\r\n        end\r\n        return t\r\n    end\r\nend\r\n\r\n-- Combine two execute option tables\r\nfunction combineExecuteOptions(tab1, tab2)\r\n    for k, newOptions in pairs(tab2) do\r\n        if tab1[k] ~= nil then\r\n            for i, opt in pairs(newOptions) do\r\n                if table.find(tab1[k],opt) == nil then\r\n                    table.insert(tab1[k], opt)\r\n                end\r\n            end\r\n        else\r\n            tab1[k] = newOptions\r\n        end\r\n    end\r\nend\r\n\r\n\r\n-------\r\n-- Local Reference function, for spawning items relative to the quick build card\r\nfunction LocalPos(object, position)\r\n    local rot = object.getRotation()\r\n    local lPos = {position[1], position[2], position[3]}\r\n    -- Z-X-Y extrinsic\r\n    local zRot = RotMatrix('z', rot.z)\r\n    lPos = RotateVector(zRot, lPos)\r\n    local xRot = RotMatrix('x', rot.x)\r\n    lPos = RotateVector(xRot, lPos)\r\n    local yRot = RotMatrix('y', rot.y)\r\n    lPos = RotateVector(yRot, lPos)\r\n\r\n    return Vect_Sum(lPos, object.getPosition())\r\nend\r\n\r\n\r\n\r\nfunction RotMatrix(axis, angDeg)\r\n    local ang = math.rad(angDeg)\r\n    local cs = math.cos\r\n    local sn = math.sin\r\n\r\n    if axis == 'x' then\r\n        return {\r\n                    { 1,        0,             0 },\r\n                    { 0,   cs(ang),   -1*sn(ang) },\r\n                    { 0,   sn(ang),      cs(ang) }\r\n               }\r\n    elseif axis == 'y' then\r\n        return {\r\n                    {    cs(ang),   0,   sn(ang) },\r\n                    {          0,   1,         0 },\r\n                    { -1*sn(ang),   0,   cs(ang) }\r\n               }\r\n    elseif axis == 'z' then\r\n        return {\r\n                    { cs(ang),   -1*sn(ang),   0 },\r\n                    { sn(ang),      cs(ang),   0 },\r\n                    { 0,                  0,   1 }\r\n               }\r\n    end\r\nend\r\n\r\n-- Apply given rotation matrix on given vector\r\n-- (multiply matrix and column vector)\r\nfunction RotateVector(rotMat, vect)\r\n    local out = {0, 0, 0}\r\n    for i=1,3,1 do\r\n        for j=1,3,1 do\r\n            out[i] = out[i] + rotMat[i][j]*vect[j]\r\n        end\r\n    end\r\n    return out\r\nend\r\n\r\n-- Sum of two vectors (of any size)\r\nfunction Vect_Sum(vec1, vec2)\r\n    local out = {}\r\n    local k = 1\r\n    while vec1[k] ~= nil and vec2[k] ~= nil do\r\n        out[k] = vec1[k] + vec2[k]\r\n        k = k+1\r\n    end\r\n    return out\r\nend\r\n\r\n------\r\n\nend)\n__bundle_register(\"TTS_xwing/src/UpgradeDb\", function(require, _LOADED, __bundle_register, __bundle_modules)\n\r\nmasterUpgradesDB={}\r\nmasterUpgradesDB[230]={['name']='Crack Shot',['XWS']='crackshot',['slot']=1,['cost']=3,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_1.png',}\r\nmasterUpgradesDB[231]={\r\n    name = 'Daredevil',\r\n    XWS = 'daredevil',\r\n    slot = 1,\r\n    addAction = {'Dare'},\r\n    cost = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_2.png',\r\n    restriction = {Size = {small=true}}\r\n}\r\n\r\nmasterUpgradesDB[232]={['name']='Debris Gambit',['XWS']='debrisgambit',['slot']=1,addAction={'E'},['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_3.png',['restriction']={['Size']={small=true,medium=true}}}\r\nmasterUpgradesDB[233]={['name']='Elusive',['XWS']='elusive',['slot']=1,['cost']=3,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_4.png',['restriction']={['Size']={small=true,medium=true}}}\r\nmasterUpgradesDB[234]={['name']='Expert Handling',['XWS']='experthandling',['slot']=1,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_5.png',}\r\nmasterUpgradesDB[235]={['name']='Fearless',['XWS']='fearless',['slot']=1,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_6.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[236]={['name']='Intimidation',['XWS']='intimidation',['slot']=1,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_7.png',}\r\nmasterUpgradesDB[237]={['name']='Juke',['XWS']='juke',['slot']=1,['cost']=7,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_8.png',['restriction']={ ['Size']={small=true,medium=true}}}\r\nmasterUpgradesDB[238]={['name']='Lone Wolf',['XWS']='lonewolf',['slot']=1,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_9.png',}\r\nmasterUpgradesDB[239]={['name']='Marksmanship',['XWS']='marksmanship',['slot']=1,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_10.png',}\r\nmasterUpgradesDB[240]={['name']='Outmaneuver',['XWS']='outmaneuver',['slot']=1,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_11.png',}\r\nmasterUpgradesDB[241]={['name']='Predator',['XWS']='predator',['slot']=1,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_12.png',}\r\nmasterUpgradesDB[242]={['name']='Ruthless',['XWS']='ruthless',['slot']=1,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_13.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[243]={['name']='Saturation Salvo',['XWS']='saturationsalvo',['slot']=1,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_14.png',}\r\nmasterUpgradesDB[244]={['name']='Selfless',['XWS']='selfless',['slot']=1,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_15.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[245]={['name']='Squad Leader',['XWS']='squadleader',['slot']=1,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_16.png',}\r\nmasterUpgradesDB[246]={['name']='Swarm Tactics',['XWS']='swarmtactics',['slot']=1,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_17.png',}\r\nmasterUpgradesDB[247]={['name']='Trick Shot',['XWS']='trickshot',['slot']=1,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_18.png',}\r\nmasterUpgradesDB[248]={['name']='Heightened Perception',['XWS']='heightenedperception',['slot']=17,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_19.png',}\r\nmasterUpgradesDB[249]={['name']='Instinctive Aim',['XWS']='instinctiveaim',['slot']=17,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_20.png',}\r\nmasterUpgradesDB[250]={['name']='Sense',['XWS']='sense',['slot']=17,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_21.png',}\r\nmasterUpgradesDB[251]={\r\n    name = 'Supernatural Reflexes',\r\n    XWS = 'supernaturalreflexes',\r\n    slot = 17,\r\n    addAction = {'B', 'BR'},\r\n    cost = 'i',\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_22.png',\r\n    restriction = {Size={small=true}}}\r\nmasterUpgradesDB[252]={['name']='Advanced Sensors',['XWS']='advancedsensors',['slot']=2,['cost']=10,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_23.png',}\r\nmasterUpgradesDB[253]={['name']='Collision Detector',['XWS']='collisiondetector',['slot']=2,['cost']=6,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_24.png',}\r\nmasterUpgradesDB[254]={['name']='Fire-Control System',['XWS']='firecontrolsystem',['slot']=2,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_25.png',}\r\nmasterUpgradesDB[255]={['name']='Trajectory Simulator',['XWS']='trajectorysimulator',['slot']=2,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_26.png',}\r\nmasterUpgradesDB[256]={['name']='Heavy Laser Cannon',['XWS']='heavylasercannon',['slot']=3,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_27.png',}\r\nmasterUpgradesDB[257]={['name']='Ion Cannon',['XWS']='ioncannon',['slot']=3,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_28.png',}\r\nmasterUpgradesDB[258]={['name']='Jamming Beam',['XWS']='jammingbeam',['slot']=3,['cost']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_29.png',}\r\nmasterUpgradesDB[259]={['name']='Tractor Beam',['XWS']='tractorbeam',['slot']=3,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_30.png',}\r\n\r\nmasterUpgradesDB[260]={\r\n  name = 'Dorsal Turret',\r\n    XWS = 'dorsalturret',\r\n  slot = 4,\r\n  cost = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_31.png',\r\n  arcs = {turret = {name = 'dorsal turret', range = 2, type = {'singleturret'}}}\r\n}\r\n\r\nmasterUpgradesDB[261]={\r\n  name = 'Ion Cannon Turret',\r\n    XWS = 'ioncannonturret',\r\n  slot = 4,\r\n  cost = 5,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_32.png',\r\n  arcs = {turret = {name = 'ion cannon turret', range = 2, type = {'singleturret'}}}\r\n}\r\n\r\nmasterUpgradesDB[262]={['name']='Adv. Proton Torpedoes',['XWS']='advprotontorpedoes',['slot']=5,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_33.png',}\r\nmasterUpgradesDB[263]={['name']='Ion Torpedoes',['XWS']='iontorpedoes',['slot']=5,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_34.png',}\r\nmasterUpgradesDB[264]={['name']='Proton Torpedoes',['XWS']='protontorpedoes',['slot']=5,['cost']=12,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_35.png',}\r\nmasterUpgradesDB[265]={['name']='Barrage Rockets',['XWS']='barragerockets',['slot']=6,['remSlot']={6}, ['cost']=8,['Charge']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_36.png',['cardB']=cardBackDB['6b'],}\r\nmasterUpgradesDB[266]={['name']='Cluster Missiles',['XWS']='clustermissiles',['slot']=6,['cost']=4,['Charge']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_37.png',}\r\nmasterUpgradesDB[267]={['name']='Concussion Missiles',['XWS']='concussionmissiles',['slot']=6,['cost']=6,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_38.png',}\r\nmasterUpgradesDB[268]={['name']='Homing Missiles',['XWS']='homingmissiles',['slot']=6,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_39.png',}\r\nmasterUpgradesDB[269]={['name']='Ion Missiles',['XWS']='ionmissiles',['slot']=6,['cost']=2,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_40.png',}\r\nmasterUpgradesDB[270]={['name']='Proton Rockets',['XWS']='protonrockets',['slot']=6,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_41.png',}\r\nmasterUpgradesDB[271]={['name']='Freelance Slicer',['XWS']='freelanceslicer',['slot']=8,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_42.png',}\r\nmasterUpgradesDB[272]={['name']='GNK \"Gonk\" Droid',['XWS']='gnkgonkdroid',['slot']=8,['cost']=8,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_43.png',}\r\nmasterUpgradesDB[273]={['name']='Informant',['XWS']='informant',['Condition']=\"Listening Device\",['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_44.png',}\r\nmasterUpgradesDB[274]={['name']='Novice Technician',['XWS']='novicetechnician',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_45.png',}\r\nmasterUpgradesDB[275]={['name']='Perceptive Copilot',['XWS']='perceptivecopilot',['slot']=8,['cost']=8,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_46.png',}\r\nmasterUpgradesDB[276]={\r\n    name = 'Seasoned Navigator',\r\n    XWS = 'seasonednavigator',\r\n    slot = 8,\r\n    cost = 'i',\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_47.png',\r\n    restriction = { },\r\n    executeOptions = function(list, pilotid)\r\n        exopts = {}\r\n        nextdiff = { b = \"w\", w = \"r\"}\r\n        if pilotid == 0 then\r\n            return {}\r\n        end\r\n        for i, man in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\r\n            local Char= man:find(\"%d\")\r\n            local speed = tonumber(man:sub(Char,Char))\r\n            local exopt = {man}\r\n            for k, man2 in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\r\n\r\n                local diff = man2:sub(1,1)\r\n                Char = man2:find(\"%d\")\r\n                local thisspeed = tonumber(man2:sub(Char,Char))\r\n                if (thisspeed == speed) and (nextdiff[diff] ~= nil) and (man ~= man2) then\r\n                    --print(man .. \" \" .. man2 .. \" \" .. tostring(thisspeed))\r\n                    exopt[#exopt+1] = nextdiff[diff] .. man2:sub(2)\r\n                end\r\n            end\r\n            if #exopt > 1 then\r\n                --table.print(exopt)\r\n                exopts[man] = exopt\r\n\r\n            end\r\n        end\r\n        return exopts\r\n    end\r\n\r\n}\r\nmasterUpgradesDB[277]={['name']='Tactical Officer',['XWS']='tacticalofficer',['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_48.png',}\r\nmasterUpgradesDB[278]={['name']='Hotshot Gunner',['XWS']='hotshotgunner',['slot']=16,['cost']=7,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_49.png',}\r\nmasterUpgradesDB[279]={['name']='Skilled Bombardier',['XWS']='skilledbombardier',['slot']=16,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_50.png',}\r\nmasterUpgradesDB[280]={['name']='Veteran Tail Gunner',['XWS']='veterantailgunner',['slot']=16,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_51.png',}\r\nmasterUpgradesDB[281]={['name']='Veteran Turret Gunner',['XWS']='veteranturretgunner',['slot']=16,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_52.png',}\r\nmasterUpgradesDB[282]={['name']='R2 Astromech',['XWS']='r2astromech',['slot']=10,['cost']='a',['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_53.png',}\r\nmasterUpgradesDB[283]={['name']='R3 Astromech',['XWS']='r3astromech',['slot']=10,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_54.png',}\r\nmasterUpgradesDB[284]={['name']='R4 Astromech',['XWS']='r4astromech',['slot']=10,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_55.png',['restriction']={ ['Size']={small=true}}}\r\nmasterUpgradesDB[285]={['name']='R5 Astromech',['XWS']='r5astromech',['slot']=10,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_56.png',}\r\nmasterUpgradesDB[286]={\r\n    name = 'Cloaking Device',\r\n    XWS = 'cloakingdevice',\r\n    slot = 13,\r\n    limited = 1,\r\n    addAction = {'CL'},\r\n    cost = 4,\r\n    Charge = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_57.png',\r\n    restriction = { Size={small=true,medium=true}}}\r\nmasterUpgradesDB[287]={['name']='Contraband Cybernetics',['XWS']='contrabandcybernetics',['slot']=13,['cost']=3,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_58.png',}\r\nmasterUpgradesDB[288]={['name']=\"Deadman's Switch\",['XWS']='deadmansswitch',['slot']=13,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_59.png',}\r\nmasterUpgradesDB[289]={['name']='Feedback Array',['XWS']='feedbackarray',['slot']=13,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_60.png',}\r\nmasterUpgradesDB[290]={['name']='Inertial Dampeners',['XWS']='inertialdampeners',['slot']=13,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_61.png',}\r\nmasterUpgradesDB[291]={['name']='Rigged Cargo Chute',['XWS']='riggedcargochute',['slot']=13,['Bomb']=true,['cost']=4,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_62.png',['restriction']={ ['Size']={large=true,medium=true}}}\r\nmasterUpgradesDB[292]={['name']='Ablative Plating',['XWS']='ablativeplating',['slot']=14,['cost']=6,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_68.png',['restriction']={ ['Size']={large=true,medium=true}}}\r\nmasterUpgradesDB[293]={['name']='Advanced SLAM',['XWS']='advancedslam',['slot']=14,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_69.png',}\r\n\r\nmasterUpgradesDB[294]={\r\n    name = 'Afterburners',\r\n    XWS = 'afterburners',\r\n    addAction = {'B'},\r\n    slot = 14,\r\n    cost = 'i',\r\n    Charge = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_70.png',\r\n    restriction = {\r\n        Size = {small=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[295]={['name']='Electronic Baffle',['XWS']='electronicbaffle',['slot']=14,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_71.png',}\r\nmasterUpgradesDB[296]={['name']='Engine Upgrade',['XWS']='engineupgrade',['slot']=14,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_72.png',}\r\nmasterUpgradesDB[297]={\r\n    name = 'Hull Upgrade',\r\n    XWS = 'hullupgrade',\r\n    slot = 14,\r\n    cost = 'a',\r\n    Hull = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_73.png',\r\n    restriction={}\r\n}\r\nmasterUpgradesDB[298]={['name']='Munitions Failsafe',['XWS']='munitionsfailsafe',['slot']=14,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_74.png',}\r\nmasterUpgradesDB[299]={['name']='Shield Upgrade',['XWS']='shieldupgrade',['slot']=14,['cost']='a',['shd']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_75.png',}\r\nmasterUpgradesDB[300]={['name']='Static Discharge Vanes',['XWS']='staticdischargevanes',['slot']=14,['cost']=6,['card']='https://sb-cdn.fantasyflightgames.com/card_images/en/9c42b09b923d60ac8504e52bd0cbaf25.png',}\r\nmasterUpgradesDB[301]={['name']='Stealth Device',['XWS']='stealthdevice',['slot']=14,['cost']='a',['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_77.png',}\r\nmasterUpgradesDB[302]={['name']='Tactical Scrambler',['XWS']='tacticalscrambler',['slot']=14,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_78.png',['restriction']={ ['Size']={large=true,medium=true}}}\r\nmasterUpgradesDB[303]={['name']='Baze Malbus',['XWS']='bazemalbus',['slot']=8,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_79.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[304]={\r\n    name = 'C-3PO',\r\n    XWS = 'c3po',\r\n    slot = 8,\r\n    addAction = {'C'},\r\n    cost = 8,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_80.png',\r\n    restriction = {Faction={[1]=true}}}\r\nmasterUpgradesDB[305]={['name']='Cassian Andor',['XWS']='cassianandor',['slot']=8,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_81.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[306]={['name']='Chewbacca',['XWS']='chewbacca',['slot']=8,['cost']=3,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_82.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[307]={['name']='\"Chopper\"',['XWS']='chopper-crew',['slot']=8,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_83.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[308]={['name']='Hera Syndulla',['XWS']='herasyndulla',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_84.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[309]={\r\n    name = 'Jyn Erso',\r\n    XWS = 'jynerso',\r\n    slot = 8,\r\n    limited = 1,\r\n    addSqdAction = {'E'},\r\n    cost = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_85.png',\r\n    restriction = {Faction={[1]=true}}}\r\n\r\nmasterUpgradesDB[310]={\r\n    name = 'Kanan Jarrus',\r\n    XWS = 'kananjarrus',\r\n    slot = 8,\r\n    limited = 1,\r\n    cost = 12,\r\n    Force = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_86.png',\r\n    restriction = {Faction={[1]=true}}}\r\n\r\nmasterUpgradesDB[311]={\r\n    name = 'Lando Calrissian',\r\n    XWS = 'landocalrissian',\r\n    slot = 8,\r\n    addAction = {'F','E'},\r\n    cost = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_87.png',\r\n    restriction = {Faction={[1]=true}}}\r\nmasterUpgradesDB[312]={['name']='Leia Organa',['XWS']='leiaorgana',['slot']=8,['cost']=7,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_88.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[313]={\r\n    name = 'Magva Yarro',\r\n    XWS = 'magvayarro',\r\n    slot = 8,\r\n    addAction = {'TL'},\r\n    cost = 7,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_89.png',\r\n    restriction = {Faction={[1]=true}}}\r\nmasterUpgradesDB[314]={['name']='Nien Nunb',['XWS']='niennunb',['slot']=8,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_90.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[315]={['name']='R2-D2',['XWS']='r2d2-crew',['slot']=8,['cost']=8,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_91.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[316]={['name']='Sabine Wren',['XWS']='sabinewren',['slot']=8,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_92.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[317]={['name']='Saw Gerrera',['XWS']='sawgerrera',['slot']=8,['cost']=9,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_93.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[318]={['name']='\"Zeb\" Orrelios',['XWS']='zeborrelios',['slot']=8,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_94.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[319]={['name']='Bistan',['XWS']='bistan',['slot']=16,['cost']=10,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_95.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[320]={['name']='Ezra Bridger',['XWS']='ezrabridger',['slot']=16,['cost']=12,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_96.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[321]={['name']='Han Solo',['XWS']='hansolo',['slot']=16,['cost']=12,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_97.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[322]={['name']='Luke Skywalker',['XWS']='lukeskywalker',['slot']=16,['cost']=26,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_98.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[323]={['name']='\"Chopper\"',['XWS']='chopper',['slot']=10,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_99.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[324]={['name']='R2-D2',['XWS']='r2d2',['slot']=10,['cost']='a',['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_100.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[325]={['name']='R5-D8',['XWS']='r5d8',['slot']=10,['cost']=6,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_101.png',['restriction']={['Faction']={[1]=true}}}\r\nmasterUpgradesDB[326]={['name']='Ghost',['XWS']='ghost',['slot']=15,['cost']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_102.png',['restriction']={['Faction']={[1]=true},['ship']={[23]=true}}}\r\nmasterUpgradesDB[327]={\r\n    name = 'Millennium Falcon',\r\n    XWS = 'millenniumfalcon',\r\n    limited = 1,\r\n    slot = 15,\r\n    addAction = {'E'},\r\n    cost = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_103.png',\r\n    restriction = {Faction={[1]=true},ship={[1] = true}}}\r\nmasterUpgradesDB[328]={\r\n  name = 'Moldy Crow',\r\n    XWS = 'moldycrow',\r\n  limited = 1,\r\n  slot = 15,\r\n  cost = 16,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_104.png',\r\n  restriction = {\r\n    Faction = {[1]=true,[3]=true},\r\n    ship = { [34]=true} },\r\n  arcs = {fixed = { range=3, type = {'front'}}}\r\n  }\r\nmasterUpgradesDB[329]={['name']='Outrider',['XWS']='outrider',['slot']=15,['cost']=14,['card']='https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Cards/Erreta/Outrider.png',['restriction']={['Faction']={[1]=true},['ship']={5}}}\r\nmasterUpgradesDB[330]={['name']='Phantom',['XWS']='phantom',['slot']=15,['cost']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_106.png',['restriction']={['Faction']={[1]=true},['ship']={[32]=true,[8]=true}}}\r\nmasterUpgradesDB[331]={\r\n    name = 'Pivot Wing',\r\n    XWS = 'pivotwing',\r\n    slot = 18,\r\n    addAction = {'Piv'},\r\n    cost = 0,\r\n    dual = true,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_107.png',\r\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_107b.png',\r\n    restriction = {Faction={[1]=true},ship={[15]=true}}}\r\nmasterUpgradesDB[333]={\r\n    name = 'Servomotor S-Foils',\r\n    XWS = 'servomotorsfoils',\r\n    slot = 18,\r\n    addAction = {'B'},\r\n    cost = 0,\r\n    dual = true,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_108.png',\r\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_108b.png',\r\n    restriction={Faction={[1]=true},ship={[33]=true}}}\r\n\r\nmasterUpgradesDB[335]={['name']='Admiral Sloane',['XWS']='admiralsloane',['slot']=8,['cost']=12,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_109.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[336]={['name']='Agent Kallus',['XWS']='agentkallus',['Condition']=\"Hunted\",['slot']=8,['cost']=5,['card']='https://sb-cdn.fantasyflightgames.com/card_images/en/5e9b30fb5a437355afd9d17d8700bd9c.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[337]={\r\n    name = 'Ciena Ree',\r\n    XWS = 'cienaree',\r\n    slot = 8,\r\n    limited = 1,\r\n    addSqdAction = {'Piv'},\r\n    cost = 6,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_111.png',\r\n    restriction = {Faction={[2]=true}}}\r\n\r\nmasterUpgradesDB[338]={\r\n    name = 'Darth Vader',\r\n    XWS = 'darthvader',\r\n    slot = 8,\r\n    limited = 1,\r\n    cost = 14,\r\n    Force = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_112.png',\r\n    restriction = {Faction={[2]=true}}}\r\n\r\nmasterUpgradesDB[339]={['name']='Death Troopers',['XWS']='deathtroopers',['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_113.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[340]={\r\n    name = 'Director Krennic',\r\n    XWS = 'directorkrennic',\r\n    Condition = \"Optimized Prototype\",\r\n    slot = 8,\r\n    limited = 1,\r\n    addAction = {'TL'},\r\n    cost = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_114.png',\r\n    restriction = {Faction={[2]=true}}}\r\nmasterUpgradesDB[341]={['name']='Emperor Palpatine',['XWS']='emperorpalpatine',['slot']=8,['remSlot']={8}, ['cost']=11,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_115.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[342]={['name']='Grand Inquisitor',['XWS']='grandinquisitor',['slot']=8,['cost']=13,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_116.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[343]={['name']='Grand Moff Tarkin',['XWS']='grandmofftarkin',['slot']=8,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_117.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[344]={['name']='ISB Slicer',['XWS']='isbslicer',['slot']=8,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_118.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[345]={\r\n    name = 'Minister Tua',\r\n    XWS = 'ministertua',\r\n    slot = 8,\r\n    limited = 1,\r\n    addAction = {'R'},\r\n    cost = 7,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_119.png',\r\n    restriction = {Faction={[2]=true}}}\r\n\r\nmasterUpgradesDB[346]={\r\n    name='Moff Jerjerrod',\r\n    XWS = 'moffjerjerrod',\r\n    slot = 8,\r\n    limited = 1,\r\n    addSqdAction = {'B'},\r\n    cost = 8,\r\n    Charge = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_120.png',\r\n    restriction = {Faction={[2]=true}}}\r\n\r\nmasterUpgradesDB[347]={['name']='Seventh Sister',['XWS']='seventhsister',['slot']=8,['cost']=9,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_121.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[348]={['name']='Fifth Brother',['XWS']='fifthbrother',['slot']=16,['cost']=12,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_122.png',['restriction']={['Faction']={[2]=true}}}\r\nmasterUpgradesDB[349]={['name']='Dauntless',['XWS']='dauntless',['slot']=15,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_123.png',['restriction']={['Faction']={[2]=true},['ship']={[28]=true}}}\r\nmasterUpgradesDB[350]={['name']='Os-1 Arsenal Loadout',['XWS']='os1arsenalloadout',['slot']=18,['cost']=0,['addSlot']={5, 6},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_125.png',['restriction']={['Faction']={[2]=true},['ship']={[14]=true}}}\r\nmasterUpgradesDB[351]={['name']='Xg-1 Assault Configuration',['XWS']='xg1assaultconfiguration',['slot']=18,['cost']=0,['addSlot']={3},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_126.png',['restriction']={['Faction']={[2]=true},['ship']={[14]=true}}}\r\nmasterUpgradesDB[352]={\r\n    name = '0-0-0',\r\n    XWS = '000',\r\n    slot = 8,\r\n    addAction = {'C'},\r\n    cost = 5,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_127.png',\r\n    restriction = {Faction={[2]=true, [3]=true},card_id=343}}\r\nmasterUpgradesDB[353]={['name']='4-LOM',['XWS']='4lom',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_128.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[354]={['name']='Boba Fett',['XWS']='bobafett',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_129.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[355]={\r\n    name = 'Cad Bane',\r\n    XWS = 'cadbane',\r\n    slot = 8,\r\n    cost = 3,\r\n    limited = 1,\r\n    addAction = {'B'},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_130.png',\r\n    restriction = {Faction={[3]=true}}}\r\nmasterUpgradesDB[356]={['name']='Cikatro Vizago',['XWS']='cikatrovizago',['slot']=8,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_131.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[357]={\r\n    name = 'IG-88D',\r\n    XWS = 'ig88d',\r\n    slot = 8,\r\n    limited = 1,\r\n    addAction = {'C'},\r\n    cost = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_132.png',\r\n    restriction = { Faction ={[3]=true}}}\r\nmasterUpgradesDB[358]={['name']='Jabba the Hutt',['XWS']='jabbathehutt',['slot']=8,['remSlot']={8},['cost']=6,['Charge']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_133.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[359]={['name']='Ketsu Onyo',['XWS']='ketsuonyo',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_134.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[360]={['name']='Latts Razzi',['XWS']='lattsrazzi',['slot']=8,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_135.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[361]={['name']='Maul',['XWS']='maul',['slot']=8,['cost']=10,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_136.png',['restriction']={['Faction']={[1]=true,[3]=true},['card_id']=325}}\r\nmasterUpgradesDB[362]={['name']='Unkar Plutt',['XWS']='unkarplutt',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_137.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[363]={['name']='Zuckuss',['XWS']='zuckuss',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_138.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[364]={['name']='Bossk',['XWS']='bossk',['slot']=16,['cost']=8,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_139.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[365]={['name']='BT-1',['XWS']='bt1',['slot']=16,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_140.png',['restriction']={['Faction']={[2]=true, [3]=true},['card_id']=343}}\r\nmasterUpgradesDB[366]={['name']='Dengar',['XWS']='dengar',['slot']=16,['cost']=6,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_141.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[367]={['name']='Greedo',['XWS']='greedo',['slot']=16,['cost']=1,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_142.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[368]={['name']='\"Genius\"',['XWS']='genius',['slot']=10,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_143.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[369]={['name']='R5-P8',['XWS']='r5p8',['slot']=10,['cost']=4,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_144.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[370]={['name']='R5-TK',['XWS']='r5tk',['slot']=10,['cost']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_145.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[371]={['name']='Andrasta',['XWS']='andrasta',['slot']=15,['cost']=2,['addSlot']={12},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_146.png',['restriction']={['Faction']={[3]=true},['ship']={[10]=true}}}\r\nmasterUpgradesDB[372]={['name']='Havoc',['XWS']='havoc',['slot']=15,['cost']=2,['addSlot']={2, 10},['remSlot']={8},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_147.png',['restriction']={['Faction']={[3]=true},['ship']={[4]=true}}}\r\nmasterUpgradesDB[373]={['name']=\"Hound's Tooth\",['XWS']='houndstooth',['Docking']=true,['slot']=15,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_148.png',['restriction']={['Faction']={[3]=true},['ship']={[24]=true}}}\r\n\r\nmasterUpgradesDB[374]={\r\n    name = 'IG-2000',\r\n    XWS = 'ig2000',\r\n    slot = 15,\r\n    cost = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_149.png',\r\n    restriction = {\r\n        Faction = {[3]=true},\r\n        ship =  {[21]=true}\r\n    },\r\n    executeOptions = function(list, me)\r\n        for k, pid in pairs(list.Pilots) do\r\n            pilot = masterPilotDB[pid]\r\n            if pid ~= me and pilot.name == \"IG-88D\" then\r\n                for _, uid in pairs(list.Upgrades[k]) do\r\n                    if  masterUpgradesDB[uid].name == \"IG-2000\" then\r\n                        return {\r\n                            rbl3s = {[1]='rtl3s', [2]='rbl3s', [3]='rk3'},\r\n                            rbr3s = {[1]='rk3', [2]='rbr3s', [3]='rtr3s'}\r\n                        }\r\n                    end\r\n                end\r\n            end\r\n        end\r\n        return {}\r\n    end\r\n}\r\nmasterUpgradesDB[375]={['name']='Marauder',['XWS']='marauder',['slot']=15,['cost']=6,['addSlot']={16},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_150.png',['restriction']={['Faction']={[3]=true},['ship']={[10]=true}}}\r\nmasterUpgradesDB[376]={\r\n    name = 'Mist Hunter',\r\n    XWS = 'misthunter',\r\n    slot = 15,\r\n    limited = 1,\r\n    addAction = {'BR'},\r\n    cost = 1,\r\n    addSlot = {3},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_151.png',\r\n    restriction ={Faction={[3]=true},ship={[22]=true}}}\r\nmasterUpgradesDB[377]={['name']='Punishing One',['XWS']='punishingone',['slot']=15,['cost']=5,['addSlot']={10},['remSlot']={8},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_152.png',['restriction']={['Faction']={[3]=true},['ship']={[45]=true}}}\r\nmasterUpgradesDB[378]={['name']='Shadow Caster',['XWS']='shadowcaster',['slot']=15,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_153.png',['restriction']={['Faction']={[3]=true},['ship']={[42]=true}}}\r\nmasterUpgradesDB[379]={\r\n    name = 'Slave I',\r\n    XWS = 'slavei',\r\n    title = \"Boba's ride\",\r\n    slot = 15,\r\n    cost = 6,\r\n    addSlot = {5},\r\n    executeOptions = function(list, pid)\r\n        return {\r\n            bbl1 = {[1]='bbl1', [2]='bbr1'},\r\n            wbl2 = {[1]='wbl2', [2]='wbr2'},\r\n            wbl3 = {[1]='wbl3', [2]='wbr3'},\r\n            bbr1 = {[1]='bbr1', [2]='bbl1'},\r\n            wbr2 = {[1]='wbr2', [2]='wbl2'},\r\n            wbr3 = {[1]='wbr3', [2]='wbl3'},\r\n            wtl1 = {[1]='wtl1', [2]='wtr1'},\r\n            wtl2 = {[1]='wtl2', [2]='wtr2'},\r\n            wtr1 = {[1]='wtr1', [2]='wtl1'},\r\n            wtr2 = {[1]='wtr2', [2]='wtl2'},\r\n        }\r\n    end,\r\n    card = 'https://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_154.png',\r\n    restriction = {\r\n        Faction = {[3]=true},\r\n        ship = {[10]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[380]={['name']='Virago',['XWS']='virago',['slot']=15,['cost']=7,['Charge']=2,['shd']=1,['addSlot']={14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_155.png',['restriction']={['ship']={[3]=true}}}\r\nmasterUpgradesDB[381]={\r\n    name = 'Composure',\r\n    XWS = 'composure',\r\n    slot =1,\r\n    addAction = {'F'},\r\n    cost = 1,\r\n    card = 'https://sb-cdn.fantasyflightgames.com/card_images/en/73927eb0dc7bc2bb0de194f1af1dead2.png'}\r\nmasterUpgradesDB[382]={['name']='Chewbacca',['XWS']='chewbacca-crew',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_157.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[383]={['name']='L3-37',['XWS']='l337',['dual']=true,['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_158.png',['cardB']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_158b.png',['restriction']={['Faction']={[3]=true}}}\r\n--[[masterUpgradesDB[384]={['name']=\"L3-37',['XWS']='l337's Programming\",['dual']=1,['slot']=18,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_158b.png',['cardB']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_158.png',['restriction']={['Faction']={[3]=true}}}]]\r\nmasterUpgradesDB[385]={['name']='Lando Calrissian',['XWS']='landocalrissian-crew',['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_159.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[386]={['name']='Tobias Beckett',['XWS']='tobiasbeckett',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_160.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[387]={['name']=\"Qi'ra\",['XWS']='qira',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_161.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[388]={['name']='Agile Gunner',['XWS']='agilegunner',['slot']=16,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_162.png',}\r\nmasterUpgradesDB[389]={['name']='Han Solo',['XWS']='hansolo-gunner',['slot']=16,['cost']=10,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_163.png',['restriction']={['Faction']={[3]=true}}}\r\nmasterUpgradesDB[390]={['name']=\"Lando's Millennium Falcon\",['XWS']='landosmillenniumfalcon',['slot']=15,['cost']=3,['card']='https://sb-cdn.fantasyflightgames.com/card_images/en/96b50606e65bfe308b9e75a03d9a1884.png',['restriction']={['Faction']={[3]=true},['ship']={[47]=true}}}\r\nmasterUpgradesDB[391]={\r\n    name = 'ST-321',\r\n    XWS = 'st321',\r\n    slot = 15,\r\n    limited = 1,\r\n    addAction = {'TL'},\r\n    cost = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_124.png',\r\n    restriction = {Faction = {[2]=true}, ship ={[26]=true}}}\r\n\r\nmasterUpgradesDB[392]={['name']='Bomblet Generator',['XWS']='bombletgenerator',['slot']=12,['remSlot']={12},['Bomb']=true,['cost']=2,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_63.png',['cardB']=cardBackDB['12b'],}\r\nmasterUpgradesDB[393]={['name']='Conner Nets',['XWS']='connernets',['slot']=12,['Bomb']=true,['cost']=3,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_64.png',}\r\nmasterUpgradesDB[394]={['name']='Proton Bombs',['XWS']='protonbombs',['slot']=12,['Bomb']=true,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_65.png',}\r\nmasterUpgradesDB[395]={['name']='Proximity Mines',['XWS']='proximitymines',['slot']=12,['Bomb']=true,['cost']=6,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_66.png',}\r\nmasterUpgradesDB[396]={['name']='Seismic Charges',['XWS']='seismiccharges',['slot']=12,['Bomb']=true,['cost']=3,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_67.png',}\r\n\r\n\r\n\r\nmasterUpgradesDB[459]={['name']=\"Fanatical\",['XWS']='fanatical',['slot']=1,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/8b164bdb2b401b6741519f6c6e067550.png',['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[460]={['name']=\"Advanced Optics\",['XWS']='advancedoptics',['slot']=19,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e77e204e6b7164f6a1d945b20a0c4359.png',}\r\nmasterUpgradesDB[461]={['name']=\"Hyperspace Tracking Data\",['XWS']='hyperspacetrackingdata',['slot']=19,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a48713c6784bf33bd3f8b36eb19221c3.png',['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[462]={['name']=\"Pattern Analyzer\",['XWS']='patternanalyzer',['slot']=19,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/ace963fc4fe9d97f64ab8564dc4beae7.png',}\r\nmasterUpgradesDB[463]={['name']=\"Primed Thrusters\",['XWS']='primedthrusters',['slot']=19,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a114625347a0f3088f4679f8107ab631.png',}\r\nmasterUpgradesDB[464]={['name']=\"Targeting Synchronizer\",['XWS']='targetingsynchronizer',['slot']=19,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/83782f01cd3486006c4d279864d2983a.png',}\r\nmasterUpgradesDB[465]={['name']=\"Captain Phasma\",['XWS']='captainphasma',['slot']=8,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/784566afc8c540d5e392689865207059.png',['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[466]={['name']=\"General Hux\",['XWS']='generalhux',['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/fa0b8492eff625bc66f00bd561015465.png',['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[467]={['name']=\"Kylo Ren\",['XWS']='kyloren',['Condition']=\"I'll Show You the Dark Side\",['slot']=8,['cost']=11,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f60322a1f5ace7e45f6c7e0fa0200705.png',['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[468]={['name']=\"Petty Officer Thanisson\",['XWS']='pettyofficerthanisson',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/900397d209adfd3f7bd6429909cc20cc.png',['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[469]={['name']=\"Supreme Leader Snoke\",['XWS']='supremeleadersnoke',['slot']=8,['remSlot']={8},['cost']=13,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/5b699f8b5268e5290c42adce0fd2ee3e.png',['cardB']=cardBackDB['8b'],['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[470]={['name']=\"Special Forces Gunner\",['XWS']='specialforcesgunner',['slot']=16,['cost']=9,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d3aed19c7eb6f9ebc2352ac49cdd6b87.png',['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[471]={['name']=\"Heroic\",['XWS']='heroic',['slot']=1,['cost']='a',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/9f8baf4893cd90288df44b69b50fa788.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[472]={\r\n    name = \"C-3PO\",\r\n    XWS = 'c3po-crew',\r\n    slot = 8,\r\n    addAction = {'C'},\r\n    cost = 5,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/a0e80bb89748e7415e945a050f82ba84.png',\r\n    restriction = {Faction={[4]=true}}}\r\nmasterUpgradesDB[473]={['name']=\"Chewbacca\",['XWS']='chewbacca-crew-swz19',['slot']=8,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/3090c218acff7dc71a81e791ce15860e.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[474]={\r\n    name = \"Han Solo\",\r\n    XWS = 'hansolo-crew',\r\n    slot = 8,\r\n    addAction = {'E'},\r\n    cost = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/622ea4b573afbb5c95b3e9f2989a8aef.png',\r\n    restriction = {Faction={[4]=true}}}\r\nmasterUpgradesDB[475]={\r\n    name = \"Rose Tico\",\r\n    XWS = 'rosetico',\r\n    slot = 8,\r\n    addAction = {'TL'},\r\n    cost = 9,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/60ac08169a90794c33d1d582f1a08480.png',\r\n    restriction = {Faction={[4]=true}}}\r\nmasterUpgradesDB[476]={['name']=\"Finn\",['XWS']='finn',['slot']=16,['cost']=9,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/79477be319935f42270f1712cd269dff.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[477]={['name']=\"Paige Tico\",['XWS']='paigetico',['slot']=16,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/9dc15f634233b5daba107a07aa63d04c.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[478]={['name']=\"Rey\",['XWS']='rey-gunner',['slot']=16,['cost']=13,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e11aec8ae6ec855694947bc2f9d1917e.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[479]={\r\n    name = \"BB-8\",\r\n    XWS = 'bb8',\r\n    slot = 10,\r\n    addAction = {'BR'},\r\n    cost = 'i',\r\n    Charge = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/37297ef7839800afd543de5d1a363561.png',\r\n    restriction = {Faction={[4]=true}}}\r\nmasterUpgradesDB[480]={\r\n    name = \"BB Astromech\",\r\n    XWS = 'bbastromech',\r\n    slot = 10,\r\n    addAction = {'BR'},\r\n    cost = 'i',\r\n    Charge = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/010399f4054469aed3b04acba08d41b0.png',\r\n    restriction = {Faction={[4]=true}}}\r\nmasterUpgradesDB[481]={['name']=\"M9-G8\",['XWS']='m9g8',['slot']=10,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/cd67f33e8aa52d2aeb07f432125a8c73.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[482]={['name']=\"R2-HA\",['XWS']='r2ha',['slot']=10,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/b3e6d35ca6b6fd297312248ddf4e69a7.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[483]={['name']=\"R5-X3\",['XWS']='r5x3',['slot']=10,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/aed4536536b67bae316b260ed151c22a.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[484]={['name']=\"Black One\",['XWS']='blackone',['slot']=15,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/3e9870bff7f61acc12970c254eaeca89.png',['restriction']={ ['ship']={[53]=true}}}\r\nmasterUpgradesDB[485]={['name']=\"Rey's Millennium Falcon\",['XWS']='reysmillenniumfalcon',['slot']=15,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/23627443c7f5e7447c306ea7c6242634.png',['restriction']={ ['ship']={[57]=true}}}\r\nmasterUpgradesDB[486]={\r\n    name = \"Integrated S-foils\",\r\n    XWS = 'integratedsfoils',\r\n    dual = true,\r\n    slot = 18,\r\n    addAction = {'BR'},\r\n    cost = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e3b44142faf0f13e541bf674a6c06dbc.png',\r\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/en/49372b4efb974ff673a1b79441186fd5.png',\r\n    restriction = {Faction={[4]=true}, ship={[53]=true}}}\r\nmasterUpgradesDB[488]={['name']=\"Ferrosphere Paint\",['XWS']='ferrospherepaint',['slot']=19,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/55d8ff7d35b714d9c9a6ef1fd7732a60.png',['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[489]={['name']=\"Hate\",['XWS']='hate',['slot']=17,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/4a10b5c8a3d796116163a741d145f4e9.png',}\r\nmasterUpgradesDB[490]={['name']=\"Predictive Shot\",['XWS']='predictiveshot',['slot']=17,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e0100c63b2753daf68a9d3948824b086.png',}\r\nmasterUpgradesDB[491]={['name']=\"Biohexacrypt Codes\",['XWS']='biohexacryptcodes',['slot']=19,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/094f3bbc6e3041886398e9eaf692d4ab.png',['restriction']={['Faction']={[5]=true}}}\r\n\r\n--w3up\r\nmasterUpgradesDB[544]={['name']=\"Dedicated\",['XWS']='dedicated',['slot']=1,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/31c6723d7e5670c257acfa8788160437.png',['restriction']={['Faction']={[6]=true}}}\r\nmasterUpgradesDB[529]={['name']=\"Treacherous\",['XWS']='treacherous',['slot']=1,['cost']=2,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a10d907fea50e32ab28d924c67486d37.png',['restriction']={['Faction']={[7]=true}}}\r\nmasterUpgradesDB[530]={['name']=\"TV-94\",['XWS']='tv94',['slot']=20,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/633a34a139c912116c1b034fc2765484.png',['restriction']={['Faction']={[7]=true}}}\r\nmasterUpgradesDB[531]={\r\n    name = \"Kraken\",\r\n    XWS = 'kraken',\r\n    slot = 20,\r\n    addAction = {'C'},\r\n    cost = 11,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/47dae8a3ecd27a48f3dc35aff03a1a75.png',\r\n    restriction = {Faction={[7]=true}}}\r\nmasterUpgradesDB[532]={['name']=\"Energy-Shell Charges\",['XWS']='energyshellcharges',['slot']=6,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/4b6213e5ed13735bb381df08bdd1398d.png',['restriction']={['Faction']={[7]=true}}}\r\nmasterUpgradesDB[533]={['name']=\"Soulless One\",['XWS']='soullessone',['slot']=15,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/36b33e7330846570087096cb55fba140.png',['restriction']={ ['ship']={[58]=true}}}\r\nmasterUpgradesDB[534]={['name']=\"Impervium Plating\",['XWS']='imperviumplating',['slot']=14,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/93e0fe1b2931944d128126b854c4ad33.png',['restriction']={ ['ship']={[58]=true}}}\r\n\r\nmasterUpgradesDB[536]={['name']=\"Brilliant Evasion\",['XWS']='brilliantevasion',['slot']=17,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/24b175ad35d035f33a35056b0d1d7a36.png',}\r\nmasterUpgradesDB[537]={['name']=\"K2-B4\",['XWS']='k2b4',['slot']=20,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/2178079ef9488899e51e927b2e136572.png',['restriction']={['Faction']={[7]=true}}}\r\n\r\nmasterUpgradesDB[539]={['name']=\"Count Dooku\",['XWS']='countdooku',['slot']=8,['cost']=10,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a1920988dd8634d9780c6363e3f36f6e.png',['restriction']={['Faction']={[7]=true}}}\r\nmasterUpgradesDB[540]={['name']=\"General Grievous\",['XWS']='generalgrievous',['slot']=8,['cost']=3,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f3740c47b0253ec848c4cfcdde195393.png',['restriction']={['Faction']={[7]=true}}}\r\nmasterUpgradesDB[541]={['name']=\"DRK-1 Probe Droids\",['XWS']='drk1probedroids',['Condition']='DRK-1 Probe Droid',['slot']=12,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/44556cd042e536b41e7e89850e13081a.png',['restriction']={['Faction']={[7]=true}}}\r\nmasterUpgradesDB[542]={\r\n    name = \"Scimitar\",\r\n    XWS = 'scimitar',\r\n    slot = 15,\r\n    limited = 1,\r\n    addAction = {'CL'},\r\n    cost = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/73d545fd02afd29fa8aa9e9015e7be6e.png',\r\n    restriction = { ship ={[60]=true}}}\r\n\r\nmasterUpgradesDB[543]={\r\n    name = \"Discord Missiles\",\r\n    XWS = 'discordmissiles',\r\n    remotes = {\"Buzz Droid Swarm\"},\r\n    limited = 3,\r\n    slot = 6,\r\n    cost = 4,\r\n    Charge = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/ee2f0b906cb4f1dbcafc274f44b76d3d.png',\r\n    restriction = {\r\n        Faction = {[7]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[545]={['name']=\"Battle Meditation\",['XWS']='battlemeditation',['slot']=17,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d0641df31a0fc40c501055dcd34094f6.png',['restriction']={['Faction']={[6]=true}}}\r\nmasterUpgradesDB[546]={['name']=\"R4-P Astromech\",['XWS']='r4pastromech',['slot']=10,['cost']=2,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/26f6dd68ba6bb37fa5315f45a6237c88.png',['restriction']={['Faction']={[6]=true}}}\r\nmasterUpgradesDB[547]={['name']=\"R4-P17\",['XWS']='r4p17',['slot']=10,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/80c71951bb28b45b9ffdc84c9e7e69f8.png',['restriction']={['Faction']={[6]=true}}}\r\nmasterUpgradesDB[548]={['name']=\"Delta-7B\",['XWS']='delta7b',['slot']=18,['cost']='i',['shd']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/515903e04a0d06a9200860698326896d.png',['restriction']={ ['ship']={[61]=true}}}\r\nmasterUpgradesDB[549]={['name']=\"Calibrated laser Targeting\",['XWS']='calibratedlasertargeting',['slot']=18,['cost']='i',['remSlot']={14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f3e06326ab525e07f9a85363b6d69580.png',['cardB']=cardBackDB.mc,['restriction']={ ['ship']={[61]=true}}}\r\nmasterUpgradesDB[550]={['name']=\"Spare Parts Canisters\",['XWS']='sparepartscanisters',['slot']=14,['cost']=4,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/79d9f2b2bc32bd78ab67dc82eece696a.png',}\r\nmasterUpgradesDB[551]={\r\n    name = \"R4-P44\",\r\n    XWS = 'r4p44',\r\n    slot = 10,\r\n    limited = 1,\r\n    addAction = {'C'},\r\n    cost = 3,\r\n    Charge = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/749fa54f44bc3327349aa3f8b1742a67.png',\r\n    restriction = {Faction={[6]=true}}}\r\nmasterUpgradesDB[552]={['name']=\"Clone Commander Cody\",['XWS']='clonecommandercody',['slot']=16,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1da8e9de468d456f724d0c1f37e90d28.png',['restriction']={['Faction']={[6]=true}}}\r\nmasterUpgradesDB[553]={['name']=\"Seventh Fleet Gunner\",['XWS']='seventhfleetgunner',['slot']=16,['cost']=9,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a532c1de311e8d0a288af8232495a007.png',['restriction']={['Faction']={[6]=true}}}\r\n\r\nmasterUpgradesDB[554]={\r\n    name = \"Synchronized Console\",\r\n    XWS = 'synchronizedconsole',\r\n    slot = 14,\r\n    addSqdAction = {'TL'},\r\n    cost = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e3e5bd38f39f904fbaaa75293e56fb38.png',\r\n    restriction = {Faction={[6]=true}}}\r\n\r\nmasterUpgradesDB[555]={\r\n    name = \"Grappling Struts\",\r\n    XWS = 'grapplingstruts',\r\n    dual = true,\r\n    slot = 18,\r\n    addAction = {'Piv'},\r\n    cost = 1,\r\n    executeOptions = function(moves)\r\n        return {\r\n            rk1  = {[1]='rk1', [2]='bs0'},\r\n            wtl1 = {[1]='wtl1', [2]='btl0'},\r\n            wtr1 = {[1]='wtr1', [2]='btr0'},\r\n            wbl2 = {[1]='wbl2', [2]='btl0'},\r\n            wbr2 = {[1]='wbr2', [2]='btr0'},\r\n            btl2 = {[1]='btl2', [2]='btl0'},\r\n            btr2 = {[1]='btr2', [2]='btr0'},\r\n            rtl2t = {[1]='rtl2t', [2]='btl0'},\r\n            rtr2t = {[1]='rtr2t', [2]='btr0'},\r\n            rbl3 = {[1]='rbl3', [2]='btl0'},\r\n            rbr3 = {[1]='rbr3', [2]='btr0'},\r\n            wtl3 = {[1]='wtl3', [2]='btl0'},\r\n            wtr3 = {[1]='wtr3', [2]='btr0'},\r\n            bs3  = {[1]='bs3', [2]='bs0'},\r\n            bs4  = {[1]='bs4', [2]='bs0'},\r\n            ws5  = {[1]='ws5', [2]='bs0'},\r\n        }\r\n    end,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/ca74271f47c42b390ca0ba0b389144a5.png',\r\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/en/be82da17cfd39003fda380bead210eb9.png',\r\n    restriction ={ ship={[59]=true}}}\r\n\r\nmasterUpgradesDB[556]={\r\n    name = \"Chancellor Palpatine\",\r\n    XWS = 'chancellorpalpatine',\r\n    slot = 8,\r\n    limited = 1,\r\n    addSqdAction = {'F'},\r\n    cost = 14,\r\n    Force = 1,\r\n    dual = true,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/8218d7b903ea8c0c0f88375124a93a5f.png',\r\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/en/fe4d36bbd6f43ada43a5cf55354211c0.png',\r\n    restriction = {Faction={[6]=true,[7]=true}}}\r\n\r\n--w4\r\nmasterUpgradesDB[577]={\r\n    name = \"Passive Sensors\",\r\n    XWS = 'passivesensors',\r\n    slot = 2,\r\n    addAction = {'C','TL'},\r\n    cost = 'i',\r\n    Charge = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/08a980b359fb73dbcb9a315e94d505f0.png',\r\n    restriction ={ }}\r\nmasterUpgradesDB[578]={['name']=\"Autoblasters\",['XWS']='autoblasters',['slot']=3,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/59d4a52e3a534dd090259bd5546e7bab.png',\r\n                        }\r\nmasterUpgradesDB[579]={['name']=\"Plasma Torpedoes\",['XWS']='plasmatorpedoes',['slot']=5,['cost']=7,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/60fb85c3782c235904678bac8a106150.png',\r\n                        }\r\nmasterUpgradesDB[580]={['name']=\"Diamond-Boron Missiles\",['XWS']='diamondboronmissiles',['slot']=6,['cost']=5,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f2c1893053af65ce47300fb133a30312.png',\r\n                        }\r\nmasterUpgradesDB[581]={['name']=\"Amilyn Holdo\",['XWS']='amilynholdo',['slot']=8,['cost']=8,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/cbe5e849e9daa4f3f968b2ff6e2879b1.png',\r\n                        ['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[582]={\r\n    name = \"GA-97\",\r\n    XWS = 'ga97',\r\n    slot = 8,\r\n    limited = 1,\r\n    addAction = {'C'},\r\n    cost = 6,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3af44c6d32812dc07238b40842d67b47.png',\r\n    restriction = {Faction ={[4]=true}}}\r\nmasterUpgradesDB[583]={\r\n    name = \"Kaydel Connix\",\r\n    XWS = 'kaydelconnix',\r\n    slot = 8,\r\n    cost = 5,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/29a0eb418850a3821c38874daf0a6b0d.png',\r\n    restriction = {\r\n        Faction = {[4]=true}\r\n    },\r\n    executeOptions = function(list, pilotid)\r\n        exopts = {}\r\n        nextdiff = { b = \"w\", w = \"r\", r = \"r\", p = \"p\"}\r\n        basicman = { [0] = {\"tl1\", \"bl1\", \"s1\", \"br1\", \"tr1\"},\r\n                     [1] = {\"tl2\", \"bl2\", \"s2\", \"br2\", \"tr2\"},\r\n                     [2] = {\"tl3\", \"bl3\", \"s3\", \"br3\", \"tr3\"},\r\n                     [3] = {\"s4\"},\r\n                     [4] = {\"s5\"},\r\n                     [5] = {}\r\n                   }\r\n       if pilotid == 0 then\r\n           return {}\r\n       end\r\n        for _, man in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\r\n            local Char= man:find(\"%d\")\r\n            local speed = tonumber(man:sub(Char,Char))\r\n            --print(\"Man:\" .. man .. \" lower:\" .. lower .. \" higher:\" .. higher)\r\n            exopt = {man}\r\n            for _, man2 in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\r\n                local diff = man2:sub(1,1)\r\n                if nextdiff[diff] ~= nil then\r\n                    for _, bman in pairs(basicman[speed]) do\r\n                        if man2:sub(2) == bman then\r\n                            exopt[#exopt+1]= nextdiff[diff] .. bman\r\n                        end\r\n                    end\r\n                end\r\n            end\r\n            if #exopt > 1 then\r\n                --table.print(exopt)\r\n                exopts[man] = exopt\r\n            end\r\n        end\r\n        return exopts\r\n    end\r\n}\r\n\r\nmasterUpgradesDB[584]={['name']=\"Korr Sella\",['XWS']='korrsella',['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/dd102b8e517399d12b17756a863d19ee.png',\r\n                        ['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[585]={['name']=\"Larma D'Acy\",['XWS']='larmadacy',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/555a815e60cd7bf4612109c3fd65beaa.png',\r\n                        ['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[586]={['name']=\"Leia Organa\",['XWS']='leiaorgana-resistance',['slot']=8,['remSlot']={8},['cost']=17,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/0a194c8c529278b471e64edc597b06fc.png', ['cardB']=cardBackDB['8b'],\r\n                        ['restriction']={['Faction']={[4]=true}}}\r\nmasterUpgradesDB[587]={\r\n    name = \"PZ-4CO\",\r\n    XWS = 'pz4co',\r\n    slot = 8,\r\n    limited = 1,\r\n    addAction = {'C'},\r\n    cost = 5,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/11c5bdf18a62dc43bdda0834026dace2.png',\r\n    restriction = { Faction={[4]=true}}}\r\nmasterUpgradesDB[588]={['name']=\"R2-A6\",['XWS']='r2a6',['slot']=10,['cost']=6,\r\n    executeOptions = function(list, pilotid)\r\n        exopts = {}\r\n        for _, man in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\r\n            local Char= man:find(\"%d\")\r\n            local speed = tonumber(man:sub(Char,Char))\r\n            local lower = man:sub(2,Char-1) .. tostring(speed - 1) .. man:sub(Char + 1)\r\n            local higher = man:sub(2,Char-1) .. tostring(speed + 1) .. man:sub(Char + 1)\r\n            --print(\"Man:\" .. man .. \" lower:\" .. lower .. \" higher:\" .. higher)\r\n            exopt = {man}\r\n            for _, man2 in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\r\n                if man2:sub(2) == lower then\r\n                    exopt[#exopt+1]=man2\r\n                end\r\n                if man2:sub(2) == higher then\r\n                    exopt[#exopt+1]=man2\r\n                end\r\n                if #exopt > 1 then\r\n                    --table.print(exopt)\r\n                    exopts[man] = exopt\r\n                end\r\n            end\r\n        end\r\n        return exopts\r\n    end,\r\n    ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1d90c6b2f87d17c061e07a92373310b4.png',\r\n                        ['restriction']={['Faction']={[6]=true}}}\r\nmasterUpgradesDB[589]={['name']=\"R2-C4\",['XWS']='r2c4',['slot']=10,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/8fce75228aa2c4eaaf3e9666c4da8caf.png',\r\n                        ['restriction']={['Faction']={[6]=true}}}\r\nmasterUpgradesDB[590]={['name']=\"TA-175\",['XWS']='ta175',['slot']=20,['cost']=11,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d71e07aa3147c6fe943bd0c8131a0096.png',\r\n                        ['restriction']={['Faction']={[7]=true}}}\r\nmasterUpgradesDB[591]={['name']=\"Electro-Proton Bomb\",['XWS']='electroprotonbomb',['slot']=12,['Bomb']=true,['cost']=10,['Charge']=1,['remSlot']={14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/0f76484cc390fc97d1fe2f863d75944b.png',\r\n                        }\r\nmasterUpgradesDB[592]={['name']=\"Delayed Fuses\",['XWS']='delayedfuses',['slot']=14,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/4572ece39224eeaf2dfce2770b96f919.png',\r\n                        }\r\nmasterUpgradesDB[593]={\r\n    name = \"Angled Deflectors\",\r\n    XWS = 'angleddeflectors',\r\n    slot = 14,\r\n    addAction = {'R'},\r\n    cost = 'a',\r\n    shd = -1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/41cf9c90abcd8ff5c668bb447967b75c.png',\r\n    restriction ={Size={small=true, medium=true}}}\r\n\r\nmasterUpgradesDB[594]={\r\n    name = \"Landing Struts\",\r\n    XWS = 'landingstruts',\r\n    slot = 18,\r\n    addAction = {'Piv'},\r\n    cost = 1,\r\n    executeOptions = function(moves)\r\n        return {\r\n            ws1  = {[1]='ws1', [2]='bs0'},\r\n            rbl1 = {[1]='rbl1', [2]='btl0'},\r\n            rbr1 = {[1]='rbr1', [2]='btr0'},\r\n            wtl1 = {[1]='wtl1', [2]='btl0'},\r\n            wtr1 = {[1]='wtr1', [2]='btr0'},\r\n            wbl2 = {[1]='wbl2', [2]='btl0'},\r\n            wbr2 = {[1]='wbr2', [2]='btr0'},\r\n            btl2 = {[1]='btl2', [2]='btl0'},\r\n            btr2 = {[1]='btr2', [2]='btr0'},\r\n            rk2 = {[1]='rk2', [2]='bs0'},\r\n            rtl2t = {[1]='rtl2t', [2]='btl0'},\r\n            rtr2t = {[1]='rtr2t', [2]='btr0'},\r\n            wtl3 = {[1]='wtl3', [2]='btl0'},\r\n            wtr3 = {[1]='wtr3', [2]='btr0'},\r\n            bs3  = {[1]='bs3', [2]='bs0'},\r\n            ws4  = {[1]='ws4', [2]='bs0'},\r\n            rs5  = {[1]='rs5', [2]='bs0'},\r\n        }\r\n    end,\r\n    dual = true,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/c23a0130bad7330c0abb6218745910aa.png',\r\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/en/aba79159308e850b635f6c43721ccdee.png',\r\n    restriction ={Faction={[7]=true}, ship={[64]=true}}}\r\n\r\nmasterUpgradesDB[613]={['name']=\"Foresight\",['XWS']='foresight',['slot']=17,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/12c948b9a0fe9f619ecda00f9fdcc437.png',\r\n                        }\r\nmasterUpgradesDB[614]={['name']=\"Precognitive Reflexes\",['XWS']='precognitivereflexes',['slot']=17,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/931c84c3e1b3afe5d078f6b3dd4f677a.png',\r\n                        ['restriction']={ ['Size']={small=true}}}\r\nmasterUpgradesDB[619]={\r\n    name = \"Targeting Computer\",\r\n    XWS = 'targetingcomputer',\r\n    slot = 14,\r\n    addAction = {'TL'},\r\n    cost = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/619d3d56eadaada29c6602cc7cd00148.png'}\r\n\r\nmasterUpgradesDB[612]={['name']=\"Snap Shot\",['XWS']='snapshot',['slot']=1,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/fed45c0416dfd298d9433c4608e99b7e.png',\r\n                        }\r\nmasterUpgradesDB[610]={['name']=\"Ensnare\",['XWS']='ensnare',['slot']=1,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/5d7e0560460a1d91281537a658ddfc86.png',\r\n                        ['restriction']={ ['ship']={[67]=true}}}\r\nmasterUpgradesDB[611]={['name']=\"Gravitic Deflection\",['XWS']='graviticdeflection',['slot']=1,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/50ec6aa5a267ece16d36533f4efe2bb0.png',\r\n                        ['restriction']={ ['ship']={[67]=true}}}\r\nmasterUpgradesDB[618]={\r\n  name = \"C1-10P\",\r\n  XWS = 'c110p',\r\n  slot = 10,\r\n  cost = 8,\r\n  addAction = {'E'},\r\n  dual = true,\r\n  Charge = 2,\r\n  restriction = {['Faction']={[6]=true}}}\r\n\r\nmasterUpgradesDB[616]={\r\n    name = \"C-3PO\",\r\n    XWS = 'c3po-republic',\r\n    slot = 8,\r\n    addAction = {'C'},\r\n    cost = 8,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/01e1a3b43aee6c564662825cadcd3f22.png',\r\n    restriction = {Faction={[6]=true}}\r\n  }\r\n\r\nmasterUpgradesDB[615]={['name']=\"Ahsoka Tano\",['XWS']='ahsokatano',['slot']=16,['cost']=12,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/bdc101788f827aeaf2f50a513b59aa7e.png',\r\n                        ['restriction']={['Faction']={[6]=true}}}\r\n\r\n--w7\r\nmasterUpgradesDB[644]={\r\n    name = \"R1-J5\",\r\n    XWS = 'r1j5',\r\n    slot = 10,\r\n    limited = 1,\r\n    cost = 5,\r\n    Charge = 3,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/cc/90/cc901ec5-cb47-4b15-8dd5-76e997698d15/swz63_a1_card_upgrade_r1-j5.png',\r\n    restriction = {Faction={[4]=true}}}\r\n\r\nmasterUpgradesDB[645]={\r\n    name = \"Stabilized S-Foils\",\r\n    XWS = 'stabilizedsfoils',\r\n    dual = true,\r\n    slot = 18,\r\n    addAction = {'E'},\r\n    cost = 2,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/64/9d/649d6f6e-8cba-404f-a00f-9a36a0076e34/swz66_stabilized-s-foils-open.png',\r\n    cardB = 'http://images-cdn.fantasyflightgames.com/filer_public/52/d5/52d52e74-c744-40b7-ad74-c98bcb04016c/swz66_stabilized-s-foils-closed.png', restriction ={ship={[17]=true}}}\r\n\r\nmasterUpgradesDB[647]={\r\n    name = \"K-2SO\",\r\n    XWS = 'k2so',\r\n    slot = 8,\r\n    limited = 1,\r\n    addAction = {'C'},\r\n    cost = 7,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/e9/71/e97130c3-368d-4453-a0ff-51a63d30394c/swz66_k-2so_upgrade.png',\r\n    restriction ={Faction={[1]=true}}}\r\n\r\nmasterUpgradesDB[648]={['name']='Cluster Mines',['XWS']='clustermines',['slot']=12,['Bomb']=true,['cost']=7,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/c27f0dcda78915239450bedf5b931d86.png',}\r\nmasterUpgradesDB[649]={['name']='Ion Bombs',['XWS']='ionbombs',['slot']=12,['Bomb']=true,['cost']=3,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e4c43791c16aea639f2e811c16d1dbcf.png',}\r\nmasterUpgradesDB[650]={['name']=\"Coaxium Hyperfuel\",['XWS']='coaxiumhyperfuel',['slot']=13,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1622f5d9e279b54d4610820f5dd31a95.png'}\r\nmasterUpgradesDB[651]={['name']=\"Mag-Pulse Warheads\",['XWS']='magpulsewarheads',['slot']=6,['cost']=5,['Charge']=2,['card']='http://images-cdn.fantasyflightgames.com/filer_public/20/a6/20a60741-4adf-485e-bee2-f93b9e5de7bb/swz62_card_mag-pulse-warheads.png',\r\n                        }\r\nmasterUpgradesDB[653]={['name']=\"Proud Tradition\",['XWS']='proudtradition',['dual']=true,['slot']=1,['cost']=2,['card']='http://images-cdn.fantasyflightgames.com/filer_public/38/09/3809c0fe-c113-43ee-bc6e-90e6afadef73/swz62_card_proud-tradition.png', ['cardB']='http://images-cdn.fantasyflightgames.com/filer_public/0b/48/0b48c067-b088-41aa-8af1-6d7f4ff840d1/swz62_card_false-tradition.png', ['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[654]={['name']=\"Deuterium Power Cells\",['XWS']='deuteriumpowercells',['slot']=19,['cost']=9,['Charge']=2,['remSlot']={14},['card']='http://images-cdn.fantasyflightgames.com/filer_public/d1/af/d1afeaf7-166b-4874-8544-982d8c4c445e/swz62_card_deuterium-power-cells.png',\r\n                        ['restriction']={['Faction']={[5]=true}}}\r\nmasterUpgradesDB[655]={['name']=\"Kaz's Fireball\",['XWS']='kazsfireball',['slot']=15,['cost']=2,['card']='http://images-cdn.fantasyflightgames.com/filer_public/47/dd/47dd508f-6751-4b19-b3da-d0530aeb9a33/swz63_a1_card_kazs-fireball.png',\r\n                        ['restriction']={ ['ship']={[70]=true}}}\r\n\r\n\r\n\r\nmasterUpgradesDB[670]={\r\n    name = \"Deadeye Shot\",\r\n    XWS = 'deadeyeshot',\r\n    slot = 1,\r\n    cost = 1,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/4d/84/4d84d319-d6ad-425b-b05e-4e679a54a508/swz70_a1_deadeye-shot_upgrade.png',\r\n    restriction = {\r\n        Size = { small=true, medium=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[671]={\r\n    name = \"Automated Target Priority\",\r\n    XWS = 'automatedtargetpriority',\r\n    slot = 19,\r\n    cost = 1,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/e9/e2/e9e2f789-fc77-4ac5-861d-6c08b97ea244/swz69_target-priority_card.png',\r\n    restriction = {\r\n        -- int 3 or less\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[672]={\r\n    name = \"Sensor Buoy Suite\",\r\n    XWS = 'sensorbuoysuite',\r\n    slot = 19,\r\n    cost = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/7d/19/7d199d6b-808a-47d2-9aa1-1fc3432e7d3f/swz69_sensor-buoy-suite_card.png',\r\n    restriction = {\r\n        Faction = {[5]=true},\r\n        Size = { medium=true, large=true}\r\n    },\r\n    remotes = {'Sensor Buoy (Red)', 'Sensor Buoy (Blue)'}\r\n}\r\n\r\nmasterUpgradesDB[673]={\r\n    name = \"Multi-Missile Pods\",\r\n    XWS = 'multimissilepods',\r\n    slot = 6,\r\n    remSlot = {6},\r\n    Charge = 5,\r\n    cost = 6,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/2b/f1/2bf158e3-099c-4969-a882-b52af5a88273/swz71_upgrade_multi-missile-pod.png',\r\n    restriction = {},\r\n}\r\n\r\nmasterUpgradesDB[674]={\r\n    name = \"Synced Laser Cannons\",\r\n    XWS = 'syncedlasercannons',\r\n    slot = 3,\r\n    remSlot = {3},\r\n    cost = 6,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/9b/11/9b115a04-a49d-40f0-ac06-5accb903aa5c/swz71_upgrade_synced-cannons.png',\r\n    cardB = cardBackDB['3b'],\r\n    restriction = {}\r\n}\r\n\r\nmasterUpgradesDB[675]={\r\n    name = \"Aayla Secura\",\r\n    XWS = 'aaylasecura',\r\n    Force = 1,\r\n    limited = 1,\r\n    slot = 8,\r\n    cost = 16,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/40/9a/409a5444-ec9c-48ae-a91c-0301bc0575df/swz70_a1_aayla_upgrade.png',\r\n    restriction = {\r\n        Faction = {[6]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[676]={\r\n    name = \"Kit Fisto\",\r\n    XWS = 'kitfisto',\r\n    Force = 1,\r\n    limited = 1,\r\n    addAction = {'E'},\r\n    slot = 8,\r\n    cost = 9,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/18/f5/18f5a7f6-8fce-4dba-b6cf-f5c739f807ca/swz70_a1_kit-fisto_upgrade.png',\r\n    restriction = {\r\n        Faction = {[6]=true}\r\n    }\r\n}\r\n\r\n\r\nmasterUpgradesDB[677]={\r\n    name = \"Plo Koon\",\r\n    XWS = 'plokoon',\r\n    Force = 1,\r\n    limited = 1,\r\n    slot = 8,\r\n    addAction = {'R'},\r\n    cost = 10,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/9a/a5/9aa5ef62-7c41-425d-9f27-01369d3e1571/swz70_a1_plo-koon_upgrade.png',\r\n    restriction = {\r\n        Faction = {[6]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[678]={\r\n    name = \"Yoda\",\r\n    XWS = 'yoda',\r\n    Force = 2,\r\n    limited = 1,\r\n    slot = 8,\r\n    cost = 15,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/27/8a/278a7c83-c1e0-4ea4-b36b-2114e95fde99/swz70_a1_yoda_upgrade.png',\r\n    restriction = {\r\n        Faction = {[6]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[679]={\r\n    name = '\"Fives\"',\r\n    XWS = 'fives',\r\n    limited = 1,\r\n    slot = 8,\r\n    cost = 3,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/fa/fe/fafeeec4-919f-4968-b26f-93f3cdda03b3/swz70_a1_fives_upgrade.png',\r\n    restriction = {\r\n        Faction = {[6]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[680]={\r\n    name = \"Wolfpack\",\r\n    XWS = 'wolfpack',\r\n    limited = 1,\r\n    slot = 16,\r\n    remSlot = {8},\r\n    cost = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/11/69/116909f3-2f9f-4a5d-b8b4-6beed48e7a03/swz70_a1_wolfpack_upgrade.png',\r\n    restriction = {\r\n        Faction = {[6]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[681]={\r\n    name = \"Ghost Company\",\r\n    XWS = 'ghostcompany',\r\n    limited = 1,\r\n    slot = 16,\r\n    addAction = {'F'},\r\n    remSlot = {8},\r\n    cost = 5,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/7e/83/7e836a20-1ed5-44c3-9f21-3e0e5e7f9347/swz70_a1_ghost-company_upgrade.png',\r\n    restriction = {\r\n        Faction = {[6]=true}\r\n        -- Todo: Add rotate requirement\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[682]={\r\n    name = \"Kalani\",\r\n    XWS = 'kalani',\r\n    limited = 1,\r\n    slot = 20,\r\n    addAction = {'C'},\r\n    Charge = 3,\r\n    cost = 5,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/81/b3/81b32459-3421-4da7-8a45-9bbdbcf1bc31/swz71_upgrade_kalani.png',\r\n    restriction = {\r\n        Faction={[7]=true}\r\n    },\r\n}\r\n\r\n\r\nmasterUpgradesDB[684]={\r\n    name = \"Commander Malarus\",\r\n    XWS = 'commandermalarus',\r\n    dual = true,\r\n    slot = 8,\r\n    limited = 1,\r\n    cost = 7,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/6d/2a/6d2a8204-2de1-4b1e-8980-456501628a24/swz69_malarus_card.png',\r\n    cardB = 'https://images-cdn.fantasyflightgames.com/filer_public/42/ed/42edc96c-938a-4bd4-88de-7be1e449d96b/swz69_malarus-perfected_card.png',\r\n    restriction = {\r\n        Faction = {[5]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[686]={\r\n    name = \"Agent Terex\",\r\n    XWS = 'agentterex',\r\n    dual = true,\r\n    slot = 8,\r\n    limited = 1,\r\n    cost = 7,\r\n    addSqdAction = {'C'},\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/27/56/27568de2-a0be-4de5-8107-8c8c584fdd18/swz69_terex_card.png',\r\n    cardB = 'https://images-cdn.fantasyflightgames.com/filer_public/ae/fc/aefc02a4-e435-4842-964d-ec54d70913f6/swz69_cyborg-terex_card.png',\r\n    restriction = {\r\n        Faction = {[5]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[687]={\r\n    name = 'Commander Pyre',\r\n    XWS = 'commanderpyre',\r\n    slot = 8,\r\n    limited = 1,\r\n    cost = 5,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/10/5d/105d386c-ff1b-44be-9b9c-a2c1dc2877ec/swz69_pyre_card.png',\r\n    restriction = {\r\n        Faction = {[5]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[688]={\r\n    name = \"Clone Captain Rex\",\r\n    XWS = 'clonecaptainrex',\r\n    limited = 1,\r\n    slot = 16,\r\n    cost = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/41/90/4190fb29-a8d8-4576-b112-48df9944fc4c/swz70_a1_cpt-rex_upgrade.png',\r\n    restriction = {\r\n        Faction = {[6]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[689]={\r\n    name = \"Suppressive Gunner\",\r\n    XWS = 'suppressivegunner',\r\n    slot = 16,\r\n    cost = 's',\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/71/36/7136b2b9-dc7c-494a-9509-4ffbe0d2870d/swz70_a1_suppressive-gunner_upgrade.png',\r\n    restriction = {}\r\n}\r\n\r\nmasterUpgradesDB[690]={\r\n    name = \"Concussion Bombs\",\r\n    XWS = 'concussionbombs',\r\n    slot = 12,\r\n    Charge = 3,\r\n    cost = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/00/c6/00c65f3f-e738-4a5d-80a8-6b3aef6e8074/swz71_upgrade_concussion-bomb.png',\r\n    cardB = cardBackDB['12b'],\r\n    restriction = {},\r\n    Bomb = true\r\n}\r\n\r\n\r\nmasterUpgradesDB[692]={\r\n    name = \"Repulsorlift Stabilizers\",\r\n    XWS = 'repulsorliftstabilizers',\r\n    dual = true,\r\n    slot = 18,\r\n    cost = 3,\r\n    cardB = 'https://images-cdn.fantasyflightgames.com/filer_public/b9/24/b92420be-2835-4e12-b76e-b2675533249c/swz71_upgrade_stabilizer-active.png',\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/28/39/2839eb69-5a45-47e1-a69d-4bb0b4f8ab5d/swz71_upgrade_stabilizer-inactive.png',\r\n    restriction = {\r\n        ship = {[75]=true}\r\n    },\r\n    executeOptions = function()\r\n        return {\r\n        rbl1 = {'rbl1', 'rbl1z'},\r\n        rbr1 = {'rbr1', 'rbr1z'},\r\n        btl2 = {'btl2', 'btl2z'},\r\n        wbl2 = {'wbl2', 'wbl2z'},\r\n        wbr2 = {'wbr2', 'wbr2z'},\r\n        btr2 = {'btr2', 'btr2z'},\r\n        wtl3 = {'wtl3', 'wtl3z'},\r\n        rbl3 = {'rbl3', 'rbl3z'},\r\n        rbr3 = {'rbr3', 'rbr3z'},\r\n        wtr3 = {'wtr3', 'wtr3z'}\r\n    } end\r\n}\r\n\r\n\r\n-- Unreleased upgrades: TODO: Give proper FFG id's\r\nmasterUpgradesDB[722]={\r\n    name = \"Maneuver-Assist MGK-300\",\r\n    XWS = 'maneuverassistmgk300',\r\n    slot = 18,\r\n    cost = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/a2/c9/a2c98345-8ee6-4e63-a659-6ec1928e6979/swz67_maneuver-assist_mgk300.png',\r\n    restriction = {\r\n        ship = {[72]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[723]={\r\n    name = \"Target-Assist MGK-300\",\r\n    XWS = 'targetassistmgk300',\r\n    slot = 18,\r\n    cost = 3,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c1/d7/c1d74e73-d6e7-47c5-9d2f-707d1c88cb67/swz67_target-assist_mgk300.png',\r\n    restriction = {\r\n        ship = {[72]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[717]={\r\n    name = \"Ion Limiter Override\",\r\n    XWS = 'ionlimiteroverride',\r\n    slot = 1,\r\n    cost = 3,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/a5/d9/a5d987e9-ec4c-4a99-828b-c498799a7d6c/swz67_ion-limiter-overdrive.png',\r\n    addAction = {'BR'},\r\n    restriction = {\r\n        ship = {\r\n            [11]=true,\r\n            [13]=true,\r\n            [16]=true,\r\n            [18]=true,\r\n            [19]=true,\r\n            [20]=true,\r\n            [25]=true,\r\n            [27]=true,\r\n            [29]=true,\r\n            [41]=true,\r\n            [43]=true,\r\n            [49]=true,\r\n            [50]=true,\r\n            [52]=true,\r\n            [56]=true,\r\n            [71]=true,\r\n            [72]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[715]={\r\n    name = \"Backwards Tailslide\",\r\n    XWS = 'backwardstailslide',\r\n    slot = 1,\r\n    addAction = {'E'},\r\n    cost = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c4/d5/c4d543bc-bcf0-4c88-b8df-f652210752b9/swz68_backward-tailslide.png',\r\n    restriction = {\r\n        ship = {[33]=true,\r\n                [53]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[721]={\r\n    name = \"Overdrive Thruster\",\r\n    XWS = 'overdrivethruster',\r\n    limited = 1,\r\n    slot = 14,\r\n    cost = 'i',\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/21/3e/213e1b33-19c8-4081-9ed2-e30b0fe345dd/swz68_overdrive-thruster.png',\r\n    addAction = {'2B', '2BR'},\r\n    restriction = {\r\n        ship = {[53]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[720]={\r\n    name = \"R2-D2\",\r\n    XWS = 'r2d2-resistance',\r\n    limited = 1,\r\n    slot = 10,\r\n    cost = 6,\r\n    Charge = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/1c/97/1c971472-6fea-493b-ac8f-888fc6363c84/swz68_r2d2.png',\r\n    restriction = {\r\n        Faction={[4]=true},\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[719]={\r\n    name = \"R6-D8\",\r\n    XWS = 'r6d8',\r\n    limited = 1,\r\n    slot = 10,\r\n    cost = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/e5/c2/e5c25a09-ca2a-4742-92d5-d39d0d33d99b/swz68_r6d8.png',\r\n    restriction = {\r\n        Faction={[4]=true},\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[718]={\r\n    name = \"Underslung Blaster Cannon\",\r\n    XWS = 'underslungblastercannon',\r\n    slot = 3,\r\n    cost = 3,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/b5/6d/b56db2ed-dca8-4cdf-8fa0-a8e35d27ae2b/swz68_underslung-blaster-cannon.png',\r\n    restriction = {\r\n        Faction={[4]=true},\r\n        ship = {[53]=true}\r\n    },\r\n    arcs = {turret = {name = 'underslung blaster cannon', range = 1, type = {'singleturret'}}}\r\n}\r\n\r\nmasterUpgradesDB[716]={\r\n    name = \"Starbird Slash\",\r\n    XWS = 'starbirdslash',\r\n    slot = 1,\r\n    cost = 1,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/65/61/656136b2-2981-4e18-80fb-771fb2810669/swz68_starbird-slash.png',\r\n    restriction = {\r\n        ship = {[35]=true,\r\n                [54]=true}\r\n    },\r\n    movethrough = true,\r\n}\r\n\r\nmasterUpgradesDB[848]={\r\n    name = \"Extreme Maneuvers\",\r\n    XWS = 'extrememaneuvers',\r\n    slot = 17,\r\n    cost = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/5f/dd/5fdda9e7-dea9-4188-aaf1-e06446b38e45/swz79_extreme-maneuvers.png',\r\n    addAction = {'Dare'},\r\n    restriction = {\r\n        Size = { small=true },\r\n        -- Todo: add boost requirement\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[835]={\r\n    name = \"Jedi Commander\",\r\n    XWS = 'jedicommander',\r\n    slot = 21,\r\n    wingleader = true,\r\n    dual = true,\r\n    cost = 3,\r\n    restriction = {\r\n        Ship = { [76]=true, [61]=true }\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[860]={\r\n    name = \"R2-D2\",\r\n    XWS = 'r2d2-republic',\r\n    limited = 1,\r\n    slot = 10,\r\n    cost = 'a',\r\n    Charge = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c3/6f/c36f6f13-6998-4120-acbf-3c85132ea416/swz79_r2d2.png',\r\n    restriction = {\r\n        Faction={[6]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[849]={\r\n    name = \"Patience\",\r\n    XWS = 'patience',\r\n    slot = 17,\r\n    cost = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/5c/f9/5cf91573-a7a8-47ec-9139-f3d0043fce0c/swz79_patience.png',\r\n    restriction = {\r\n        Faction={\r\n            [1]=true,\r\n            [2]=true,\r\n            [4]=true,\r\n            [6]=true\r\n        },\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[870]={\r\n    name = 'Alpha-3B \"Besh\"',\r\n    XWS = 'alpha3bbesh',\r\n    slot = 18,\r\n    cost = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/6d/43/6d434e52-68f4-4b8d-9166-4365fb920625/swz80_upgrade_alpha-3b.png',\r\n    addSlot ={12},\r\n    restriction = {\r\n        ship={\r\n            [71]=true,\r\n        },\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[871]={\r\n    name = 'Alpha-3E \"Esk\"',\r\n    XWS = 'alpha3eesk',\r\n    slot = 18,\r\n    cost = 1,\r\n    Charge = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/08/3a/083ae697-4a97-4e74-bcb0-77cb590e51e3/swz80_upgrade_alpha-3e.png',\r\n    restriction = {\r\n        ship={\r\n            [71]=true,\r\n        },\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[864]={\r\n    name = 'Thermal Detonators',\r\n    XWS = 'thermaldetonators',\r\n    slot = 12,\r\n    cost = 3,\r\n    Charge = 4,\r\n    Bomb = true,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/52/bf/52bff580-897d-4af0-9084-5088765babf0/swz80_upgrade_thermal-detonators.png',\r\n}\r\n\r\nmasterUpgradesDB[862]={\r\n    name = 'R7-A7',\r\n    XWS = 'r7a7',\r\n    limited = 1,\r\n    slot = 10,\r\n    cost = 3,\r\n    Charge = 3,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/f5/84/f58409a7-8000-4201-a912-014b011521cb/swz80_upgrade_r7-a7.png',\r\n    restriction = {\r\n        Faction={[6]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[867]={\r\n    name = 'Precision Ion Engines',\r\n    XWS = 'precisionionengines',\r\n    slot = 14,\r\n    cost = 3,\r\n    Charge = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/bb/fb/bbfb4727-e2f5-4f23-be9a-3341ea4de7b5/swz80_upgrade_precison-ion-engines.png',\r\n    executeOptions = function(list, pid)\r\n        return {\r\n            rk1   = {[1]='rk1', [2]='rbl1s', [3]='rbr1s'},\r\n            rk2   = {[1]='rk2', [2]='rbl2s', [3]='rbr2s'},\r\n            rk3   = {[1]='rk3', [2]='rbl3s', [3]='rbr3s'},\r\n            wk1   = {[1]='wk1', [2]='wbl1s', [3]='wbr1s'},\r\n            wk2   = {[1]='wk2', [2]='wbl2s', [3]='wbr2s'},\r\n            wk3   = {[1]='wk3', [2]='wbl3s', [3]='wbr3s'},\r\n        }\r\n    end,\r\n    restriction = {\r\n        ship = {\r\n        [11]=true,\r\n        [13]=true,\r\n        [18]=true,\r\n        [25]=true,\r\n        [41]=true,\r\n        [49]=true,\r\n        [52]=true,\r\n        [56]=true,\r\n        [71]=true,\r\n        },\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[863]={\r\n    name = 'Q7 Astromech',\r\n    XWS = 'q7astromech',\r\n    slot = 10,\r\n    cost = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/75/b9/75b924e8-88e2-4e11-808c-f47f1e2115c2/swz80_upgrade_q7-astromech.png',\r\n    restriction = {\r\n        Faction={[6]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[873]={\r\n    name = 'Intercept Booster',\r\n    XWS = 'interceptbooster',\r\n    slot = 18,\r\n    cost = 1,\r\n    Charge = 3,\r\n    addAction = {'TL'},\r\n    dual = true,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/0d/3f/0d3f071a-1c8e-416f-9c0e-1195ca31c102/swz81_upgrade_intercept-booster_attached.png',\r\n    cardB = 'https://images-cdn.fantasyflightgames.com/filer_public/c5/49/c549df37-e99d-4746-a34c-d42d74d854b4/swz81_upgrade_intercept-booster_detached.png',\r\n    restriction = {\r\n        Faction={[7]=true},\r\n        ship={[77]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[851]={\r\n    name = 'XX-23 S-Thread Tracers',\r\n    XWS = 'xx23sthreadtracers',\r\n    slot = 6,\r\n    cost = 2,\r\n    Charge = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/96/d7/96d7fd7e-cca2-403d-a291-5fcb973404c6/swz81_upgrade_s-tread-tracers.png',\r\n}\r\n\r\nmasterUpgradesDB[846]={\r\n    name = 'Marg Sabl Closure',\r\n    XWS = 'margsablclosure',\r\n    slot = 1,\r\n    cost = 1,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/64/ff/64ff6a96-57a4-44ef-938f-68cda3df71b6/swz81_upgrade_marg-sabl-clousre.png',\r\n    restriction = {\r\n        Size = { small=true,\r\n                 medium=true},\r\n    },\r\n    movethrough = true,\r\n}\r\n\r\nmasterUpgradesDB[866]={\r\n    name = 'Independent Calculations',\r\n    XWS = 'independentcalculations',\r\n    slot = 14,\r\n    cost = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/5c/76/5c762c2d-5ae5-43d2-8791-908c211d0515/swz81_upgrade_independent-calculations.png',\r\n    restriction = {\r\n        ship={\r\n            [59]=true,\r\n            [66]=true,\r\n            [77]=true} -- Network calculations\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[854]={\r\n    name = 'Jango Fett',\r\n    XWS = 'jangofett',\r\n    limited = 1,\r\n    slot = 8,\r\n    cost = 7,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/5b/54/5b5418d8-1e33-403d-abfc-815cf4ffac94/swz82_a1_upgrade_jango-fett.png',\r\n    restriction = {\r\n        Faction={[3]=true, [7]=true},\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[856]={\r\n    name = 'Zam Wesell',\r\n    XWS = 'zamwesell',\r\n    limited = 1,\r\n    Condition = 'Zam Wesell',\r\n    slot = 8,\r\n    cost = 4,\r\n    Charge = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/77/bd/77bd5f12-05de-4c34-9e5a-e8dfa636de52/swz82_a1_upgrade_zam-wessel.png',\r\n    restriction = {\r\n        Faction={[3]=true, [7]=true},\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[853]={\r\n    name = 'Hondo Ohnaka',\r\n    XWS = 'hondoohnaka',\r\n    limited = 1,\r\n    slot = 8,\r\n    cost = 6,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/f2/30/f230e89a-4885-4721-b2a0-7c0e1ef1726f/swz-hondo-ohnaka.png',\r\n}\r\n\r\nmasterUpgradesDB[869]={\r\n    name = 'Slave I',\r\n    XWS = 'slavei-swz82',\r\n    title = \"Jango's ride\",\r\n    slot = 15,\r\n    cost = 3,\r\n    addSlot = {16},\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/1e/db/1edb3304-9368-442f-95fd-f6a56d93deec/swz82_a1_upgrade_slave1.png',\r\n    restriction = {\r\n        Faction = {[3]=true,\r\n                   [7]=true},\r\n        ship = {[10]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[857]={\r\n    name = 'Boba Fett',\r\n    XWS = 'bobafett-gunner',\r\n    limited = 1,\r\n    slot = 16,\r\n    cost = 6,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/b6/39/b6395ed5-2a9c-46fd-9945-b906224aa05d/swz82_a1_upgrade_boba-fett.png',\r\n    restriction = {\r\n        Faction = {[3]=true,\r\n                   [7]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[859]={\r\n    name = 'Weapons Systems Officer',\r\n    XWS = 'weaponssystemsofficer',\r\n    slot = 16,\r\n    cost = 7,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c8/de/c8de95b1-c5f8-467e-b9ef-0d81cc92f72e/swz82_a1_upgrade_weapon-systems.png',\r\n}\r\n\r\nmasterUpgradesDB[877]={\r\n    name = 'False Transponder Codes',\r\n    XWS = 'falsetranspondercodes',\r\n    slot = 13,\r\n    cost = 2,\r\n    Charge = 1,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/de/d4/ded4b0e6-683b-4caa-b642-41fdd09f7ed6/swz82_a1_upgrade_false-codes.png',\r\n}\r\n\r\n\r\n\r\n\r\n-- Epic upgrade cards\r\n-- Commands\r\nmasterUpgradesDB[732]={\r\n    name = \"Agent of the Empire\",\r\n    XWS = 'agentoftheempire',\r\n    wingleader = true,\r\n    slot = 21,\r\n    cost = 4,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/AgentEmpire.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[13]=true, [25]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[733]={\r\n    name = \"First Order Elite\",\r\n    XWS = 'firstorderelite',\r\n    wingleader = true,\r\n    slot = 21,\r\n    cost = 4,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/FOElite.png',\r\n    restriction = {\r\n        Faction = {[5]=true},\r\n        ship = {[50]=true, [52]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[734]={\r\n    name = \"Veteran Wing Leader\",\r\n    XWS = 'veteranwingleader',\r\n    wingleader = true,\r\n    slot = 21,\r\n    cost = 2,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/VeteranWingLeader.png',\r\n    restriction = {\r\n        Size={small=true}\r\n    }\r\n}\r\nmasterUpgradesDB[735]={\r\n    name = \"Dreadnought hunter\",\r\n    XWS = 'dreadnoughthunter',\r\n    slot = 21,\r\n    cost = 6,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/DreadnoughtHunter.png',\r\n    restriction = {\r\n        Size={small=true} -- TODO: Add initiative 4 or higher restriction\r\n    }\r\n}\r\n-- Command and Crew\r\nmasterUpgradesDB[724]={\r\n    name = \"Admiral Ozzel\",\r\n    XWS = 'admiralozzel',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    cost = 6,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/AdmiralOzzel.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\r\n    restriction = {\r\n        Faction = {[2]=true},\r\n        Size={huge=true}\r\n    }\r\n}\r\nmasterUpgradesDB[725]={\r\n    name = \"Azmorigan\",\r\n    XWS = 'azmorigan',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    cost = 4,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Azmorigan.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\r\n    restriction = {\r\n        Faction = {[3]=true},\r\n        Size={huge=true}\r\n    }\r\n}\r\nmasterUpgradesDB[726]={\r\n    name = \"Captain Needa\",\r\n    XWS = 'captainneeda',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    cost = 8,\r\n    Charge = 4,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/CaptainNeeda.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\r\n    restriction = {\r\n        Faction = {[2]=true},\r\n        Size={huge=true}\r\n    }\r\n}\r\nmasterUpgradesDB[728]={\r\n    name = \"Carlist Rieekan\",\r\n    XWS = 'carlistrieekan',\r\n    slot = 21,\r\n    addAction = {'E'},\r\n    remSlot = {8},\r\n    cost = 6,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/CarlistRieekan.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\r\n    restriction = {\r\n        Faction = {[1]=true},\r\n        Size={huge=true}\r\n    }\r\n}\r\nmasterUpgradesDB[729]={\r\n    name = \"Jan Dodonna\",\r\n    XWS = 'jandodonna',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    cost = 4,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/JanDodonna.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\r\n    restriction = {\r\n        Faction = {[1]=true},\r\n        Size={huge=true}\r\n    }\r\n}\r\nmasterUpgradesDB[730]={\r\n    name = \"Raymus Antilles\",\r\n    XWS = 'raymusantilles',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    cost = 12,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/RaymusAntillies.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\r\n    restriction = {\r\n        Faction = {[1]=true},\r\n        Size={huge=true}\r\n    }\r\n}\r\nmasterUpgradesDB[731]={\r\n    name = \"Stalwart Captain\",\r\n    XWS = 'stalwartcaptain',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    cost = 6,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/StalwartCaptain.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\r\n    restriction = {\r\n        Size={huge=true}\r\n    }\r\n}\r\n-- Hardpoints\r\nmasterUpgradesDB[737]={\r\n    name = \"Ion Cannon Battery\",\r\n    XWS = 'ioncannonbattery',\r\n    slot = 24,\r\n    cost = 5,\r\n    dual = true,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/IonCannonBattery.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/IonCannonBattery(Offline).png',\r\n    restriction = {},\r\n    arcs = {turret = {name = 'ion cannon', range = 4, type = {'singleturret'}}}\r\n}\r\nmasterUpgradesDB[741]={\r\n    name = \"Ordnance Tubes\",\r\n    XWS = 'ordnancetubes',\r\n    slot = 24,\r\n    cost = 1,\r\n    dual = true,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/OrdnanceTubes.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/OrdnanceTubes(Offline).png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[743]={\r\n    name = \"Point-Defense Battery\",\r\n    XWS = 'pointdefensebattery',\r\n    slot = 24,\r\n    cost = 9,\r\n    dual = true,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/PointDefenseBattery.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/PointDefenseBattery(Offline).png',\r\n    restriction = {},\r\n    arcs = {turret = {name = 'point defence', range = 2, type = {'doubleturret'}}}\r\n}\r\nmasterUpgradesDB[739]={\r\n    name = \"Targeting Battery\",\r\n    XWS = 'targetingbattery',\r\n    slot = 24,\r\n    cost = 6,\r\n    dual = true,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/TargetingBattery.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/TargetingBattery(Offline).png',\r\n    restriction = {},\r\n    arcs = {turret = {name = 'targeting', range = 5, type = {'singleturret'}}}\r\n}\r\nmasterUpgradesDB[745]={\r\n    name = \"Turbolaser Battery\",\r\n    XWS = 'turbolaserbattery',\r\n    slot = 24,\r\n    cost = 13,\r\n    dual = true,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/TurbolaserBattery.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/TurbolaserBattery(Offline).png',\r\n    restriction = {\r\n        -- TODO: Add restriction energy 5 or higher\r\n    },\r\n    arcs = {turret = {name = 'turbolaser', range = 5, type = {'singleturret'}}}\r\n}\r\n-- Crew\r\nmasterUpgradesDB[760]={\r\n    name = \"Toryn Farr\",\r\n    XWS = 'torynfarr',\r\n    slot = 8,\r\n    addAction = {'TL'},\r\n    cost = 4,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/TorynFarr.png',\r\n    restriction = {\r\n        Faction = {[1]=true},\r\n        Size={huge=true}\r\n    }\r\n}\r\n-- Team\r\nmasterUpgradesDB[746]={\r\n    name = \"Bombardment Specialists\",\r\n    XWS = 'bombardmentspecialists',\r\n    slot = 23,\r\n    addAction = {'TL','C'},\r\n    cost = 6,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/BombardmentSpecialists.png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[747]={\r\n    name = \"Comms Team\",\r\n    XWS = 'commsteam',\r\n    slot = 23,\r\n    addAction = {'C'},\r\n    cost = 8,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/CommsTeam.png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[750]={\r\n    name = \"Damage Control Team\",\r\n    XWS = 'damagecontrolteam',\r\n    slot = 23,\r\n    addAction = {'R','C'},\r\n    cost = 3,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/DamageControlTeam.png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[749]={\r\n    name = \"Gunnery Specialists\",\r\n    XWS = 'gunneryspecialists',\r\n    slot = 23,\r\n    addAction = {'C'},\r\n    cost = 8,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/GunnerySpecialists.png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[748]={\r\n    name = \"IG-RM Droids\",\r\n    XWS = 'igrmdroids',\r\n    slot = 23,\r\n    addAction = {'C'},\r\n    cost = 2,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/IGRM%20Droids.png',\r\n    restriction = {\r\n        Faction = {[3]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[751]={\r\n    name = \"Ordnance Team\",\r\n    XWS = 'ordnanceteam',\r\n    slot = 23,\r\n    addAction = {'C'},\r\n    cost = 4,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/OrdnanceTeam.png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[752]={\r\n    name = \"Sensor Experts\",\r\n    XWS = 'sensorexperts',\r\n    slot = 23,\r\n    addAction = {'TL','C'},\r\n    cost = 10,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/SensorExperts.png',\r\n    restriction = {}\r\n}\r\n-- Cargo\r\nmasterUpgradesDB[756]={\r\n    name = \"Adaptive Shields\",\r\n    XWS = 'adaptiveshields',\r\n    slot = 22,\r\n    cost = 10,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/AdaptiveShields.png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[757]={\r\n    name = \"Boosted Scanners\",\r\n    XWS = 'boostedscanners',\r\n    slot = 22,\r\n    cost = 8,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/BoostedScanners.png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[758]={\r\n    name = \"Optimized Power Core\",\r\n    XWS = 'optimizedpowercore',\r\n    slot = 22,\r\n    cost = 6,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/OptimizedPowerCore.png',\r\n    restriction = {}\r\n}\r\nmasterUpgradesDB[759]={\r\n    name = \"Tibanna Reserves\",\r\n    XWS = 'tibannareserves',\r\n    slot = 22,\r\n    cost = 3,\r\n    Charge = 3,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/TibannaReserves.png',\r\n    restriction = {}\r\n}\r\n-- Illicit\r\nmasterUpgradesDB[753]={\r\n    name = \"Quick-Release Locks\",\r\n    XWS = 'quickreleaselocks',\r\n    slot = 13,\r\n    cost = 5,\r\n    Charge = 2,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/QuickReleaseLocks.png',\r\n    restriction = {\r\n        Size={huge=true}\r\n    }\r\n}\r\nmasterUpgradesDB[754]={\r\n    name = \"Saboteur's Map\",\r\n    XWS = 'saboteursmap',\r\n    slot = 13,\r\n    cost = 3,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/SaboteursMap.png',\r\n    restriction = {\r\n        Size={huge=true}\r\n    }\r\n}\r\nmasterUpgradesDB[755]={\r\n    name = \"Scanner Baffler\",\r\n    XWS = 'scannerbaffler',\r\n    slot = 13,\r\n    cost = 8,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/ScannerBaffler.png',\r\n    restriction = {\r\n        Size={huge=true}\r\n    }\r\n}\r\n-- title\r\nmasterUpgradesDB[761]={\r\n    name = \"Dodonna's Pride\",\r\n    XWS = 'dodonnaspride',\r\n    limited = 1,\r\n    slot = 15,\r\n    addAction = {'E','F'},\r\n    cost = 8,\r\n    shd = -2,\r\n    addSlot ={23, 22},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/DodonnasPride.png',\r\n    restriction = {\r\n        Faction={[1]=true},\r\n        ship = {[90]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[762]={\r\n    name = \"Jaina's Light\",\r\n    XWS = 'jainaslight',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 6,\r\n    shd = 1,\r\n    Energy = -1,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/JainasLight.png',\r\n    restriction = {\r\n        Faction={[1]=true},\r\n        ship = {[90]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[763]={\r\n    name = \"Liberator\",\r\n    XWS = 'liberator',\r\n    slot = 15,\r\n    cost = 5,\r\n    Energy = 1,\r\n    Docking = true,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Liberator.png',\r\n    restriction = {\r\n        Faction={[1]=true},\r\n        ship = {[90]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[764]={\r\n    name = \"Tantive IV\",\r\n    XWS = 'tantiveiv',\r\n    slot = 15,\r\n    cost = 6,\r\n    addSlot ={8, 8},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/TantiveIV.png',\r\n    restriction = {\r\n        Faction={[1]=true},\r\n        ship = {[90]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[765]={\r\n    name = \"Thunderstrike\",\r\n    XWS = 'thunderstrike',\r\n    slot = 15,\r\n    cost = 4,\r\n    addSlot = {16},\r\n    shd = -3,\r\n    Hull = 3,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Thunderstrike.png',\r\n    restriction = {\r\n        Faction={[1]=true},\r\n        ship = {[90]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[766]={\r\n    name = \"Bright Hope\",\r\n    XWS = 'brighthope',\r\n    slot = 15,\r\n    cost = 5,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/BrightHope.png',\r\n    restriction = {\r\n        Faction={[1]=true},\r\n        ship = {[93]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[767]={\r\n    name = \"Luminous\",\r\n    XWS = 'luminous',\r\n    slot = 15,\r\n    cost = 12,\r\n    shd = -1,\r\n    Energy = 2,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Luminous.png',\r\n    restriction = {\r\n        Faction={[1]=true},\r\n        ship = {[93]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[768]={\r\n    name = \"Quantum Storm\",\r\n    XWS = 'quantumstorm',\r\n    slot = 15,\r\n    cost = 3,\r\n    Energy = 1,\r\n    addSlot = {23, 22},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/QuantumStorm.png',\r\n    restriction = {\r\n        Faction={[1]=true},\r\n        ship = {[93]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[769]={\r\n    name = \"Assailer\",\r\n    XWS = 'assailer',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 7,\r\n    shd = -2,\r\n    Hull = 2,\r\n    addSlot = {16},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Assailer.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[94]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[770]={\r\n    name = \"Corvus\",\r\n    XWS = 'corvus',\r\n    slot = 15,\r\n    limited = 1,\r\n    addAction = {'C'},\r\n    cost = 3,\r\n    Docking = true,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Corvus.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[94]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[771]={\r\n    name = \"Impetuous\",\r\n    XWS = 'impetuous',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 4,\r\n    shd = -2,\r\n    Energy = 2,\r\n    addSlot = {8},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Impetuous.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[94]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[772]={\r\n    name = \"Instigator\",\r\n    XWS = 'instigator',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 6,\r\n    addSlot = {23},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Instigator.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[94]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[773]={\r\n    name = \"Blood Crow\",\r\n    XWS = 'bloodcrow',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 5,\r\n    Energy = 2,\r\n    shd = -1,\r\n    addSlot = {16},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/BloodCrow.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[92]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[774]={\r\n    name = \"Requiem\",\r\n    XWS = 'requiem',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 7,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Requiem.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[92]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[775]={\r\n    name = \"Suppressor\",\r\n    XWS = 'suppressor',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 6,\r\n    shd = 2,\r\n    Hull = -2,\r\n    addSlot = {2},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Suppressor.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[92]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[776]={\r\n    name = \"Vector\",\r\n    XWS = 'vector',\r\n    slot = 15,\r\n    limited = 1,\r\n    addSqdAction = {'E','B'},\r\n    cost = 8,\r\n    addSlot = {8, 22},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/Vector.png',\r\n    restriction = {\r\n        Faction={[2]=true},\r\n        ship = {[92]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[777]={\r\n    name = \"Broken Horn\",\r\n    XWS = 'brokenhorn',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 4,\r\n    addSlot = {8, 13},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/BrokenHorn.png',\r\n    restriction = {\r\n        Faction={[3]=true},\r\n        ship = {[91]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[778]={\r\n    name = \"Merchant One\",\r\n    XWS = 'merchantone',\r\n    slot = 15,\r\n    limited = 1,\r\n    addAction = {'E'},\r\n    cost = 8,\r\n    addSlot = {4, 23, 22},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/MerchantOne.png',\r\n    restriction = {\r\n        Faction={[3]=true},\r\n        ship = {[91]=true}\r\n    }\r\n}\r\nmasterUpgradesDB[779]={\r\n    name = \"Insatiable Worrt\",\r\n    XWS = 'insatiableworrt',\r\n    slot = 15,\r\n    cost = 7,\r\n    shd = -1,\r\n    Energy = -1,\r\n    Hull = 3,\r\n    addSlot = {22},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/InsatiableWorrt.png',\r\n    restriction = {\r\n        Faction={[3]=true},\r\n        ship = {[91]=true}\r\n    }\r\n}\r\n-- Configuration\r\nmasterUpgradesDB[780]={\r\n    name = \"Corsair Refit\",\r\n    XWS = 'corsairrefit',\r\n    slot = 18,\r\n    cost = 15,\r\n    shd = -2,\r\n    Energy = 1,\r\n    Hull = 2,\r\n    addSlot = {3, 4, 6},\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/CorsirRefit.png',\r\n    restriction = {\r\n        ship = {[91]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[727]={\r\n    name = \"Strategic Commander\",\r\n    XWS = 'strategiccommander',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    cost = 6,\r\n    card = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/EpicCards/StrategicCommander.png',\r\n    cardB = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\r\n    restriction = {\r\n        Size={huge=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[800]={\r\n    name = \"Vectored Cannons (RZ-1)\",\r\n    XWS = 'vectoredcannonsrz1',\r\n    slot = 18,\r\n    cost = 1,\r\n    restriction = {\r\n        ship = {[35]=true}\r\n    },\r\n    arcs = {turret = {name= 'primary', type={'front', 'back'}}},\r\n}\r\n\r\nmasterUpgradesDB[801]={\r\n    name = \"B6 Blade Wing Prototype\",\r\n    XWS = 'b6bladewingprototype1',\r\n    slot = 15,\r\n    limited = 1,\r\n    cost = 2,\r\n    addSlot = {16},\r\n    restriction = {\r\n        Faction = {[1]=true},\r\n        ship = {[17]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[802]={\r\n    name = \"B6 Blade Wing Prototype\",\r\n    XWS = 'b6bladewingprototype',\r\n    slot = 21,\r\n    limited = 1,\r\n    cost = 12,\r\n    addSlot = {16},\r\n    remSlot = {15},\r\n    restriction = {\r\n        Faction = {[1]=true},\r\n        ship = {[17]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[803]={\r\n    name = \"Hopeful\",\r\n    XWS = 'hopeful',\r\n    slot = 1,\r\n    cost = 1,\r\n    restriction = {\r\n        Faction = {[1]=true}\r\n    },\r\n    addAction = {'B', 'F'},\r\n}\r\n\r\nmasterUpgradesDB[804]={\r\n    name = \"Sabine Wren\",\r\n    XWS = 'sabinewren-gunner',\r\n    slot = 16,\r\n    limited = 1,\r\n    cost = 2,\r\n    restriction = {\r\n        Faction = {[1]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[805]={\r\n    name = \"Phoenix Squadron\",\r\n    XWS = 'phoenixsquadron',\r\n    slot = 21,\r\n    limited = 1,\r\n    wingleader = true,\r\n    dual = true,\r\n    cost = 5,\r\n    restriction = {\r\n        Faction = {[1]=true},\r\n        ship = {[23]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[806]={\r\n    name = \"Disciplined\",\r\n    XWS = 'disciplined',\r\n    slot = 1,\r\n    cost = 1,\r\n    restriction = {\r\n        Faction = {[2]=true}\r\n    },\r\n    addAction = {'TL', 'BR'},\r\n}\r\n\r\n\r\nmasterUpgradesDB[807]={\r\n    name = \"Sensitive Controls\",\r\n    XWS = 'sensitivecontrols',\r\n    slot = 18,\r\n    cost = 2,\r\n    restriction = {\r\n        ship = {[41]=true,\r\n                [52]= true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[808]={\r\n    name = \"Skystrike Academy Class\",\r\n    XWS = 'skystrikeacademyclass',\r\n    slot = 21,\r\n    limited = 2,\r\n    wingleader = true,\r\n    dual = true,\r\n    cost = 3,\r\n    restriction = {\r\n        Faction = {[2]=true},\r\n        ship = {\r\n          [11] = true, --TIE fighter\r\n          [41] = true, --TIE interceptor\r\n        }\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[809]={\r\n    name = \"Shadow Wing\",\r\n    XWS = 'shadowwing',\r\n    slot = 21,\r\n    limited = 1,\r\n    wingleader = true,\r\n    dual = true,\r\n    cost = 6,\r\n    restriction = {\r\n        Faction = {[2]=true},\r\n        ship = {\r\n          [11] = true, --TIE fighter\r\n          [19] = true, --TIE bomber\r\n          [41] = true, --TIE interceptor\r\n        }\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[810]={\r\n    name = \"Gamut Key\",\r\n    XWS = 'gamutkey-crew',\r\n    slot = 8,\r\n    Charge = 2,\r\n    addAction = {'TL'},\r\n    cost = 6,\r\n    restriction = {\r\n        Faction = {[3]=true}\r\n    }\r\n}\r\n\r\n\r\nmasterUpgradesDB[811]={\r\n    name = \"Cutthroat\",\r\n    XWS = 'cutthroat',\r\n    slot = 1,\r\n    cost = 1,\r\n    restriction = {\r\n        Faction = {[3]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[812]={\r\n    name = \"Bounty\",\r\n    XWS = 'bounty',\r\n    dual = true,\r\n    slot = 21,\r\n    cost = 5,\r\n    restriction = {\r\n        Faction = {[3]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[813]={\r\n    name = \"In It For The Money\",\r\n    XWS = 'initforthemoney',\r\n    dual = true,\r\n    slot = 21,\r\n    cost = 5,\r\n    restriction = {\r\n        Faction = {[3]=true}\r\n    },\r\n}\r\n\r\nmasterUpgradesDB[814]={\r\n    name = \"Interloper Turn\",\r\n    XWS = 'interloperturn',\r\n    slot = 1,\r\n    cost = 1,\r\n    restriction = {\r\n        Faction = {[2]=true}\r\n    },\r\n    addAction = {'TL', 'BR'},\r\n}\r\n\r\nmasterUpgradesDB[815]={\r\n    name = \"Protectorate Gleb\",\r\n    XWS = 'protectorategleb',\r\n    slot = 8,\r\n    cost = 2,\r\n    restriction = {\r\n        Faction = {[2]=true,[3]=true,[5]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[816]={\r\n    name = \"R4-B11\",\r\n    XWS = 'r4b11',\r\n    slot = 10,\r\n    cost = 3,\r\n    restriction = {\r\n        Faction = {[3]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[817]={\r\n    name = \"TIE Defender Elite\",\r\n    XWS = 'tiedefenderelite',\r\n    slot = 18,\r\n    cost = 2,\r\n    restriction = {\r\n        Faction = {[2]=true},\r\n        ship = {[18]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[818]={\r\n    name = \"Tierfon Belly Run\",\r\n    XWS = 'tierfonbellyrun',\r\n    slot = 1,\r\n    cost = 2,\r\n    restriction = {\r\n        ship = {[12]=true}\r\n    }\r\n}\r\n\r\n-- From Trident class assault ship\r\nmasterUpgradesDB[819]={\r\n    name = \"Asajj Ventress\",\r\n    XWS = 'asajjventress',\r\n    Force = 1,\r\n    slot = 21,\r\n    remSlot = {8},\r\n    limited = 1,\r\n    cost = 8,\r\n    addAction = {\"F\"},\r\n    restriction = {\r\n        Size = {huge=true},\r\n        Faction = {[3]=true, [7]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[820]={\r\n    name = \"Riff Tamson\",\r\n    XWS = 'rifftamson',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    limited = 1,\r\n    cost = 6,\r\n    restriction = {\r\n        Size = {huge=true},\r\n        Faction = {[7]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[821]={\r\n    name = \"General Grievous\",\r\n    XWS = 'generalgrievous-command',\r\n    slot = 21,\r\n    remSlot = {8},\r\n    limited = 1,\r\n    cost = 5,\r\n    restriction = {\r\n        Size = {huge=true},\r\n        Faction = {[7]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[822]={\r\n    name = \"Tractor Technicians\",\r\n    XWS = 'tractortechnicians',\r\n    slot = 23,\r\n    cost = 2\r\n}\r\n\r\nmasterUpgradesDB[823]={\r\n    name = \"Hondo Ohnaka\",\r\n    XWS = 'hondoohnaka-command',\r\n    slot = 21,\r\n    limite = 1,\r\n    remSlot = {8},\r\n    cost = 7,\r\n    Charge = 2,\r\n    restriction = {\r\n        Size = {huge=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[824]={\r\n    name = \"Corsair Crew\",\r\n    XWS = 'corsaircrew',\r\n    slot = 23,\r\n    remSlot = {16},\r\n    cost = 5,\r\n    restriction = {\r\n        Faction = {[3]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[825]={\r\n    name = \"Mar Tuuk\",\r\n    XWS = 'martuuk',\r\n    slot = 21,\r\n    limited = 1,\r\n    remSlot = {8},\r\n    cost = 4,\r\n    restriction = {\r\n        Faction = {[7]=true},\r\n        Size = {huge=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[826]={\r\n    name = \"Zealous Captain\",\r\n    XWS = 'zealouscaptain',\r\n    slot = 21,\r\n    limited = 1,\r\n    remSlot = {8},\r\n    cost = 4,\r\n    restriction = {\r\n        Size = {huge=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[827]={\r\n    name = \"Tractor Tentacles\",\r\n    XWS = 'tractortentacles',\r\n    slot = 24,\r\n    cost = 0,\r\n    restriction = {\r\n        ship = {[95]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[828]={\r\n    name = \"Drill Beak\",\r\n    XWS = 'drillbeak',\r\n    slot = 24,\r\n    remSlot = {22},\r\n    cost = 4,\r\n    restriction = {\r\n        ship = {[95]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[829]={\r\n    name = \"Enhanced Propulsion\",\r\n    XWS = 'enhancedpropulsion',\r\n    slot = 24,\r\n    remSlot = {22},\r\n    cost = 6,\r\n    restriction = {\r\n        ship = {[95]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[830]={\r\n    name = \"Proton Cannon Battery\",\r\n    XWS = 'protoncannonbattery',\r\n    slot = 24,\r\n    remSlot = {22},\r\n    cost = 10,\r\n    restriction = {\r\n        Size = {huge=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[831]={\r\n    name = \"Droid Crew\",\r\n    XWS = 'droidcrew',\r\n    slot = 23,\r\n    cost = 5,\r\n    addAction = {'C','TL'},\r\n    restriction = {\r\n        Faction = {[7]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[832]={\r\n    name = \"Grappler\",\r\n    XWS = 'grappler',\r\n    limited = 1,\r\n    slot = 15,\r\n    cost = 3,\r\n    Shield = -1,\r\n    Hull = 2,\r\n    restriction = {\r\n        ship = {[95]=true},\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[833]={\r\n    name = \"Nautolan's Revenge\",\r\n    XWS = 'nautolansrevenge',\r\n    slot = 15,\r\n    cost = 2,\r\n    limited = 1,\r\n    Shield = 1,\r\n    Hull = -2,\r\n    Energy = 1,\r\n    restriction = {\r\n        ship = {[95]=true},\r\n        Faction = {[3]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[834]={\r\n    name = \"Neimoidian Grasp\",\r\n    XWS = 'neimoidiangrasp',\r\n    slot = 15,\r\n    cost = 5,\r\n    limited = 1,\r\n    Hull = -2,\r\n    addAction = {\"E\"},\r\n    restriction = {\r\n        ship = {[95]=true},\r\n        Faction = {[7]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[835]={\r\n    name = \"Trident\",\r\n    XWS = 'trident',\r\n    slot = 15,\r\n    cost = 4,\r\n    limited = 1,\r\n    Energy = 1,\r\n    addAction = {\"E\"},\r\n    restriction = {\r\n        ship = {[95]=true},\r\n        Faction = {[7]=true}\r\n    }\r\n}\r\n\r\nmasterUpgradesDB[836]={\r\n    name = \"Tracking Torpedoes\",\r\n    XWS = 'trackingtorpedoes',\r\n    slot = 5,\r\n    cost = 8,\r\n    limited = 1,\r\n    Charge = 3,\r\n    restriction = {\r\n        Size = {huge=true}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn masterUpgradesDB\r\n\nend)\n__bundle_register(\"TTS_xwing/src/PilotDb\", function(require, _LOADED, __bundle_register, __bundle_modules)\nmasterPilotDB={}\r\nmasterPilotDB[0]={['name']='',['XWS']='',['Faction']= 0,['ship_type']=0,['cost']=0,['slot']={},['Shield']=0,['card']='',['cardB']='',['init']=0,['actSet']={}}\r\n\r\n\r\nmasterPilotDB[1]={\r\n  name = 'Wedge Antilles',\r\n  XWS = 'wedgeantilles',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 54,\r\n  slot = {21, 1, 5, 10, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_1.png',\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/WedgeAntilles.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[2]={\r\n  name = 'Luke Skywalker',\r\n  XWS = 'lukeskywalker',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 61,\r\n  slot = {21, 17, 5, 10, 14, 18},\r\n  Shield = 2,\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_2.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/LukeSkywalker.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[3]={\r\n  name = 'Thane Kyrell',\r\n  XWS = 'thanekyrell',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 47,\r\n  slot = {21, 1, 5, 10, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_3.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/ThaneKyrell.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[4]={\r\n  name = 'Garven Dreis',\r\n  XWS = 'garvendreis-t65xwing',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 46,\r\n  slot = {21, 1, 5, 10, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_4.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/GarvenDreis.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[5]={\r\n  name = 'Jek Porkins',\r\n  XWS = 'jekporkins',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 44,\r\n  slot = {21, 1, 5, 10, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_5.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/JekPorkins.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[6]={\r\n  name = 'Kullbee Sperado',\r\n  XWS = 'kullbeesperado',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 45,\r\n  slot = {21, 1, 5, 10, 13, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_6.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/KullbeeSperado.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[7]={\r\n  name = 'Biggs Darklighter',\r\n  XWS = 'biggsdarklighter',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 47,\r\n  slot = {21, 5, 10, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_7.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/BiggsDarklighter.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[8]={\r\n  name = 'Leevan Tenza',\r\n  XWS = 'leevantenza',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 43,\r\n  slot = {21, 1, 5, 10, 13, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_8.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/LeevanTenza.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[9]={\r\n  name = 'Edrio Two Tubes',\r\n  XWS = 'edriotwotubes',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 33,\r\n  cost = 42,\r\n  slot = {21, 5, 10, 13, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_9.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/EdrioTwoTubes.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[10]={\r\n  name = 'Red Squadron Veteran',\r\n  XWS = 'redsquadronveteran',\r\n  Faction = 1,\r\n  ship_type = 33,\r\n  cost = 40,\r\n  slot = {21, 1, 5, 10, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_10.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/RedSquadronVeteran.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[11]={\r\n  name = 'Blue Squadron Escort',\r\n  XWS = 'bluesquadronescort',\r\n  Faction = 1,\r\n  ship_type = 33,\r\n  cost = 38,\r\n  slot = {21, 5, 10, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_11.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/BlueSquadronEscort.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[12]={\r\n  name = 'Cavern Angels Zealot',\r\n  XWS = 'cavernangelszealot',\r\n  Faction = 1,\r\n  ship_type = 33,\r\n  cost = 38,\r\n  slot = {21, 5, 10, 13, 14, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_12.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/CavernAngelsZealot.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[13]={\r\n    name = 'Norra Wexley',\r\n    XWS = 'norrawexley-btla4ywing',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 12,\r\n    cost = 41,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_13.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/norrawexley.png',\r\n    actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[14]={\r\n    name = '\"Dutch\" Vander',\r\n    XWS = 'dutchvander',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 12,\r\n    cost = 40,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_14.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/dutchvander.png',\r\n    actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[15]={\r\n    name = 'Horton Salm',\r\n  XWS = 'hortonsalm',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 12,\r\n    cost = 37,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_15.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/hortonsalm.png',\r\n    actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[16]={\r\n    name = 'Evaan Verlaine',\r\n  XWS = 'evaanverlaine',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 12,\r\n    cost = 35,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_16.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/evaanverlaine.png',\r\n    actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[17]={\r\n    name = 'Gold Squadron Veteran',\r\n  XWS = 'goldsquadronveteran',\r\n    Faction = 1,\r\n    ship_type = 12,\r\n    cost = 32,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_17.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/goldsquadronveteran.png',\r\n    actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[18]={\r\n    name = 'Gray Squadron Bomber',\r\n  XWS = 'graysquadronbomber',\r\n    Faction = 1,\r\n    ship_type = 12,\r\n    cost = 30,\r\n    slot = {21, 4, 5, 16, 10, 12, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_18.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/graysquadronbomber.png',\r\n    actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[19]={\r\n  name = 'Jake Farrell',\r\n  XWS = 'jakefarrell',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 35,\r\n  cost = 34,\r\n  slot = {21, 1, 1, 6, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_19.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/JakeFarrell.png',\r\n  actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[20]={\r\n  name = 'Arvel Crynyd',\r\n  XWS = 'arvelcrynyd',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 35,\r\n  cost = 32,\r\n  slot = {21, 1,1, 6, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_20.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/ArvelCrynyd.png',\r\n  actSet = {'F','TL','E','Ail','BR'}\r\n}\r\n\r\nmasterPilotDB[21]={\r\n  name = 'Green Squadron Pilot',\r\n  XWS = 'greensquadronpilot',\r\n  Faction = 1,\r\n  ship_type = 35,\r\n  cost = 30,\r\n  slot = {21, 1,1, 6, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_21.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/GreenSquadronPilot.png',\r\n  actSet = {'F','TL','E','B','BR'}\r\n}\r\n\r\nmasterPilotDB[22]={\r\n  name = 'Phoenix Squadron Pilot',\r\n  XWS = 'phoenixsquadronpilot',\r\n  Faction = 1,\r\n  ship_type = 35,\r\n  cost = 28,\r\n  slot = {21, 1,6, 18},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_22.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/PhoenixSquadronPilot.png',\r\n  actSet = {'F','TL','E','B','BR'}\r\n}\r\n\r\nmasterPilotDB[23]={\r\n  name = 'Braylen Stramm',\r\n  XWS = 'braylenstramm',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 17,\r\n  cost = 52,\r\n  slot = {21, 1, 2, 3, 3, 5, 14, 15, 18},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_23.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/BraylenStramm.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[24]={\r\n  name = 'Ten Numb',\r\n  XWS = 'tennumb',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 17,\r\n  cost = 48,\r\n  slot = {21, 1, 2, 3, 3, 5, 14, 15, 18},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_24.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/TenNumb.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[25]={\r\n  name = 'Blade Squadron Veteran',\r\n  XWS = 'bladesquadronveteran',\r\n  Faction = 1,\r\n  ship_type = 17,\r\n  cost = 42,\r\n  slot = {21, 1, 2, 3, 3, 5, 14, 15, 18},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_25.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/BladeSquadronVeteran.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[26]={\r\n  name = 'Blue Squadron Pilot',\r\n  XWS = 'bluesquadronpilot',\r\n  Faction = 1,\r\n  ship_type = 17,\r\n  cost = 41,\r\n  slot = {21, 2, 3, 3, 5, 14, 15, 18},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_26.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/BlueSquadronPilot.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[27]={\r\n  name = 'Airen Cracken',\r\n  XWS = 'airencracken',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 38,\r\n  cost = 36,\r\n  slot = {21, 1, 6, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_27.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_z95/AirenCracken.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[28]={\r\n  name = 'Lieutenant Blount',\r\n  XWS = 'lieutenantblount',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 38,\r\n  cost = 30,\r\n  slot = {21, 1, 6, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_28.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_z95/LieutenantBlount.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[29]={\r\n  name = 'Tala Squadron Pilot',\r\n  XWS = 'talasquadronpilot',\r\n  Faction = 1,\r\n  ship_type = 38,\r\n  cost = 24,\r\n  slot = {21, 1, 6, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_29.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_z95/TalaSquadronPilot.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[30]={\r\n  name = 'Bandit Squadron Pilot',\r\n  XWS = 'banditsquadronpilot',\r\n  Faction = 1,\r\n  ship_type = 38,\r\n  cost = 22,\r\n  slot = {21, 6, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_30.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_z95/BanditSquadronPilot.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[31]={\r\n    name = 'Wullffwarro',\r\n  XWS = 'wullffwarro',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 6,\r\n    cost = 53,\r\n    slot = {21, 1, 8, 8, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_31.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/Auzituck/wullffwarro.png',\r\n    actSet = {'F','R', 'BR'}\r\n}\r\n\r\nmasterPilotDB[32]={\r\n    name = 'Lowhhrick',\r\n  XWS = 'lowhhrick',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 6,\r\n    cost = 50,\r\n    slot = {21, 1, 8, 8, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_32.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/Auzituck/lowhhrick.png',\r\n    actSet = {'F','R', 'BR'}\r\n}\r\n\r\nmasterPilotDB[33]={\r\n    name = 'Kashyyyk Defender',\r\n  XWS = 'kashyyykdefender',\r\n    Faction = 1,\r\n    ship_type = 6,\r\n    cost = 44,\r\n    slot = {21, 8, 8, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_33.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/Auzituck/kashyyykdefender.png',\r\n    actSet = {'F','R', 'BR'}\r\n}\r\n\r\nmasterPilotDB[34]={\r\n  name = 'Hera Syndulla',\r\n  XWS = 'herasyndulla',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 32,\r\n  cost = 38,\r\n  slot = {21, 1, 4, 8, 14, 15},\r\n  executeOptions = {\r\n      rtl1  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      rtr1  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      rtl3  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      rtr3  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      rk4   = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      bs1   = {[1]='bs1',  [2]='bbl1', [3]='bbr1', [4]='bs2'},\r\n      bbl1  = {[1]='bs1',  [2]='bbl1', [3]='bbr1', [4]='bs2'},\r\n      bbr1  = {[1]='bs1',  [2]='bbl1', [3]='bbr1', [4]='bs2'},\r\n      bs2   = {[1]='bs1',  [2]='bbl1', [3]='bbr1', [4]='bs2'}\r\n  },\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_34.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_attackshuttle/HeraSyndulla.jpg',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[35]={\r\n  name = 'Sabine Wren',\r\n  XWS = 'sabinewren',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 32,\r\n  cost = 41,\r\n  slot = {21, 1, 4, 8, 14, 15},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_35.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_attackshuttle/SabineWren.jpg',\r\n  actSet = {'F','E','B', 'BR'}\r\n}\r\n\r\nmasterPilotDB[36]={\r\n  name = 'Ezra Bridger',\r\n  XWS = 'ezrabridger',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 32,\r\n  cost = 40,\r\n  slot = {21, 17, 4, 8, 14, 15},\r\n  Shield = 1,\r\n  Force = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_36.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_attackshuttle/EzraBridger.jpg',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[37]={\r\n  name='\"Zeb\" Orrelios',\r\n  XWS = 'zeborrelios',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 32,\r\n  cost = 32,\r\n  slot = {21, 4, 8, 14, 15},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_37.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_attackshuttle/ZebOrrelios.jpg',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[38]={\r\n    name = 'Fenn Rau',\r\n    XWS = 'fennrau-sheathipedeclassshuttle',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 8,\r\n    cost = 50,\r\n    slot = {21, 1, 8, 10, 14, 15},\r\n    Shield = 1,\r\n    card = 'https://sb-cdn.fantasyflightgames.com/card_images/en/43140025bc61b3e64ef6831987cafb2c.png',\r\n    init = 6,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/Sheathipede/fennrau.png',\r\n    actSet = {'F'}\r\n}\r\n\r\nmasterPilotDB[39]={\r\n    name = 'Ezra Bridger',\r\n    XWS = 'ezrabridger-sheathipedeclassshuttle',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 8,\r\n    cost = 40,\r\n    slot = {21, 17, 8, 10, 14, 15},\r\n    Shield = 1,\r\n    Force=1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_39.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/Sheathipede/ezrabridger.png',\r\n    actSet = {'F'}\r\n}\r\n\r\nmasterPilotDB[40]={\r\n    name = '\"Zeb\" Orrelios',\r\n    XWS = 'zeborrelios-sheathipedeclassshuttle',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 8,\r\n    cost = 33,\r\n    slot = {21, 1, 8, 10, 14, 15},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_40.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/Sheathipede/zeborrelios.png',\r\n    actSet = {'F'}\r\n}\r\n\r\nmasterPilotDB[41]={\r\n    name = 'AP-5',\r\n  XWS = 'ap5',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 8,\r\n    cost = 32,\r\n    slot = {21, 1, 8, 10, 14, 15},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_41.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/Sheathipede/ap5.png',\r\n    actSet = {'C'}\r\n}\r\n\r\nmasterPilotDB[42]={\r\n  name = 'Jan Ors',\r\n  XWS = 'janors',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 34,\r\n  cost = 41,\r\n  slot = {21, 1, 8, 12, 14, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_42.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_hwk/JanOrs.png',\r\n  actSet = {'F','TL','B','Rot','BR'}\r\n}\r\n\r\nmasterPilotDB[43]={\r\n  name = 'Kyle Katarn',\r\n  XWS = 'kylekatarn',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 34,\r\n  cost = 31,\r\n  slot = {21, 1, 8, 12, 14, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_43.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_hwk/KyleKatarn.png',\r\n  actSet = {'F','TL','B','Rot','BR'}\r\n}\r\n\r\nmasterPilotDB[44]={\r\n  name = 'Roark Garnet',\r\n  XWS = 'roarkgarnet',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 34,\r\n  cost = 38,\r\n  slot = {21, 1, 8, 12, 14, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_44.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_hwk/RoarkGarnet.png',\r\n  actSet = {'F','TL','B','Rot','BR'}\r\n}\r\n\r\nmasterPilotDB[45]={\r\n  name = 'Rebel Scout',\r\n  XWS = 'rebelscout',\r\n  Faction = 1,\r\n  ship_type = 34,\r\n  cost = 29,\r\n  slot = {21, 8, 12, 14, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_45.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_hwk/RebelScout.png',\r\n  actSet = {'F','TL','B','Rot','BR'}\r\n}\r\n\r\nmasterPilotDB[46]={\r\n    name = 'Ezra Bridger',\r\n    XWS = 'ezrabridger-tielnfighter',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 28,\r\n    slot = {21, 17, 14},\r\n    Shield = 0,\r\n    Force = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_46.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/ezrabridger.png',\r\n    actSet = {'F','E','BR'},\r\n        Customization = {model=\"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/rebeltie.obj\"}\r\n}\r\n\r\nmasterPilotDB[47]={\r\n    name = 'Sabine Wren',\r\n    XWS = 'sabinewren-tielnfighter',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 28,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_47.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/sabinewren.png',\r\n    actSet = {'F','E','B', 'BR'},\r\n    Customization = {model=\"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/rebeltie.obj\"}\r\n}\r\n\r\nmasterPilotDB[48]={\r\n    name = 'Captain Rex',\r\n    XWS = 'captainrex',\r\n    Condition = 'Suppressive Fire',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 28,\r\n    slot = {21, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_48.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/captainrex.png',\r\n    actSet = {'F','E','BR'},\r\n    Customization = {model=\"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/rebeltie.obj\"}\r\n}\r\n\r\nmasterPilotDB[49]={\r\n    name = '\"Zeb\" Orrelios',\r\n    XWS = 'zeborrelios-tielnfighter',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 23,\r\n    slot = {21, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_49.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/zeborrelios.png',\r\n    actSet = {'F','E','BR'},\r\n    Customization = {model=\"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/rebeltie.obj\"}\r\n}\r\n\r\nmasterPilotDB[50]={\r\n  name = 'Corran Horn',\r\n  XWS = 'corranhorn',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 40,\r\n  cost = 62,\r\n  slot = {21, 1, 2, 5, 10, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_50.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_ewing/CorranHorn.png',\r\n  actSet = {'F','E','BR','B','TL'}\r\n}\r\n\r\nmasterPilotDB[51]={\r\n  name = 'Gavin Darklighter',\r\n  XWS = 'gavindarklighter',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 40,\r\n  cost = 60,\r\n  slot = {21, 1, 2, 5, 10, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_51.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_ewing/GavinDarklighter.png',\r\n  actSet = {'F','E','BR','B','TL'}\r\n}\r\n\r\nmasterPilotDB[52]={\r\n  name ='Rogue Squadron Escort',\r\n  XWS = 'roguesquadronescort',\r\n  Faction = 1,\r\n  ship_type = 40,\r\n  cost = 51,\r\n  slot = {21, 1, 2, 5, 10, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_52.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_ewing/RogueSquadronEscort.png',\r\n  actSet = {'F','E','BR','B','TL'}\r\n}\r\n\r\nmasterPilotDB[53]={\r\n  name = 'Knave Squadron Escort',\r\n  XWS = 'knavesquadronescort',\r\n  Faction = 1,\r\n  ship_type = 40,\r\n  cost = 49,\r\n  slot = {21, 2, 5, 10, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_53.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_ewing/KnaveSquadronEscort.png',\r\n  actSet = {'F','E','BR','B','TL'}\r\n}\r\n\r\nmasterPilotDB[54]={\r\n    name = 'Bodhi Rook',\r\n    XWS = 'bodhirook',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 15,\r\n    cost = 48,\r\n    slot = {21, 1, 2, 8, 8, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_54.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/bodhirook.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[55]={\r\n    name = 'Saw Gerrera',\r\n    XWS = 'sawgerrera',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 15,\r\n    cost = 52,\r\n    slot = {21, 1, 2, 8, 8, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_55.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/sawgerrera.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[56]={\r\n    name = 'Cassian Andor',\r\n    XWS = 'cassianandor',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 15,\r\n    cost = 51,\r\n    slot = {21, 1, 2, 8, 8, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_56.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/cassianandor.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[57]={\r\n    name = 'Magva Yarro',\r\n    XWS = 'magvayarro',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 15,\r\n    cost = 50,\r\n    slot = {21, 1, 2, 8, 8, 13, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_57.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/magvayarro.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[58]={\r\n    name = 'Benthic Two Tubes',\r\n    XWS = 'benthictwotubes',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 15,\r\n    cost = 46,\r\n    slot = {21, 2, 8, 8, 13, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_58.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/benthictwotubes.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[59]={\r\n    name = 'Heff Tobber',\r\n    XWS = 'hefftobber',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 15,\r\n    cost = 44,\r\n    slot = {21, 1, 2, 8, 8, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_59.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/hefftobber.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[60]={\r\n    name = 'Blue Squadron Scout',\r\n    XWS = 'bluesquadronscout',\r\n    Faction = 1,\r\n    ship_type = 15,\r\n    cost = 43,\r\n    slot = {21, 2, 8, 8, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_60.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/bluesquadronscout.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[61]={\r\n    name = 'Partisan Renegade',\r\n    XWS = 'partisanrenegade',\r\n    Faction = 1,\r\n    ship_type = 15,\r\n    cost = 43,\r\n    slot = {21, 2, 8, 8, 13, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_61.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/partisanrenegade.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[62]={\r\n  name = 'Miranda Doni',\r\n  XWS = 'mirandadoni',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 30,\r\n  cost = 40,\r\n  slot = {21, 5, 6, 6, 16, 8, 12, 12, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_62.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/REB_kwing/MirandaDoni.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[63]={\r\n  name = 'Esege Tuketu',\r\n  XWS = 'esegetuketu',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 30,\r\n  cost = 44,\r\n  slot = {21, 5, 6, 6, 16, 8, 12, 12, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_63.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/REB_kwing/EsegeTuketu.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[64]={\r\n  name = 'Warden Squadron Pilot',\r\n  XWS = 'wardensquadronpilot',\r\n  Faction = 1,\r\n  ship_type = 30,\r\n  cost = 38,\r\n  slot = {21, 5, 6, 6, 16, 8, 12, 12, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_64.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/REB_kwing/WardenSquadronPilot.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[65]={\r\n  name = 'Norra Wexley',\r\n  XWS = 'norrawexley',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 31,\r\n  cost = 55,\r\n  slot = {21, 1, 5, 8, 16, 10, 14},\r\n  Shield = 3,\r\n  card = 'https://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_65.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/REB_arc/NorraWexley.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[66]={\r\n  name = 'Garven Dreis',\r\n  XWS = 'garvendreis',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 31,\r\n  cost = 49,\r\n  slot = {21, 1, 5, 8, 16, 10, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_66.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/REB_arc/GarvenDreis.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[67]={\r\n  name = 'Shara Bey',\r\n  XWS = 'sharabey',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 31,\r\n  cost = 50,\r\n  slot = {21, 1, 5, 8, 16, 10, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_67.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/REB_arc/SharaBey.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[68]={\r\n  name = 'Ibtisam',\r\n  XWS = 'ibtisam',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 31,\r\n  cost = 46,\r\n  slot = {21, 1, 5, 8, 16, 10, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_68.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/REB_arc/Ibtisam.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[69]={\r\n    name = 'Han Solo',\r\n    XWS = 'hansolo-modifiedyt1300lightfreighter',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 1,\r\n    cost = 79,\r\n    slot = {21, 1, 6, 8, 8, 16, 14, 14, 15},\r\n    Shield = 5,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_69.png',\r\n    init = 6,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/hansolo.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[70]={\r\n    name = 'Lando Calrissian',\r\n    XWS = 'landocalrissian-modifiedyt1300lightfreighter',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 1,\r\n    cost = 78,\r\n    slot = {21, 1, 6, 8, 8, 16, 14, 14, 15},\r\n    Shield = 5,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_70.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/landocalrissian.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[71]={\r\n    name = 'Chewbacca',\r\n    XWS = 'chewbacca',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 1,\r\n    cost = 70,\r\n    slot = {21, 1, 6, 8, 8, 16, 14, 14, 15},\r\n    Shield = 5,\r\n    Charge = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_71.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/chewbacca.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[72]={\r\n    name = 'Outer Rim Smuggler',\r\n  XWS = 'outerrimsmuggler',\r\n    Faction = 1,\r\n    ship_type = 1,\r\n    cost = 67,\r\n    slot = {21, 6, 8, 8, 16, 14, 14, 15},\r\n    Shield = 5,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_72.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/outerrimsmuggler.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[73]={\r\n  name = 'Hera Syndulla',\r\n  XWS = 'herasyndulla-vcx100lightfreighter',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 23,\r\n  cost = 72,\r\n  slot = {21, 1,2, 4, 5, 8, 8, 16, 14, 15},\r\n  Shield = 4,\r\n  executeOptions = {\r\n      rtl1  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      rtr1  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      rtl3  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      rtr3  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      rk4   = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\r\n      bs1   = {[1]='bs1',  [2]='bbl2', [3]='bbr2', [4]='bs2'},\r\n      bbl2  = {[1]='bs1',  [2]='bbl2', [3]='bbr2', [4]='bs2'},\r\n      bbr2  = {[1]='bs1',  [2]='bbl2', [3]='bbr2', [4]='bs2'},\r\n      bs2   = {[1]='bs1',  [2]='bbl2', [3]='bbr2', [4]='bs2'}\r\n  },\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_73.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/REB_VCX100/HeraSyndulla.jpg',\r\n  actSet = {'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[74]={\r\n  name = 'Kanan Jarrus',\r\n  XWS = 'kananjarrus',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 23,\r\n  cost = 68,\r\n  slot = {21, 17,2, 4, 5, 8, 8, 16, 14, 15},\r\n  Shield = 4,\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_74.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/REB_VCX100/KananJarrus.jpg',\r\n  actSet = {'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[75]={\r\n  name = '\"Chopper\"',\r\n  XWS = 'chopper',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 23,\r\n  cost = 67,\r\n  slot = {21, 4,2, 5, 8, 8, 16, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_75.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/REB_VCX100/Chopper.jpg',\r\n  actSet = {'C','TL','R'}\r\n}\r\n\r\nmasterPilotDB[76]={\r\n  name = 'Lothal Rebel',\r\n  XWS = 'lothalrebel',\r\n  Faction = 1,\r\n  ship_type = 23,\r\n  cost = 67,\r\n  slot = {21, 4,2, 5, 8, 8, 16, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_76.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/REB_VCX100/LothalRebel.jpg',\r\n  actSet = {'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[77]={\r\n    name = 'Dash Rendar',\r\n  XWS = 'dashrendar',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 5,\r\n    cost = 85,\r\n    slot = {21, 1, 6, 8, 16, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_77.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/YT2400/dashrendar.png',\r\n    actSet = {'F','TL','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[78]={\r\n    name = '\"Leebo\"',\r\n  XWS = 'leebo',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 5,\r\n    cost = 76,\r\n    slot = {1, 21, 6, 16, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_78.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/YT2400/leebo.png',\r\n    actSet = {'C','TL','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[79]={\r\n    name = 'Wild Space Fringer',\r\n  XWS = 'wildspacefringer',\r\n    Faction = 1,\r\n    ship_type = 5,\r\n    cost = 72,\r\n    slot = {21, 6, 8, 16, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_79.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/YT2400/wildspacefringer.png',\r\n    actSet = {'F','TL','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[80]={\r\n    name = '\"Mauler\" Mithel',\r\n  XWS = 'maulermithel',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 30,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_80.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/maulermithel.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[81]={\r\n    name = '\"Howlrunner\"',\r\n  XWS = 'howlrunner',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 44,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_81.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/howlrunner.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[82]={\r\n    name = '\"Scourge\" Skutu',\r\n  XWS = 'scourgeskutu',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 30,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_82.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/scourgeskutu.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[83]={\r\n    name = 'Iden Versio',\r\n  XWS = 'idenversio',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 40,\r\n    slot = {21, 1, 14},\r\n    Shield =0,\r\n    Charge = 1,\r\n    card ='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_83.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/idenversio.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[84]={\r\n    name = 'Gideon Hask',\r\n  XWS = 'gideonhask',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 29,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_84.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/gideonhask.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[85]={\r\n    name = 'Del Meeko',\r\n  XWS = 'delmeeko',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 29,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_85.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/delmeeko.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[86]={\r\n    name = 'Seyn Marana',\r\n  XWS = 'seynmarana',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 29,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_86.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/seynmarana.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[87]={\r\n    name = 'Valen Rudor',\r\n  XWS = 'valenrudor',\r\n    Faction = 2,\r\n    limited = 1,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 26,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_87.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/valenrudor.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[88]={\r\n    name = '\"Night Beast\"',\r\n  XWS = 'nightbeast',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 25,\r\n    slot = {21, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_88.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/nightbeast.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[89]={\r\n    name = '\"Wampa\"',\r\n  XWS = 'wampa',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 11,\r\n    cost = 28,\r\n    slot = {21, 14},\r\n    Shield = 0,\r\n    Charge = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_89.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/wampa.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[90]={\r\n    name = 'Black Squadron Ace',\r\n  XWS = 'blacksquadronace',\r\n    Faction = 2,\r\n    ship_type = 11,\r\n    cost = 25,\r\n    slot = {21, 1, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_90.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/blacksquadronace.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[91]={\r\n    name = 'Obsidian Squadron Pilot',\r\n  XWS = 'obsidiansquadronpilot',\r\n    Faction = 2,\r\n    ship_type = 11,\r\n    cost = 23,\r\n    slot = {21, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_91.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/obsidiansquadronace.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[92]={\r\n    name = 'Academy Pilot',\r\n  XWS = 'academypilot',\r\n    Faction = 2,\r\n    ship_type = 11,\r\n    cost = 22,\r\n    slot = {21, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_92.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/academypilot.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[93]={\r\n    name = 'Darth Vader',\r\n    XWS = 'darthvader',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 13,\r\n    cost = 66,\r\n    slot = {21, 17, 2, 6, 14},\r\n    Shield = 2,\r\n    Force = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_93.png',\r\n    init = 6,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/darthvader.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[94]={\r\n    name = 'Maarek Stele',\r\n    XWS = 'maarekstele',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 13,\r\n    cost = 45,\r\n    slot = {21, 1, 2, 6, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_94.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/maarekstele.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[95]={\r\n    name = 'Ved Foslo',\r\n  XWS = 'vedfoslo',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 13,\r\n    cost = 44,\r\n    slot = {21, 1, 2, 6, 14},\r\n    executeOptions = {\r\n        ws1  = {[1]='ws1', [2]='ws2'},\r\n        bs2  = {[1]='bs1', [2]='bs2', [3]='bs3'},\r\n        bs3  = {[1]='bs2', [2]='bs3', [3]='bs4'},\r\n        ws4  = {[1]='ws3', [2]='ws4', [3]='ws5'},\r\n        ws5  = {[1]='ws4', [2]='ws5'},\r\n        bbl1 = {[1]='bbl1', [2]='bbl2'},\r\n        bbr1 = {[1]='bbr1', [2]='bbr2'},\r\n        bbl2 = {[1]='bbl1', [2]='bbl2', [3]='bbl3'},\r\n        bbr2 = {[1]='bbr1', [2]='bbr2', [3]='bbr3'},\r\n        wbl3 = {[1]='wbl2', [2]='wbl3'},\r\n        wbr3 = {[1]='wbr2', [2]='wbr3'},\r\n        wtl2 = {[1]='wtl1', [2]='wtl2', [3]='wtl3'},\r\n        wtr2 = {[1]='wtr1', [2]='wtr2', [3]='wtr3'},\r\n        wtl3 = {[1]='wtl2', [2]='wtl3'},\r\n        wtr3 = {[1]='wtr2', [2]='wtr3'},\r\n        rtl3t = {[1]='rtl2t', [2]='rtl3t'},\r\n        rtr3t = {[1]='rtr2t', [2]='rtr3t'},\r\n        rk4  = {[1]='rk3', [2]='rk4', [3]='rk5'}\r\n    },\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_95.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/vedfoslo.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[96]={\r\n    name = 'Zertik Strom',\r\n  XWS = 'zertikstrom',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 13,\r\n    cost = 41,\r\n    slot = {21, 2, 6, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_96.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/zertikstrom.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[97]={\r\n    name = 'Storm Squadron Ace',\r\n  XWS = 'stormsquadronace',\r\n    Faction = 2,\r\n    ship_type = 13,\r\n    cost = 39,\r\n    slot = {21, 1, 2, 6, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_97.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/stormsquadronace.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[98]={\r\n    name = 'Tempest Squadron Pilot',\r\n  XWS = 'tempestsquadronpilot',\r\n    Faction = 2,\r\n    ship_type = 13,\r\n    cost = 36,\r\n    slot = {21, 2, 6, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_98.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/tempestsquadronpilot.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[99]={\r\n  name ='Grand Inquisitor',\r\n  XWS = 'grandinquisitor',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 25,\r\n  cost = 52,\r\n  slot = {21, 17, 2, 6},\r\n  Shield = 2,\r\n  Force =2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_99.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieadvv1/GrandInquisitor.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[100]={\r\n  name = 'Seventh Sister',\r\n  XWS = 'seventhsister',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 25,\r\n  cost = 43,\r\n  slot = {21, 17, 2, 6},\r\n  Shield = 2,\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_100.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieadvv1/SeventhSister.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[101]={\r\n  name = 'Baron of the Empire',\r\n  XWS = 'baronoftheempire',\r\n  Faction = 2,\r\n  ship_type = 25,\r\n  cost = 28,\r\n  slot = {21, 1, 2, 6},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_101.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieadvv1/BaronOfTheEmpire.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[102]={\r\n  name = 'Inquisitor',\r\n  XWS = 'inquisitor',\r\n  Faction = 2,\r\n  ship_type = 25,\r\n  cost = 36,\r\n  slot = {21, 17, 2, 6},\r\n  Shield = 2,\r\n  Force = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_102.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieadvv1/Inquisitor.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[103]={\r\n  name = 'Soontir Fel',\r\n  XWS = 'soontirfel',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 41,\r\n  cost = 54,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_103.png',\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/SoontirFel.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[104]={\r\n  name = 'Turr Phennir',\r\n  XWS = 'turrphennir',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 41,\r\n  cost = 42,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_104.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/TurrPhennir.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[105]={\r\n  name = 'Saber Squadron Ace',\r\n  XWS = 'sabersquadronace',\r\n  Faction = 2,\r\n  ship_type = 41,\r\n  cost = 35,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_105.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/SaberSquadronAce.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[106]={\r\n  name = 'Alpha Squadron Pilot',\r\n  XWS = 'alphasquadronpilot',\r\n  Faction = 2,\r\n  ship_type = 41,\r\n  cost = 31,\r\n  slot = {21, 14, 14, 18},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_106.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/AlphaSquadronPilot.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[107]={\r\n  name = 'Tomax Bren',\r\n  XWS = 'tomaxbren',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 19,\r\n  cost = 35,\r\n  slot = {21, 1, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_107.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiebomber/TomaxBren.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[108]={\r\n  name = 'Captain Jonus',\r\n  XWS = 'captainjonus',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 19,\r\n  cost = 45,\r\n  slot = {21, 1, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_108.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiebomber/CaptainJonus.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[109]={\r\n  name = 'Major Rhymer',\r\n  XWS = 'majorrhymer',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 19,\r\n  cost = 37,\r\n  slot = {21, 1, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_109.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiebomber/MajorRhymer.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[110]={\r\n  name = '\"Deathfire\"',\r\n  XWS = 'deathfire',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 19,\r\n  cost = 32,\r\n  slot = {21, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_110.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiebomber/Deathfire.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[111]={\r\n  name = 'Gamma Squadron Ace',\r\n  XWS = 'gammasquadronace',\r\n  Faction = 2,\r\n  ship_type = 19,\r\n  cost = 30,\r\n  slot = {21, 1, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_111.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiebomber/GammaSquadronAce.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[112]={\r\n  name ='Scimitar Squadron Pilot',\r\n  XWS = 'scimitarsquadronpilot',\r\n  Faction = 2,\r\n  ship_type = 19,\r\n  cost = 27,\r\n  slot = {21, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_112.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiebomber/ScimitarSquadronPilot.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[113]={\r\n  name = 'Major Vermeil',\r\n  XWS = 'majorvermeil',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 43,\r\n  cost = 49,\r\n  slot = {21, 1, 8, 8, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_113.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiereaper/MajorVermeil.png',\r\n  actSet = {'F','E','Ail'}\r\n}\r\n\r\nmasterPilotDB[114]={\r\n  name = 'Captain Feroph',\r\n  XWS = 'captainferoph',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 43,\r\n  cost = 47,\r\n  slot = {21, 1, 8, 8, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_114.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiereaper/CaptainFeroph.png',\r\n  actSet = {'F','E','Ail'}\r\n}\r\n\r\nmasterPilotDB[115]={\r\n  name = '\"Vizier\"',\r\n  XWS = 'vizier',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 43,\r\n  cost = 45,\r\n  slot = {21, 8, 8, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_115.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiereaper/Vizier.png',\r\n  actSet = {'F','E','Ail'}\r\n}\r\n\r\nmasterPilotDB[116]={\r\n  name = 'Scarif Base Pilot',\r\n  XWS = 'scarifbasepilot',\r\n  Faction = 2,\r\n  ship_type = 43,\r\n  cost = 39,\r\n  slot = {21, 8, 8, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_116.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiereaper/ScarifBasePilot.png',\r\n  actSet = {'F','E','Ail'}\r\n}\r\n\r\nmasterPilotDB[117]={\r\n  name = '\"Duchess\"',\r\n  XWS = 'duchess',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 16,\r\n  cost = 44,\r\n  slot = {21, 1, 16, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_117.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiestriker/Duchess.png',\r\n  actSet = {'F','E','BR','Ail'}\r\n}\r\n\r\nmasterPilotDB[118]={\r\n  name = '\"Countdown\"',\r\n  XWS = 'countdown',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 16,\r\n  cost = 43,\r\n  slot = {21, 1, 16, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_118.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiestriker/Countdown.png',\r\n  actSet = {'F','E','BR','Ail'}\r\n}\r\n\r\nmasterPilotDB[119]={\r\n  name = '\"Pure Sabacc\"',\r\n  XWS = 'puresabacc',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 16,\r\n  cost = 43,\r\n  slot = {21, 1, 16, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_119.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiestriker/PureSabacc.png',\r\n  actSet ={'F','E','BR','Ail'}\r\n}\r\n\r\nmasterPilotDB[120]={\r\n  name = 'Black Squadron Scout',\r\n  XWS = 'blacksquadronscout',\r\n  Faction = 2,\r\n  ship_type = 16,\r\n  cost = 33,\r\n  slot = {21, 1, 16, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_120.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiestriker/BlackSquadronScout.png',\r\n  actSet = {'F','E','BR','Ail'}\r\n}\r\n\r\nmasterPilotDB[121]={\r\n  name = 'Planetary Sentinel',\r\n  XWS = 'planetarysentinel',\r\n  Faction = 2,\r\n  ship_type = 16,\r\n  cost = 31,\r\n  slot = {21, 16, 12, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_121.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiestriker/PlanetarySentinel.png',\r\n  actSet = {'F','E','BR','Ail'}\r\n}\r\n\r\nmasterPilotDB[122]={\r\n  name = 'Rexler Brath',\r\n  XWS = 'rexlerbrath',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 18,\r\n  cost = 78,\r\n  slot = {21, 1, 2, 3, 6, 18},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_122.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/RexlerBrath.png',\r\n  actSet ={'F','E','BR','TL','B'}\r\n}\r\n\r\nmasterPilotDB[123]={\r\n  name = 'Colonel Vessery',\r\n  XWS = 'colonelvessery',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 18,\r\n  cost = 81,\r\n  slot = {21, 1, 2, 3, 6, 18},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_123.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/ColonelVessery.png',\r\n  actSet = {'F','E','BR','TL','B'}\r\n}\r\n\r\nmasterPilotDB[124]={\r\n    name = 'Countess Ryad',\r\n  XWS = 'countessryad',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 18,\r\n    cost = 79,\r\n    slot = {21, 1, 2, 3, 6, 18},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_124.png',\r\n    init = 4,\r\n    executeOptions = {\r\n        bs2 = {[1]='bs2', [2]='wk2'},\r\n        bs3 = {[1]='bs3', [2]='wk3'},\r\n        bs4 = {[1]='bs4', [2]='wk4'},\r\n        bs5 = {[1]='bs5', [2]='wk5'}\r\n    },\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/CountessRyad.png',\r\n    actSet = {'F','E','BR','TL','B'}\r\n}\r\n\r\nmasterPilotDB[125]={\r\n  name = 'Onyx Squadron Ace',\r\n  XWS = 'onyxsquadronace',\r\n  Faction = 2,\r\n  ship_type = 18,\r\n  cost = 73,\r\n  slot = {21, 1, 2, 3, 6, 18},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_125.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/OnyxSquadronAce.png',\r\n  actSet = {'F','E','BR','TL','B'}\r\n}\r\n\r\nmasterPilotDB[126]={\r\n  name = 'Delta Squadron Pilot',\r\n  XWS = 'deltasquadronpilot',\r\n  Faction = 2,\r\n  ship_type = 18,\r\n  cost = 68,\r\n  slot = {21, 2, 3, 6, 18},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_126.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/DeltaSquadronPilot.png',\r\n  actSet = {'F','E','BR','TL','B'}\r\n}\r\n\r\nmasterPilotDB[127]={\r\n  name = 'Lieutenant Kestal',\r\n  XWS = 'lieutenantkestal',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 29,\r\n  cost = 30,\r\n  slot = {21, 1, 4, 6, 6, 16, 14},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_127.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieaggressor/LieutenantKestal.png',\r\n  actSet = {'F','E','BR','TL'}\r\n}\r\n\r\nmasterPilotDB[128]={\r\n  name = '\"Double Edge\"',\r\n  XWS = 'doubleedge',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 29,\r\n  cost = 28,\r\n  slot = {21, 1, 4, 6, 6, 16, 14},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_128.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieaggressor/DoubleEdge.png',\r\n  actSet = {'F','E','BR','TL'}\r\n}\r\n\r\nmasterPilotDB[129]={\r\n  name = 'Onyx Squadron Scout',\r\n  XWS = 'onyxsquadronscout',\r\n  Faction = 2,\r\n  ship_type = 29,\r\n  cost = 28,\r\n  slot = {21, 1, 4, 6, 6, 16, 14},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_129.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieaggressor/OnyxSquadronScout.png',\r\n  actSet = {'F','E','BR','TL'}\r\n}\r\n\r\nmasterPilotDB[130]={\r\n  name = 'Sienar Specialist',\r\n  XWS = 'sienarspecialist',\r\n  Faction = 2,\r\n  ship_type = 29,\r\n  cost = 26,\r\n  slot = {21, 4, 6, 6, 16, 14},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_130.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieaggressor/SienarSpecialist.png',\r\n  actSet = {'F','E','BR','TL'}\r\n}\r\n\r\nmasterPilotDB[131]={\r\n  name = '\"Whisper\"',\r\n  XWS = 'whisper',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 27,\r\n  cost = 60,\r\n  slot = {21, 1, 2, 16, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_131.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiephantom/Whisper.png',\r\n  actSet = {'F','E','BR','CL'}\r\n}\r\n\r\nmasterPilotDB[132]={\r\n  name = '\"Echo\"',\r\n  XWS = 'echo',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 27,\r\n  cost = 51,\r\n  slot = {21, 1, 2, 16, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_132.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiephantom/Echo.png',\r\n  actSet = {'F','E','BR','CL'}\r\n}\r\n\r\nmasterPilotDB[133]={\r\n  name = 'Sigma Squadron Ace',\r\n  XWS = 'sigmasquadronace',\r\n  Faction = 2,\r\n  ship_type = 27,\r\n  cost = 48,\r\n  slot = {21, 1, 2, 16, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_133.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiephantom/SigmaSquadronAce.png',\r\n  actSet = {'F','E','BR','CL'}\r\n}\r\n\r\nmasterPilotDB[134]={\r\n  name = 'Imdaar Test Pilot',\r\n  XWS = 'imdaartestpilot',\r\n  Faction = 2,\r\n  ship_type = 27,\r\n  cost = 43,\r\n  slot = {21, 2, 16, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_134.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiephantom/ImdaarTestPilot.png',\r\n  actSet = {'F','E','BR','CL'}\r\n}\r\n\r\nmasterPilotDB[135]={\r\n    name = 'Major Vynder',\r\n  XWS = 'majorvynder',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 14,\r\n    cost = 40,\r\n    slot = {21, 1, 2, 5, 6, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_135.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/Alphaclass/majorvynder.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[136]={\r\n    name = 'Lieutenant Karsabi',\r\n  XWS = 'lieutenantkarsabi',\r\n    Faction = 2,\r\n    limited = 1,\r\n    ship_type = 14,\r\n    cost = 36,\r\n    slot = {21, 1, 2, 5, 6, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_136.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/Alphaclass/lieutenantkarsabi.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[137]={\r\n    name = 'Rho Squadron Pilot',\r\n  XWS = 'rhosquadronpilot',\r\n    Faction = 2,\r\n    ship_type = 14,\r\n    cost = 34,\r\n    slot = {21, 1, 2, 5, 6, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_137.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/Alphaclass/rhosquadronpilot.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[138]={\r\n    name = 'Nu Squadron Pilot',\r\n  XWS = 'nusquadronpilot',\r\n    Faction = 2,\r\n    ship_type = 14,\r\n    cost = 32,\r\n    slot = {21, 2, 5, 6, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_138.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Empire/Alphaclass/nusquadronpilot.png',\r\n    actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[139]={\r\n  name = '\"Redline\"',\r\n  XWS = 'redline',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 20,\r\n  cost = 51,\r\n  slot = {21, 2, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_139.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiepunisher/Redline.png',\r\n  actSet = {'F','TL','BR',\"B\"}\r\n}\r\nmasterPilotDB[140]={\r\n  name = '\"Deathrain\"',\r\n  XWS = 'deathrain',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 20,\r\n  cost = 43,\r\n  slot = {21, 2, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_140.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiepunisher/Deathrain.png',\r\n  actSet = {'F','TL','BR',\"B\"}\r\n}\r\n\r\nmasterPilotDB[141]={\r\n  name = 'Cutlass Squadron Pilot',\r\n  XWS = 'cutlasssquadronpilot',\r\n  Faction = 2,\r\n  ship_type = 20,\r\n  cost = 35,\r\n  slot = {21, 2, 5, 6, 6, 16, 12, 12, 14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_141.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiepunisher/CutlassSquadronPilot.png',\r\n  actSet = {'F','TL','BR',\"B\"}\r\n}\r\n\r\nmasterPilotDB[142]={\r\n  name ='Captain Kagi',\r\n  XWS = 'captainkagi',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 26,\r\n  cost = 48,\r\n  slot = {21, 2, 3, 8, 8, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_142.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Lambda/CaptainKagi.png',\r\n  actSet = {'F','R'}\r\n}\r\n\r\nmasterPilotDB[143]={\r\n  name = 'Colonel Jendon',\r\n  XWS = 'coloneljendon',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 26,\r\n  cost = 49,\r\n  slot = {21, 2, 3, 8, 8, 14, 15},\r\n  Shield = 4,\r\n  Charge = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_143.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Lambda/ColonelJendon.png',\r\n  actSet = {'F','R'}\r\n}\r\n\r\nmasterPilotDB[144]={\r\n  name = 'Lieutenant Sai',\r\n  XWS = 'lieutenantsai',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 26,\r\n  cost = 47,\r\n  slot = {21, 2, 3, 8, 8, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_144.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Lambda/LieutenantSai.png',\r\n  actSet = {'F','R'}\r\n}\r\n\r\nmasterPilotDB[145]={\r\n  name = 'Omicron Group Pilot',\r\n  XWS = 'omicrongrouppilot',\r\n  Faction = 2,\r\n  ship_type = 26,\r\n  cost = 43,\r\n  slot = {21, 2, 3, 8, 8, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_145.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Lambda/OmicronGroupPilot.png',\r\n  actSet = {'F','R'}\r\n}\r\n\r\nmasterPilotDB[146]={\r\n  name = 'Captain Oicunn',\r\n  XWS = 'captainoicunn',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 28,\r\n  cost = 75,\r\n  slot = {21, 1, 5, 8, 8, 8, 16, 12, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_146.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Decimator/CaptainOicunn.png',\r\n  actSet = {'F','R','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[147]={\r\n  name = 'Rear Admiral Chiraneau',\r\n  XWS = 'rearadmiralchiraneau',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 28,\r\n  cost = 76,\r\n  slot = {21, 1, 5, 8, 8, 8, 16, 12, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_147.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Decimator/RearAdmiralChiraneau.png',\r\n  actSet = {'F','R','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[148]={\r\n  name = 'Patrol Leader',\r\n  XWS = 'patrolleader',\r\n  Faction = 2,\r\n  ship_type = 28,\r\n  cost = 67,\r\n  slot = {21, 5, 8, 8, 8, 16, 12, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_148.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Decimator/PatrolLeader.png',\r\n  actSet = {'F','R','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[149]={\r\n    name = 'Boba Fett',\r\n    XWS = 'bobafett',\r\n    title = 'Notorious Bounty Hunter',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 10,\r\n    cost = 86,\r\n    slot = {21, 1, 3, 6, 12, 13, 14, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_149.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/bobafett.png',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[150]={\r\n    name = 'Emon Azzameen',\r\n  XWS = 'emonazzameen',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 10,\r\n    cost = 71,\r\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_150.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/emonazzameen.png',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[151]={\r\n    name = 'Kath Scarlet',\r\n  XWS = 'kathscarlet',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 10,\r\n    cost = 72,\r\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_151.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/kathscarlet.png',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[152]={\r\n    name = 'Koshka Frost',\r\n  XWS = 'koshkafrost',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 10,\r\n    cost = 70,\r\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_152.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/koshkafrost.png',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[153]={\r\n    name = 'Krassis Trelix',\r\n  XWS = 'krassistrelix',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 10,\r\n    cost = 65,\r\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_153.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/krassistrelix.png',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[154]={\r\n    name = 'Bounty Hunter',\r\n  XWS = 'bountyhunter',\r\n    Faction = 3,\r\n    ship_type = 10,\r\n    cost = 62,\r\n    slot = {21, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_154.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/bountyhunter.png',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[155]={\r\n  name = 'Fenn Rau',\r\n  XWS = 'fennrau',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 36,\r\n  cost = 68,\r\n  slot = {21, 1, 5},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_155.png',\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_fangfighter/FennRau.png',\r\n  actSet = {'F','TL','B','BR'}\r\n}\r\n\r\nmasterPilotDB[156]={\r\n  name = 'Old Teroch',\r\n  XWS = 'oldteroch',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 36,\r\n  cost = 56,\r\n  slot = {21, 1, 5, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_156.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_fangfighter/OldTeroch.png',\r\n  actSet = {'F','TL','B','BR'}\r\n}\r\n\r\nmasterPilotDB[157]={\r\n  name = 'Joy Rekkoff',\r\n  XWS = 'joyrekkoff',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 36,\r\n  cost = 47,\r\n  slot = {21, 1, 5, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_157.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_fangfighter/JoyRekkoff.png',\r\n  actSet = {'F','TL','B','BR'}\r\n}\r\n\r\nmasterPilotDB[158]={\r\n  name = 'Kad Solus',\r\n  XWS = 'kadsolus',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 36,\r\n  cost = 54,\r\n  slot = {21, 1, 5, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_158.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_fangfighter/KadSolus.png',\r\n  actSet = {'F','TL','B','BR'}\r\n}\r\n\r\nmasterPilotDB[159]={\r\n  name = 'Skull Squadron Pilot',\r\n  XWS = 'skullsquadronpilot',\r\n  Faction = 3,\r\n  ship_type = 36,\r\n  cost = 47,\r\n  slot = {21, 1, 5, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_159.png',\r\n  init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_fangfighter/SkullSquadronPilot.png',\r\n  actSet = {'F','TL','B','BR'}\r\n}\r\n\r\nmasterPilotDB[160]={\r\n  name = 'Zealous Recruit',\r\n  XWS = 'zealousrecruit',\r\n  Faction = 3,\r\n  ship_type = 36,\r\n  cost = 41,\r\n  slot = {21, 5, 14},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_160.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_fangfighter/ZealousRecruit.png',\r\n  actSet = {'F','TL','B','BR'}\r\n}\r\n\r\nmasterPilotDB[161]={\r\n    name = 'Constable Zuvio',\r\n  XWS = 'constablezuvio',\r\n    limited = 1,\r\n    Faction = 3,\r\n    ship_type = 9,\r\n    cost = 29,\r\n    slot = {21, 1, 19, 8, 12, 13, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_161.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/quadrijet/constablezuvio.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[162]={\r\n    name = 'Sarco Plank',\r\n  XWS = 'sarcoplank',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 9,\r\n    cost = 29,\r\n    slot = {21, 19, 8, 12, 13, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_162.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/quadrijet/sarcoplank.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[163]={\r\n    name = 'Unkar Plutt',\r\n  XWS = 'unkarplutt',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 9,\r\n    cost = 29,\r\n    slot = {21, 19, 8, 12, 13, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_163.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/quadrijet/unkarplutt.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[164]={\r\n    name = 'Jakku Gunrunner',\r\n  XWS = 'jakkugunrunner',\r\n    Faction = 3,\r\n    ship_type = 9,\r\n    cost = 29,\r\n    slot = {21, 19, 8, 12, 13, 14},\r\n    Shield = 0,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_164.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/quadrijet/jakkugunrunner.png',\r\n    actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[165]={\r\n    name = 'Kavil',\r\n  XWS = 'kavil',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 12,\r\n    cost = 43,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 13, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_165.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/kavil.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[166]={\r\n    name = 'Drea Renthal',\r\n  XWS = 'drearenthal',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 12,\r\n    cost = 46,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 13, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_166.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/drearenthal.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[167]={\r\n    name = 'Hired Gun',\r\n  XWS = 'hiredgun',\r\n    Faction = 3,\r\n    ship_type = 12,\r\n    cost = 32,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 13, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_167.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/hiredgun.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[168]={\r\n    name = 'Crymorah Goon',\r\n  XWS = 'crymorahgoon',\r\n    Faction = 3,\r\n    ship_type = 12,\r\n    cost = 30,\r\n    slot = {21, 4, 5, 16, 10, 12, 13, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_168.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/crymorahgun.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[169]={\r\n  name = \"N'dru Suhlak\",\r\n  XWS = 'ndrusuhlak',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 38,\r\n  cost = 29,\r\n  slot = {21, 1, 6, 13, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_169.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_z95/NdruSuhlak.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[170]={\r\n  name = \"Kaa'to Leeachos\",\r\n  XWS = 'kaatoleeachos',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 38,\r\n  cost = 25,\r\n  slot = {21, 1, 6, 13, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_170.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_z95/KaatoLeeachos.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[171]={\r\n  name = 'Nashtah Pup',\r\n  XWS = 'nashtahpup',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 38,\r\n  cost = 6,\r\n  slot = {21, 6, 13, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_171.png',\r\n  init = 0,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_z95/NashtahPup.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[172]={\r\n  name = 'Black Sun Soldier',\r\n  XWS = 'blacksunsoldier',\r\n  Faction = 3,\r\n  ship_type = 38,\r\n  cost = 24,\r\n  slot = {21, 1, 6, 13, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_172.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_z95/BlackSunSoldier.png',\r\n  actSet ={'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[173]={\r\n  name = 'Binayre Pirate',\r\n  XWS = 'binayrepirate',\r\n  Faction = 3,\r\n  ship_type = 38,\r\n  cost = 22,\r\n  slot = {21, 6, 13, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_173.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_z95/BinayrePirate.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[174]={\r\n  name = 'Dace Bonearm',\r\n  XWS = 'dacebonearm',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 34,\r\n  cost = 31,\r\n  slot = {21, 1, 8, 12, 13, 14, 14, 15},\r\n  Shield = 2,\r\n  Charge = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_174.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_hwk/DaceBonearm.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[175]={\r\n  name = 'Palob Godalhi',\r\n  XWS = 'palobgodalhi',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 34,\r\n  cost = 40,\r\n  slot = {21, 1, 8, 12, 13, 14, 14, 15},\r\n  Shield = 2,\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_hwk/PalobGodalhi.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[176]={\r\n  name = 'Torkil Mux',\r\n  XWS = 'torkilmux',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 34,\r\n  cost = 38,\r\n  slot = {21, 8, 12, 13, 14, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_176.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_hwk/TorkilMux.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[177]={\r\n  name = 'Spice Runner',\r\n  XWS = 'spicerunner',\r\n  Faction = 3,\r\n  ship_type = 34,\r\n  cost = 28,\r\n  slot = {21, 8, 12, 13, 14, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_177.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_hwk/SpiceRunner.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[178]={\r\n    name = 'Guri',\r\n    XWS = 'guri',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 3,\r\n    cost = 64,\r\n    slot = {21, 1, 2, 5, 14, 15},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_178.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/guri.png',\r\n    actSet = {'C','F','TL','B','VR'}\r\n}\r\n\r\nmasterPilotDB[179]={\r\n    name = 'Dalan Oberos',\r\n    XWS = 'dalanoberos-starviperclassattackplatform',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 3,\r\n    cost = 54,\r\n    slot = {21, 1, 2, 5, 14, 15},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_179.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/dalanoberos.png',\r\n    actSet = {'F','TL','B','VR','Piv'}\r\n}\r\n\r\nmasterPilotDB[180]={\r\n    name = 'Prince Xizor',\r\n    XWS = 'princexizor',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 3,\r\n    cost = 54,\r\n    slot = {21, 1, 2, 5, 14, 15},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_180.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/princexizor.png',\r\n    actSet = {'F','TL','B','VR'}\r\n}\r\n\r\nmasterPilotDB[181]={\r\n    name = 'Black Sun Assassin',\r\n  XWS = 'blacksunassassin',\r\n    Faction = 3,\r\n    ship_type = 3,\r\n    cost = 48,\r\n    slot = {21, 1, 2, 5, 14, 15},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_181.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/blacksunassassin.png',\r\n    actSet = {'F','TL','B','VR'}\r\n}\r\n\r\nmasterPilotDB[182]={\r\n    name = 'Black Sun Enforcer',\r\n  XWS = 'blacksunenforcer',\r\n    Faction = 3,\r\n    ship_type = 3,\r\n    cost = 45,\r\n    slot = {21, 2, 5, 14, 15},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_182.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/blacksunenforcer.png',\r\n    actSet = {'F','TL','B','VR'}\r\n}\r\n\r\nmasterPilotDB[183]={\r\n  name = 'Serissu',\r\n  XWS = 'serissu',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 44,\r\n  cost = 40,\r\n  slot = {21, 1,14,99},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_183.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/Serissu.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[184]={\r\n  name = 'Genesis Red',\r\n  XWS = 'genesisred',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 44,\r\n  cost = 31,\r\n  slot = {21, 1,14,99},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_184.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/GenesisRed.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[185]={\r\n  name = \"Laetin A'shera\",\r\n  XWS = 'laetinashera',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 44,\r\n  cost = 30,\r\n  slot = {21, 1,14,99},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_185.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/LaetinAshera.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[186]={\r\n  name= 'Quinn Jast',\r\n  XWS = 'quinnjast',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 44,\r\n  cost = 31,\r\n  slot = {21, 1,14,99},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_186.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/QuinnJast.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[187]={\r\n  name = 'Inaldra',\r\n  XWS = 'inaldra',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 44,\r\n  cost = 30,\r\n  slot = {21, 14,99},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_187.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/Inaldra.png',\r\n  actSet ={'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[188]={\r\n  name = 'Sunny Bounder',\r\n  XWS = 'sunnybounder',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 44,\r\n  cost = 27,\r\n  slot = {21, 14,99},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_188.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/SunnyBounder.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[189]={\r\n  name = 'Tansarii Point Veteran',\r\n  XWS = 'tansariipointveteran',\r\n  Faction = 3,\r\n  ship_type = 44,\r\n  cost = 29,\r\n  slot = {21, 1,14,99},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_189.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/TansariiPointVeteran.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[190]={\r\n  name = 'Cartel Spacer',\r\n  XWS = 'cartelspacer',\r\n  Faction = 3,\r\n  ship_type = 44,\r\n  cost = 25,\r\n  slot = {21, 14,99},\r\n  Shield = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_190.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/CartelSpacer.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\n\r\nmasterPilotDB[191]={\r\n    name = 'Talonbane Cobra',\r\n  XWS = 'talonbanecobra',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 7,\r\n    cost = 48,\r\n    slot = {21, 1, 6, 13, 13, 14, 14},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_191.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/talonbanecobra.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[192]={\r\n    name = 'Graz',\r\n  XWS = 'graz',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 7,\r\n    cost = 45,\r\n    slot = {21, 1, 6, 13, 13, 14, 14},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_192.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/graz.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[193]={\r\n    name = 'Viktor Hel',\r\n  XWS = 'viktorhel',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 7,\r\n    cost = 43,\r\n    slot = {21, 1, 6, 13, 13, 14, 14},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_193.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/viktorhel.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[194]={\r\n    name = 'Captain Jostero',\r\n  XWS = 'captainjostero',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 7,\r\n    cost = 41,\r\n    slot = {21, 6, 13, 13, 14, 14},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_194.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/captainjostero.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[195]={\r\n    name = 'Black Sun Ace',\r\n  XWS = 'blacksunace',\r\n    Faction = 3,\r\n    ship_type = 7,\r\n    cost = 38,\r\n    slot = {21, 1, 6, 13, 13, 14, 14},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_195.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/blacksunace.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[196]={\r\n    name = 'Cartel Marauder',\r\n  XWS = 'cartelmarauder',\r\n    Faction = 3,\r\n    ship_type = 7,\r\n    cost = 37,\r\n    slot = {21, 6, 13, 13, 14, 14},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_196.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/cartelmarauder.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[197]={\r\n  name = 'IG-88A',\r\n  XWS = 'ig88a',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 21,\r\n  cost = 66,\r\n  slot = {21, 1, 2, 3, 3, 12, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_197.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_Agressor/ig88a.png',\r\n  actSet = {'C','E','TL','B'}\r\n}\r\n\r\nmasterPilotDB[198]={\r\n  name = 'IG-88B',\r\n  XWS = 'ig88b',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 21,\r\n  cost = 62,\r\n  slot = {21, 1, 2, 3, 3, 12, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_198.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_Agressor/ig88b.png',\r\n  actSet = {'C','E','TL','B'}\r\n}\r\n\r\nmasterPilotDB[199]={\r\n  name = 'IG-88C',\r\n  XWS = 'ig88c',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 21,\r\n  cost = 63,\r\n  slot = {21, 1, 2, 3, 3, 12, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_199.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_Agressor/ig88c.png',\r\n  actSet = {'C','E','TL','B'}\r\n}\r\n\r\nmasterPilotDB[200]={\r\n  name = 'IG-88D',\r\n  XWS = 'ig88d',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 21,\r\n  cost = 62,\r\n  slot = {21, 1, 2, 3, 3, 12, 13, 14, 15},\r\n  Shield = 3,\r\n  executeOptions = {\r\n      rbl3s = {[1]='rtl3s', [2]='rbl3s', [3]='rk3'},\r\n      rbr3s = {[1]='rk3', [2]='rbr3s', [3]='rtr3s'}},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_200.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_Agressor/ig88d.png',\r\n  actSet ={'C','E','TL','B'}\r\n}\r\n\r\nmasterPilotDB[201]={\r\n  name = '4-LOM',\r\n  XWS = '4lom',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 22,\r\n  cost = 49,\r\n  slot = {21, 1, 2, 8, 13, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_201.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_G1A/4lom.png',\r\n  actSet = {'C','TL'}\r\n}\r\n\r\nmasterPilotDB[202]={\r\n  name = 'Zuckuss',\r\n  XWS = 'zuckuss',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 22,\r\n  cost = 45,\r\n  slot = {21, 1, 2, 8, 13, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_202.png',\r\n  init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_G1A/Zuckuss.png',\r\n  actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[203]={\r\n  name = 'Gand Findsman',\r\n  XWS = 'gandfindsman',\r\n  Faction = 3,\r\n  ship_type = 22,\r\n  cost = 41,\r\n  slot = {21, 2, 8, 13, 14, 15},\r\n  Shield = 4,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_203.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_G1A/GandFindsman.png',\r\n  actSet={'F','TL'}\r\n}\r\n\r\nmasterPilotDB[204]={\r\n    name = 'Captain Nym',\r\n  XWS = 'captainnym',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 4,\r\n    cost = 47,\r\n    slot = {21, 1, 4, 8, 12, 12, 16, 14, 15},\r\n    Shield = 4,\r\n    Charge = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_204.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/scurrgH6/captainnym.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[205]={\r\n    name = 'Sol Sixxa',\r\n  XWS = 'solsixxa',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 4,\r\n    cost = 46,\r\n    slot = {21, 1, 4, 8, 12, 12, 16, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_205.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/scurrgH6/solsixxa.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[206]={\r\n    name = 'Lok Revenant',\r\n  XWS = 'lokrevenant',\r\n    Faction = 3,\r\n    ship_type = 4,\r\n    cost = 45,\r\n    slot = {21, 4, 8, 12, 16, 12, 14, 15},\r\n    Shield = 4,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_206.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/scurrgH6/lokrevenant.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[207]={\r\n  name = 'Torani Kulda',\r\n  XWS = 'toranikulda',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 39,\r\n  cost = 48,\r\n  slot = {21, 1, 5, 6, 10, 13, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_207.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_kimogila/ToraniKulda.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[208]={\r\n  name = 'Dalan Oberos',\r\n  XWS = 'dalanoberos',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type =39,\r\n  cost = 45,\r\n  slot = {21, 1, 5, 6, 10, 13, 14},\r\n  Shield = 2,\r\n  Charge = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_208.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_kimogila/DalanOberos.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[209]={\r\n  name = 'Cartel Executioner',\r\n  XWS = 'cartelexecutioner',\r\n  Faction = 3,\r\n  ship_type = 39,\r\n  cost = 41,\r\n  slot = {21, 1, 5, 6, 10, 13, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_209.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_kimogila/CartelExecutioner.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[210]={\r\n  name = 'Bossk',\r\n  XWS = 'bossk',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 24,\r\n  cost = 60,\r\n  slot = {21, 1, 3, 6, 8, 8, 16, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_210.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_YV666/Bossk.png',\r\n  actSet = {'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[211]={\r\n  name = 'Moralo Eval',\r\n  XWS = 'moraloeval',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 24,\r\n  cost = 66,\r\n  slot = {21, 1, 3, 6, 8, 8, 16, 13, 14, 15},\r\n  Shield = 3,\r\n  Charge = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_211.png',\r\n  init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_YV666/MoraloEval.png',\r\n  actSet = {'F','TL','R'}\r\n}\r\nmasterPilotDB[212]={\r\n  name = 'Latts Razzi',\r\n  XWS = 'lattsrazzi',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 24,\r\n  cost = 56,\r\n  slot = {21, 1, 3, 6, 8, 8, 16, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_212.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_YV666/LattsRazzi.png',\r\n  actSet = {'F','TL','R'}\r\n}\r\nmasterPilotDB[213]={\r\n  name = 'Trandoshan Slaver',\r\n  XWS = 'trandoshanslaver',\r\n  Faction = 3,\r\n  ship_type = 24,\r\n  cost = 51,\r\n  slot = {21, 3, 6, 8, 8, 16, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_213.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_YV666/TrandoshanSlaver.png',\r\n  actSet = {'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[214]={\r\n  name = 'Dengar',\r\n  XWS = 'dengar',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 45,\r\n  cost = 53,\r\n  slot = {21, 1, 3, 8, 5, 13, 14, 15, 16},\r\n  Shield = 3,\r\n\r\n  Charge = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_214.png',\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_jumpmaster/Dengar.png',\r\n  actSet = {'F','TL','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[215]={\r\n  name = 'Manaroo',\r\n  XWS = 'manaroo',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 45,\r\n  cost = 45,\r\n  slot = {21, 1, 3, 8, 5, 13, 14, 15, 16},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_215.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_jumpmaster/Manaroo.png',\r\n  actSet = {'F','TL','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[216]={\r\n  name = 'Tel Trevura',\r\n  XWS = 'teltrevura',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 45,\r\n  cost = 44,\r\n  slot = {21, 1, 3, 8, 5, 13, 14, 15, 16},\r\n  Shield = 3,\r\n  Charge = 1,\r\n  card ='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_216.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_jumpmaster/TelTrevura.png',\r\n  actSet = {'F','TL','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[217]={\r\n  name = 'Contracted Scout',\r\n  XWS = 'contractedscout',\r\n  Faction = 3,\r\n  ship_type = 45,\r\n  cost = 41,\r\n  slot = {21, 8, 3, 5, 13, 14, 15, 16},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_217.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_jumpmaster/ContractedScout.png',\r\n  actSet = {'F','TL','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[218]={\r\n  name = 'Ketsu Onyo',\r\n  XWS = 'ketsuonyo',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 42,\r\n  cost = 66,\r\n  slot = {21, 1, 8, 13, 13, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_218.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_lancer/KetsuOnyo.png',\r\n  actSet = {'F','TL','E','Rot'}\r\n}\r\n\r\nmasterPilotDB[219]={\r\n  name ='Asajj Ventress',\r\n  XWS = 'asajjventress',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 42,\r\n  cost = 68,\r\n  slot = {21, 17, 8, 13, 13, 14, 15},\r\n  Shield = 2,\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_219.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_lancer/AsajjVentress.png',\r\n  actSet = {'F','TL','E','Rot'}\r\n}\r\n\r\nmasterPilotDB[220]={\r\n  name = 'Sabine Wren',\r\n  XWS = 'sabinewren-lancerclasspursuitcraft',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 42,\r\n  cost = 58,\r\n  slot = {21, 1, 8, 13, 13, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_220.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_lancer/SabineWren.png',\r\n  actSet = {'F','TL','E','Rot'}\r\n}\r\n\r\nmasterPilotDB[221]={\r\n  name = 'Shadowport Hunter',\r\n  XWS = 'shadowporthunter',\r\n  Faction = 3,\r\n  ship_type = 42,\r\n  cost = 54,\r\n  slot = {21, 8, 13, 13, 14, 15},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_221.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_lancer/ShadowportHunter.png',\r\n  actSet = {'F','TL','E','Rot'}\r\n}\r\n\r\nmasterPilotDB[222]={\r\n  name = 'Han Solo',\r\n  XWS = 'hansolo',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 47,\r\n  cost = 48,\r\n  slot = {21, 1, 6, 8, 8, 16, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_222.png',\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/HanSolo-OuterRimPioneer.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[223]={\r\n  name = 'Lando Calrissian',\r\n  XWS = 'landocalrissian',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 47,\r\n  cost = 42,\r\n  slot = {21, 1, 6, 8, 8, 16, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_223.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/Lando-L337.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[224]={\r\n  name = 'L3-37',\r\n  XWS = 'l337',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 47,\r\n  cost = 41,\r\n  slot = {21, 6, 8, 8, 16, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_224.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/L337-Lando.png',\r\n  actSet = {'C','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[225]={\r\n  name = 'Freighter Captain',\r\n  XWS = 'freightercaptain',\r\n  Faction = 3,\r\n  ship_type = 47,\r\n  cost = 41,\r\n  slot = {21, 6, 8, 8, 16, 13, 14, 15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_225.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/FreighterCaptain-AutopilotDrone.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[226]={\r\n  name = 'Lando Calrissian',\r\n  XWS = 'landocalrissian-escapecraft',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 85,\r\n  cost = 29,\r\n  slot = {21, 1, 8, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_226.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/L337-Lando.png',\r\n  actSet = {'F','BR'}\r\n}\r\n\r\nmasterPilotDB[227]={\r\n  name = 'Outer Rim Pioneer',\r\n  XWS = 'outerrimpioneer',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 85,\r\n  cost = 28,\r\n  slot = {21, 1, 8, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_227.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/HanSolo-OuterRimPioneer.png',\r\n  actSet = {'F','BR'}\r\n}\r\n\r\nmasterPilotDB[228]={\r\n  name = 'L3-37',\r\n  XWS = 'l337-escapecraft',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 85,\r\n  cost = 26,\r\n  slot = {21, 1, 8, 14},\r\n  Shield = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_228.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/Lando-L337.png',\r\n  actSet = {'C','BR'}\r\n}\r\n\r\nmasterPilotDB[229]={\r\n  name = 'Autopilot Drone',\r\n  XWS = 'autopilotdrone',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 85,\r\n  cost = 12,\r\n  slot = {21, 0},\r\n  Shield = 2,\r\n  Charge = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_229.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/FreighterCaptain-AutopilotDrone.png',\r\n  actSet = {'C','BR'}\r\n}\r\n\r\nmasterPilotDB[397]={\r\n\tname = '\"Midnight\"',\r\n  XWS = 'midnight',\r\n  limited = 1,\r\n\tFaction = 5,\r\n\tship_type = 49,\r\n\tcost =42,\r\n\tslot = {21, 1,19,14},\r\n\tShield =1,\r\n\tcard='http://sb-cdn.fantasyflightgames.com/card_images/en/c7994885b38757f92bdf3a98c37b3c96.png',\r\n\tinit = 6,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Midnight.png',\r\n\tactSet = {'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[398]={\r\n\tname = '\"Scorch\"',\r\n  XWS = 'scorch',\r\n  limited = 1,\r\n\tFaction = 5,\r\n\tship_type = 49,\r\n\tcost =33 ,\r\n\tslot = {21, 1,19,14},\r\n\tShield = 1,\r\n\tcard = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9dd11d408bb869cb947663fc29622833.png',\r\n\tinit = 4,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Scorch.png',\r\n\tactSet = {'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[399]={\r\n\tname ='\"Static\"',\r\n  XWS = 'static',\r\n\tFaction =5,\r\n  limited = 1,\r\n\tship_type =49,\r\n\tcost =33,\r\n\tslot ={21, 1,19,14},\r\n\tShield =1,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/2481fe5d98026e086a901d83dbe87018.png',\r\n\tinit =4,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Static.png',\r\n\tactSet ={'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[400]={\r\n\tname ='\"Longshot\"',\r\n  XWS = 'longshot',\r\n  limited = 1,\r\n\tFaction =5,\r\n\tship_type =49,\r\n\tcost =31,\r\n\tslot ={21, 1,19,14},\r\n\tShield =1,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/d0e698f59696c15b60d7eaa1e2d51eeb.png',\r\n\tinit =3,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Longshot.png',\r\n\tactSet ={'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[401]={\r\n  limited = 1,\r\n\tname ='\"Muse\"',\r\n  XWS = 'muse',\r\n\tFaction =5,\r\n\tship_type =49,\r\n\tcost =30,\r\n\tslot ={21, 1,19,14},\r\n\tShield =1,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/7de4e91de0906eb548bfe3a08a1b6abe.png',\r\n\tinit =2,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Muse.png',\r\n\tactSet ={'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[402]={\r\n  limited = 1,\r\n\tname ='\"Null\"',\r\n  XWS = 'null',\r\n\tFaction =5,\r\n\tship_type =49,\r\n\tcost =30,\r\n\tslot ={21, 19,14},\r\n\tShield =1,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/79a9d780d3540647af1e057113869294.png',\r\n\tinit =0,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Null.png',\r\n\tactSet ={'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[403]={\r\n\tname ='Omega Squadron Ace',\r\n  XWS = 'omegasquadronace',\r\n\tFaction =5,\r\n\tship_type =49,\r\n\tcost =28,\r\n\tslot ={21, 1,19,14},\r\n\tShield =1,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/97e72d0f5dc8c2dd21a355e3258f37dd.png',\r\n\tinit =3,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Omega%20Squadron%20Ace.png',\r\n\tactSet ={'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[404]={\r\n\tname ='Zeta Squadron Pilot',\r\n  XWS = 'zetasquadronpilot',\r\n\tFaction =5,\r\n\tship_type =49,\r\n\tcost =26,\r\n\tslot ={21, 19,14},\r\n\tShield =1,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/be1062b6a7a8e4644223146342990a02.png',\r\n\tinit =2,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/ZetaSquadronPilot.png',\r\n\tactSet ={'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[405]={\r\n\tname ='Epsilon Squadron Cadet',\r\n  XWS = 'epsilonsquadroncadet',\r\n\tFaction =5,\r\n\tship_type =49,\r\n\tcost =25,\r\n\tslot ={21, 19,14},\r\n\tShield =1,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/e911cd18f04225bbd36c48114b56f3cc.png',\r\n\tinit =1,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/EpsilonSquadronCadet.png',\r\n\tactSet ={'F','TL','E','BR'}\r\n}\r\n\r\nmasterPilotDB[406]={\r\n  limited = 1,\r\n\tname ='\"Quickdraw\"',\r\n  XWS = 'quickdraw',\r\n\tFaction = 5,\r\n\tship_type = 50,\r\n\tcost = 47,\r\n\tslot = {21, 1,2,19,6,16,14},\r\n\tShield = 3,\r\n\tCharge = 1,\r\n\tcard = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d038dadd7a62bbe2de89d3866e1a3639.png',\r\n\tinit = 6,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Quickdraw.png',\r\n\tactSet = {'F','TL','E','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[407]={\r\n  limited = 1,\r\n\tname ='\"Backdraft\"',\r\n  XWS = 'backdraft',\r\n\tFaction =5,\r\n\tship_type =50,\r\n\tcost =38,\r\n\tslot ={21, 1,2,19,6,16,14},\r\n\tShield =3,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/317cc5350980277f1d389ed618030d85.png',\r\n\tinit =4,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Backdraft.png',\r\n\tactSet ={'F','TL','E','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[408]={\r\n\tname ='Omega Squadron Expert',\r\n  XWS = 'omegasquadronexpert',\r\n\tFaction =5,\r\n\tship_type =50,\r\n\tcost =34,\r\n\tslot ={21, 1,2,19,6,16,14},\r\n\tShield =3,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/784d00f653ff7cd58cb634c7a59e47c1.png',\r\n\tinit =3,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/OmegaSquadronExpert.png',\r\n\tactSet ={'F','TL','E','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[409]={\r\n\tname ='Zeta Squadron Survivor',\r\n  XWS = 'zetasquadronsurvivor',\r\n\tFaction =5,\r\n\tship_type =50,\r\n\tcost =32,\r\n\tslot ={21, 2,19,6,16,14},\r\n\tShield =3,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/848db1993150bda19217e2c14b3c3df6.png',\r\n\tinit =2,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/ZetaSquadronSurvivor.png',\r\n\tactSet ={'F','TL','E','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[410]={\r\n\tname ='Major Stridan',\r\n  XWS = 'majorstridan',\r\n  limited = 1,\r\n\tFaction =5,\r\n\tship_type =51,\r\n\tcost =61,\r\n\tslot ={21, 2,19,19,3,8,8,8,14},\r\n\tShield =6,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/8420beca035dedf1596c7c99255fb2e7.png',\r\n\tinit =4,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/MajorStridan.png',\r\n\tactSet ={'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[411]={\r\n\tname ='Lieutenant Tavson',\r\n  XWS = 'lieutenanttavson',\r\n\tFaction =5,\r\n  limited = 1,\r\n\tship_type =51,\r\n\tcost =64,\r\n\tslot ={21, 2,19,19,3,8,8,8,14},\r\n\tShield =6,\r\n\tCharge =2,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/20fbf3ed79c50d2082cdb44caac26064.png',\r\n\tinit =3,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/LieutenantTavson.png',\r\n\tactSet ={'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[412]={\r\n\tname ='Lieutenant Dormitz',\r\n  XWS = 'lieutenantdormitz',\r\n\tFaction =5,\r\n  limited = 1,\r\n\tship_type =51,\r\n\tcost =66,\r\n\tslot ={21, 2,19,19,3,8,8,8,14},\r\n\tShield =6,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/e4acd80da2c39e25d4f999cb7c314fe5.png',\r\n\tinit =2,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/LieutenantDormitz.png',\r\n\tactSet ={'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[413]={\r\n\tname ='Starkiller Base Pilot',\r\n  XWS = 'starkillerbasepilot',\r\n\tFaction =5,\r\n\tship_type =51,\r\n\tcost =58,\r\n\tslot ={21, 2,19,19,3,8,8,8,14},\r\n\tShield =6,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/41f6d936f14a058ed1c5e6ac12de37c2.png',\r\n\tinit =2,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/StarkillerBasePilot.png',\r\n\tactSet ={'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[414]={\r\n\tname ='Kylo Ren',\r\n  XWS = 'kyloren',\r\n\tCondition =\"I'll Show You the Dark Side\",\r\n\tFaction = 5,\r\n  limited = 1,\r\n\tship_type = 52,\r\n\tcost = 76,\r\n\tslot ={21, 17,19,5,6, 18},\r\n\tShield =2,\r\n\tForce =2,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/71dbde337b9ff5aab897781d40d8f653.png',\r\n\tinit =5,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/KyloRen.png',\r\n\tactSet ={'F','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[415]={\r\n\tname ='\"Blackout\"',\r\n  XWS = 'blackout',\r\n\tFaction =5,\r\n  limited = 1,\r\n\tship_type =52,\r\n\tcost =63,\r\n\tslot ={21, 1,19,5,6, 18},\r\n\tShield =2,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/c5659b210e13b4e11fdd5f1396f2847c.png',\r\n\tinit =5,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Blackout.png',\r\n\tactSet ={'F','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[416]={\r\n\tname = 'First Order Test Pilot',\r\n  XWS = 'firstordertestpilot',\r\n\tFaction =5,\r\n\tship_type =52,\r\n\tcost =56,\r\n\tslot ={21, 1,19,5,6, 18},\r\n\tShield =2,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/568abbcd68bb174173da4e7ee92051e3.png',\r\n\tinit =4,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/FirstOrderTestPilot.png',\r\n\tactSet ={'F','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[417]={\r\n\tname = 'Sienar-Jaemus Engineer',\r\n  XWS = 'sienarjaemusengineer',\r\n\tFaction =5,\r\n\tship_type =52,\r\n\tcost =48,\r\n\tslot ={21, 19,5,6, 18},\r\n\tShield =2,\r\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/8f7c4680fbc001169baf6538ab259e9b.png',\r\n\tinit =1,\r\n\ttexture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Sienar-JaemusEngineer.png',\r\n\tactSet ={'F','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[418]={\r\n    name = 'Poe Dameron',\r\n    XWS = 'poedameron',\r\n    title = 'Trigger-Happy Flyboy',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 62,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    Charge = 1,\r\n    card='http://sb-cdn.fantasyflightgames.com/card_images/en/14c504c0815213a66010c4013d9296ee.png',\r\n    init = 6,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/PoeDameron.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[419]={\r\n    name = 'Ello Asty',\r\n    XWS = 'elloasty',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 54,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/f77180ae05fd919a0dff2225380246a6.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/ElloAsty.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[420]={\r\n    name = 'Nien Nunb',\r\n    XWS = 'niennunb',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 55,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/00a3c393a33b33168bc61e47749e1474.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/NienNunb.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[421]={\r\n    name = 'Kare Kun',\r\n    XWS = 'karekun',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 50,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/6edb8ed4cbf882bf6dbe7a37b5981d85.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/KareKun.png',\r\n    actSet = {'F','TL','B', 'Dare'}\r\n}\r\n\r\nmasterPilotDB[422]={\r\n    name = 'Temmin Wexley',\r\n    XWS = 'temminwexley',\r\n    title = 'Snap',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 52,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/bb98b7ea3a580542b586a9999fd352c9.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/TemminWexley.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[423]={\r\n    name = 'Jessika Pava',\r\n  XWS = 'jessikapava',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 51,\r\n    slot = {21, 19,14,18,15,10,99},\r\n    Shield = 3,\r\n    Charge = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/bc26d8864f421f1362473aa4982108ba.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/JessikaPava.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[424]={\r\n    name = 'Joph Seastriker',\r\n  XWS = 'jophseastriker',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 48,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/df85f5b77e16363a05c8f68792440166.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/JophSeastriker.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[425]={\r\n    name = 'Red Squadron Expert',\r\n  XWS = 'redsquadronexpert',\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 43,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/58967d94cfef285c4df2fdbb77fd0502.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/RedSquadronExpert.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[426]={\r\n    name = 'Blue Squadron Rookie',\r\n  XWS = 'bluesquadronrookie',\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 41,\r\n    slot = {21, 19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/a82a39a4c9baf883fbc6ae353abdd2ec.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/BlueSquadronRookie.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[427]={\r\n  name = \"Han Solo\",\r\n  XWS = 'hansolo-scavengedyt1300',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 57,\r\n  cost = 62,\r\n  slot = {21, 1,8,8,16,13,14,15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/5816bd53c272ed50096e22ae1af2b38a.png',\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_scavengedyt1300/HanSolo.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[428]={\r\n  name = \"Rey\",\r\n  XWS = 'rey',\r\n  Faction =4 ,\r\n  limited = 1,\r\n  ship_type = 57,\r\n  cost = 68,\r\n  slot = {21, 17,8,8,16,13,14,15},\r\n  Shield = 3,\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/0ee7006e6cc51d8c08b784c9b770f1b0.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_scavengedyt1300/Rey.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[429]={\r\n  name = \"Chewbacca\",\r\n    XWS = 'chewbacca-scavengedyt1300',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 57,\r\n  cost = 60,\r\n  slot = {21, 1,8,8,16,13,14,15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/422fc30e0e10445e80b304ef2d96dc06.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_scavengedyt1300/Chewbacca.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[430]={\r\n  name = \"Resistance Sympathizer\",\r\n    XWS = 'resistancesympathizer',\r\n  Faction = 4,\r\n  ship_type = 57,\r\n  cost = 58,\r\n  slot = {21, 8,8,16,13,14,15},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/28411b84c1b15f0bfa9928f2206e44f5.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_scavengedyt1300/ResistanceSympathizer.png',\r\n  actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[431]={\r\n  name = \"Finch Dallow\",\r\n    XWS = 'finchdallow',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 55,\r\n  cost = 56,\r\n  slot = {21, 2,19,8,16,16,12,12,14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/43d9a0555f719a4cbe1ffe905fd38c46.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_starfortress/FinchDallow.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[432]={\r\n  name = \"Ben Teene\",\r\n    XWS = 'benteene',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 55,\r\n  cost = 54,\r\n  slot = {21, 2,19,8,16,16,12,12,14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/c9189c7e510b4d734d4d78c4f595010f.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_starfortress/BenTeene.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[433]={\r\n  name = \"Cat\",\r\n    XWS = 'cat',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 55,\r\n  cost = 52,\r\n  slot = {21, 2,19,8,16,16,12,12,14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/b386dc25736682ebc785b15551de903b.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_starfortress/Cat.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[434]={\r\n  name = \"Cobalt Squadron Bomber\",\r\n    XWS = 'cobaltsquadronbomber',\r\n  Faction = 4,\r\n  ship_type = 55,\r\n  cost = 51,\r\n  slot = {21, 2,19,8,16,16,12,12,14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/6b6a3bb8049699e2d66fe09531e8bc00.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_starfortress/CobaltSquadronBomber.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[435]={\r\n    name = \"L'ulo L'ampar\",\r\n    XWS = 'lulolampar',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 54,\r\n    cost = 42,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e15d3e2a2fc082b95a64a83df0c96f7f.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/lulo_lampar.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}}\r\n\r\nmasterPilotDB[436]={\r\n    name = \"Tallissan Lintra\",\r\n    XWS = 'tallissanlintra',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 54,\r\n    cost = 37,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    Charge = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/72cb6c4e50b0ad24af0bb84ce0aa53f0.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/talli_lintra.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}}\r\n\r\nmasterPilotDB[437]={\r\n    name = \"Greer Sonnel\",\r\n    XWS = 'greersonnel',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 54,\r\n    cost = 36,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/7fc7b194b02ad7af6adf4ef9b79108d1.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/greer_sonnel.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}}\r\n\r\nmasterPilotDB[438]={\r\n    name = \"Zari Bangel\",\r\n    XWS = 'zaribangel',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 54,\r\n    cost = 35,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d7f37dbb86bb706dd535e9a65b69149a.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/zari_bangel.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}}\r\n\r\nmasterPilotDB[439]={\r\n    name = \"Green Squadron Expert\",\r\n    XWS = 'greensquadronexpert',\r\n    Faction = 4,\r\n    ship_type = 54,\r\n    cost = 34,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3f7ad9efb4c5af8b4d1f5c07a3c7538b.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/green_sq_expert.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}}\r\n\r\nmasterPilotDB[440]={\r\n    name = \"Blue Squadron Recruit\",\r\n    XWS = 'bluesquadronrecruit',\r\n    Faction = 4,\r\n    ship_type = 54,\r\n    cost = 33,\r\n    slot = {21, 1,19,6},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e033b2729305ac0b678d6031ada7b2b8.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/blue_sq_recruit.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}}\r\n\r\nmasterPilotDB[441]={\r\n  name = 'Foreman Proach',\r\n  XWS = 'foremanproach',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 56,\r\n  cost = 32,\r\n  slot = {21, 1,14},\r\n  Shield = 6,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/cfb3b5fa9d747afc3aa10f3b86f45818.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_miningguildtie/ForemanProach.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[442]={\r\n  name = 'Ahhav',\r\n  XWS = 'ahhav',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 56,\r\n  cost = 30,\r\n  slot = {21, 1,14},\r\n  Shield = 6,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d58a0696c8d85a63e90eb8a1e522a54c.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_miningguildtie/Ahhav.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[443]={\r\n  name = 'Captain Seevor',\r\n  XWS = 'captainseevor',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 56,\r\n  cost = 30,\r\n  slot = {21, 1,14},\r\n  Shield = 6,\r\n  Charge = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/70b64586cc2eb05d10efc7ba8dfd69d0.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_miningguildtie/CaptainSeevor.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[444]={\r\n  name = 'Overseer Yushyn',\r\n  XWS = 'overseeryushyn',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 56,\r\n  cost = 26,\r\n  slot = {21, 1,14},\r\n  Shield = 6,\r\n  Charge = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/6c9268d3e6cc6b671d6db6ac39fcad0f.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_miningguildtie/OverseerYushyn.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[445]={\r\n  name = 'Mining Guild Surveyor',\r\n  XWS = 'miningguildsurveyor',\r\n  Faction = 3,\r\n  ship_type = 56,\r\n  cost = 23,\r\n  slot = {21, 1,14},\r\n  Shield = 6,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3e5872dea32f2015bb6737592c21efaf.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_miningguildtie/MiningGuildSurveyor.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[446]={\r\n  name = 'Mining Guild Sentry',\r\n  XWS = 'miningguildsentry',\r\n  Faction = 3,\r\n  ship_type = 56,\r\n  cost = 22,\r\n  slot = {21, 1,14},\r\n  Shield = 6,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/6d67112b15c3c97bd3d4acf2c8d000ed.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_miningguildtie/MiningGuildSentry.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[447]={\r\n  name = \"Edon Kappehl\",\r\n    XWS = 'edonkappehl',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 55,\r\n  cost = 56,\r\n  slot = {21, 2,19,8,16,16,12,12,14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/f58fe0b57dc4a9c878627f0fea9cf1ef.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_starfortress/EdonKappehl.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[448]={\r\n  name = \"Vennie\",\r\n    XWS = 'vennie',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 55,\r\n  cost = 54,\r\n  slot = {21, 2,19,8,16,16,12,12,14},\r\n  Shield = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/0d494986a24e6c55efae066a43161b0d.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_starfortress/Vennie.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[449]={\r\n    name = 'Lieutenant Bastian',\r\n  XWS = 'lieutenantbastian',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 47,\r\n    slot = {21, 19,14,18,15,10},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3f43d6b3c6e87bde6a681e9d4421dec8.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/LieutenantBastian.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[450]={\r\n    name = 'Jaycris Tubbs',\r\n  XWS = 'jaycristubbs',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 47,\r\n    slot = {21, 19,14,18,15,10},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/5f3abacb9a081f5a3ca42f7a30da0e6c.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/JaycrisTubbs.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[451]={\r\n    name = 'Black Squadron Ace',\r\n  XWS = 'blacksquadronace-t70xwing',\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 47,\r\n    slot = {21, 1,19,14,18,15,10},\r\n    Shield = 3,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d2b6a5166b3fd985df5d1941408b58e1.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/BlackSquadronAce.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[452]={\r\n    name = 'Commander Malarus',\r\n  XWS = 'commandermalarus',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 49,\r\n    cost = 38,\r\n    slot = {21, 1,19,14},\r\n    Shield = 1,\r\n    Charge = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/f7506ec739f5580d484ff0ee49b041f3.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Commander%20Malarus.png',\r\n    actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[453]={\r\n    name = 'TN-3465',\r\n  XWS = 'tn3465',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 49,\r\n    cost = 28,\r\n    slot = {21, 19,14},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/333cbf0da8849edb38c4e93944d8fe57.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/TN-3465.png',\r\n    actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[454]={\r\n    name = 'Lieutenant Rivas',\r\n  XWS = 'lieutenantrivas',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 49,\r\n    cost = 27,\r\n    slot = {21, 19, 14},\r\n    Shield = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/7188ec2eb699261dbd47a15df6164f4c.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Lieutenant%20Rivas.png',\r\n    actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[455]={\r\n    name = '\"Recoil\"',\r\n  XWS = 'recoil',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 52,\r\n    cost = 57,\r\n    slot = {21, 1, 19, 5, 6, 18},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/ab11858b2b9ac5c8bbfb2dc21023ba34.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Recoil.png',\r\n    actSet = {'F','B','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[456]={\r\n    name = '\"Avenger\"',\r\n  XWS = 'avenger',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 52,\r\n    cost = 56,\r\n    slot = {21, 1, 19, 5, 6, 18},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d90d3057ead18b5df5f6de55a199a4cd.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Avenger.png',\r\n    actSet = {'F','B','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[457]={\r\n    name = 'Captain Cardinal',\r\n  XWS = 'captaincardinal',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 51,\r\n    cost = 62,\r\n    slot = {21, 2, 19, 19, 3, 8, 8, 8, 14},\r\n    Shield = 6,\r\n    Charge = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/be29a69f75726ad48f607eecca671e01.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/Captain%20Cardinal.png',\r\n    actSet = {'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[458]={\r\n    name = 'Petty Officer Thanisson',\r\n  XWS = 'pettyofficerthanisson',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 51,\r\n    cost = 59,\r\n    slot = {21, 2, 19, 19, 3, 8, 8, 8, 14},\r\n    Shield = 6,\r\n    Charge = 1,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3a2232a5238d8bf5e7538fe1d6003dbc.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/Petty%20Officer%20Thanisson.png',\r\n    actSet = {'F','TL','R'}\r\n}\r\n\r\n--w3pilot\r\n\r\nmasterPilotDB[492]={\r\n  name = 'General Grievous',\r\n  XWS = 'generalgrievous',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 58,\r\n  cost = 44,\r\n  slot = {21, 1,14,15,20},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9e4a215e799a9e7ad1853d19d149dd20.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Belbullab/GeneralGrievous.png',\r\n  actSet = {'F','TL','B','BR'}\r\n}\r\n\r\nmasterPilotDB[493]={\r\n  name = 'Wat Tambor',\r\n  XWS = 'wattambor',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 58,\r\n  cost = 42,\r\n  slot = {21, 1,14,15,20},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/68cbd6082683fe17778f829555f23a26.png',\r\n  init = 3,\r\n  actSet = {'F','TL','B','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Belbullab/WatTambor.png',\r\n}\r\n\r\nmasterPilotDB[494]={\r\n  name = 'Captain Sear',\r\n  XWS = 'captainsear',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 58,\r\n  cost = 45,\r\n  slot = {21, 14,15,20},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3d3704ab454433a8b4d73ee6bff430b8.png',\r\n  init = 2,\r\n  actSet = {'F','TL','B','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Belbullab/CaptainSear.png'\r\n}\r\nmasterPilotDB[495]={\r\n  name = 'Skakoan Ace',\r\n  XWS = 'skakoanace',\r\n  Faction = 7,\r\n  ship_type = 58,\r\n  cost = 38,\r\n  slot = {21, 1,14,15,20},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/ceb7a3bc406ff17be5dee5de62b39195.png',\r\n  init = 3,\r\n  actSet = {'F','TL','B','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Belbullab/SkakoanAce.png',\r\n\r\n}\r\n\r\nmasterPilotDB[496]={\r\n  name = 'Feethan Ottraw Autopilot',\r\n  XWS = 'feethanottrawautopilot',\r\n  Faction = 7,\r\n  ship_type = 58,\r\n  cost = 35,\r\n  slot = {21, 14,15,20},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/538c4833605af80b226da9e5f800e6ef.png',\r\n  init = 1,\r\n  actSet = {'C','TL','B','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Belbullab/FeethanOttrawAutopilot.png',\r\n}\r\n\r\nmasterPilotDB[497]={\r\n  name = 'Separatist Drone',\r\n  XWS = 'separatistdrone',\r\n  Faction = 7,\r\n  ship_type = 59,\r\n  cost = 22,\r\n  slot = {21, 6,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/64e75b9a1024ac0c909634e62e165b2e.png',\r\n  init = 3,\r\n  actSet = {'C','BR','TL'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/SeperatistDrone.png',\r\n}\r\n\r\nmasterPilotDB[498]={\r\n  name = 'Trade Federation Drone',\r\n  XWS = 'tradefederationdrone',\r\n  Faction = 7,\r\n  ship_type = 59,\r\n  cost = 20,\r\n  slot = {21, 6,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/4d8ed38f907fb4869611add738abda11.png',\r\n  init = 1,\r\n  actSet = {'C','BR','TL'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/TradeFederationDrone.png',\r\n}\r\n\r\nmasterPilotDB[499]={\r\n  name = 'DFS-081',\r\n  XWS = 'dfs081',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 59,\r\n  cost = 26,\r\n  slot = {21, 6,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/808de8db6d43921b4e3124f01d5d4947.png',\r\n  init = 3,\r\n  actSet = {'C','BR','TL'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/DFS-081.png',\r\n}\r\nmasterPilotDB[500]={\r\n  name = 'Precise Hunter',\r\n  XWS = 'precisehunter',\r\n  Faction = 7,\r\n  limited = 3,\r\n  ship_type = 59,\r\n  cost = 23,\r\n  slot = {21, 6,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/44cd712b4db9f34091cff73a4fda4303.png',\r\n  init = 3,\r\n  actSet = {'C','BR','TL'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/PreciseHunter.png',\r\n}\r\nmasterPilotDB[501]={\r\n  name = 'DFS-311',\r\n  XWS = 'dfs311',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 59,\r\n  cost = 23,\r\n  slot = {21, 6,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/741f05dbe0f7e56fc9918b86bdb0e3fb.png',\r\n  init = 1,\r\n  actSet = {'C','BR','TL'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/DFS-311.png',\r\n}\r\n\r\nmasterPilotDB[502]={\r\n  name = 'Haor Chall Prototype',\r\n  XWS = 'haorchallprototype',\r\n  Faction = 7,\r\n  limited = 2,\r\n  ship_type = 59,\r\n  cost = 21,\r\n  slot = {21, 6,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/91421be1f3bbbefd005c1b2682f0bc44.png',\r\n  init = 1,\r\n  actSet = {'C','BR','TL'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/HaorChallPrototype.png',\r\n}\r\n\r\nmasterPilotDB[503]={\r\n  name = 'Darth Maul',\r\n  XWS = 'darthmaul',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 60,\r\n  cost = 65,\r\n  slot = {21, 17,5,3,8,8,20,12,15,14},\r\n  Force = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/95428161db7de4adcea6fa8bcbf9de2f.png',\r\n  init = 5,\r\n  actSet = {'F','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/CIS_Infiltrator/DarthMaul.png',\r\n}\r\n\r\nmasterPilotDB[504]={\r\n  name = 'Count Dooku',\r\n  XWS = 'countdooku',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 60,\r\n  cost = 63,\r\n  slot = {21, 17,5,3,8,8,20,12,15,14},\r\n  Force = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/88959087710ec5a80a16dd93573f149d.png',\r\n  init = 3,\r\n  actSet = {'F','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/CIS_Infiltrator/CountDooku.png',\r\n}\r\n\r\nmasterPilotDB[505]={\r\n  name = 'O-66',\r\n  XWS = '066',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 60,\r\n  cost = 49,\r\n  slot = {21, 1,5,3,8,8,20,12,15,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9edd9bb6846e77723d8f0381bb7909aa.png',\r\n  init = 3,\r\n  actSet = {'C','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/CIS_Infiltrator/0-66.png',\r\n}\r\n\r\nmasterPilotDB[506]={\r\n  name = 'Dark Courier',\r\n  XWS = 'darkcourier',\r\n  Faction = 7,\r\n  ship_type = 60,\r\n  cost = 51,\r\n  slot = {21, 5,3,8,8,20,12,15,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/132f1957b904c890b94bf3aaf2a944ce.png',\r\n  init = 2,\r\n  actSet = {'F','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/CIS_Infiltrator/DarkCourier.png',\r\n}\r\n\r\nmasterPilotDB[507]={\r\n  name = 'Anakin Skywalker',\r\n  XWS = 'anakinskywalker',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 61,\r\n  cost = 61,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d60f4eca355471465ca3f6b99fb98e56.png',\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/AnakinSkywalker.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[508]={\r\n  name = 'Luminara Unduli',\r\n  XWS = 'luminaraunduli',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 61,\r\n  cost = 42,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/7f87b6c12631687bedf75a18582af0b0.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/LuminaraUnduli.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[509]={\r\n  name = 'Barriss Offee',\r\n  XWS = 'barrissoffee',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 61,\r\n  cost =38,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/f8f58005da18d7041b1ec2374701465c.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/BarrissOffee.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[510]={\r\n  name = 'Ahsoka Tano',\r\n  XWS = 'ahsokatano',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 61,\r\n  cost = 43,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/15f6bf84f63970c982dd722a5473217f.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/AhsokaTano.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[511]={\r\n  name = 'Obi-Wan Kenobi',\r\n  XWS = 'obiwankenobi',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 61,\r\n  cost = 49,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/fcf515534a722b581bc2f85f36cb5c30.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/Obi-WanKenobi.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[512]={\r\n  name = 'Mace Windu',\r\n  XWS = 'macewindu',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 61,\r\n  cost = 46,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/f0c905f162de8d77dd78c3d49cca77f1.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/MaceWindu.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[513]={\r\n  name = 'Plo Koon',\r\n  XWS = 'plokoon',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 61,\r\n  cost = 45,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/c0936c57c897ea7bacadf723cfcbd0b6.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/PloKoon.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[514]={\r\n  name = 'Saesee Tiin',\r\n  XWS = 'saeseetiin',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 61,\r\n  cost = 42,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 2,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e0fdedf1af8fd1e5b36c2fba17b4f6b0.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/SaeseeTiin.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[515]={\r\n  name = 'Jedi Knight',\r\n  XWS = 'jediknight',\r\n  Faction = 6,\r\n  ship_type = 61,\r\n  cost = 37,\r\n  slot = {21, 17,10,18,14},\r\n  Force = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/13d08d0d1131e7a11f6d10fd1626bff9.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/JediKnight.png',\r\n  actSet = {'F','E','TL','BR','B'},\r\n  tintFriendly = {mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/Jedi_Delta7_tint.obj',\r\n                  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/JediKnight-tint.png',}\r\n}\r\n\r\nmasterPilotDB[516]={\r\n  name = '\"Odd Ball\"',\r\n  XWS = 'oddball',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 62,\r\n  cost = 30,\r\n  slot = {21, 1,6,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9ecf7600f20da9a9eff5d3e244934ccb.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/OddBall.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[517]={\r\n  name = '\"Kickback\"',\r\n  XWS = 'kickback',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 62,\r\n  cost = 30,\r\n  slot = {21, 1,6,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/76c1228dd4c70dc4e56ac99284a11b0f.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/Kickback.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[518]={\r\n  name = '\"Axe\"',\r\n  XWS = 'axe',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 62,\r\n  cost = 29,\r\n  slot = {21, 1,6,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/89ade203dec6b0fa5ed6360aae3b3022.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/Axe.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[519]={\r\n  name = '\"Swoop\"',\r\n  XWS = 'swoop',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 62,\r\n  cost = 28,\r\n  slot = {21, 1,6,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/8ae255235c0c1d3892344fb43fcab773.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/Swoop.png',\r\n  actSet ={'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[520]={\r\n  name = '\"Tucker\"',\r\n  XWS = 'tucker',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 62,\r\n  cost = 27,\r\n  slot = {21, 6,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/a457cc2ab3038736cb37541ad94b9b34.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/Tucker.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\nmasterPilotDB[521]={\r\n  name = 'Blue Squadron Protector',\r\n  XWS = 'bluesquadronprotector',\r\n  Faction = 6,\r\n  ship_type = 62,\r\n  cost = 26,\r\n  slot = {21, 1,6,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/77b2dfdca20865d8d667c41539a7356e.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/BlueSquadronProtector.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[522]={\r\n  name = 'Gold Squadron Trooper',\r\n  XWS = 'goldsquadrontrooper',\r\n  Faction = 6,\r\n  ship_type = 62,\r\n  cost = 25,\r\n  slot = {21, 6,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/ed881318b45485a197e514b2d13e178c.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/GoldSquadronTrooper.png',\r\n  actSet = {'F','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[523]={\r\n  name = '\"Odd Ball\"',\r\n  XWS = 'oddball-arc170starfighter',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 31,\r\n  cost = 48,\r\n  slot = {21, 1,5,14,8,16,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/b0e39e35b57982a9cdffe663ff47b2dc.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_ARC-170/OddBall.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[524]={\r\n  name = '\"Wolffe\"',\r\n  XWS = 'wolffe',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 31,\r\n  cost = 49,\r\n  slot = {21, 1,5,14,8,16,10},\r\n  Charge = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/2a15fd003a7fc1d475b562a958c6c263.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_ARC-170/Wolffe.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[525]={\r\n  name = '\"Jag\"',\r\n  XWS = 'jag',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 31,\r\n  cost = 48,\r\n  slot = {21, 5,14,8,16,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/28152f1d6ee09d27a4afd2459947dc3d.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_ARC-170/Jag.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[526]={\r\n  name = '\"Sinker\"',\r\n  XWS = 'sinker',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 31,\r\n  cost = 54,\r\n  slot = {21, 5,14,8,16,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/8297fc7d58ec0a5e6068f8dabbbc00f1.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_ARC-170/Sinker.png',\r\n  actSet ={'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[527]={\r\n  name = 'Squad Seven Veteran',\r\n  XWS = 'squadsevenveteran',\r\n  Faction = 6,\r\n  ship_type = 31,\r\n  cost = 44,\r\n  slot = {21, 1,5,14,8,16,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/0e0fb59b2806b41214275255986965f2.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_ARC-170/SquadSevenVeteran.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[528]={\r\n  name = '104th Battalion Pilot',\r\n  XWS = '104thbattalionpilot',\r\n  Faction = 6,\r\n  ship_type = 31,\r\n  cost = 42,\r\n  slot = {21, 5,14,8,16,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/1798ea30f603f073200326864ef9424c.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_ARC-170/104thBattalionPilot.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\n--w4 Pilots\r\n--N-1\r\nmasterPilotDB[557]={\r\n  name = 'Ric Olié',\r\n  XWS = 'ricolie',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 66,\r\n  cost = 45,\r\n  slot = {21, 1,2,5,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/87829b7b808c535eb1e2c8314b04971a.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_N1/RicOlie.png',\r\n  actSet = {'F','TL','B','BR','E'}\r\n}\r\n\r\nmasterPilotDB[558]={\r\n  name = 'Anakin Skywalker',\r\n  XWS = 'anakinskywalker-nabooroyaln1starfighter',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 66,\r\n  cost = 41,\r\n  slot = {21, 1,2,5,10},\r\n  Force = 1,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/21e28ea4e8784dce5a554a33888d8be0.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_N1/AnakinSkywalker.png',\r\n  actSet = {'F','TL','B','BR','E'}\r\n}\r\nmasterPilotDB[559]={\r\n  name = 'Padmé Amidala',\r\n  XWS = 'padmeamidala',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 66,\r\n  cost = 44,\r\n  slot = {21, 1,2,5,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3bc6bb14d0c80011145a36c132550298.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_N1/PadmeAmidala.png',\r\n  actSet = {'F','TL','B','BR','E'}\r\n}\r\n\r\nmasterPilotDB[560]={\r\n  name = 'Dineé Ellberger',\r\n  XWS = 'dineeellberger',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 66,\r\n  cost = 38,\r\n  slot = {21, 1,2,5,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/06e0863851b95dba4874b211e05661cc.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_N1/DineeEllberger.png',\r\n  actSet = {'F','TL','B','BR','E'}\r\n}\r\n\r\nmasterPilotDB[561]={\r\n  name = 'Naboo Handmaiden',\r\n  XWS = 'naboohandmaiden',\r\n  Faction = 6,\r\n  limited = 2,\r\n  ship_type = 66,\r\n  cost = 42,\r\n  slot = {21, 2,5,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/4493fe57050175b6a75e3a13e7553b1e.png',\r\n  init = 1,\r\n  Condition = 'Decoyed',\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_N1/NabooHandmaiden.png',\r\n  actSet = {'F','TL','B','BR','E'}\r\n}\r\n\r\nmasterPilotDB[562]={\r\n  name = 'Bravo Flight Officer',\r\n  XWS = 'bravoflightofficer',\r\n  Faction = 6,\r\n  ship_type = 66,\r\n  cost = 33,\r\n  slot = {21, 2,5,10},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/274db1f70ed4da939b9440837a30c39a.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_N1/BravoFlightOfficer.png',\r\n  actSet = {'F','TL','B','BR','E'}\r\n}\r\n\r\n--Resistance Transport\r\nmasterPilotDB[569]={\r\n    name = 'Cova Nell',\r\n  XWS = 'covanell',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 63,\r\n    cost = 38,\r\n    slot = {21, 1,19,3,5,8,8,10,14},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/a9ae63785f4cadaa28a74858ff1d1bc4.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport/cova_nell.png',\r\n    actSet = {'F','TL'}}\r\n\r\nmasterPilotDB[570]={\r\n    name = 'Pammich Nerro Goode',\r\n  XWS = 'pammichnerrogoode',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 63,\r\n    cost = 34,\r\n    slot = {21, 19,3,5,8,8,10,14},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9d7dd5d0851911412dd5c86603a0ea91.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport/pammich_nerro_goode.png',\r\n    actSet = {'F','TL'}}\r\n\r\nmasterPilotDB[571]={\r\n    name = 'Nodin Chavdri',\r\n  XWS = 'nodinchavdri',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 63,\r\n    cost = 35,\r\n    slot = {21, 19,3,5,8,8,10,14},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9f41de269cb1ff091487554fb53b2374.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport/nodin_chavdri.png',\r\n    actSet = {'F','TL'}}\r\n\r\nmasterPilotDB[572]={\r\n    name = 'Logistics Division Pilot',\r\n  XWS = 'logisticsdivisionpilot',\r\n    Faction = 4,\r\n    ship_type = 63,\r\n    cost = 32,\r\n    slot = {21, 19,3,5,8,8,10,14},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/57ea37cdb13f52ec3f3e0b745fc9d630.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport/logistics_div_pilot.png',\r\n    actSet = {'F','TL'}}\r\n\r\n--Resistance Pod\r\nmasterPilotDB[574]={\r\n    name = 'Rose Tico',\r\n  XWS = 'rosetico',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 65,\r\n    cost = 25,\r\n    slot = {21, 1,19,8,14},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/1dbf7b355d60f5b3f278522eb702f99f.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport_pod/rose.png',\r\n    actSet = {'F','TL','BR'}}\r\n\r\nmasterPilotDB[573]={\r\n    name = 'BB-8',\r\n  XWS = 'bb8',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 65,\r\n    cost = 25,\r\n    slot = {21, 1,19,8,14},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/4d2201d40635299aa134acd52c9587af.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport_pod/bb8.png',\r\n    actSet ={'C','TL','BR', 'B'}}\r\n\r\nmasterPilotDB[575]={\r\n    name = 'Finn',\r\n  XWS = 'finn',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 65,\r\n    cost = 30,\r\n    slot = {21, 1,19,8,14},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/311d88e51a039b79e9a422ab3c475288.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport_pod/finn.png',\r\n    actSet = {'F','TL','BR'}}\r\n\r\nmasterPilotDB[576]={\r\n    name = 'Vi Moradi',\r\n  XWS = 'vimoradi',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 65,\r\n    cost = 27,\r\n    slot = {21, 19,8,14},\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/14139a2d20ff13b01bd5810371a89064.png',\r\n    init = 1,\r\n    Condition =\"Compromising Intel\",\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport_pod/vi_moradi.png',\r\n    actSet ={'F','TL','BR'}}\r\n\r\n--Hyena Bomber\r\nmasterPilotDB[563]={\r\n  name = 'DBS-404',\r\n  XWS = 'dbs404',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 64,\r\n  cost = 30,\r\n  slot = {21, 5,6,12,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3e647295c7237a5eb36b94d887eb8e56.png',\r\n  init = 4,\r\n  actSet = {'C','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/DBS-404.png',\r\n}\r\n\r\nmasterPilotDB[564]={\r\n  name = 'DBS-32C',\r\n  XWS = 'dbs32c',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 64,\r\n  cost = 40,\r\n  slot = {21, 2,20,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/1befc5619a02e2ea8b7bfb8df93471a1.png',\r\n  init = 3,\r\n  actSet = {'C','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/DBS-32C.png',\r\n}\r\n\r\nmasterPilotDB[565]={\r\n  name = 'Bombardment Drone',\r\n  XWS = 'bombardmentdrone',\r\n  Faction = 7,\r\n  limited = 3,\r\n  ship_type = 64,\r\n  cost = 29,\r\n  slot = {21, 2,12,12,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/099422de35fb5ad2c2d238237e7dfe2c.png',\r\n  init = 3,\r\n  actSet = {'C','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/BombardmentDrone.png',\r\n}\r\n\r\nmasterPilotDB[566]={\r\n  name = 'Baktoid Prototype',\r\n  XWS = 'baktoidprototype',\r\n  Faction = 7,\r\n  limited = 2,\r\n  ship_type = 64,\r\n  cost = 28,\r\n  slot = {21, 2,6,6,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/254bc7be63cc9f4e629198f8d45f2f9b.png',\r\n  init = 1,\r\n  actSet = {'C','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/BaktoidPrototype.png',\r\n}\r\n\r\nmasterPilotDB[567]={\r\n  name = 'Separatist Bomber',\r\n  XWS = 'separatistbomber',\r\n  Faction = 7,\r\n  ship_type = 64,\r\n  cost = 28,\r\n  slot = {21, 5,6,12,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/cf510ca885a5f85395542b9aa51fba73.png',\r\n  init = 3,\r\n  actSet = {'C','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/SeperatistBomber.png',\r\n}\r\n\r\nmasterPilotDB[568]={\r\n  name = 'Techno Union Bomber',\r\n  XWS = 'technounionbomber',\r\n  Faction = 7,\r\n  ship_type = 64,\r\n  cost = 25,\r\n  slot = {21, 5,6,12,14,18},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/749bdc89c3da6b8034154780959e9c34.png',\r\n  init = 1,\r\n  actSet = {'C','TL','BR'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/TechnoUnionBomber.png',\r\n}\r\n\r\n--Republic Y-Wing\r\nmasterPilotDB[596]={\r\n  name = 'Anakin Skywalker',\r\n  XWS = 'anakinskywalker-btlbywing',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 68,\r\n  cost = 53,\r\n  slot = {21, 17, 4, 5, 16, 10, 12, 14},\r\n  Force = 3,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/c7c979a7d90961d2e3afe377a71285df.png',\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/AnakinSkywalker.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[597]={\r\n  name = '\"Odd Ball\"',\r\n  XWS = 'oddball-btlbywing',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 68,\r\n  cost = 40,\r\n  slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n  card = 'https://sb-cdn.fantasyflightgames.com/card_images/en/8f1d65004c763b48293d1324a49c563a.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/OddBall.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[598]={\r\n  name = '\"Matchstick\"',\r\n  XWS = 'matchstick',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 68,\r\n  cost = 42,\r\n  slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/6aa658fe4082ed67500d2ac92c7731a0.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/Matchstick.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[599]={\r\n  name = '\"Broadside\"',\r\n  XWS = 'broadside',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 68,\r\n  cost = 36,\r\n  slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/1f0842573067d73acd7bb7589707ec4e.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/Broadside.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[600]={\r\n  name = 'R2-D2',\r\n  XWS = 'r2d2',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 68,\r\n  cost = 31,\r\n  slot = {21, 1, 4, 5, 16, 8, 12, 14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/b37b960f2e79ab5eb905bc3593de8961.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/R2-D2.png',\r\n  actSet = {'C','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[601]={\r\n  name = '\"Goji\"',\r\n  XWS = 'goji',\r\n  Faction = 6,\r\n  limited = 1,\r\n  ship_type = 68,\r\n  cost = 29,\r\n  slot = {21, 4, 5, 16, 10, 12, 14},\r\n  card = 'https://sb-cdn.fantasyflightgames.com/card_images/en/3b34b6fc25db55b66654d355c7f514eb.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/Goji.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[602]={\r\n  name = 'Shadow Squadron Veteran',\r\n  XWS = 'shadowsquadronveteran',\r\n  Faction = 6,\r\n  ship_type = 68,\r\n  cost = 31,\r\n  slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/fe59b8b8bd7ca5d4104030b50a30a299.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/ShadowSquadronVeteran.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[603]={\r\n  name = 'Red Squadron Bomber',\r\n  XWS = 'redsquadronbomber',\r\n  Faction = 6,\r\n  ship_type = 68,\r\n  cost = 29,\r\n  slot = {21, 4, 5, 16, 10, 12, 14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/692a1f1d4b5f5370dad7cacf2f19d699.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/RedSquadronBomber.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\n--Nantex\r\nmasterPilotDB[604]={\r\n  name = 'Sun Fac',\r\n  XWS = 'sunfac',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 67,\r\n  cost = 45,\r\n  slot = {21, 1,1},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/42265df53c90026a58ac96b0acd3c1f8.png',\r\n  init = 6,\r\n  actSet = {'F','E'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Nantex/SunFac.png',\r\n}\r\n\r\nmasterPilotDB[605]={\r\n  name = 'Berwer Kret',\r\n  XWS = 'berwerkret',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 67,\r\n  cost = 37,\r\n  slot = {21, 1,1},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/f1c76ce6ff266c23099686392efef565.png',\r\n  init = 5,\r\n  actSet = {'F','E'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Nantex/BerwerKret.png',\r\n}\r\n\r\nmasterPilotDB[606]={\r\n  name = 'Chertek',\r\n  XWS = 'chertek',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 67,\r\n  cost = 36,\r\n  slot = {21, 1,1},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/07504533be45d13cb82d71ea11d234f7.png',\r\n  init = 4,\r\n  actSet = {'F','E'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Nantex/Chertek.png',\r\n}\r\n\r\nmasterPilotDB[607]={\r\n  name = 'Gorgol',\r\n  XWS = 'gorgol',\r\n  Faction = 7,\r\n  limited = 1,\r\n  ship_type = 67,\r\n  cost = 32,\r\n  slot = {21, 1,14},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d2d0764f83a2740f407082e934986ff2.png',\r\n  init = 2,\r\n  actSet = {'F','E'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Nantex/Gorgol.png',\r\n}\r\n\r\nmasterPilotDB[608]={\r\n  name = 'Petranaki Arena Ace',\r\n  XWS = 'petranakiarenaace',\r\n  Faction = 7,\r\n  ship_type = 67,\r\n  cost = 35,\r\n  slot = {21, 1,1},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d2d62b6070fdf59b58db79aadb845d54.png',\r\n  init = 4,\r\n  actSet = {'F','E'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Nantex/PetranakiArenaAce.png',\r\n}\r\n\r\nmasterPilotDB[609]={\r\n  name = 'Stalgasin Hive Guard',\r\n  XWS = 'stalgasinhiveguard',\r\n  Faction = 7,\r\n  ship_type = 67,\r\n  cost = 33,\r\n  slot = {21, 1},\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e97a0ae22847e0b71d920a0df9dfcfab.png',\r\n  init = 3,\r\n  actSet = {'F','E'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Nantex/StalgasinHiveGuard.png',\r\n}\r\n\r\n--w7\r\n--TIE/ba\r\nmasterPilotDB[627]={\r\n    name = 'First Order Provocateur',\r\n  XWS = 'firstorderprovocateur',\r\n    Faction = 5,\r\n    ship_type = 70,\r\n    cost = 41,\r\n    slot = {21, 1,19,6,14},\r\n    Shield = 2,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/ef/d7/efd7cc94-bdf7-4f63-80eb-476444dfeb28/swz62_card_first-order-provocateur.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/FO/TIEba/provocateur.png',\r\n    actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[626]={\r\n    name = '\"Ember\"',\r\n  XWS = 'ember',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 70,\r\n    cost = 48,\r\n    slot = {21, 1,19,6,14},\r\n    Shield = 2,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/76/2e/762e6c35-81ce-4c9e-b8c5-f442d9fad0ee/swz62_card_ember.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/FO/TIEba/ember.png',\r\n    actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[625]= {\r\n    name = '\"Holo\"',\r\n  XWS = 'holo',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 70,\r\n    cost = 53,\r\n    slot = {21, 1,19,6,14},\r\n    Shield = 2,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/2e/fe/2efe3183-8d4a-402a-9b11-4c8bf56a0b6c/swz62_card_holo.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/FO/TIEba/holo.png',\r\n    actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[624]={\r\n    name = 'Major Vonreg',\r\n  XWS = 'majorvonreg',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 70,\r\n    cost = 55,\r\n    slot = {21, 1,19,6,14},\r\n    Shield = 2,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/b6/de/b6de4a15-0b5d-4c39-8a2e-c96af5dff9fe/swz62_card_major-vonreg.png',\r\n    init = 6,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/FO/TIEba/vonreg.png',\r\n    actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\n--FireBall\r\nmasterPilotDB[620]={\r\n  name = 'Jarek Yeager',\r\n  XWS = 'jarekyeager',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 69,\r\n  cost = 32,\r\n  slot = {21, 1,6,10,13,14,14,15},\r\n  Shield = 0,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/85/b2/85b26549-26a7-4f48-88c5-4d52733704ee/swz63_a1_card_jarek-yeager.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_fireball/JarekYeager.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[621]={\r\n  name = 'Kazuda Xiono',\r\n  XWS = 'kazudaxiono',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 69,\r\n  cost = 39,\r\n  slot = {21, 1,6,10,13,14,14,15},\r\n  Shield = 0,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/16/42/164202d5-47a5-44ea-a96b-49c795005ca8/swz63_a1_card_kazuda-xiono.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_fireball/KazudaXiono.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\nmasterPilotDB[622]={\r\n  name = 'R1-J5',\r\n  XWS = 'r1j5',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 69,\r\n  cost = 28,\r\n  slot = {21, 6,8,13,14,14,15},\r\n  Shield = 0,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/21/b3/21b3db84-a517-41ab-b3b0-dd3e5159b0c3/swz63_a1_card_r1-j5.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_fireball/R1-J5.png',\r\n  actSet = {'C','E','BR'}\r\n}\r\n\r\nmasterPilotDB[623]={\r\n  name = 'Colossus Station Mechanic',\r\n  XWS = 'colossusstationmechanic',\r\n  Faction = 4,\r\n  ship_type = 69,\r\n  cost = 26,\r\n  slot = {21, 6,10,13,14,14,15},\r\n  Shield = 0,\r\n  card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/533ab83e881838eb8006c8f8dcf19145.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_fireball/ColossusStationMechanic.png',\r\n  actSet = {'F','E','BR'}\r\n}\r\n\r\n--hotshot and aces\r\nmasterPilotDB[628]={\r\n  name = 'Gina Moonsong',\r\n  XWS = 'ginamoonsong',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 17,\r\n  cost = 50,\r\n  slot = {21, 1, 2, 3, 3, 5, 14, 18},\r\n  Shield = 4,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/32/8a/328a4f31-c01e-4966-a418-59c6fd42739e/swz66_gina-moonsong.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/GinaMoonsong.png',\r\n  actSet = {'F','TL', 'BR'}\r\n}\r\n\r\nmasterPilotDB[629]={\r\n    name = 'K-2SO',\r\n  XWS = 'k2so',\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 15,\r\n    cost = 46,\r\n    slot = {21, 1, 2, 8, 8, 14, 18},\r\n    Shield = 3,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/2f/27/2f277cc2-9cd8-4aa6-bf7c-daf6f7416829/swz66_k-2so.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/k2so.png',\r\n    actSet = {'C','TL'}\r\n}\r\n\r\nmasterPilotDB[631]={\r\n  name = 'Alexsandr Kallus',\r\n  XWS = 'alexsandrkallus',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 23,\r\n  cost = 68,\r\n  slot = {21, 1, 2, 4, 5, 8, 8, 16, 14, 15},\r\n  Shield = 4,\r\n  card = 'https://static.wikia.nocookie.net/xwing-miniatures-second-edition/images/d/dd/Swz66_alexsandr-kallus.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/REB_VCX100/AlexsandrKallus.jpg',\r\n  actSet = {'F','TL','R'}\r\n}\r\n\r\nmasterPilotDB[630]={\r\n    name = 'Leia Organa',\r\n  XWS = 'leiaorgana',\r\n    Force = 1,\r\n    Faction = 1,\r\n    limited = 1,\r\n    ship_type = 1,\r\n    cost = 77,\r\n    slot = {21, 17, 6, 8, 8, 16, 14, 14, 15},\r\n    Shield = 5,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/5b/ff/5bffb367-cb6e-4b8b-948f-25a70acd3a3f/swz66_leia-organa.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/leia.png',\r\n    actSet = {'F','TL','B'}\r\n}\r\n\r\nmasterPilotDB[638]={\r\n    name = \"Zizi Tlo\",\r\n    XWS = 'zizitlo',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 54,\r\n    cost = 41,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    Charge = 1,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/bf/4f/bf4f8372-b151-45ee-b38b-5c67bba7d2d8/swz66_zizi-tlo.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/zizi_tlo.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}}\r\n\r\nmasterPilotDB[639]={\r\n    name = \"Ronith Blario\",\r\n    XWS = 'ronithblario',\r\n    Faction = 4,\r\n    limited = 1,\r\n    ship_type = 54,\r\n    cost = 34,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/27/9a/279ac02a-e274-4bcb-9570-d469cd12936e/swz66_ronith-blario.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/ronith_blario.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}}\r\n\r\n\r\nmasterPilotDB[640]={\r\n  name = \"Paige Tico\",\r\n    XWS = 'paigetico',\r\n  Faction = 4,\r\n  limited = 1,\r\n  ship_type = 55,\r\n  cost = 56,\r\n  slot = {21, 2,19,8,16,16,12,12,14},\r\n  Shield = 3,\r\n  Charge = 1,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/48/7e/487e95ce-b13c-4d39-97f6-8e28e633d07f/swz66_paige-tico.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_starfortress/PaigeTico.png',\r\n  actSet = {'F','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[632]={\r\n  name = 'Fifth Brother',\r\n  XWS = 'fifthbrother',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 25,\r\n  cost = 42,\r\n  slot = {21, 17, 2, 6},\r\n  Shield = 2,\r\n  Force = 2,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/c9/64/c964c977-9c57-4f50-a077-ac4fb7b70ebd/swz66_fifth-brother.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieadvv1/FifthBrother.png',\r\n  actSet = {'F','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[633]={\r\n  name = '\"Vagabond\"',\r\n  XWS = 'vagabond',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 16,\r\n  cost =34,\r\n  slot = {21, 1, 16, 12, 14},\r\n  Shield = 0,\r\n  card='http://images-cdn.fantasyflightgames.com/filer_public/98/a8/98a8c9cc-53b2-4b57-ac0b-96da7c064740/swz66_vagabond.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiestriker/Vagabond.png',\r\n  actSet = {'F','E','BR','Ail'}\r\n}\r\n\r\nmasterPilotDB[634]={\r\n  name = 'Morna Kee',\r\n  XWS = 'mornakee',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 28,\r\n  cost = 75,\r\n  slot = {21, 1, 5, 8, 8, 8, 16, 12, 14, 15},\r\n  Shield = 4,\r\n  Charge = 3,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/53/16/53162173-c0c4-423e-8bbe-d5d0be9554cb/swz66_morna-kee.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Decimator/MornaKee.png',\r\n  actSet = {'F','R','TL','Rot'}\r\n}\r\n\r\nmasterPilotDB[641]={\r\n    name = 'Lieutenant LeHuse',\r\n  XWS = 'lieutenantlehuse',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 50,\r\n    cost = 37,\r\n    slot = {21, 1, 2, 19, 6, 16, 14},\r\n    Shield = 3,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/5d/d9/5dd92afa-a038-4f4c-869d-19b108c6bb6a/swz66_lieutenant-lehuse.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Lieutenant%20LeHuse.png',\r\n    actSet = {'F','TL','E','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[642]={\r\n    name = 'Captain Phasma',\r\n  XWS = 'captainphasma',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 50,\r\n    cost = 38,\r\n    slot = {21, 1, 2, 19, 6, 16, 14},\r\n    Shield = 3,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/3e/07/3e077a49-bea5-4d65-92c8-6e658ffb27af/swz66_captain-phasma.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Captain%20Phasma.png',\r\n    actSet = {'F','TL','E','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[643]={\r\n    name = '\"Rush\"',\r\n  XWS = 'rush',\r\n    Faction = 5,\r\n    limited = 1,\r\n    ship_type = 52,\r\n    cost = 57,\r\n    slot = {21, 1, 19, 5, 6, 18},\r\n    Shield = 2,\r\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/cf/12/cf121b68-8355-422f-bdc7-797c9a309b03/swz66_rush.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Rush.png',\r\n    actSet = {'F','B','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[635]={\r\n  name = 'Bossk',\r\n  XWS = 'bossk-z95af4headhunter',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 38,\r\n  cost = 28,\r\n  slot = {21, 6, 13, 14},\r\n  Shield = 2,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/d3/9d/d39d7a92-7829-4bc8-ab2c-05843ab3d099/swz66_bossk.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_z95/Bossk.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[636]={\r\n  name = 'G4R-G0R V/M',\r\n  XWS = 'g4rgorvm',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 44,\r\n  cost = 28,\r\n  slot = {21, 14,99},\r\n  Shield = 1,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/4c/2c/4c2c309f-f9b0-4a93-a3a5-28b43fe981c3/swz66_g4r-g0r_vm.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/G4rG0r.png',\r\n  actSet = {'C','E','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[637]={\r\n  name = 'Nom Lumb',\r\n  XWS = 'nomlumb',\r\n  Faction = 3,\r\n  limited = 1,\r\n  ship_type = 45,\r\n  cost = 38,\r\n  slot = {21, 1, 3, 8, 5, 13, 14, 15, 16},\r\n  Shield = 3,\r\n  Charge = 1,\r\n  card = 'http://images-cdn.fantasyflightgames.com/filer_public/f9/67/f96780a9-1fff-460c-8480-4294fd7a7a27/swz66_nom-lumb.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_jumpmaster/NomLumb.png',\r\n  actSet = {'F','TL','BR','Rot'}\r\n}\r\n\r\nmasterPilotDB[656]={\r\n  name = 'Commander Malarus',\r\n  XWS = 'commandermalarus-xiclasslightshuttle',\r\n  Faction = 5,\r\n  limited = 1,\r\n  ship_type = 73,\r\n  cost = 45,\r\n  slot = {1,19,19,8,8,14},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/85/c4/85c41c14-3071-401b-b3ee-89d048acd9f0/swz69_a1_ship_malarus.png',\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/Commander%20Malarus.jpg',\r\n  actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[657]={\r\n  name = 'Gideon Hask',\r\n  XWS = 'gideonhask-xiclasslightshuttle',\r\n  Faction = 5,\r\n  limited = 1,\r\n  ship_type = 73,\r\n  cost = 40,\r\n  slot = {1,19,19,8,8,14},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/fc/47/fc47d552-1b3f-4281-8a0e-5ced929d7ec8/swz69_a1_ship_hask.png',\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/Gideon%20Hask.jpg',\r\n  actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[658]={\r\n  name = 'Agent Terex',\r\n  XWS = 'agentterex',\r\n  Faction = 5,\r\n  limited = 1,\r\n  ship_type = 73,\r\n  cost = 42,\r\n  slot = {19,19,8,8,13,13,13,14},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/9a/27/9a27c06f-58be-49b7-ab36-63dc2fae3b9a/swz69_a1_ship_terex.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/Agent%20Terex.jpg',\r\n  actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[659]={\r\n  name = 'First Order Courier',\r\n  XWS = 'firstordercourier',\r\n  Faction = 5,\r\n  ship_type = 73,\r\n  cost = 38,\r\n  slot =  {19,19,8,8,14},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/9f/49/9f490467-49a5-456f-b649-42cb74ecdd8a/swz69_a1_ship_courier.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/First%20Order%20Courier.jpg',\r\n  actSet = {'F','TL'}\r\n}\r\n\r\nmasterPilotDB[660]={\r\n    name = '\"Hawk\"',\r\n  XWS = 'hawk',\r\n    limited = 1,\r\n    Faction = 6,\r\n    ship_type = 74,\r\n    cost = 54,\r\n    slot = {1, 6, 6, 8, 8, 16, 16, 14},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/a0/d0/a0d0bfa8-544c-4872-8f6e-ef5fc3329c3a/swz70_a1_hawk_ship.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/Hawk.png',\r\n    actSet = {'F','R','TL','Rot'},\r\n    addSqdAction = {'BR', 'B'}\r\n}\r\n\r\nmasterPilotDB[661]={\r\n    name = '\"Warthog\"',\r\n  XWS = 'warthog',\r\n    limited = 1,\r\n    Faction = 6,\r\n    ship_type = 74,\r\n    cost = 54,\r\n    slot = {6, 6, 8, 8, 16, 16, 14},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/63/a5/63a5a158-1bb9-43f9-a461-a4778edb212d/swz70_a1_warthog_ship.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/Warthog.png',\r\n    actSet = {'F','R','TL','Rot'},\r\n}\r\n\r\nmasterPilotDB[662]={\r\n    name = '\"Hound\"',\r\n  XWS = 'hound',\r\n    limited = 1,\r\n    Faction = 6,\r\n    ship_type = 74,\r\n    cost = 50,\r\n    slot = {6, 6, 8, 8, 16, 16, 14},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/61/ee/61ee228d-9369-4a23-9cb6-3068c0920f10/swz70_a1_hound_ship.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/Hound.png',\r\n    actSet = {'F','R','TL','Rot'},\r\n}\r\n\r\nmasterPilotDB[663]={\r\n    name = '212th Battalion Pilot',\r\n  XWS = '212thbattalionpilot',\r\n    Faction = 6,\r\n    ship_type = 74,\r\n    cost = 49,\r\n    slot = {6, 6, 8, 8, 16, 16, 14},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/80/e7/80e7698b-13df-4d66-ba2b-575df467a7df/swz70_a1_battalion-pilot_ship.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/212th%20Battalion%20Pilot.png',\r\n    actSet = {'F','R','TL','Rot'},\r\n}\r\n\r\nmasterPilotDB[665]={\r\n  name = 'Onderon Oppressor',\r\n  XWS = 'onderonoppressor',\r\n  limited = 2,\r\n  Faction = 7,\r\n  ship_type = 75,\r\n  cost = 40,\r\n  slot = {6,6,8,12,20,14,18},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/d7/74/d774cd1d-eadc-4cf4-bf7f-f8169f9d14a3/swz71_card_oppressor.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/Onderon%20Oppressor.png',\r\n  actSet = {'C','TL','BR'},\r\n}\r\n\r\n\r\nmasterPilotDB[668]={\r\n  name = 'Geonosian Prototype',\r\n  XWS = 'geonosianprototype',\r\n  limited = 2,\r\n  Faction = 7,\r\n  ship_type = 75,\r\n  cost = 35,\r\n  slot = {3,3,6,6,20,14,18},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/46/92/469279ec-b2cc-4168-81e2-f1bc616b0037/swz71_card_prototype.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/Geonosian%20Prototype.png',\r\n  actSet = {'C','TL','BR'},\r\n}\r\n\r\nmasterPilotDB[666]={\r\n  name = 'DGS-047',\r\n  XWS = 'dgs047',\r\n  limited = 1,\r\n  Faction = 7,\r\n  ship_type = 75,\r\n  cost = 35,\r\n  slot = {6,6,8,12,20,14,18},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/27/e8/27e89f93-eaa8-40bc-b62f-d8d009e54b82/swz71_card_dgs047.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/DGS-047.png',\r\n  actSet = {'C','TL','BR'},\r\n}\r\n\r\nmasterPilotDB[664]={\r\n  name = 'DGS-286',\r\n  XWS = 'dgs286',\r\n  limited = 1,\r\n  Faction = 7,\r\n  ship_type = 75,\r\n  cost = 42,\r\n  slot = {6,6,8,12,20,14,18},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/26/c0/26c041f8-90e4-4cc6-8fa4-219b87ac502b/swz71_card_dgs286.png',\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/DGS-286.png',\r\n  actSet = {'C','TL','BR'},\r\n}\r\n\r\nmasterPilotDB[667]={\r\n  name = 'Separatist Predator',\r\n  XWS = 'separatistpredator',\r\n  Faction = 7,\r\n  ship_type = 75,\r\n  cost = 36,\r\n  slot = {6,6,8,12,20,14,18},\r\n  Shield = 2,\r\n  card = 'https://cdn.discordapp.com/attachments/693114202763558912/748518047504924722/separatist_predator.png',\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/Separatist%20Predators.png',\r\n  actSet = {'C','TL','BR'},\r\n}\r\n\r\nmasterPilotDB[669]={\r\n  name = 'Baktoid Drone',\r\n  XWS = 'baktoiddrone',\r\n  Faction = 7,\r\n  ship_type = 75,\r\n  cost = 34,\r\n  slot = {6,6,8,12,20,14,18},\r\n  Shield = 2,\r\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/7c/61/7c61a6d9-0c5a-4bc0-9d4d-f38e3723a2c1/swz71_card_baktoid.png',\r\n  init = 1,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/Baktoid%20Drones.png',\r\n  actSet = {'C','TL','BR'},\r\n}\r\n\r\nmasterPilotDB[693]={\r\n    name = '\"Rampage\"',\r\n    XWS = 'rampage',\r\n    limited = 1,\r\n    Faction = 2,\r\n    ship_type = 72,\r\n    cost = 39,\r\n    slot = {1,3,3,14,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/ee/88/ee888bad-fa08-42e2-a558-cbf9a6f2da62/swz67_rampage.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Rampage.png',\r\n    actSet = {'F','C','TL','BR','R','Rot'},\r\n}\r\n\r\nmasterPilotDB[694]={\r\n    name = 'Lyttan Dree',\r\n    XWS = 'lyttandree',\r\n    limited = 1,\r\n    Faction = 2,\r\n    ship_type = 72,\r\n    cost = 37,\r\n    slot = {3,3,14,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/6f/37/6f375dcd-61b2-407d-bb3f-0c01cf9491ae/swz67_lyttan-dree.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Lyttan%20Dree.png',\r\n    actSet = {'F','C','TL','BR','R','Rot'},\r\n}\r\n\r\nmasterPilotDB[695]={\r\n    name = 'Onyx Squadron Sentry',\r\n  XWS = 'onyxsquadronsentry',\r\n    Faction = 2,\r\n    ship_type = 72,\r\n    cost = 36,\r\n    slot = {1,3,3,14,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/3d/7c/3d7ca1c1-9e57-4085-a9a6-e82a3d92c6df/swz67_onyx-sentry.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Onyx%20Squadron%20Sentry.png',\r\n    actSet = {'F','C','TL','BR','R','Rot'},\r\n}\r\n\r\nmasterPilotDB[696]={\r\n    name = 'Carida Academy Cadet',\r\n  XWS = 'caridaacademycadet',\r\n    Faction = 2,\r\n    ship_type = 72,\r\n    cost = 34,\r\n    slot = {3,3,14,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/43/2d/432db246-0a8d-42de-9711-a893c825b9b3/swz67_carida-cadet.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Cardia%20Academy%20Pilot.png',\r\n    actSet = {'F','C','TL','BR','R','Rot'},\r\n}\r\n\r\nmasterPilotDB[781]={\r\n    name = 'Anakin Skywalker',\r\n  XWS = 'anakinskywalker-eta2actis',\r\n    limited = 1,\r\n    Faction = 6,\r\n    Force = 3,\r\n    ship_type = 76,\r\n    cost = 56,\r\n    slot = {1, 17, 3, 10, 14},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/ef/ca/efcac3d6-868a-4e99-a872-3f2265e4983e/swz79_anakin-skywalker.png',\r\n    init = 6,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/AnakinSkywalker.jpg',\r\n    actSet = {'F','E','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[782]={\r\n    name = 'Obi-Wan Kenobi',\r\n    XWS = 'obiwankenobi-eta2actis',\r\n    limited = 1,\r\n    Faction = 6,\r\n    Force = 3,\r\n    ship_type = 76,\r\n    cost = 49,\r\n    slot = {1, 17, 3, 10, 14},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/2d/36/2d3610e5-ebc0-4448-8fb3-4b6dcc5f391a/swz79_obi-wan_kenobi.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ObiWanKenobi.jpg',\r\n    actSet = {'F','E','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[783]={\r\n    name = 'Aayla Secura',\r\n  XWS = 'aaylasecura',\r\n    limited = 1,\r\n    Faction = 6,\r\n    Force = 2,\r\n    ship_type = 76,\r\n    cost = 51,\r\n    slot = {1, 17, 3, 10, 14},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c2/e2/c2e2ee1f-1bdd-4ff7-ad95-c442af9b510a/swz79_aayla-secura.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/AaylaSecura.jpg',\r\n    actSet = {'F','E','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[784]={\r\n    name = 'Shaak Ti',\r\n  XWS = 'shaakti',\r\n    limited = 1,\r\n    Faction = 6,\r\n    Force = 2,\r\n    ship_type = 76,\r\n    cost = 44,\r\n    slot = {1, 17, 3, 10, 14},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/fa/6a/fa6afe10-be85-46ee-93e6-0637b3ce34b0/swz79_shaak-ti.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ShaakTi.jpg',\r\n    actSet = {'F','E','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[785]={\r\n    name = 'Yoda',\r\n    XWS = 'yoda',\r\n    limited = 1,\r\n    Faction = 6,\r\n    Force = 3,\r\n    ship_type = 76,\r\n    cost = 48,\r\n    slot = {17, 17, 3, 10, 14},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/5b/fb/5bfbf23b-29c5-47c9-a6ba-1a2a7ddba319/swz79_yoda.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/Yoda.jpg',\r\n    actSet = {'F','E','TL','BR','B'},\r\n    Customization = {model=\"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ETA2%20Jedi%20Starfighter%20Yoda.obj\"}\r\n}\r\n\r\nmasterPilotDB[786]={\r\n    name = 'Jedi General',\r\n    XWS = 'jedigeneral',\r\n    Faction = 6,\r\n    Force = 2,\r\n    ship_type = 76,\r\n    cost = 41,\r\n    slot = {17, 3, 10, 14},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/b4/8d/b48d787d-96db-4955-9a58-5c8aa3ab9035/swz79_jedi-general.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/JediGeneral.jpg',\r\n    actSet = {'F','E','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[788]={\r\n    name = '\"Odd Ball\"',\r\n    XWS = 'oddball-nimbusclassvwing',\r\n    limited = 1,\r\n    Faction = 6,\r\n    ship_type = 71,\r\n    cost = 32,\r\n    slot = {1, 10, 14, 18},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/8e/70/8e70bbf1-d0ca-4367-9e3a-4ad0186af71f/swz80_ship_odd-ball.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Odd%20Ball.png',\r\n    actSet = {'F','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[789]={\r\n    name = '\"Contrail\"',\r\n    XWS = 'contrail',\r\n    limited = 1,\r\n    Faction = 6,\r\n    ship_type = 71,\r\n    cost = 33,\r\n    slot = {1, 10, 14, 18},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/b0/bc/b0bcccdb-fd02-4ab1-847b-66bae01e7ddc/swz80_ship_contrail.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Contrail.png',\r\n    actSet = {'F','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[790]={\r\n    name = '\"Klick\"',\r\n    XWS = 'klick',\r\n    limited = 1,\r\n    Faction = 6,\r\n    ship_type = 71,\r\n    Charge = 1,\r\n    cost = 32,\r\n    slot = {1, 10, 14, 18},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/d6/ba/d6baed95-5960-4615-9949-faf5a5c0d96f/swz80_ship_klick.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Klick.png',\r\n    actSet = {'F','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[791]={\r\n    name = 'Wilhuff Tarkin',\r\n    XWS = 'wilhufftarkin',\r\n    limited = 1,\r\n    Faction = 6,\r\n    ship_type = 71,\r\n    cost = 34,\r\n    slot = {1, 10, 14, 18},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/bf/0e/bf0e3b50-3f36-4940-953b-f0a2d9f2b9b9/swz80_ship_tarkin.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Wilhuff%20Tarkin.png',\r\n    actSet = {'F','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[792]={\r\n    name = 'Shadow Squadron Escort',\r\n    XWS = 'shadowsquadronescort',\r\n    Faction = 6,\r\n    ship_type = 71,\r\n    cost = 29,\r\n    slot = {1, 10, 14, 18},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c0/b0/c0b03f12-cff6-43af-99df-6ddf61fd471a/swz80_ship_shadow-escort.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Shadow%20Squadron%20Escorts.png',\r\n    actSet = {'F','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[793]={\r\n    name = 'Loyalist Volunteer',\r\n    XWS = 'loyalistvolunteer',\r\n    Faction = 6,\r\n    ship_type = 71,\r\n    cost = 27,\r\n    slot = {10, 14, 18},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/a1/27/a127938a-aecc-48eb-ba09-622781e84084/swz80_ship_volunteer.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Loyalist%20Volunteers.png',\r\n    actSet = {'F','TL','BR','B'},\r\n}\r\n\r\nmasterPilotDB[700]={\r\n    name = 'Nimi Chireen',\r\n  XWS = 'nimichireen',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 49,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c1/0e/c10e3900-82d8-4bba-9b2b-9ed2f8ad826b/swz68_nimi-chireen.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/Nimi%20Chereen.png',\r\n    actSet = {'F','TL','B'},\r\n}\r\n\r\nmasterPilotDB[699]={\r\n    name = \"C'ai Threnalli\",\r\n    XWS = 'caithrenalli',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 48,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/60/8a/608a4657-6612-417d-bd10-be587c2a208f/swz68_cai-threnalli.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/Cai%20Threnalli.png',\r\n    actSet = {'F','TL','B','E'},\r\n    movethrough = true\r\n}\r\n\r\n\r\nmasterPilotDB[698]={\r\n    name = \"Temmin Wexley\",\r\n    XWS = 'temminwexley-swz68',\r\n    title = \"Black Two\",\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 53,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/2c/81/2c81e32f-8c0d-4d26-a9b5-e6bfbe9dab0e/swz68_temmin-wexley.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/SnapHoHPack.png',\r\n    actSet = {'F','TL','B'},\r\n    addSqdAction = {'C'}\r\n}\r\n\r\nmasterPilotDB[697]={\r\n    name = \"Poe Dameron\",\r\n    XWS = 'poedameron-swz68',\r\n    title = \"Resistance Commander\",\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 53,\r\n    cost = 62,\r\n    slot = {21, 1,19,14,18,15,10,99},\r\n    Shield = 3,\r\n    Charge = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/76/66/76668017-6298-4471-b1cc-d388d5fc11b8/swz68_poe-dameron.png',\r\n    init = 6,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/PoeHoHPack.png',\r\n    actSet = {'F','TL','B'},\r\n}\r\n\r\nmasterPilotDB[701]={\r\n    name = \"Seftin Vanik\",\r\n    XWS = 'seftinvanik',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 54,\r\n    cost = 37,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/73/ef/73ef0cdc-deb6-451d-a76c-0b3d9ef147ec/swz68_seftin-vanik.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/Seftin%20Vanik.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}\r\n}\r\n\r\nmasterPilotDB[704]={\r\n    name = \"Merl Cobben\",\r\n    XWS = 'merlcobben',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 54,\r\n    cost = 32,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/18/3e/183ed99b-c562-4db5-9377-daf4661dfac9/swz68_merl-cobben.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/Merl%20Cobben.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}\r\n}\r\n\r\nmasterPilotDB[703]={\r\n    name = \"Suralinda Javos\",\r\n    XWS = 'suralindajavos',\r\n    limited = 1,\r\n    Faction = 4,\r\n    cost = 35,\r\n    ship_type = 54,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/e1/64/e1644adc-8d8a-4408-90a1-621e0dd4b0c6/swz68_suralinda-javos.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/Suralinda%20Javos.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR', 'Piv'}\r\n}\r\n\r\nmasterPilotDB[702]={\r\n    name = \"Wrobie Tyce\",\r\n    XWS = 'wrobietyce',\r\n    limited = 1,\r\n    Faction = 4,\r\n    ship_type = 54,\r\n    cost = 35,\r\n    slot = {21, 1,1,19,6},\r\n    Shield = 2,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/d3/66/d3669149-00da-4abf-9e08-9655e10db166/swz68_wrobie-tyce.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/Wrobie%20Tyce.png',\r\n    actSet = {'F','TL','Rot180','E','B','BR'}\r\n}\r\n\r\nmasterPilotDB[796]={\r\n    name = \"Phlac-Arphocc Prototype\",\r\n    XWS = 'phlacarphoccprototype',\r\n    limited = 2,\r\n    Faction = 7,\r\n    ship_type = 77,\r\n    cost = 41,\r\n    slot = {21,1,2,6,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/57/f7/57f74986-1cbf-4745-9792-360153f75719/swz81_phlac-prototype_cutout.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Tri-Fighter/Phlac-Arphocc%20Prototype.png',\r\n    actSet = {'C','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[794]={\r\n    name = \"DIS-T81\",\r\n    XWS = 'dist81',\r\n    limited = 1,\r\n    Faction = 7,\r\n    ship_type = 77,\r\n    cost = 40,\r\n    slot = {21,1,2,6,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/eb/3d/eb3db7f7-4707-4c09-ae41-6a74b669f4d1/swz81_dis-t81_cutout.png',\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Tri-Fighter/DIS-T81.png',\r\n    actSet = {'C','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[795]={\r\n    name = \"DIS-347\",\r\n    XWS = 'dis347',\r\n    limited = 1,\r\n    Faction = 7,\r\n    ship_type = 77,\r\n    cost = 38,\r\n    slot = {21,1,2,6,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/8f/96/8f96a822-921a-4c77-ae90-2fe15e196171/swz81_dis-347_cutout.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Tri-Fighter/DIS-347.png',\r\n    actSet = {'C','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[797]={\r\n    name = \"Fearsome Predator\",\r\n    XWS = 'fearsomepredator',\r\n    limited = 3,\r\n    Faction = 7,\r\n    ship_type = 77,\r\n    Condition =\"Fearful Prey\",\r\n    cost = 38,\r\n    slot = {21,1,2,6,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/91/bb/91bb3546-290e-4131-895e-a77d79ebbc99/swz81_fearsome-predator_cutout.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Tri-Fighter/Fearsome%20Predators.png',\r\n    actSet = {'C','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[798]={\r\n    name = \"Separatist Interceptor\",\r\n    XWS = 'separatistinterceptor',\r\n    Faction = 7,\r\n    ship_type = 77,\r\n    cost = 37,\r\n    slot = {21,1,2,6,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/e5/c8/e5c82543-69af-42ee-bb32-32b0c11d6845/swz81_separatist-interceptor_cutout.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Tri-Fighter/Separatist%20Interceptors.png',\r\n    actSet = {'C','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[799]={\r\n    name = \"Colicoid Interceptor\",\r\n    XWS = 'colicoidinterceptor',\r\n    Faction = 7,\r\n    ship_type = 77,\r\n    cost = 35,\r\n    slot = {21,2,6,14,18},\r\n    Shield = 0,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/74/88/7488fd46-8f27-4ca9-b573-db8d6f7d749e/swz81_colicoid-interceptor_cutout.png',\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Tri-Fighter/Colicoid%20Interceptors.png',\r\n    actSet = {'C','E','TL','BR','B'}\r\n}\r\n\r\nmasterPilotDB[800]={\r\n    name = 'Jango Fett',\r\n    XWS = 'jangofett',\r\n    limited = 1,\r\n    Faction = 7,\r\n    ship_type = 10,\r\n    cost = 79,\r\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/d4/f0/d4f09efe-f07f-45ad-a82f-8fdc29ec8f75/swz82_a1_jango-fett.png',\r\n    init = 6,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/CIS_Firespray/JangoFett.jpg',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[801]={\r\n    name = 'Zam Wesell',\r\n    XWS = 'zamwesell',\r\n    limited = 1,\r\n    Faction = 7,\r\n    Condition = 'Zam Wesell',\r\n    Charge = 4,\r\n    ship_type = 10,\r\n    cost = 76,\r\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/08/f3/08f343b7-9d01-4e1f-91d8-e6eca0eb4fe0/swz82_a1_zam-wessel.png',\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/CIS_Firespray/ZamWesell.jpg',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[802]={\r\n    name = 'Boba Fett',\r\n    XWS = 'bobafett-separatistalliance',\r\n    title = 'Survivor',\r\n    limited = 1,\r\n    Faction = 7,\r\n    ship_type = 10,\r\n    cost = 70,\r\n    slot = {21, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/17/5d/175d51c6-6a7a-4f59-b8c1-44417a746187/swz82_a1_boba-fett.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/CIS_Firespray/BobaFett.jpg',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\nmasterPilotDB[803]={\r\n    name = 'Separatist Racketeer',\r\n    XWS = 'separatistracketeer',\r\n    Faction = 7,\r\n    ship_type = 10,\r\n    cost = 64,\r\n    slot = {21, 3, 6, 8, 12, 13, 14, 15},\r\n    Shield = 4,\r\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/16/8c/168ca8f4-0015-44a3-9a7c-099caff70881/swz82_a1_separatist-racketeer.png',\r\n    init = 2,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/CIS_Firespray/SeparatistRacketeer.jpg',\r\n    actSet = {'F','R','TL','B'}\r\n}\r\n\r\n-- New wave\r\n-- A-Wings\r\nmasterPilotDB[804]={\r\n  name = 'Hera Syndulla',\r\n  XWS = 'herasyndulla-rz1awing',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 35,\r\n  cost = 42,\r\n  slot = {21, 1, 1, 6, 18},\r\n  Shield = 2,\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/HeraSyndulla.png',\r\n  actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[805]={\r\n  name = 'Wedge Antilles',\r\n  XWS = 'wedgeantilles-rz1awing',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 35,\r\n  cost = 35,\r\n  slot = {21, 1, 1, 6, 18},\r\n  Shield = 2,\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/WedgeAntilles.png',\r\n  actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[806]={\r\n  name = 'Derek Klivian',\r\n  XWS = 'derekklivian',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 35,\r\n  cost = 30,\r\n  slot = {21, 1, 1, 6, 18},\r\n  Shield = 2,\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/DerekKlivian.png',\r\n  actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[807]={\r\n  name = 'Shara Bey',\r\n  XWS = 'sharabey-rz1awing',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 35,\r\n  cost = 32,\r\n  slot = {21, 1, 1, 6, 18},\r\n  Shield = 2,\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/SharaBey.png',\r\n  actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[808]={\r\n  name = 'Ahsoka Tano',\r\n  XWS = 'ahsokatano-rz1awing',\r\n  Faction = 1,\r\n  limited = 1,\r\n  Force = 3,\r\n  ship_type = 35,\r\n  cost = 49,\r\n  slot = {21, 17, 17, 6, 18},\r\n  Shield = 2,\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/AhsokaTano.png',\r\n  actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[809]={\r\n  name = 'Sabine Wren',\r\n  XWS = 'sabinewren-rz1awing',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 35,\r\n  cost = 37,\r\n  slot = {21, 1, 1, 6, 18},\r\n  Shield = 2,\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/SabineWren.png',\r\n  actSet = {'F','TL','E','BR','B'}\r\n}\r\n\r\n-- B-Wings\r\nmasterPilotDB[810]={\r\n  name = 'Hera Syndulla',\r\n  XWS = 'herasyndulla-asf01bwing',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 17,\r\n  cost = 55,\r\n  slot = {21, 1, 2, 3, 3, 5, 14, 15, 18},\r\n  Shield = 4,\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/HeraSyndulla.png',\r\n  actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[811]={\r\n  name = 'Netrem Pollard',\r\n  XWS = 'netrempollard',\r\n  Faction = 1,\r\n  limited = 1,\r\n  ship_type = 17,\r\n  cost = 46,\r\n  slot = {21, 1, 2, 3, 3, 5, 14, 15, 18},\r\n  Shield = 4,\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/NetremPollard.png',\r\n  actSet = {'F','TL','BR', 'Piv'}\r\n}\r\n\r\n-- Tie Defenders\r\nmasterPilotDB[815]={\r\n  name = 'Darth Vader',\r\n  XWS = 'darthvader-tieddefender',\r\n  Faction = 2,\r\n  ship_type = 18,\r\n  cost = 115,\r\n  slot = {21, 17, 3, 6, 18},\r\n  Force = 3,\r\n  Shield = 4,\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/DarthVader.png',\r\n  actSet = {'F','E','BR','TL','B'}\r\n}\r\n\r\nmasterPilotDB[816]={\r\n  name = 'Vult Skerris',\r\n  XWS = 'vultskerris',\r\n  Faction = 2,\r\n  ship_type = 18,\r\n  cost = 82,\r\n  Charge = 1,\r\n  slot = {21, 1, 2, 3, 6, 18},\r\n  Shield = 4,\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/VultSkerris.png',\r\n  actSet = {'F','E','BR','TL','B'}\r\n}\r\n\r\nmasterPilotDB[817]={\r\n  name = 'Captain Dobbs',\r\n  XWS = 'captaindobbs',\r\n  Faction = 2,\r\n  ship_type = 18,\r\n  cost = 75,\r\n  slot = {21, 1, 2, 3, 6, 18},\r\n  Shield = 4,\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/CaptainDobbs.png',\r\n  actSet = {'F','E','BR','TL','B'}\r\n}\r\n\r\n-- Y-Wing\r\n\r\nmasterPilotDB[820]={\r\n    name = 'Arliz Hadrassian',\r\n    XWS = 'arlizhadrassian',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 12,\r\n    cost = 39,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 19},\r\n    Shield = 2,\r\n    init = 4,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/ArlizHadrassian.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[821]={\r\n    name = 'Leema Kai',\r\n    XWS = 'leemakai',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 12,\r\n    cost = 40,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 19},\r\n    Shield = 2,\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/LeemaKai.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[822]={\r\n    name = 'Padric',\r\n    XWS = 'padric',\r\n    Faction = 3,\r\n    ship_type = 12,\r\n    cost = 36,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 19},\r\n    Shield = 2,\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/padric.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[823]={\r\n    name = 'Amaxine Warrior',\r\n    XWS = 'amaxinewarrior',\r\n    Faction = 3,\r\n    ship_type = 12,\r\n    cost = 33,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 19},\r\n    Shield = 2,\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/amaxinewarrior.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\nmasterPilotDB[824]={\r\n    name = 'Jinata Security Officer',\r\n    XWS = 'jinatasecurityofficer',\r\n    Faction = 3,\r\n    ship_type = 12,\r\n    cost = 31,\r\n    slot = {21, 4, 5, 16, 10, 12, 19},\r\n    Shield = 2,\r\n    init = 1,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/JinataSecurityOfficer.png',\r\n    actSet = {'F','TL','BR'}\r\n}\r\n\r\n-- Hwk\r\nmasterPilotDB[825]={\r\n    name = 'Kanan Jarrus',\r\n    XWS = 'kananjarrus-hwk290lightfreighter',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 34,\r\n    cost = 42,\r\n    slot = {21, 17, 8, 12, 13, 14, 14, 15},\r\n    Shield = 2,\r\n    Force = 1,\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_hwk/KananJarrus.png',\r\n    actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[826]={\r\n    name = 'Gamut Key',\r\n    XWS = 'gamutkey',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 34,\r\n    cost = 34,\r\n    slot = {21, 1, 8, 12, 13, 14, 14, 15},\r\n    Shield = 2,\r\n    Charge = 2,\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_hwk/GamutKey.png',\r\n    actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\nmasterPilotDB[827]={\r\n    name = 'Tápusk',\r\n    XWS = 'tapusk',\r\n    Faction = 3,\r\n    limited = 1,\r\n    ship_type = 34,\r\n    cost = 36,\r\n    slot = {21, 1, 8, 12, 13, 14, 14, 15},\r\n    Shield = 2,\r\n    Charge = 2,\r\n    init = 5,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_hwk/Tapusk.png',\r\n    actSet = {'F','TL','B','Rot'}\r\n}\r\n\r\n-- Tie interceptor\r\n\r\nmasterPilotDB[830]={\r\n  name = 'Ciena Ree',\r\n  XWS = 'cienaree',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 41,\r\n  cost = 48,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  init = 6,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/CienaRee.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[831]={\r\n  name = 'Vult Skerris',\r\n  XWS = 'vultskerris-tieininterceptor',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 41,\r\n  cost = 46,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  Charge = 1,\r\n  init = 5,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/CommandantGoran.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[832]={\r\n  name = 'Commandant Goran',\r\n  XWS = 'commandantgoran',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 41,\r\n  cost = 43,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/CommandantGoran.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[833]={\r\n  name = 'Gideon Hask',\r\n  XWS = 'gideonhask-tieininterceptor',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 41,\r\n  cost = 48,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  init = 4,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/GideonHask.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[834]={\r\n  name = 'Nash Windrider',\r\n  XWS = 'nashwindrider',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 41,\r\n  cost = 40,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  Charge = 1,\r\n  init = 2,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/NashWindrider.png',\r\n  actSet = {'F','E','BR','B'}\r\n}\r\n\r\nmasterPilotDB[835]={\r\n  name = 'Lieutenant Lorrir',\r\n  XWS = 'lieutenantlorrir',\r\n  Faction = 2,\r\n  limited = 1,\r\n  ship_type = 41,\r\n  cost = 41,\r\n  slot = {21, 1, 14, 14, 18},\r\n  Shield = 0,\r\n  init = 3,\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/LieutenantLorrir.png',\r\n  actSet = {'F','E','VR','B'}\r\n}\r\n\r\n\r\n\r\n\r\n-- Huge ships\r\nmasterPilotDB[1000]={\r\n  name = 'Alderaanian Guard',\r\n  XWS = 'alderaanianguard',\r\n  Faction = 1,\r\n  ship_type = 90,\r\n  cost = 146,\r\n  slot = {21, 24, 24, 8, 8, 16, 23, 23, 22, 15},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/2/2c/Swz55_alderaanian-guard_card.png',\r\n  init = 0,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/ships/Huge/CR90%20Corvette/CR90%20Corvet%20TTS.png'\r\n}\r\n\r\nmasterPilotDB[1001]={\r\n  name = 'Republic Judiciary',\r\n  XWS = 'republicjudiciary',\r\n  Faction = 6,\r\n  ship_type = 90,\r\n  cost = 146,\r\n  slot = {21, 24, 24, 8, 8, 16, 23, 23, 22},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/1/19/Swz55_republic-judiciary_card.png',\r\n  init = 0,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/ships/Huge/CR90%20Corvette/Republic%20Judiciary%20TTS.png'\r\n}\r\n\r\nmasterPilotDB[1002]={\r\n  name = 'Separatist Privateers',\r\n  XWS = 'separatistprivateers',\r\n  Faction = 7,\r\n  ship_type = 91,\r\n  cost = 58,\r\n  slot = {21, 24, 8, 8, 20, 23, 22, 12, 18},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/d/df/Separatist_privateers.png',\r\n  init = 1,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/CR0C/Separatist%20Privateers.png'\r\n}\r\n\r\nmasterPilotDB[1003]={\r\n  name = 'Syndicate Smugglers',\r\n  XWS = 'syndicatesmugglers',\r\n  Faction = 3,\r\n  ship_type = 91,\r\n  cost = 58,\r\n  slot = {21, 24, 8, 8, 23, 22, 12, 13, 15, 18},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/2/2d/Swz55_syndicate-smugglers_card.png',\r\n  init = 1,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/CR0C/Syndicate%20Smugglers.png'\r\n}\r\n\r\nmasterPilotDB[1004]={\r\n  name = 'First Order Sympathizers',\r\n  XWS = 'firstordersympathizers',\r\n  Docking = true,\r\n  Faction = 5,\r\n  ship_type = 92,\r\n  cost = 60,\r\n  slot = {21, 24, 8, 8, 16, 23, 22, 22},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/6/6f/First_Order_Sympathizers.png',\r\n  init = 1,['actSet']={'F','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/Gozanti-Class%20Cruiser/FO%20Sympthizers.png'\r\n}\r\n\r\nmasterPilotDB[1005]={\r\n  name = 'Outer Rim Garrison',\r\n  XWS = 'outerrimgarrison',\r\n  Docking = true,\r\n  Faction = 2,\r\n  ship_type = 92,\r\n  cost = 60,\r\n  slot = {21, 24, 8, 8, 16, 23, 22, 22, 15},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/e/ec/Outer_Rim_Garrison.png',\r\n  init = 1,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/Gozanti-Class%20Cruiser/Gozanti-Class%20Cruiser.png'\r\n}\r\n\r\nmasterPilotDB[1006]={\r\n  name = 'Echo Base Evacuees',\r\n  XWS = 'echobaseevacuees',\r\n  Faction = 1,\r\n  ship_type = 93,\r\n  cost = 55,\r\n  slot = {21, 24, 4, 8, 8, 23, 22, 22, 15},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/3/39/Swz53_echo-base-evacuees.png',\r\n  init = 1,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/GR-75%20Transport/Echo%20Base%20Evacuees%20TTS.png'\r\n}\r\n\r\nmasterPilotDB[1007]={\r\n  name = 'New Republic Volunteers',\r\n  XWS = 'newrepublicvolunteers',\r\n  Faction = 4,\r\n  ship_type = 93,\r\n  cost = 55,\r\n  slot = {21, 24, 4, 8, 8, 23, 22, 22},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/d/d8/New_Republic_Volunteers.png',\r\n  init = 1,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/GR-75%20Transport/New%20Republic%20Volunteers%20TTS.png'\r\n}\r\n\r\nmasterPilotDB[1008]={\r\n  name = 'First Order Collaborators',\r\n  XWS = 'firstordercollaborators',\r\n  Faction = 5,\r\n  ship_type = 94,\r\n  cost = 146,\r\n  slot = {21, 5, 6, 24, 24, 8, 23, 23, 22},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/0/09/First_Order_Collaborators.png',\r\n  init = 1,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/Raider%20Class%20Corvette/FO%20Collaborators%20TTS.png'\r\n}\r\n\r\nmasterPilotDB[1009]={\r\n  name = 'Outer Rim Patrol',\r\n  XWS = 'outerrimpatrol',\r\n  Faction = 2,\r\n  ship_type = 94,\r\n  cost = 146,\r\n  slot = {21, 5, 6, 24, 24, 8, 23, 23, 22, 15},\r\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/b/bf/Outer_Rim_Patrol.png',\r\n  init = 1,\r\n  actSet = {'F','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/Raider%20Class%20Corvette/IMP%20Raider.png'\r\n}\r\n\r\nmasterPilotDB[1010]={\r\n  name = 'Lawless Pirates',\r\n  XWS = 'lawlesspirates',\r\n  Faction = 3,\r\n  ship_type = 95,\r\n  cost = 90,\r\n  slot = {21, 5, 24, 24, 8, 8, 16, 23, 22, 15},\r\n  init = 8,\r\n  actSet = {'F','E','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/Raider%20Class%20Corvette/IMP%20Raider.png'\r\n}\r\n\r\nmasterPilotDB[1011]={\r\n  name = 'Colicoid Destroyer',\r\n  XWS = 'colicoiddestroyer',\r\n  Faction = 7,\r\n  ship_type = 95,\r\n  cost = 90,\r\n  slot = {21, 5, 24, 24, 8, 8, 16, 23, 22, 15},\r\n  init = 8,\r\n  actSet = {'F','E','TL','R'},\r\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/Raider%20Class%20Corvette/IMP%20Raider.png'\r\n}\r\n\r\n\r\nmasterPilotDB[2000]={\r\n    name = 'Glod Squadron Veteran',\r\n    XWS = 'goldsquadronveteran',\r\n    Faction = 1,\r\n    ship_type = 12,\r\n    cost = 32,\r\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\r\n    Shield = 2,\r\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_17.png',\r\n    init = 3,\r\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/goldsquadronveteran.png',\r\n    actSet = {'F','TL', 'BR'},\r\n    Customization = {model=\"{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/btla4_ywing/glod_sqd_pilot.obj\"}\r\n}\r\n\r\nreturn masterPilotDB\r\n\nend)\n__bundle_register(\"TTS_xwing/src/ShipDb\", function(require, _LOADED, __bundle_register, __bundle_modules)\n\r\n\r\n-- Attempt on Unified Data Base, based on XWS (dropped after w1, too much hassle) and FFG conversion table\r\nmasterShipDB={}\r\nmasterShipDB[0]={['name']='',['Hull']=0,['Shield']=0,['size']='small',['agi']=1,['Energy']=0,['XWS']='',['Fac']={[0]=true},['arcs']={fixed = { range=3, type = {'front'}}}}\r\n\r\nmasterShipDB[1]={\r\n    name = 'Modified YT-1300',\r\n    Hull = 8,\r\n    Shield = 5,\r\n    size = 'large',\r\n    agi = 1,\r\n    XWS = 'modifiedyt1300lightfreighter',\r\n    Fac = {[1]=true},\r\n    arcs = {turret = {main = {name = 'primary', type={'doubleturret'}}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/rebel_falcon/rebel_falcon.obj',\r\n    moveSet = {'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','ws4','rk4'}\r\n}\r\n\r\nmasterShipDB[3]={\r\n    name = 'StarViper',\r\n    Hull = 4,\r\n    Shield = 1,\r\n    size = 'small',\r\n    agi = 3,\r\n    XWS = 'starviperclassattackplatform',\r\n    Fac = {[3]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/S%26V_starviper/starviper.obj',\r\n    moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','wbl3','bs3','wbr3','rbr3s','ws4' }\r\n}\r\n\r\nmasterShipDB[4]={\r\n    name = 'Scurrg H6 Bomber',\r\n    Hull = 6,\r\n    Shield = 4,\r\n    size = 'medium',\r\n    agi = 1,\r\n    XWS = 'scurrgh6bomber',\r\n    Fac = {[3]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/S%26V_scurrg/scurrg.obj',\r\n    moveSet = {'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3t','rtl3','wbl3','ws3','wbr3','rtr3','rtr3t','rs4'}\r\n}\r\n\r\nmasterShipDB[5]={\r\n    name = 'YT-2400',\r\n    Hull = 6,\r\n    Shield = 4,\r\n    size = 'large',\r\n    agi = 2,\r\n    XWS = 'yt2400lightfreighter',\r\n    Fac = {[1]=true},\r\n    arcs = {turret = {main = {name = 'primary', type={'doubleturret'}}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/yt2400/yt2400.obj',\r\n    moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','wbl2','bs2','wbr2','wtr2','wtl3','wbl3','ws3','wbr3','wtr3','ws4','rk4'}\r\n}\r\n\r\nmasterShipDB[6]={\r\n    name = 'Auzituck Gunship',\r\n    Hull = 6,\r\n    Shield = 2,\r\n    size = 'small',\r\n    agi = 1,\r\n    XWS = 'auzituckgunship',\r\n    Fac = {[1]=true},\r\n    arcs = {fixed = { range=3, type = {'fullfront'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_auzituk/auzituk.obj',\r\n    moveSet = {'bbl1', 'bs1', 'bbr1','wtl2','wbl2','bs2','wbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rs0'}\r\n}\r\n\r\nmasterShipDB[7]={\r\n    name = 'Khiraxz Fighter',\r\n    Hull = 5,\r\n    Shield = 1,\r\n    size = 'small',\r\n    agi = 2,\r\n    XWS = 'kihraxzfighter',\r\n    Fac = {[3]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/S%26V_khiraxz/khiraxz.obj',\r\n    moveSet = {'wtl1','bbl1','bbr1','wtr1','rtl2t','wtl2','bbl2','bs2','bbr2','wtr2','rtr2t','wbl3','bs3','wbr3','ws4','rk4'}\r\n}\r\n\r\nmasterShipDB[8]={\r\n    name = 'Sheathipede Shuttle',\r\n    Hull = 3,\r\n    Shield = 1,\r\n    size = 'small',\r\n    agi = 2,\r\n    XWS = 'sheathipedeclassshuttle',\r\n    Fac = {[1]=true},\r\n    arcs = {fixed = { range=3, type = {'front','back'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_sheathipede/sheathipede.obj',\r\n    moveSet = {'rs1r','wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','bs3','wbr3','rtr3','rk3','rs4'}\r\n}\r\n\r\nmasterShipDB[9]={\r\n    name = 'Quad Jumper',\r\n    Hull = 6,\r\n    Shield = 0,\r\n    size = 'small',\r\n    agi = 2,\r\n    XWS = 'quadrijettransferspacetug',\r\n    Fac = {[3]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/S%26V_quadjumper/quadjumper.obj',\r\n    moveSet = {'rbl1r','rbr1r','wtl1','wbl1','ws1','wbr1','wtr1','rs2r','rbl2s','wtl2','bbl2','bs2','bbr2','wtr2','rbr2s','wbl3','bs3','wbr3'}\r\n}\r\n\r\nmasterShipDB[10]={\r\n    name = 'FireSpray',\r\n    Hull = 6,\r\n    Shield = 4,\r\n    size = 'medium',\r\n    agi = 2,\r\n    XWS = 'firesprayclasspatrolcraft',\r\n    Fac = {[3]=true, [7]=true},\r\n    arcs = {fixed = { range=3, type = {'frontback'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/firespray/firespray.obj',\r\n    moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3t','wbl3','bs3','wbr3','rtr3t','ws4','rk4'}\r\n}\r\n\r\nmasterShipDB[11]={\r\n    name = 'TIE/ln Fighter',\r\n    Hull = 6,\r\n    Shield = 0,\r\n    size = 'small',\r\n    agi = 3,\r\n    XWS = 'tielnfighter',\r\n    Fac = {[1]=true,[2]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/tie_ln/tie_ln.obj',\r\n    moveSet = {'wtl1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rk4','ws5'}\r\n}\r\n\r\nmasterShipDB[12]={\r\n    name = 'Y-Wing',\r\n    Hull = 6,\r\n    Shield = 2,\r\n    size = 'small',\r\n    agi = 1,\r\n    XWS = 'btla4ywing',\r\n    Fac = {[1]=true,[3]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/btla4_ywing/btla4_ywing.obj',\r\n    moveSet = {'bbl1', 'bs1', 'bbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs4','rk4'}\r\n}\r\n\r\nmasterShipDB[13]={\r\n    name = 'TIE Advanced x1',\r\n    Hull = 3,\r\n    Shield = 2,\r\n    size = 'small',\r\n    agi = 3,\r\n    XWS = 'tieadvancedx1',\r\n    Fac = {[2]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieadvx1/tieadvx1.obj',\r\n    moveSet = {'bbl1','ws1','bbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3t','wtl3','wbl3','bs3','wbr3','wtr3','rtr3t','ws4','rk4','ws5'}\r\n}\r\n\r\nmasterShipDB[14]={\r\n    name = 'Alpha Class StarWing',\r\n    Hull = 4,\r\n    Shield = 3,\r\n    size = 'small',\r\n    agi = 2,\r\n    XWS ='alphaclassstarwing',\r\n    Fac = {[2]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_starwing/starwing.obj',\r\n    moveSet = {'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','ws3','wbr3','wtr3','rs4'}\r\n}\r\nmasterShipDB[15]={\r\n    name = 'U-Wing',\r\n    Hull = 5,\r\n    Shield = 3,\r\n    size = 'medium',\r\n    agi = 2,\r\n    XWS = 'ut60duwing',\r\n    Fac = {[1]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    moveSet = {'bbl1', 'bs1', 'bbr1', 'wtl2', 'bbl2', 'bs2', 'bbr2', 'wtr2','wbl3','ws3','wbr3','ws4','rs0'},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/UWing_Base.obj',\r\n    Config = {\r\n      States = {\r\n        [1] = {\r\n            Name = \"Pivot Wing (Open)\",\r\n            Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/UWing_Open.obj\",\r\n            ZRot = 0,\r\n            Message = \" opened their wings.\",\r\n        },\r\n        [2] = {\r\n            Name = \"Pivot Wing (Closed)\",\r\n            Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/UWing_Close.obj\",\r\n            ZRot = 180,\r\n            Message = \" closed their wings.\",\r\n        }\r\n      },\r\n      ContextText = \"Open/Close pivot wings\",\r\n      Token = \"http://nnxwing.com/Content/TTS/Config/UWing.png\"\r\n    }\r\n}\r\n\r\nmasterShipDB[16]={\r\n  name = 'TIE/sk Striker',\r\n  Hull = 4,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 'tieskstriker',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','rk1','rbl2s','wtl2','bbl2','bs2','bbr2','wtr2','rbr2s','wbl3','bs3','wbr3'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiestriker/tiestriker.obj',\r\n}\r\n\r\nmasterShipDB[17]={\r\n  name = 'B-Wing',\r\n  Hull = 4,\r\n  Shield = 4,\r\n  size = 'small',\r\n  agi = 1,\r\n  XWS = 'asf01bwing',\r\n  Fac = {[1]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'rtl1t','rtl1','bbl1','bs1','bbr1','rtr1','rtr1t','wtl2','wbl2','bs2','wbr2','wtr2','rk2','rbl3','bs3','rbr3','rs4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/bwing-base.obj',\r\n  Config = {\r\n    States = {\r\n      [1] = {\r\n          Name = \"S-Foils (Open)\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/bwing-open.obj\",\r\n          ZRot = 0,\r\n          Message = \" opened their S-Foils.\",\r\n      },\r\n      [2] = {\r\n          Name = \"S-Foils (Closed)\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_bwing/bwing-closed.obj\",\r\n          ZRot = 180,\r\n          Message = \" closed their S-Foils.\",\r\n      }\r\n    },\r\n    ContextText = \"Open/Close S-Foils\",\r\n    Token = \"http://nnxwing.com/Content/TTS/Config/BWing.png\"\r\n  }\r\n}\r\n\r\nmasterShipDB[18]={\r\n  name = 'TIE/de Defender',\r\n  Hull = 3,\r\n  Shield = 4,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = 'tieddefender',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'rtl1','bbl1','bbr1','rtr1','rtl2','wbl2','bs2','wbr2','rtr2','rk2','wtl3','wbl3','bs3','wbr3','wtr3','bs4','wk4','bs5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiedefender/defender.obj',\r\n}\r\n\r\nmasterShipDB[19]={\r\n  name = 'TIE/sa Bomber',\r\n  Hull = 6,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 'tiesabomber',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rk5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiebomber/tiebomber.obj',\r\n}\r\n\r\nmasterShipDB[20]={\r\n  name = 'TIE/ca Punisher',\r\n  Hull = 6,\r\n  Shield = 3,\r\n  size = 'medium',\r\n  agi = 1,\r\n  XWS = 'tiecapunisher',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rk4','rs0'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiepunisher/tiepunisher.obj'\r\n}\r\n\r\nmasterShipDB[21]={\r\n  name = 'Aggressor',\r\n  Hull = 5,\r\n  Shield = 3,\r\n  size = 'medium',\r\n  agi = 3,\r\n  XWS = 'aggressorassaultfighter',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','bbl3','bs3','bbr3','rbr3s','ws4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_Agressor/agressor.obj'\r\n}\r\n\r\nmasterShipDB[22]={\r\n  name = 'G-1A StarFighter',\r\n  Hull = 5,\r\n  Shield = 4,\r\n  size = 'medium',\r\n  agi = 1,\r\n  XWS = 'g1astarfighter',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rk2','rbl3','ws3','rbr3','rs4','rk4','rs0'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_G1A/g1a.obj'\r\n}\r\nmasterShipDB[23]={\r\n  name = 'VCX-100',\r\n  Hull = 10,\r\n  Shield = 4,\r\n  size = 'large',\r\n  agi = 0,\r\n  XWS = 'vcx100lightfreighter',\r\n  Fac = {[1]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  Docking = true,\r\n  moveSet = {'rtl1','wbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','ws4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/REB_VCX100/vcx100.obj'\r\n}\r\n\r\nmasterShipDB[24]={\r\n  name = 'YV-666',\r\n  Hull = 9,\r\n  Shield = 3,\r\n  size = 'large',\r\n  agi = 1,\r\n  XWS = 'yv666lightfreighter',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'fullfront'}}},\r\n  moveSet = {'bbl1','bs1','bbr1','rtl2','wbl2','bs2','wbr2','rtr2','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rs0'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_YV666/yv666.obj'\r\n}\r\n\r\nmasterShipDB[25]={\r\n  name = 'TIE Advanced v1',\r\n  Hull = 2,\r\n  Shield = 2,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = 'tieadvancedv1',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'btl1','bbl1','bbr1','btr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl2t','rtr2t','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4','ws5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieadvv1/tieadvv1.obj'\r\n}\r\n\r\nmasterShipDB[26]={\r\n  name = 'Lambda Class Shuttle',\r\n  Hull = 6,\r\n  Shield = 4,\r\n  size = 'large',\r\n  agi = 1,\r\n  XWS = 'lambdaclasst4ashuttle',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'frontback'}}},\r\n  moveSet = {'bbl1','bs1','bbr1','rtl2','wbl2','bs2','wbr2','rtr2','rbl3','ws3','rbr3','rs0'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Lambda/lambda.obj'\r\n}\r\n\r\nmasterShipDB[27]={\r\n  name = 'TIE/ph Phantom',\r\n  Hull = 3,\r\n  Shield = 2,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 'tiephphantom',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','wbl1','wbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tiephantom/tiephantom.obj'\r\n}\r\n\r\nmasterShipDB[28]={\r\n  name = 'VT-49 Decimator',\r\n  Hull = 12,\r\n  Shield = 4,\r\n  size = 'large',\r\n  agi = 0,\r\n  XWS = 'vt49decimator',\r\n  Fac = {[2]=true},\r\n  arcs = {turret = {main = {name = 'primary', type={'doubleturret'}}}},\r\n  moveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','wtl3','wbl3','ws3','wbr3','wtr3','ws4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/EMP_Decimator/decimator.obj'\r\n}\r\n\r\nmasterShipDB[29]={\r\n  name = 'TIE/ag Aggressor',\r\n  Hull = 4,\r\n  Shield = 1,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 'tieagaggressor',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieaggressor/tieaggressor.obj'\r\n}\r\n\r\nmasterShipDB[30]={\r\n  name = 'K-Wing',\r\n  Hull = 6,\r\n  Shield = 3,\r\n  size = 'medium',\r\n  agi = 1,\r\n  XWS = 'btls8kwing',\r\n  Fac = {[1]=true},\r\n  arcs = {turret = {main = {name = 'primary', type={'doubleturret'}}}},\r\n  moveSet = {'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','wbl3','ws3','wbr3'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/REB_kwing/kwing.obj'\r\n}\r\n\r\nmasterShipDB[31]={\r\n  name = 'ARC-170',\r\n  Hull = 6,\r\n  Shield = 3,\r\n  size = 'medium',\r\n  agi = 1,\r\n  XWS = 'arc170starfighter',\r\n  Fac = {[1]=true,[6]=true},\r\n  arcs = {fixed = { range=3, type = {'frontback'}}},\r\n  moveSet = {'bbl1','bs1','bbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/arc170.obj'\r\n}\r\n\r\nmasterShipDB[32]={\r\n  name = 'Attack Shuttle',\r\n  Hull = 3,\r\n  Shield = 1,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 'attackshuttle',\r\n  Fac = {[1]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','ws4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_attackshuttle/attackshuttle.obj'\r\n}\r\n\r\nmasterShipDB[33]={\r\n  name = 'X-Wing',\r\n  Hull = 4,\r\n  Shield = 2,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 't65xwing',\r\n  Fac = {[1]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'bbl1', 'bs1', 'bbr1', 'wtl2', 'bbl2', 'bs2', 'bbr2', 'wtr2', 'wtl3', 'wbl3', 'ws3', 'wbr3', 'wtr3', 'ws4', 'rtl3t', 'rtr3t', 'rk4' },\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/xwing_base.obj',\r\n  Config = {\r\n    States = {\r\n      [1] = {\r\n          Name = \"S-Foils (Open)\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/xwing_open.obj\",\r\n          ZRot = 0,\r\n          Message = \" opened their wings.\",\r\n      },\r\n      [2] = {\r\n          Name = \"S-Foils (Closed)\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_xwing/xwing_closed.obj\",\r\n          ZRot = 180,\r\n          Message = \" closed their wings.\",\r\n      }\r\n    },\r\n    ContextText = \"Open/Close S-Foils\",\r\n    Token = \"http://nnxwing.com/Content/TTS/Config/T65.png\"\r\n  }\r\n}\r\n\r\nmasterShipDB[34]={\r\n  name = 'HWK-290',\r\n  Hull = 3,\r\n  Shield = 2,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 'hwk290lightfreighter',\r\n  Fac = {[1]=true,[3]=true},\r\n  arcs = {turret = {main = {name = 'primary', type={'singleturret'}}}},\r\n  moveSet = {'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','bs3','wbr3','rtr3','ws4','rs0'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/hwk.obj'\r\n}\r\n\r\nmasterShipDB[35]={\r\n  name = 'A-Wing',\r\n  Hull = 2,\r\n  Shield = 2,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = 'rz1awing',\r\n  Fac = {[1]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','bs4','bs5','rk5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_awing/awing.obj'\r\n}\r\n\r\nmasterShipDB[36]={\r\n  name = 'Fang Fighter',\r\n  Hull = 4,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = 'fangfighter',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','wtr1','rtl2t','btl2','bbl2','bs2','bbr2','btr2','rtr2t','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4','ws5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_fangfighter/fangfighter.obj'\r\n}\r\n\r\nmasterShipDB[38]={\r\n  name = 'Z-95 Headhunter',\r\n  Hull = 2,\r\n  Shield = 2,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 'z95af4headhunter',\r\n  Fac = {[1]=true,[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/z95.obj'\r\n}\r\n\r\nmasterShipDB[39]={\r\n  name = 'M12-L Kimogila',\r\n  Hull = 7,\r\n  Shield = 2,\r\n  size = 'medium',\r\n  agi = 2,\r\n  XWS = 'm12lkimogilafighter',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'rtl1','wbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/SCU_kimogila/kimogila.obj'\r\n}\r\n\r\nmasterShipDB[40]={\r\n  name = 'E-Wing',\r\n  Hull = 3,\r\n  Shield = 3,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = 'ewing',\r\n  Fac = {[1]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','bs4','rk4','ws5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/REB_ewing/ewing.obj'\r\n}\r\nmasterShipDB[41]={\r\n  name = 'TIE/in Interceptor',\r\n  Hull = 3,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = 'tieininterceptor',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','bs4','rk4','ws5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieinterceptor/tieinterceptor.obj'\r\n}\r\n\r\nmasterShipDB[42]={\r\n  name = 'Lancer Pursuit Craft',\r\n  Hull = 8,\r\n  Shield = 2,\r\n  size = 'large',\r\n  agi = 2,\r\n  XWS = 'lancerclasspursuitcraft',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}, turret = {main = {name = 'primary', type={'singleturret'}}}},\r\n  moveSet = {'wbl1','ws1','wbr1','wtl2','wbl2','bs2','wbr2','wtr2','btl3','bbl3','bs3','bbr3','btr3','bs4','ws5','rk5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_lancer/lancer.obj',\r\n}\r\nmasterShipDB[43]={\r\n  name = 'TIE/re Reaper',\r\n  Hull = 6,\r\n  Shield = 2,\r\n  size = 'medium',\r\n  agi = 1,\r\n  XWS = 'tiereaper',\r\n  Fac = {[2]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'rbl1s','rtl1','bbl1','bs1','bbr1','rtr1','rbr1s','rtl2','wbl2','bs2','wbr2','rtr2','wbl3','bs3','wbr3','rs0'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/EMP_tiereaper/tiereaper.obj'\r\n}\r\n\r\nmasterShipDB[44]={\r\n  name = 'M3-A Interceptor',\r\n  Hull = 3,\r\n  Shield = 1,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = 'm3ainterceptor',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','bbl1','bbr1','wtr1','wtl2','wbl2','bs2','wbr2','wtr2','wbl3','bs3','wbr3','rk3','ws4','ws5','rk5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_m3a/m3a.obj'\r\n}\r\n\r\nmasterShipDB[45]={\r\n  name = 'JumpMaster 5000',\r\n  Hull = 6,\r\n  Shield = 3,\r\n  size = 'large',\r\n  agi = 1,\r\n  XWS = 'jumpmaster5000',\r\n  Fac = {[3]=true},\r\n  arcs = {turret = {main = {name = 'primary', type={'singleturret'}}}},\r\n  moveSet = {'wtl1','bbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','wbr2','rtr2','rbl3s','bbl3','bs3','wbr3','ws4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_jumpmaster/jumpmaster.obj'\r\n}\r\n\r\nmasterShipDB[47]={\r\n  name = 'Customized YT-1300',\r\n  Hull = 8,\r\n  Shield = 3,\r\n  size = 'large',\r\n  agi = 1,\r\n  XWS = 'customizedyt1300lightfreighter',\r\n  Fac = {[3]=true},\r\n  arcs = {turret = {main = {name = 'primary', type={'doubleturret'}}}},\r\n  Docking = true,\r\n  moveSet = {'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rbl3s','rbr3s','ws4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/yt1300.obj'\r\n}\r\n\r\nmasterShipDB[85]={\r\n  name = 'Escape Craft',\r\n  Hull = 2,\r\n  Shield = 2,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = 'escapecraft',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'bbl1','bs1','bbr1','rtl2','wbl2','bs2','wbr2','rtr2','wbl3','ws3','wbr3','rk3','rs0'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/SCU_yt1300/escapecraft.obj'\r\n}\r\n\r\nmasterShipDB[49]={\r\n\tname = 'TIE/fo FO',\r\n\tHull = 3,\r\n\tShield = 1,\r\n\tsize = 'small',\r\n\tagi = 3,\r\n\tXWS = 'tiefofighter',\r\n\tFac = {[5]=true},\r\n\tarcs = {fixed = { range=3, type = {'front'}}},\r\n\tmoveSet = {'wtl1','wtr1','rbl2s','btl2','bbl2','bs2','bbr2','btr2','rbr2s','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4','ws5'},\r\n\tmesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Tie_FO.obj'\r\n}\r\n\r\nmasterShipDB[50]={\r\n\tname = 'TIE/sf SF',\r\n\tHull = 3,\r\n\tShield = 3,\r\n\tsize = 'small',\r\n\tagi = 2,\r\n\tXWS = 'tiesffighter',\r\n\tFac = {[5]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}, turret = {main = {name = 'primary', type= {'front', 'back'}}}},\r\n\tmoveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','ws4','ws5'},\r\n\tmesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Tie_SF.obj'\r\n}\r\nmasterShipDB[51]={\r\n\tname = 'Upsilon Class Shuttle',\r\n\tHull = 6,\r\n\tShield = 6,\r\n\tsize = 'large',\r\n\tagi = 1,\r\n\tXWS = 'upsilonclasscommandshuttle',\r\n\tFac = {[5]=true},\r\n\tarcs = {fixed = { range=3, type = {'front'}}},\r\n\tmoveSet = {'rtl1','wbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs0'},\r\n\tmesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/Upsilon_Shuttle.obj'\r\n}\r\nmasterShipDB[52]={\r\n\tname = 'TIE Silencer',\r\n\tHull = 4,\r\n\tShield = 2,\r\n\tsize = 'small',\r\n\tagi = 3,\r\n\tXWS = 'tievnsilencer',\r\n\tFac = {[5]=true},\r\n\tarcs = {fixed = { range=3, type = {'front'}}},\r\n\tmoveSet={'wtl1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rtl3t','wtl3','wbl3','bs3','wbr3','wtr3','rtr3t','bs4','rk4','bs5'},\r\n\tmesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Tie_VN.obj'\r\n}\r\n\r\nmasterShipDB[53]={\r\n    name = 'T-70 X-Wing',\r\n    Hull = 4,\r\n    Shield = 3,\r\n    size = 'small',\r\n    agi = 2,\r\n    XWS = '',\r\n    Fac = {[4]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    moveSet={'bbl1','bs1','bbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3t','wtl3','wbl3','bs3','wbr3','wtr3','rtr3t','ws4','rk4'},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/t70_base.obj',\r\n    Config = {\r\n      States = {\r\n        [1] = {\r\n            Name = \"S-Foils (Open)\",\r\n            Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/t70_open.obj\",\r\n            ZRot = 0,\r\n            Message = \" opened their wings.\",\r\n        },\r\n        [2] = {\r\n            Name = \"S-Foils (Closed)\",\r\n            Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/t70_closed.obj\",\r\n            ZRot = 180,\r\n            Message = \" closed their wings.\",\r\n        }\r\n      },\r\n      ContextText = \"Open/Close S-Foils\",\r\n      Token = \"http://nnxwing.com/Content/TTS/Config/T70.png\"\r\n    }\r\n  }\r\n\r\nmasterShipDB[54]={\r\n    name = 'A-Wing RZ-2',\r\n    Hull = 2,\r\n    Shield = 2,\r\n    size = 'small',\r\n    agi = 3,\r\n    Fac = {[4]=true},\r\n    arcs = {turret = {main = {name = 'primary', type= {'front', 'back'}}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/res_awing.obj',\r\n    moveSet = {'wtl1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rbl3s','wtl3','bbl3','bs3','bbr3','wtr3','rbr3s','bs4','bs5','rk5'}}\r\n\r\nmasterShipDB[55]={\r\n  name = 'MG-100 StarFortress',\r\n  Hull = 9,\r\n  Shield = 3,\r\n  size = 'large',\r\n  agi = 1,\r\n  XWS = '',\r\n  Fac = {[4]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}, turret = {main = {name = 'primary', type={'doubleturret'}}}},\r\n  moveSet = {'rs0','rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rbl3','ws3','rbr3'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_starfortress/starfortress.obj'\r\n}\r\n\r\nmasterShipDB[56]={\r\n  name = 'Mining Guild TIE',\r\n  Hull = 3,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = '',\r\n  Fac = {[3]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rs5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/SCU_miningguildtie/miningguildtie.obj',\r\n}\r\n\r\nmasterShipDB[57]={\r\n  name = 'Scavenged YT-1300',\r\n  Hull = 8,\r\n  Shield = 3,\r\n  size = 'large',\r\n  agi = 1,\r\n  XWS = '',\r\n  Fac = {[4]=true},\r\n  arcs = {turret = {main = {name = 'primary', type={'doubleturret'}}}},\r\n  moveSet = {'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','ws3','wbr3','wtr3','rbl3s','rbr3s','rs4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/RES_scavengedyt1300/scavengedyt1300.obj',\r\n}\r\n\r\n--w3ship\r\nmasterShipDB[61]={\r\n\tname = 'Delta-7',\r\n\tHull = 3,\r\n\tShield = 1,\r\n\tsize = 'small',\r\n\tagi = 3,\r\n\tXWS = '',\r\n\tFac = {[6]=true},\r\n\tarcs = {fixed = { range=3, type = {'front'}}},\r\n\tmoveSet={'wtl1','bbl1','bbr1','wtr1','rbl2s','wtl2','bbl2','bs2','bbr2','wtr2','rbr2s','wbl3','bs3','wbr3','ws4','rk4','ws5','rk5'},\r\n\tmesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/Jedi_Delta7.obj',\r\n  Config = {\r\n    States = {\r\n      [1] = {\r\n          Name = \"Normal\",\r\n          Model = nil,\r\n          ZRot = 0,\r\n          Message = \" removed hyperspace ring,\",\r\n      },\r\n      [2] = {\r\n          Name = \"Hyperspace ring mounted\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Hyperspace_Ring/hyperspace_ring_attachment.obj\",\r\n          ZRot = 180,\r\n          Message = \" mounted an hyperspace ring.\",\r\n      }\r\n    },\r\n    ContextText = \"Mount/unmount hyperspace ring\",\r\n  }\r\n}\r\n\r\nmasterShipDB[62]={\r\n\tname = 'V-19',\r\n\tHull = 5,\r\n\tShield = 0,\r\n\tsize = 'small',\r\n\tagi = 2,\r\n\tXWS = '',\r\n\tFac = {[6]=true},\r\n\tarcs = {fixed = { range=3, type = {'front'}}},\r\n\tmoveSet ={'rtl1','bbl1','bs1','bbr1','rtr1','rtl2t','wtl2','wbl2','bs2','wbr2','wtr2','rtr2t','rbl3','bs3','rbr3','rk3','ws4'},\r\n\tmesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/V-19_Torrent.obj'\r\n}\r\n\r\n\r\nmasterShipDB[59]={\r\n  name = 'Vulture-Class Droid',\r\n  Hull = 3,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = '',\r\n  Fac = {[7]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','wtr1','rk1','rtl2t','btl2','wbl2','bs2','wbr2','btr2','rtr2t','wtl3','rbl3','bs3','rbr3','wtr3','bs4','ws5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/Vulture_Base.obj',\r\n  Config = {\r\n    States = {\r\n      [1] = {\r\n          Name = \"Struts (Closed)\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/Vulture_Closed.obj\",\r\n          ZRot = 0,\r\n          Message = \" closed their struts.\",\r\n      },\r\n      [2] = {\r\n          Name = \"Struts (Open)\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Vulture/Vulture_Open.obj\",\r\n          ZRot = 180,\r\n          Message = \" opened their struts.\",\r\n      }\r\n    },\r\n    ContextText = \"Open/Close Struts\",\r\n    Token = \"http://nnxwing.com/Content/TTS/Config/VultureDroid.png?1.0.1\"\r\n  }\r\n}\r\nmasterShipDB[58]={\r\n  name = 'Belbullab-22',\r\n  Hull = 4,\r\n  Shield = 2,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = '',\r\n  Fac = {[7]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','wbl1','wbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','rtl3','wbl3','bs3','wbr3','rtr3','rbr3s','ws4','ws5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Belbullab/Belbullab.obj'\r\n}\r\nmasterShipDB[60]={\r\n  name = 'Sith Infiltrator',\r\n  Hull = 6,\r\n  Shield = 4,\r\n  size = 'large',\r\n  agi = 1,\r\n  XWS = '',\r\n  Fac = {[7]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','rbl2s','wtl2','bbl2','bs2','bbr2','wtr2','rbr2s','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Large/CIS_Infiltrator/Infiltrator.obj'\r\n}\r\n\r\n--w4ship\r\nmasterShipDB[63]={\r\n    name = 'Resistance Transport',\r\n    Hull = 5,\r\n    Shield = 3,\r\n    size = 'small',\r\n    agi = 1,\r\n    Fac = {[4]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_transport/transport.obj',\r\n    moveSet = {'rbl1r','rbr1r','rs0','rbl1r','rbr1r','rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rbl3','ws3','rbr3','rs4'}\r\n}\r\n\r\nmasterShipDB[65]={\r\n    name = 'Resistance Transport Pod',\r\n    Shield = 1,\r\n    Hull = 3,\r\n    size = 'small',\r\n    agi = 2,\r\n    Fac = {[4]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_transport_pod/transport_pod.obj',\r\n    moveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rbl3','ws3','rbr3','rk3','rs4'}\r\n}\r\n\r\n\r\n\r\nmasterShipDB[64]={\r\n  name = 'Hyena-Class Droid Bomber',\r\n  Hull = 5,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = '',\r\n  Fac = {[7]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','rbl1','ws1','rbr1','wtr1','btl2','wbl2','bs2','wbr2','btr2','rk2','rtl2t','rtr2t','wtl3','bs3','wtr3','ws4','rs5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/Hyena_Base.obj',\r\n  Config = {\r\n    States = {\r\n      [1] = {\r\n          Name = \"Struts (Closed)\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/Hyena_Closed.obj\",\r\n          ZRot = 0,\r\n          Message = \" closed their struts.\",\r\n      },\r\n      [2] = {\r\n          Name = \"Struts (Open)\",\r\n          Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Hyena/Hyena_Open.obj\",\r\n          ZRot = 180,\r\n          Message = \" opened their struts.\",\r\n      }\r\n    },\r\n    ContextText = \"Open/Close Struts\",\r\n    Token = \"http://nnxwing.com/Content/TTS/Config/HyenaDroid.png?1.0.1\",\r\n\r\n  }\r\n}\r\n\r\nmasterShipDB[66]={\r\n\tname ='N-1 StarFighter',\r\n\tHull = 3,\r\n\tShield = 2,\r\n\tsize = 'small',\r\n\tagi = 2,\r\n\tXWS = '',\r\n\tFac = {[6]=true},\r\n\tarcs = {fixed = { range=3, type = {'front'}}},\r\n\tmoveSet = {'wbl1','ws1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','bbl3','bs3','bbr3','wtr3','rtl3t','rtr3t','ws4','ws5'},\r\n\tmesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_N1/Naboo_Royal_N1.obj'\r\n}\r\n\r\nmasterShipDB[67]={\r\n  name = 'Nantex-Class StarFighter',\r\n  Hull = 4,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 3,\r\n  XWS = '',\r\n  Fac = {[7]=true},\r\n  arcs = {fixed = { range=3, type = {'bull'}}, turret={main={name= 'primary', type={'left', 'front', 'right'}}}},\r\n  moveSet = {'wtl1','bbl1','bbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','bbl3','bs3','bbr3','wtr3','rbl3s','rbr3s','ws4','ws5','rk5'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Nantex/Nantex.obj'\r\n}\r\nmasterShipDB[68]={\r\n\tname = 'BTL-B Y-Wing',\r\n\tHull = 5,\r\n\tShield = 3,\r\n\tsize = 'small',\r\n\tagi = 1,\r\n\tXWS = '',\r\n\tFac = {[6]=true},\r\n\tarcs = {fixed = { range=3, type = {'front'}}},\r\n\tmoveSet = {'wbl1','bs1','wbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs4','rk4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Y-Wing/BTLB_YWING.obj'\r\n}\r\n\r\nmasterShipDB[69]={\r\n  name = 'FireBall',\r\n  Hull = 6,\r\n  Shield = 0,\r\n  size = 'small',\r\n  agi = 2,\r\n  XWS = '',\r\n  Fac = {[4]=true},\r\n  arcs = {fixed = { range=3, type = {'front'}}},\r\n  moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rtl3t','rtr3t','rs4'},\r\n  mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_fireball/fireball.obj'\r\n}\r\n\r\n\r\nmasterShipDB[70]={\r\n    name = 'TIE/ba Interceptor',\r\n    Hull = 2,\r\n    Shield = 2,\r\n    size = 'small',\r\n    agi = 3,\r\n    XWS = '',\r\n    Fac = {[5]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_Ba/TieBa.obj',\r\n    moveSet = {'btl1','bbl1','bbr1','btr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rbl2s','rbr2s','bs4','ws5','rk5'}\r\n}\r\n\r\nmasterShipDB[71]={\r\n    name = 'Nimbus-class V-wing',\r\n    Hull = 2,\r\n    Shield = 2,\r\n    size = 'small',\r\n    agi = 3,\r\n    XWS = 'nimbusclassvwing',\r\n    Fac = {[6]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Republic_V-Wing.obj',\r\n    moveSet = {'wtl1','rbl1','rbr1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rk2','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4','ws5'},\r\n    Config = {\r\n      States = {\r\n        [1] = {\r\n            Name = \"Normal\",\r\n            Model = nil,\r\n            ZRot = 0,\r\n            Message = \" removed hyperspace ring,\",\r\n        },\r\n        [2] = {\r\n            Name = \"Hyperspace ring mounted\",\r\n            Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Hyperspace_Ring/hyperspace_ring_attachment.obj\",\r\n            ZRot = 180,\r\n            Message = \" mounted an hyperspace ring.\",\r\n        }\r\n      },\r\n      ContextText = \"Mount/unmount hyperspace ring\",\r\n    }\r\n\r\n}\r\n\r\nmasterShipDB[72]={\r\n    name = 'TIE/rb Heavy',\r\n    Hull = 8,\r\n    Shield = 0,\r\n    size = 'medium',\r\n    agi = 1,\r\n    XWS = 'tierbheavy',\r\n    Fac = {[2]=true},\r\n    arcs = {turret = {main={ name = 'primary', type= {'front', 'back'}}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Rb%20Brute.obj',\r\n    moveSet = {'rtl1','wbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3t','rtl3','wbl3','ws3','wbr3','rtr3','rtr3t','ws4'},\r\n}\r\n\r\nmasterShipDB[73]={\r\n    name = 'Xi-class Light Shuttle',\r\n    Hull = 5,\r\n    Shield = 2,\r\n    size = 'medium',\r\n    agi = 2,\r\n    XWS = '',\r\n    Fac = {[5]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/XiClassLightShuttle.obj',\r\n    moveSet = {'rs0','bbl1','bs1','bbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','ws4'}\r\n}\r\n\r\n\r\nmasterShipDB[74]={\r\n    name = 'LAAT/i Gunship',\r\n    Hull = 8,\r\n    Shield = 2,\r\n    Charge = 2,\r\n    size = 'medium',\r\n    agi = 1,\r\n    XWS = '',\r\n    Fac = {[6]=true},\r\n    arcs = {turret = {main = {name = 'primary', type={'doubleturret'}}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/GRP_LAAT.obj',\r\n    moveSet = {'rs0','wbl1','bs1','wbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs4'}\r\n}\r\n\r\nmasterShipDB[75]={\r\n    name = 'HMP Droid Gunship',\r\n    Hull = 5,\r\n    Shield = 3,\r\n    size = 'small',\r\n    agi = 1,\r\n    XWS = '',\r\n    Fac = {[7]=true},\r\n    arcs = {fixed = { range=3, type = {'fullfront'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/HMP_GunshipBase.obj',\r\n    moveSet = {'rs0','rbl1','bs1','rbr1','btl2','wbl2','bs2','wbr2','btr2','wtl3','rbl3','ws3','rbr3','wtr3','rs4','rs5'},\r\n    Config = {\r\n      States = {\r\n        [1] = {\r\n            Name = \"Stabalizers (Inactive)\",\r\n            Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/HMP_GunshipStable.obj\",\r\n            ZRot = 0,\r\n            Message = \" deactivated their stabilizers.\",\r\n        },\r\n        [2] = {\r\n            Name = \"Stabalizers (Active)\",\r\n            Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/HMP_GunshipSliping.obj\",\r\n            ZRot = 180,\r\n            Message = \" activated their stabilizers.\",\r\n        }\r\n      },\r\n      ContextText = \"Toggle Stabilizers\",\r\n      Token = \"http://nnxwing.com/Content/TTS/Config/HMPGunship.png\"\r\n    }\r\n}\r\n\r\nmasterShipDB[76]={\r\n    name = 'Eta-2 Actis',\r\n    Hull = 3,\r\n    Shield = 0,\r\n    size = 'small',\r\n    agi = 3,\r\n    XWS = 'eta2actis',\r\n    Fac = {[6]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ETA2%20Jedi%20Starfighter.obj',\r\n    moveSet = {'wtl1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','ptl2t','ptr2t','wtl3','bbl3','bs3','bbr3','wtr3','bs4','rk4','ws5'},\r\n    Config = {\r\n      States = {\r\n        [1] = {\r\n            Name = \"Normal\",\r\n            Model = nil,\r\n            ZRot = 0,\r\n            Message = \" removed hyperspace ring,\",\r\n        },\r\n        [2] = {\r\n            Name = \"Hyperspace ring mounted\",\r\n            Model = \"https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Hyperspace_Ring/hyperspace_ring_attachment.obj\",\r\n            ZRot = 180,\r\n            Message = \" mounted an hyperspace ring.\",\r\n        }\r\n      },\r\n      ContextText = \"Mount/unmount hyperspace ring\",\r\n    }\r\n}\r\n\r\nmasterShipDB[77]={\r\n    name = 'Droid Tri-Fighter',\r\n    Hull = 3,\r\n    Shield = 0,\r\n    size = 'small',\r\n    agi = 3,\r\n    XWS = 'droidtrifighter',\r\n    Fac = {[7]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_Tri-Fighter/CIS_Tri-Fighter.obj',\r\n    moveSet = {'rtl1t','wtl1','wtr1','rtr1t','btl2','wbl2','bs2','wbr2','btr2','btl3','wbl3','bs3','wbr3','btr3','rk3', 'bs4','ws5','rk5'},\r\n}\r\n\r\n\r\n-- Huge ships\r\nmasterShipDB[90]={\r\n    name = 'CR-90 Corvette',\r\n    Hull = 18,\r\n    Shield = 7,\r\n    Energy = 7,\r\n    size = 'huge',\r\n    agi = 0,\r\n    mountingPoints = { front = {0, -2.63}, rear = {0, 2.63} },\r\n    Fac = {[1]=true, [6]=true},\r\n    arcs = {fixed = { range=4, type = {'left', 'right'}}},\r\n    moveSet = {'rbl0','rs0','rbr0','wbl1','ws1','wbr1','bbl2','bs2','bbr2','rbl3','bs3','rbr3','rs4','rs5'},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/CR90%20Corvette/CR90%20Corvette.obj'\r\n  }\r\n\r\nmasterShipDB[91]={\r\n    name = 'C-ROC Cruiser',\r\n    Hull = 12,\r\n    Shield = 4,\r\n    Energy = 4,\r\n    size = 'huge',\r\n    agi = 0,\r\n    mountingPoints = { front = {0, -2.63}, rear = {0, 2.63} },\r\n    Fac = {[3]=true, [7]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    moveSet = {'rbl0','rs0','rbr0','wbl1','bs1','wbr1','wbl2','bs2','wbr2','rbl3','ws3','rbr3','rs4','rs5'},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/CR0C/CR0C%20Cruiser.obj'\r\n  }\r\n\r\nmasterShipDB[92]={\r\n    name = 'Gozanti-class Cruiser',\r\n    Hull = 11,\r\n    Shield = 5,\r\n    Energy = 3,\r\n    size = 'huge',\r\n    agi = 0,\r\n    mountingPoints = { front = {0, -2.05}, rear = {0, 2.05} },\r\n    Fac = {[2]=true, [5]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    moveSet = {'rbl0','rs0','rbr0','wbl1','bs1','wbr1','rbl2','bs2','rbr2','bs3','rs4'},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/Gozanti-Class%20Cruiser/Gozanti-Class%20Cruiser.obj'\r\n  }\r\n\r\nmasterShipDB[93]={\r\n    name = 'GR-75 Medium Transport',\r\n    Hull = 12,\r\n    Shield = 3,\r\n    Energy = 4,\r\n    size = 'huge',\r\n    agi = 0,\r\n    mountingPoints = { front = {0, -2.05}, rear = {0, 2.05} },\r\n    Fac = {[1]=true, [4]=true},\r\n    arcs = {fixed = { range=3, type = {'front'}}},\r\n    moveSet = {'rbl0','rs0','rbr0','bbl1','bs1','bbr1','wbl2','ws2','wbr2','rs3','rs4'},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/GR-75%20Transport/GR-75%20Transport.obj'\r\n  }\r\n\r\nmasterShipDB[94]={\r\n    name = 'Raider-class Corvette',\r\n    Hull = 20,\r\n    Shield = 8,\r\n    Energy = 6,\r\n    size = 'huge',\r\n    agi = 0,\r\n    mountingPoints = { front = {0, -2.63}, rear = {0, 2.63} },\r\n    Fac = {[2]=true, [5]=true},\r\n    arcs = {fixed = { range=3, type = {'fullfront'}}},\r\n    moveSet = {'rbl0','rs0','rbr0','bbl1','ws1','bbr1','wbl2','bs2','wbr2','rbl3','bs3','rbr3','ws4','rs5'},\r\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/Raider%20Class%20Corvette/Raider%20Class%20Corvette.obj'\r\n  }\r\n\r\n  masterShipDB[95]={\r\n      name = 'Trident-class Assault Ship',\r\n      Hull = 10,\r\n      Shield = 4,\r\n      Energy = 3,\r\n      size = 'huge',\r\n      agi = 0,\r\n      mountingPoints = { front = {0, -2.63}, rear = {0, 2.63} },\r\n      Fac = {[3]=true, [7]=true},\r\n      arcs = {fixed = { range=3, type = {'front'}}},\r\n      moveSet = {'rs0','rbl0','rbr0','bbl2','bs2','bbr2','wbl3','bs3','wbr3','bs4','rk4','ws5','ws1r','rs2r'},\r\n      mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Huge/dummy.obj'\r\n    }\r\n\r\n  return masterShipDB\r\n\nend)\nreturn __bundle_require(\"__root\")",
        "LuaScriptState": "[]",
        "XmlUI": ""
      },
      {
        "GUID": "8c8331",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 2.35,
          "posY": 1.03,
          "posZ": 15.59,
          "rotX": -0.00365983,
          "rotY": 180.000916,
          "rotZ": 359.804047,
          "scaleX": 0.8,
          "scaleY": 1.42,
          "scaleZ": 0.8
        },
        "Nickname": "Spare Parts",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/994639873365332984/5F8854FD2C18A1D2AD643E615583B1A4C6165CF9/",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/994639873365346052/61D1F0E3434B15713C5BF0C7AE31C03B13C7EF53/",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/994639873365332984/5F8854FD2C18A1D2AD643E615583B1A4C6165CF9/",
          "Convex": false,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CustomShader": {
            "SpecularColor": {
              "r": 0.8745098,
              "g": 0.8117647,
              "b": 0.745098054
            },
            "SpecularIntensity": 0.15,
            "SpecularSharpness": 3.0,
            "FresnelStrength": 0.1
          },
          "CastShadows": true
        },
        "LuaScript": "function onDropped()\r\n    Global.call('API_BombTokenDrop', {token=self})\r\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "2e8aab",
            "Name": "Custom_Token",
            "Transform": {
              "posX": 2.92215729,
              "posY": 1.14505148,
              "posZ": 16.12986,
              "rotX": 0.001642469,
              "rotY": 180.017212,
              "rotZ": 359.958252,
              "scaleX": 0.8062451,
              "scaleY": 1.0,
              "scaleZ": 0.8062451
            },
            "Nickname": "Rigged Cargo Chute debris",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomImage": {
              "ImageURL": "http://cloud-3.steamusercontent.com/ugc/960842745721234637/3C45C5F627D0A900B3A21752CCC086127EA179AD/",
              "ImageSecondaryURL": "",
              "ImageScalar": 1.0,
              "WidthScale": 0.0,
              "CustomToken": {
                "Thickness": 0.1,
                "MergeDistancePixels": 5.0,
                "StandUp": false,
                "Stackable": false
              }
            },
            "LuaScript": "function onDropped()\r\n    Global.call('API_BombTokenDrop', {token=self})\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "27122f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 9.549364,
                  "posY": 1.00972521,
                  "posZ": 18.7269173,
                  "rotX": -5.19725427E-06,
                  "rotY": 0.018115066,
                  "rotZ": -8.340776E-06,
                  "scaleX": 0.6174997,
                  "scaleY": 1.10499966,
                  "scaleZ": 0.6174997
                },
                "Nickname": "Spare Parts",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992160261,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "http://cloud-3.steamusercontent.com/ugc/994639873365332984/5F8854FD2C18A1D2AD643E615583B1A4C6165CF9/",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/994639873365346052/61D1F0E3434B15713C5BF0C7AE31C03B13C7EF53/",
                  "NormalURL": "",
                  "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/994639873365332984/5F8854FD2C18A1D2AD643E615583B1A4C6165CF9/",
                  "Convex": false,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "Parts = self\r\nAttach = false\r\nassignedShip = nil\r\n\r\n\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n        local state = {assignedShipGUID=assignedShip.getGUID()}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped()\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.type== 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            assignedShip = nearest\r\n            size = assignedShip.getTable('Data').Size\r\n            AttachBack(assignedShip)\r\n        end\r\n    end\r\nend\r\n\r\nfunction AttachBack()\r\n    local pos = assignedShip.getPosition()\r\n    local rot = assignedShip.getRotation()\r\n    local newPos = {}\r\n    local newRot = {}\r\n    newPos[1] = pos[1]\r\n    newPos[2] = 1.5\r\n    newPos[3] = pos[3]\r\n    newRot[1] = rot[1]\r\n    newRot[2] = rot[2]-90\r\n    newRot[3] = rot[3]\r\n    self.setPosition(newPos)\r\n    self.setRotation(newRot)\r\n    self.lock()\r\n    if size == 'small' then\r\n        pos = LocalPos(self,{1.52, -0.5, 0})\r\n    elseif size == 'medium' then\r\n        pos = LocalPos(self,{1.9, -0.5, 0})\r\n    elseif size == 'large' then\r\n        pos = LocalPos(self,{2.27, -0.5, 0})\r\n    end\r\n    self.clearButtons()\r\n    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1] = rot[1]\r\n    newRot[2] = rot[2]-90\r\n    newRot[3] = rot[3]\r\n    self.setPosition(pos)\r\n    self.setRotation(newRot)\r\nend\r\n\r\n\r\n\r\nfunction RotMatrix(axis, angDeg)\r\n    local ang = math.rad(angDeg)\r\n    local cs = math.cos\r\n    local sn = math.sin\r\n\r\n    if axis == 'x' then\r\n        return {\r\n                    { 1,        0,             0 },\r\n                    { 0,   cs(ang),   -1*sn(ang) },\r\n                    { 0,   sn(ang),      cs(ang) }\r\n               }\r\n    elseif axis == 'y' then\r\n        return {\r\n                    {    cs(ang),   0,   sn(ang) },\r\n                    {          0,   1,         0 },\r\n                    { -1*sn(ang),   0,   cs(ang) }\r\n               }\r\n    elseif axis == 'z' then\r\n        return {\r\n                    { cs(ang),   -1*sn(ang),   0 },\r\n                    { sn(ang),      cs(ang),   0 },\r\n                    { 0,                  0,   1 }\r\n               }\r\n    end\r\nend\r\n\r\n-- Apply given rotation matrix on given vector\r\n-- (multiply matrix and column vector)\r\nfunction RotateVector(rotMat, vect)\r\n    local out = {0, 0, 0}\r\n    for i=1,3,1 do\r\n        for j=1,3,1 do\r\n            out[i] = out[i] + rotMat[i][j]*vect[j]\r\n        end\r\n    end\r\n    return out\r\nend\r\n\r\n-- Sum of two vectors (of any size)\r\nfunction Vect_Sum(vec1, vec2)\r\n    local out = {}\r\n    local k = 1\r\n    while vec1[k] ~= nil and vec2[k] ~= nil do\r\n        out[k] = vec1[k] + vec2[k]\r\n        k = k+1\r\n    end\r\n    return out\r\nend\r\n\r\nfunction LocalPos(object, position)\r\n    local rot = object.getRotation()\r\n    local lPos = {position[1], position[2], position[3]}\r\n    -- Z-X-Y extrinsic\r\n    local zRot = RotMatrix('z', rot['z'])\r\n    lPos = RotateVector(zRot, lPos)\r\n    local xRot = RotMatrix('x', rot['x'])\r\n    lPos = RotateVector(xRot, lPos)\r\n    local yRot = RotMatrix('y', rot['y'])\r\n    lPos = RotateVector(yRot, lPos)\r\n\r\n    return Vect_Sum(lPos, object.getPosition())\r\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "b3ae5f",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.89,
          "posY": 1.06,
          "posZ": -0.06,
          "rotX": -3.90000139E-08,
          "rotY": 45.0070343,
          "rotZ": 3.22383539E-06,
          "scaleX": 1.0,
          "scaleY": 0.9500005,
          "scaleZ": 1.0
        },
        "Nickname": "2.0 Damage Decks",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.6480837,
          "g": 0.6480837,
          "b": 0.6480837
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786353138697578305/AD03FDE67DAD4C8ADD8586A1BBD1C09CA9F781AA/",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/919176040736312982/AB0B0C44A539567DC41A07066F82B000E625AC77/",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "4782b4",
            "Name": "Deck",
            "Transform": {
              "posX": 2.24736834,
              "posY": 1.35104394,
              "posZ": -0.04148923,
              "rotX": -7.975987E-06,
              "rotY": 314.9949,
              "rotZ": 180.0,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "SidewaysCard": false,
            "DeckIDs": [
              27304,
              27317,
              27328,
              27306,
              27305,
              27323,
              27300,
              27311,
              27322,
              27330,
              27326,
              27320,
              27309,
              27327,
              27319,
              27301,
              27321,
              27310,
              27329,
              27318,
              27302,
              27312,
              27315,
              27324,
              27307,
              27332,
              27314,
              27313,
              27331,
              27325,
              27316,
              27303,
              27308
            ],
            "CustomDeck": {
              "273": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.9438686,
                  "posY": 1.35246217,
                  "posZ": -15.0534849,
                  "rotX": 359.9734,
                  "rotY": 179.997162,
                  "rotZ": 179.976364,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27304,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.91434,
                  "posY": 1.22775316,
                  "posZ": -15.0358944,
                  "rotX": 359.9582,
                  "rotY": 179.9605,
                  "rotZ": 179.956436,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27317,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.0841236,
                  "posY": 1.1887486,
                  "posZ": -14.7821283,
                  "rotX": 359.9891,
                  "rotY": 180.01416,
                  "rotZ": 179.896774,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27328,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.3394318,
                  "posY": 1.3346808,
                  "posZ": -14.8861456,
                  "rotX": 359.946472,
                  "rotY": 180.020081,
                  "rotZ": 180.326141,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27306,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.9614067,
                  "posY": 1.34314823,
                  "posZ": -14.9299164,
                  "rotX": 0.00328693725,
                  "rotY": 180.001083,
                  "rotZ": 179.989731,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27305,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.9020119,
                  "posY": 1.17187977,
                  "posZ": -14.9643621,
                  "rotX": -0.00151585531,
                  "rotY": 179.995956,
                  "rotZ": 179.798019,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27323,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.041008,
                  "posY": 1.46709239,
                  "posZ": -14.7143946,
                  "rotX": 359.94458,
                  "rotY": 179.988571,
                  "rotZ": 187.359848,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27300,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.17766,
                  "posY": 1.28723741,
                  "posZ": -15.0604887,
                  "rotX": 359.949036,
                  "rotY": 179.97966,
                  "rotZ": 179.795181,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27311,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.3581181,
                  "posY": 1.18124413,
                  "posZ": -14.8689175,
                  "rotX": 359.976135,
                  "rotY": 179.994461,
                  "rotZ": 179.877792,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27322,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.7053413,
                  "posY": 1.38432038,
                  "posZ": -15.1872559,
                  "rotX": 1.6758846,
                  "rotY": 180.053619,
                  "rotZ": 182.415131,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27330,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.0877724,
                  "posY": 1.1982491,
                  "posZ": -14.7376652,
                  "rotX": -0.000459030125,
                  "rotY": 180.006439,
                  "rotZ": 179.8747,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27326,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.9374256,
                  "posY": 1.20072138,
                  "posZ": -14.9719687,
                  "rotX": 359.985779,
                  "rotY": 179.996231,
                  "rotZ": 180.095947,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27320,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.0808849,
                  "posY": 1.30458915,
                  "posZ": -15.2483444,
                  "rotX": 0.005381643,
                  "rotY": 179.994919,
                  "rotZ": 179.952011,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27309,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.9126759,
                  "posY": 1.1927259,
                  "posZ": -14.8184252,
                  "rotX": 359.9886,
                  "rotY": 180.1045,
                  "rotZ": 179.913681,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27327,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.3711777,
                  "posY": 1.20989215,
                  "posZ": -14.7242508,
                  "rotX": -0.00246225647,
                  "rotY": 180.008026,
                  "rotZ": 179.7812,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27319,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.0680256,
                  "posY": 1.38450289,
                  "posZ": -14.86122,
                  "rotX": 359.990479,
                  "rotY": 180.002747,
                  "rotZ": 179.921738,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27301,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.2181187,
                  "posY": 1.18458879,
                  "posZ": -14.9534225,
                  "rotX": 1.26854324,
                  "rotY": 179.962616,
                  "rotZ": 177.705322,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27321,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.0448189,
                  "posY": 1.294558,
                  "posZ": -14.896224,
                  "rotX": -0.0007581746,
                  "rotY": 179.994934,
                  "rotZ": 179.96257,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27310,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.0335884,
                  "posY": 1.19101191,
                  "posZ": -14.8647919,
                  "rotX": 359.9818,
                  "rotY": 180.0282,
                  "rotZ": 179.908844,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27329,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.1777973,
                  "posY": 1.17282784,
                  "posZ": -14.9190617,
                  "rotX": 0.00567509932,
                  "rotY": 180.120071,
                  "rotZ": 177.113358,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27318,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.078949,
                  "posY": 1.37467217,
                  "posZ": -14.69785,
                  "rotX": -0.00331702456,
                  "rotY": 180.005859,
                  "rotZ": 179.830627,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27302,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.8708477,
                  "posY": 1.27626753,
                  "posZ": -15.0637293,
                  "rotX": 359.950073,
                  "rotY": 179.992081,
                  "rotZ": 179.8795,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27312,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.1200237,
                  "posY": 1.24557686,
                  "posZ": -15.0046253,
                  "rotX": 0.846033156,
                  "rotY": 180.001816,
                  "rotZ": 178.834076,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27315,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.208046,
                  "posY": 1.154962,
                  "posZ": -15.00407,
                  "rotX": 1.3402,
                  "rotY": 179.954422,
                  "rotZ": 177.657043,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27324,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.8914776,
                  "posY": 1.324815,
                  "posZ": -15.1227493,
                  "rotX": 359.9307,
                  "rotY": 180.013474,
                  "rotZ": 180.139374,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27307,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -24.9222851,
                  "posY": 1.04363167,
                  "posZ": -14.8758707,
                  "rotX": 0.116052985,
                  "rotY": 180.084122,
                  "rotZ": 180.080948,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27332,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.3201027,
                  "posY": 1.283002,
                  "posZ": -14.8662338,
                  "rotX": 359.9886,
                  "rotY": 179.906631,
                  "rotZ": 174.226288,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27314,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.0090847,
                  "posY": 1.38730085,
                  "posZ": -15.0050545,
                  "rotX": 0.09710596,
                  "rotY": 180.142349,
                  "rotZ": 192.027786,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27313,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "9e3603",
                "Name": "Card",
                "Transform": {
                  "posX": -24.6307755,
                  "posY": 1.176079,
                  "posZ": -14.8001871,
                  "rotX": 0.0527719669,
                  "rotY": 180.215286,
                  "rotZ": 180.032867,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27331,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.31078,
                  "posY": 1.20398641,
                  "posZ": -14.9565,
                  "rotX": 359.9483,
                  "rotY": 179.982986,
                  "rotZ": 179.786346,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27325,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -39.4068,
                  "posY": 1.3832283,
                  "posZ": 15.1159315,
                  "rotX": -0.00445320876,
                  "rotY": -8.743666E-05,
                  "rotZ": 179.997208,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27316,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.2981453,
                  "posY": 1.36408007,
                  "posZ": -14.776823,
                  "rotX": 359.973846,
                  "rotY": 180.002029,
                  "rotZ": 179.75354,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27303,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "b04eb1",
                "Name": "Card",
                "Transform": {
                  "posX": -25.1156273,
                  "posY": 1.31639373,
                  "posZ": -14.88042,
                  "rotX": 359.9801,
                  "rotY": 180.004318,
                  "rotZ": 180.093658,
                  "scaleX": 0.625,
                  "scaleY": 1.0,
                  "scaleZ": 0.625
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 27308,
                "SidewaysCard": false,
                "CustomDeck": {
                  "211": {
                    "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                    "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                    "NumWidth": 10,
                    "NumHeight": 7,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            ]
          }
        ]
      },
      {
        "GUID": "2ef5bb",
        "Name": "Custom_Model",
        "Transform": {
          "posX": -0.021304369,
          "posY": -2.00001073,
          "posZ": -26.6129284,
          "rotX": -4.79231949E-06,
          "rotY": 90.00198,
          "rotZ": -2.023442E-05,
          "scaleX": 0.375,
          "scaleY": 0.375,
          "scaleZ": 0.375
        },
        "Nickname": "Relay",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786353138697578305/AD03FDE67DAD4C8ADD8586A1BBD1C09CA9F781AA/",
          "DiffuseURL": "http://i.imgur.com/UcxzKoW.png",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 5,
          "CastShadows": true
        },
        "LuaScript": "function dummy() end\r\n\r\nfunction readCallback(req)\r\n    if req.is_done and not req.is_error then\r\n        local currNum = tonumber(req.text)\r\n        if currNum then\r\n            WebRequest.put('https://tts-db.firebaseio.com/modLoadCount.json', tostring(currNum+1), self, 'dummy')\r\n        end\r\n    end\r\nend\r\n\r\nfunction onLoad(save_state)\r\n    self.interactable = false\r\n    self.lock()\r\n    self.tooltip = false\r\n    WebRequest.get('https://tts-db.firebaseio.com/modLoadCount.json', self, 'readCallback')\r\nend",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "fde52b",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -9.941783E-06,
          "rotY": 90.00177,
          "rotZ": -1.85101162E-05,
          "scaleX": 0.375,
          "scaleY": 0.375,
          "scaleZ": 0.375
        },
        "Nickname": "Version Check",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/stress.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "current_version = 7       -- mod version (workshop update count)\r\nworkshop_id = '2486128992'   -- mod workshop ID\r\n\r\n-- To read above numbers, open your mod workshop page\r\n--  current_version corresponds to XX in \"XX Change Notes (view)\"\r\n--  (set it to 1 above it when updating the mod)\r\n--  workshop ID is the number following \"filedetails/?id=\" in the page link\r\n\r\n-- A version check is triggered on object load\r\nfunction onLoad()\r\n    -- script carrier object hiding\r\n    self.interactable = false\r\n    self.tooltip = false\r\n    self.lock()\r\n    self.setPosition({0, -5, 0})\r\n    CheckVersion()\r\nend\r\n\r\n-- Initiate version check\r\nfunction CheckVersion()\r\n    local req = WebRequest.get('https://steamcommunity.com/sharedfiles/filedetails/?id=' .. workshop_id)\r\n    Wait.condition(\r\n        function() ParseRequest(req) end,\r\n        function() return (req.is_done and not req.is_error) end,\r\n        6, ReportCheck )\r\nend\r\n\r\n-- Extract version from workshop page request\r\nfunction ParseRequest(req)\r\n    local parsed_version = tonumber(req.text:match('(%d+) Change Notes'))\r\n    ReportCheck(parsed_version)\r\nend\r\n\r\n-- Report status with given workshop version\r\n-- Argument being nil means version coudn't be read\r\nfunction ReportCheck(workshop_version)\r\n    if not workshop_version then\r\n        printToAll('Couldn\\'t read mod version from Steam Workshop', {0.4, 0.4, 1})\r\n    elseif workshop_version > current_version then\r\n        broadcastToAll('A newer version of this mod is available on Steam Workshop!', {1, 0.2, 0.2})\r\n    elseif workshop_version < current_version then\r\n        -- for mod author convenience\r\n        if current_version - workshop_version == 1 then\r\n            broadcastToAll('Ready to push to Steam Workshop', {0.2, 1, 1})\r\n        else\r\n            broadcastToAll('Workshop version more than 1 behind mod version?', {1, 0.2, 0.2})\r\n        end\r\n    else\r\n        printToAll('Mod is up to date', {0.1, 1, 0.1})\r\n    end\r\nend",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "3d63d2",
        "Name": "Custom_Dice",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 1.5,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 1.5,
          "scaleY": 1.5,
          "scaleZ": 1.5
        },
        "Nickname": "dicePreloadGreen",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomImage": {
          "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/GreenDice.jpg",
          "ImageSecondaryURL": "",
          "ImageScalar": 1.0,
          "WidthScale": 0.0,
          "CustomDice": {
            "Type": 2
          }
        },
        "LuaScript": "function onLoad()\n    self.interactable = false\n    self.tooltip = false\n    self.lock()\n    self.setPosition({0, -5, 1.5})\n    self.setRotation({0, 0, 0})\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "PhysicsMaterial": {
          "StaticFriction": 0.4,
          "DynamicFriction": 0.4,
          "Bounciness": 0.6,
          "FrictionCombine": 0,
          "BounceCombine": 0
        },
        "Rigidbody": {
          "Mass": 1.25,
          "Drag": 0.1,
          "AngularDrag": 0.1,
          "UseGravity": true
        },
        "RotationValues": [
          {
            "Value": "1",
            "Rotation": {
              "x": -33.0,
              "y": 0.0,
              "z": 90.0
            }
          },
          {
            "Value": "2",
            "Rotation": {
              "x": -33.0,
              "y": 0.0,
              "z": 180.0
            }
          },
          {
            "Value": "3",
            "Rotation": {
              "x": 33.0,
              "y": 180.0,
              "z": -180.0
            }
          },
          {
            "Value": "4",
            "Rotation": {
              "x": 33.0,
              "y": 180.0,
              "z": 90.0
            }
          },
          {
            "Value": "5",
            "Rotation": {
              "x": 33.0,
              "y": 180.0,
              "z": -90.0
            }
          },
          {
            "Value": "6",
            "Rotation": {
              "x": 33.0,
              "y": 180.0,
              "z": 0.0
            }
          },
          {
            "Value": "7",
            "Rotation": {
              "x": -33.0,
              "y": 0.0,
              "z": 0.0
            }
          },
          {
            "Value": "8",
            "Rotation": {
              "x": -33.0,
              "y": 0.0,
              "z": -90.0
            }
          }
        ]
      },
      {
        "GUID": "be075b",
        "Name": "Custom_Dice",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": -1.5,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 1.5,
          "scaleY": 1.5,
          "scaleZ": 1.5
        },
        "Nickname": "dicePreloadRed",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomImage": {
          "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/RedDice.jpg",
          "ImageSecondaryURL": "",
          "ImageScalar": 1.0,
          "WidthScale": 0.0,
          "CustomDice": {
            "Type": 2
          }
        },
        "LuaScript": "function onLoad()\n    self.interactable = false\n    self.tooltip = false\n    self.lock()\n    self.setPosition({0, -5, -1.5})\n    self.setRotation({0, 0, 0})\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "PhysicsMaterial": {
          "StaticFriction": 0.4,
          "DynamicFriction": 0.4,
          "Bounciness": 0.6,
          "FrictionCombine": 0,
          "BounceCombine": 0
        },
        "Rigidbody": {
          "Mass": 1.25,
          "Drag": 0.1,
          "AngularDrag": 0.1,
          "UseGravity": true
        },
        "RotationValues": [
          {
            "Value": "1",
            "Rotation": {
              "x": -33.0,
              "y": 0.0,
              "z": 90.0
            }
          },
          {
            "Value": "2",
            "Rotation": {
              "x": -33.0,
              "y": 0.0,
              "z": 180.0
            }
          },
          {
            "Value": "3",
            "Rotation": {
              "x": 33.0,
              "y": 180.0,
              "z": -180.0
            }
          },
          {
            "Value": "4",
            "Rotation": {
              "x": 33.0,
              "y": 180.0,
              "z": 90.0
            }
          },
          {
            "Value": "5",
            "Rotation": {
              "x": 33.0,
              "y": 180.0,
              "z": -90.0
            }
          },
          {
            "Value": "6",
            "Rotation": {
              "x": 33.0,
              "y": 180.0,
              "z": 0.0
            }
          },
          {
            "Value": "7",
            "Rotation": {
              "x": -33.0,
              "y": 0.0,
              "z": 0.0
            }
          },
          {
            "Value": "8",
            "Rotation": {
              "x": -33.0,
              "y": 0.0,
              "z": -90.0
            }
          }
        ]
      },
      {
        "GUID": "ef77a3",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -40.0,
          "posY": 0.96,
          "posZ": -3.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "2 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "5ce817",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -40.254612,
              "posY": 1.05277681,
              "posZ": 3.045643,
              "rotX": 0.000140797565,
              "rotY": 359.994,
              "rotZ": 0.00086742593,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "191bcf",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -40.0,
          "posY": 0.96,
          "posZ": 1.5,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "4 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "eb30fa",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.9756279,
              "posY": 1.05277336,
              "posZ": -1.616134,
              "rotX": 1.15569992E-06,
              "rotY": 359.990662,
              "rotZ": -4.34849153E-06,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "0facc3",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -39.0,
          "posY": 0.96,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "5 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "6d0ff9",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.1263771,
              "posY": 1.05277336,
              "posZ": -0.4066172,
              "rotX": 1.53069777E-06,
              "rotY": 0.00228429935,
              "rotZ": -7.773976E-07,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "637ad7",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -38.0,
          "posY": 0.96,
          "posZ": -2.25,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "1 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "df7062",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -37.75107,
              "posY": 1.14340711,
              "posZ": -2.427101,
              "rotX": 0.00230936683,
              "rotY": 0.0288666971,
              "rotZ": 180.010086,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "d81b3d",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -38.0,
          "posY": 0.96,
          "posZ": 0.8,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "3 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "0e84fa",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -37.76757,
              "posY": 1.052768,
              "posZ": 0.7183745,
              "rotX": 0.000238047171,
              "rotY": 0.0298677236,
              "rotZ": 0.00138858578,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "0e80e3",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -39.5,
          "posY": 1.05,
          "posZ": -7.5,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "1 Bank Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "e955bd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -38.36719,
              "posY": 1.14350629,
              "posZ": 6.29818869,
              "rotX": -0.00168857072,
              "rotY": 0.009002227,
              "rotZ": -0.00259488728,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "5ff1ea",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -40.12,
          "posY": 1.05,
          "posZ": -8.5,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "2 Bank Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "765185",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.244278,
              "posY": 1.14336717,
              "posZ": 7.11606169,
              "rotX": 359.9928,
              "rotY": 359.975677,
              "rotZ": 359.985565,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "5e6a99",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -40.75,
          "posY": 1.05,
          "posZ": -9.5,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "3 Bank Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b20d16",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -40.29677,
              "posY": 1.14430749,
              "posZ": 8.338599,
              "rotX": 359.990051,
              "rotY": 359.990753,
              "rotZ": 359.975952,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "4edff9",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -39.2,
          "posY": 0.96,
          "posZ": 7.5,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "1 Turn Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b65adf",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -38.5225754,
              "posY": 1.05539179,
              "posZ": -5.583962,
              "rotX": 0.200439274,
              "rotY": 0.0310121533,
              "rotZ": 0.2242837,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "8aec47",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -39.7,
          "posY": 1.0,
          "posZ": 8.5,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "2 Turn Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "a2c3ec",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -38.87699,
              "posY": 1.14914727,
              "posZ": -6.52490568,
              "rotX": 2.87643671,
              "rotY": 0.0818786249,
              "rotZ": 3.09425044,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "747d61",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -40.2,
          "posY": 0.96,
          "posZ": 9.5,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "3 Turn Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b36a45",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.1740456,
              "posY": 1.13898587,
              "posZ": -7.577747,
              "rotX": 2.02665019,
              "rotY": 0.124885358,
              "rotZ": 3.41825032,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "3bac58",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -45.97061,
          "posY": 0.9652231,
          "posZ": -0.0157327615,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.38,
          "scaleY": 1.65,
          "scaleZ": 0.38
        },
        "Nickname": "TFA Set Asteroids",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/TFA1.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/TFA.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/TFA1.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "be2b20",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -45.59004,
              "posY": 1.06147909,
              "posZ": 0.03221671,
              "rotX": -1.19048818E-05,
              "rotY": 120.01358,
              "rotZ": 1.94307577E-05,
              "scaleX": 1.0,
              "scaleY": 1.51633251,
              "scaleZ": 1.0
            },
            "Nickname": "TFA Asteroid 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "60fd4f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -27.4059429,
                  "posY": 0.987432659,
                  "posZ": -7.346376,
                  "rotX": 0.000116940959,
                  "rotY": 120.021355,
                  "rotZ": 8.72246237E-05,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "55d063",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -22.4731255,
                  "posY": 0.967106462,
                  "posZ": -2.01778388,
                  "rotX": 3.68944961E-06,
                  "rotY": 120.018761,
                  "rotZ": -3.40330757E-06,
                  "scaleX": 1.0,
                  "scaleY": 3.04350567,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "def865",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -19.6455288,
                  "posY": 0.9671069,
                  "posZ": 2.42062759,
                  "rotX": 3.32672025E-05,
                  "rotY": 120.048325,
                  "rotZ": 1.79558247E-05,
                  "scaleX": 1.0,
                  "scaleY": 2.3043952,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "60fe7a",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -14.6034632,
                  "posY": 0.9671029,
                  "posZ": 8.969603,
                  "rotX": 0.000124963539,
                  "rotY": 120.028839,
                  "rotZ": 7.387497E-06,
                  "scaleX": 1.0,
                  "scaleY": 3.59584236,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "b13038",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -8.437252,
                  "posY": 0.9671058,
                  "posZ": 11.3695221,
                  "rotX": -0.000981264,
                  "rotY": 120.021645,
                  "rotZ": 0.00173551624,
                  "scaleX": 1.0,
                  "scaleY": 3.020417,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 6",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "521a6a",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -46.09851,
          "posY": 0.9889348,
          "posZ": -4.085405,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.7,
          "scaleY": 0.53,
          "scaleZ": 0.7
        },
        "Nickname": "Core Set Asteroids",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-model.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/Core1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-model.obj",
          "Convex": false,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "95f5ae",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.4344864,
              "posY": 1.03894174,
              "posZ": -3.77370334,
              "rotX": -2.6820424E-05,
              "rotY": 120.019936,
              "rotZ": -1.79300114E-05,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Asteroid 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "509d1f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 20.1297512,
                  "posY": 0.98437953,
                  "posZ": 8.094108,
                  "rotX": -1.16297888E-05,
                  "rotY": 120.019966,
                  "rotZ": -6.511638E-05,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "ce7293",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 24.6080589,
                  "posY": 0.987590969,
                  "posZ": 2.68505168,
                  "rotX": 8.7498E-06,
                  "rotY": 120.020096,
                  "rotZ": 9.667615E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "e10469",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 18.67132,
                  "posY": 0.9897437,
                  "posZ": -0.9682759,
                  "rotX": 5.337862E-06,
                  "rotY": 120.020279,
                  "rotZ": -2.670259E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "8c92c6",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 21.3030148,
                  "posY": 0.9903801,
                  "posZ": -7.52489042,
                  "rotX": 1.01695477E-05,
                  "rotY": 120.030388,
                  "rotZ": -3.15033117E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "71adbc",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 21.7009373,
                  "posY": 0.9846479,
                  "posZ": -13.2826948,
                  "rotX": -6.841603E-06,
                  "rotY": 120.030823,
                  "rotZ": -6.85577061E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 6",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "065d51",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -46.2400475,
          "posY": -0.2714659,
          "posZ": 3.67631149,
          "rotX": 3.42333664E-07,
          "rotY": 0.004519878,
          "rotZ": 3.581922E-07,
          "scaleX": 0.5,
          "scaleY": 1.9,
          "scaleZ": 0.5
        },
        "Nickname": "Debris Fields",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786353562013243297/24A3BC6F7CAC9448EEED4EFE2F9ED6082E312E71/",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/Debris1.png",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786353562013243297/24A3BC6F7CAC9448EEED4EFE2F9ED6082E312E71/",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "48db4f",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -45.8481865,
              "posY": 1.090018,
              "posZ": 4.335244,
              "rotX": 0.000194920241,
              "rotY": 359.966949,
              "rotZ": 180.001511,
              "scaleX": 1.0999999,
              "scaleY": 1.0,
              "scaleZ": 1.0999999
            },
            "Nickname": "Debrisfield 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "639a25",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -26.9427032,
                  "posY": 1.05155039,
                  "posZ": -4.751729,
                  "rotX": -1.30963951E-08,
                  "rotY": 179.9691,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "78bfc5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -21.643158,
                  "posY": 1.05615044,
                  "posZ": -4.3572,
                  "rotX": -5.394235E-07,
                  "rotY": 0.0109658688,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "8ff5e6",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -15.9913378,
                  "posY": 1.05615044,
                  "posZ": -4.43565655,
                  "rotX": 9.670697E-06,
                  "rotY": -0.00147130562,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "a9b16e",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -9.97973251,
                  "posY": 1.05615032,
                  "posZ": -4.54859638,
                  "rotX": 7.664992E-06,
                  "rotY": 359.9831,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "ab6e6b",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -5.19877958,
                  "posY": 1.05615044,
                  "posZ": -9.134313,
                  "rotX": 3.95330545E-07,
                  "rotY": 195.017075,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 6",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "f8f07c",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -3.0,
          "posZ": -7.5,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.375,
          "scaleY": 0.375,
          "scaleZ": 0.375
        },
        "Nickname": "Dial Set source",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/stress.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "\nlocal talSegPos = {1, 0, 4}\nlocal koiPos = {{2, 0, 4}, {2, 0, 5}, {-2, 0, 4}, {-2, 0, 5}}\nlocal koiCount = 1\nfunction decodeDesc(desc)\n    dir = nil\n    speed = nil\n    type = nil\n    if desc:sub(-1, -1) == 's' then\n        type = 'seg'\n        speed = tonumber(desc:sub(-2, -2))\n        dir = desc:sub(-3, -3)\n    elseif desc:sub(-1, -1) == 't' then\n        type = 'tal'\n        speed = tonumber(desc:sub(-2, -2))\n        dir = desc:sub(-3, -3)\n    elseif desc:sub(-1,-1) == 'r' then\n        type = desc:sub(1, 1)\n        if desc:sub(2,2) == 'r' then\n            dir = 'r'\n        elseif desc:sub(2,2) == 'e' or desc:sub(2,2) == 'l' then\n            dir = 'l'\n        end\n        speed = 0\n    elseif desc:sub(1, 1) == 'k' then\n        type = 'koi'\n        speed = tonumber(desc:sub(2, 2))\n        dir = 's'\n    elseif desc:sub(1, 1) == 's' then\n        type = 's'\n        speed = tonumber(desc:sub(2, 2))\n        dir = 's'\n    else\n        type = desc:sub(1, 1)\n        dir = desc:sub(2, 2)\n        speed = tonumber(desc:sub(3, 3))\n    end\n\n    out = {0, 0, speed}\n\n    if type == 'seg' or type == 'tal' then\n        out = {talSegPos[1], talSegPos[2], talSegPos[3]}\n    elseif type == 'koi' then\n        out = koiPos[koiCount]\n        koiCount = koiCount+1\n    else\n        if type == 'b' then\n            out[1] = 1\n        elseif type == 't' then\n            out[1] = 2\n        end\n    end\n\n    if dir == 'e' or dir == 'l' then\n        out[1] = -1*out[1]\n    end\n\n    return out\nend\n\nfunction moveSpeed(desc)\n    local speed = nil\n    if desc:sub(-1, -1) == 's' then\n        speed = tonumber(desc:sub(-2, -2))\n    elseif desc:sub(-1, -1) == 't' then\n        speed = tonumber(desc:sub(-2, -2))\n    elseif desc:sub(-1,-1) == 'r' then\n        speed = 0\n    elseif desc:sub(1, 1) == 'k' then\n        speed = tonumber(desc:sub(2, 2))\n    elseif desc:sub(1, 1) == 's' then\n        speed = tonumber(desc:sub(2, 2))\n    else\n        speed = tonumber(desc:sub(3, 3))\n    end\n    if speed == nil then print(desc) end\n    return speed\nend\n\nfunction offset(table1, table2)\n    table2 = table2 or {0, 0, 0}\n    return {table1[1]+table2[1], table1[2]+table2[2], table1[3]+table2[3]}\nend\n\nfunction scale(table, value)\n    value = value or 1\n    return {table[1]*value, table[2]*value, table[3]*value}\nend\n\nfunction localPos(pos)\n    refOffset = self.getPosition()\n    refRot = math.rad(-1*self.getRotation()[2])\n    local posRot = {pos[3]*math.sin(refRot)-pos[1]*math.cos(refRot), pos[2], -1*pos[1]*math.sin(refRot) - pos[3]*math.cos(refRot)}\n    return {posRot[1]+refOffset[1], refOffset[2], posRot[3]+refOffset[3]}\nend\n\n\n-- FUNCTION FOR DIAL ASSIGNMENT UPON LAYOUT\nfunction assignCallback(obj, params)\n    table.insert(spawnedDials, obj)\n    if #spawnedDials == dialCount then\n        if params.ship ~= nil then\n            Global.call('DialAPI_AssignSet', {set=spawnedDials, ship=params.ship})\n        end\n        if params.callbackObj ~= nil then\n            params.callbackObj.call(params.callbackFun, params.callbackParams)\n        end\n    end\nend\n\n-- LAY OUT DIALS, CALL ASSIGN IF NECCESARY, DESTROY SELF\nfunction init(arg)\n    dialCount = #self.getObjects()-2\n    spawnedDials = {}\n    local callbackTable = arg or {}\n    local dialSpacing = (2/0.625)*(self.getScale()[1])\n    local stackDials = self.getObjects()\n    local minSpeed = 5\n    local maxSpeed = 0\n    for k,dial in pairs(stackDials) do\n        if dial.description ~= 'spec' then\n            local dialSpeed = moveSpeed(dial.description)\n            if dialSpeed < minSpeed then\n                minSpeed = dialSpeed\n            end\n            if dialSpeed > maxSpeed then\n                maxSpeed = dialSpeed\n            end\n        end\n    end\n    local posOffset = {0, 0.1, -1*0.5*(maxSpeed-minSpeed) - minSpeed}\n    ---[[\n    for k, dial in pairs(stackDials) do\n        if dial['description'] ~= 'spec' then\n            local dialPos = decodeDesc(dial['description'])\n            dialPos = offset(dialPos, posOffset)\n            dialPos = scale(dialPos, dialSpacing)\n            dialPos = localPos(dialPos)\n            local dialRot = {0, self.getRotation()[2], 0}\n            newDial = self.takeObject({ position=dialPos, rotation=dialRot, guid=dial['guid'],\n                                        callback='assignCallback', callback_owner=self, params={ship=callbackTable.ship,\n                                        cb=callbackTable.callbackFun, cbArgs=callbackTable.callbackParams, cbObj=callbackTable.callbackObj}})\n            newDial.setPosition(dialPos)\n            newDial.setRotation(dialRot)\n            newDial.setLuaScript(dialLuaScript)\n            local Description = newDial.getDescription()\n            newDial = {}\n            newDial.Desc = Description\n        end\n    end\n    self.destruct()\n    return spawnedDials\n    --]]\n    --[[\n    function LayoutCor()\n        for k, dial in pairs(stackDials) do\n            if dial['description'] ~= 'spec' then\n                local dialPos = decodeDesc(dial['description'])\n                dialPos = offset(dialPos, posOffset)\n                dialPos = scale(dialPos, dialSpacing)\n                dialPos = localPos(dialPos)\n                local dialRot = {0, self.getRotation()[2], 0}\n                newDial = self.takeObject({ position=dialPos, rotation=dialRot, guid=dial['guid'],\n                                            callback='assignCallback', callback_owner=self, params={ship=callbackTable.ship,\n                                            cb=callbackTable.callbackFun, cbArgs=callbackTable.callbackParams, cbObj=callbackTable.callbackObj}})\n                newDial.setLuaScript(dialLuaScript)\n                coroutine.yield(0)\n            end\n        end\n        self.destruct()\n        return 1\n    end\n    startLuaCoroutine(self, 'LayoutCor')\n    --]]\nend\n\nfunction onLoad()\n    if self.getName() == 'Dial Set source' then\n        self.setPosition({0, -3, -7.5})\n        self.setRotation({0, 0, 0})\n        self.lock()\n        self.tooltip = false\n        self.interactable = false\n\n    end\n    dialLuaScript = Global.getVar('dialLuaScript')\nend",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "b3992e",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": 0.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 1.0,
          "scaleY": 1.0,
          "scaleZ": 1.0
        },
        "Nickname": "Layout Controller",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/critical.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 5,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_lib/Util/Util\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Misc functions for extending Lua functionality\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['Util'] then\r\n\r\n    package.loaded['Util'] = true\r\n\r\n    -- Return value limited by min and max bounds\r\n    math.clamp = function(var, min, max)\r\n        if min and var < min then\r\n            return min\r\n        elseif max and var > max then\r\n            return max\r\n        end\r\n        return var\r\n    end\r\n\r\n    -- Sign function, zero for zero\r\n    math.sgn = function(arg)\r\n        if arg < 0 then\r\n            return -1\r\n        elseif arg > 0 then\r\n            return 1\r\n        end\r\n        return 0\r\n    end\r\n\r\n    -- Round to decPlaces decimal places\r\n    -- if decPlaces nil round to nearest integer\r\n    math.round = function(arg, decPlaces)\r\n        if decPlaces == nil then decPlaces = 0 end\r\n        if decPlaces == 0 then\r\n            frac = arg - math.floor(arg)\r\n            if frac >= 0.5 then\r\n                return math.ceil(arg)\r\n            else\r\n                return math.floor(arg)\r\n            end\r\n        else\r\n            local mult = 10^(decPlaces or 0)\r\n            return math.floor(arg * mult + 0.5) / mult\r\n        end\r\n    end\r\n\r\n    -- Check if table is empty\r\n    table.empty = function(tab)\r\n        return (next(tab) == nil)\r\n    end\r\n\r\n    -- Mash together two tables\r\n    table.join = function(tab1, tab2)\r\n        local out = {}\r\n        for k=1,#tab1 do\r\n            out[k] = tab1[k]\r\n        end\r\n        local off = #tab1\r\n        for k=1,#tab2 do\r\n            out[k+off] = tab2[k]\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Shallow table copy\r\n    -- Does not include metatables\r\n    table.shallowcopy = function(orig)\r\n        local orig_type = type(orig)\r\n        local copy\r\n        if orig_type == 'table' then\r\n            copy = {}\r\n            for orig_key, orig_value in pairs(orig) do\r\n                copy[orig_key] = orig_value\r\n            end\r\n        else\r\n            copy = orig\r\n        end\r\n        return copy\r\n    end\r\n\r\n    -- Deep table copy\r\n    -- Includes metatables, avoids __pairs, recursive\r\n    table.deepcopy = function(orig)\r\n        local orig_type = type(orig)\r\n        local copy\r\n        if orig_type == 'table' then\r\n            copy = {}\r\n            for orig_key, orig_value in next, orig, nil do\r\n                copy[table.deepcopy(orig_key)] = table.deepcopy(orig_value)\r\n            end\r\n            if getmetatable(orig) then\r\n                setmetatable(copy, table.deepcopy(getmetatable(orig)))\r\n            end\r\n        else\r\n            copy = orig\r\n        end\r\n        return copy\r\n    end\r\n\r\n    -- Elements count\r\n    -- Unlike #table, also counts non-number keyed values\r\n    table.size = function(tab)\r\n        local count = 0\r\n        for _ in pairs(tab) do\r\n            count = count + 1\r\n        end\r\n        return count\r\n    end\r\n\r\n    -- Return the element that return minimal value from eval function\r\n    -- Only iterates through numeric keys part\r\n    table.min = function(tab, eval)\r\n        if not tab[1] then return end\r\n        local min = { el = tab[1], val = eval(tab[1]) }\r\n        for k=2,#tab do\r\n            local val = eval(tab[k])\r\n            if val < min.val then\r\n                min.val = val\r\n                min.el = tab[k]\r\n            end\r\n        end\r\n        return min.el, min.val\r\n    end\r\n\r\n    -- Same as table.min, but takes the maximum\r\n    table.max = function(tab, eval)\r\n        local function invEval(el)\r\n            return -1*eval(el)\r\n        end\r\n        local el, min = table.min(tab, invEval)\r\n        return el, -1*min\r\n    end\r\n\r\n    -- Return those values in tab that return true from valid function\r\n    table.sieve = function(tab, valid)\r\n        local passed = {}\r\n        local rejected = {}\r\n        for k,v in ipairs(tab) do\r\n            if valid(v) then\r\n                if type(k) == 'number' then\r\n                    table.insert(passed, v)\r\n                else\r\n                    passed[k] = v\r\n                end\r\n            else\r\n                if type(k) == 'number' then\r\n                    table.insert(rejected, v)\r\n                else\r\n                    rejected[k] = v\r\n                end\r\n            end\r\n        end\r\n        return passed, rejected\r\n    end\r\n\r\n    -- Try to find en element in the table, return key if found, nil otherwise\r\n    table.find = function(tab, el)\r\n        for k,v in pairs(tab) do\r\n            if v == el then\r\n                return k\r\n            end\r\n        end\r\n    end\r\n\r\n    -- Shallow table print\r\n    table.print = function(tab, prefix)\r\n        prefix = prefix or 'Table'\r\n        print(prefix .. ':')\r\n        local function stringify(v)\r\n            local str = tostring(v)\r\n            if type(v) == 'string' then\r\n                str = '\\'' .. str .. '\\''\r\n            end\r\n            return str\r\n        end\r\n        for k,v in pairs(tab) do\r\n            print('   [' .. stringify(k) .. '] -> ' .. stringify(v))\r\n        end\r\n        print('')\r\n    end\r\n\r\n    -- Deep table print (sensitive to cycles!)\r\n    table.print_r = function(tab, prefix, indent)\r\n        prefix = prefix or 'Table'\r\n        local indent = indent or 1\r\n        print(prefix .. ':')\r\n        local function stringify(v)\r\n            local str = tostring(v)\r\n            if type(v) == 'string' then\r\n                str = '\\'' .. str .. '\\''\r\n            end\r\n            return str\r\n        end\r\n        local indentStr = string.rep('    ', indent)\r\n        for k,v in pairs(tab) do\r\n            print(indentStr .. '[' .. stringify(k) .. '] -> ' .. stringify(v))\r\n            if type(v) == 'table' then\r\n                table.print_r(v, indentStr .. stringify(v), indent+1)\r\n            end\r\n        end\r\n        if indent == 1 then\r\n            print('')\r\n        end\r\n    end\r\n\r\n    -- Apply a function on each table element\r\n    table.process = function(tab, fcn)\r\n        local out = {}\r\n        for k,v in pairs(tab) do\r\n            out[k] = fcn(v)\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Returns a copy of a table with the elements in a random order.\r\n    table.shuffle = function(tab)\r\n        local shuffled_table = {}\r\n        for i = 1, #tab do\r\n            shuffled_table[i] = tab[i]\r\n        end\r\n        for i = #shuffled_table, 2, -1 do\r\n            local j = math.random(i)\r\n            shuffled_table[i], shuffled_table[j] = shuffled_table[j], shuffled_table[i]\r\n        end\r\n        return shuffled_table\r\n    end\r\n\r\n    -- Check if string begins with the argument (no regex)\r\n    string.beginswith = function(str, prefix)\r\n        return (str:sub(1, prefix:len()) == prefix)\r\n    end\r\n    string.startswith = string.beginswith\r\n\r\n    -- Check if the string ends with the argument (no regex)\r\n    string.endswith = function(str, prefix)\r\n        return (str:sub(-1*prefix:len(), -1) == prefix)\r\n    end\r\n\r\n    -- CHeck if string contains argument anywhere in it (no regex)\r\n    string.contains = function(str, query)\r\n        return (str:find(query, 1, true) ~= nil)\r\n    end\r\n\r\nend\r\n\n----#include TTS_lib/Util/Util\n----#include TTS_lib/Vector/Vector\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Library for all vector-related operations\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['Vector'] then\r\n    Vect = {}\r\n    package.loaded['Vector'] = Vect\r\n\r\n    -- Sum of two vectors (of any size)\r\n    Vect.Sum = function(vec1, vec2)\r\n        assert(type(vec1) == 'table', 'Vect.Sum: arg#1 not a table!')\r\n        assert(type(vec2) == 'table', 'Vect.Sum: arg#2 not a table!')\r\n        local out = {}\r\n        local k = 1\r\n        while vec1[k] ~= nil and vec2[k] ~= nil do\r\n            out[k] = vec1[k]+vec2[k]\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Inverse of a vector\r\n    Vect.Inverse = function(vector)\r\n        assert(type(vector) == 'table', 'Vect.Inverse: arg#1 not a table!')\r\n        local out = {}\r\n        local k = 1\r\n        while vector[k] ~= nil do\r\n            out[k] = 1/vector[k]\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Multiply each element of a vector by a factor\r\n    Vect.Scale = function(vector, factor)\r\n        assert(type(vector) == 'table', 'Vect.Scale: arg#1 not a table!')\r\n        assert(type(factor) == 'number', 'Vect.Scale: arg#2 not a number!')\r\n        local out = {}\r\n        local k = 1\r\n        while vector[k] ~= nil do\r\n            out[k] = vector[k]*factor\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Multiply each element of a vector by an element from factor vector\r\n    -- (element-wise vector multiplication)\r\n    Vect.ScaleEach = function(vector, factorVec)\r\n        assert(type(vector) == 'table', 'Vect.ScaleEach: arg#1 not a table!')\r\n        assert(type(factorVec) == 'table', 'Vect.ScaleEach: arg#2 not a table!')\r\n        local out = {}\r\n        local k = 1\r\n        while vector[k] ~= nil and factorVec[k] ~= nil do\r\n            out[k] = vector[k]*factorVec[k]\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n\r\n    -- Length of  vector on X-Z plane (ignoring height)\r\n    Vect.Length = function(vector)\r\n        assert(type(vector) == 'table', 'Vect.Length: arg#1 not a table!')\r\n        return math.sqrt(vector[1]*vector[1] + vector[3]*vector[3])\r\n    end\r\n\r\n    -- Rotation of a 3D vector over its second element axis, arg in radians\r\n    -- Elements past 3rd are copied\r\n    Vect.RotateRad = function(vector, radRotation)\r\n        assert(type(vector) == 'table', 'Vect.RotateRad: arg#1 not a table!')\r\n        assert(type(radRotation) == 'number', 'Vect.RotateRad: arg#2 not a number!')\r\n        local newX = math.cos(radRotation) * vector[1] + math.sin(radRotation) * vector[3]\r\n        local newZ = math.sin(radRotation) * vector[1] * -1 + math.cos(radRotation) * vector[3]\r\n        local out = {newX, vector[2], newZ}\r\n        local k=4\r\n        while vector[k] ~= nil do\r\n            table.insert(out, vector[k])\r\n            k = k+1\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Distance between two points\r\n    -- Points as vectors or objects (their positions)\r\n    Vect.Distance = function(pos1, pos2)\r\n        assert(type(pos1) == 'table' or type(pos1) == 'userdata', 'Vect.Distance: arg#1 not a table/object!')\r\n        assert(type(pos2) == 'table' or type(pos2) == 'userdata', 'Vect.Distance: arg#2 not a table/object!')\r\n        if type(pos1) == 'userdata' then\r\n            pos1 = pos1.getPosition()\r\n        end\r\n        if type(pos2) == 'userdata' then\r\n            pos2 = pos2.getPosition()\r\n        end\r\n        return Vect.Length(Vect.Between(pos1, pos2))\r\n    end\r\n\r\n    -- Print vector elements\r\n    Vect.Print = function(vec, name)\r\n        assert(type(vec) == 'table', 'Vect.Print: arg#1 not a table!')\r\n        local out = '['\r\n        if name then\r\n            out = name .. ' => ' .. out\r\n        end\r\n        local k = 1\r\n        while vec[k] ~= nil do\r\n            out = out .. math.round(vec[k], 3) .. ' : '\r\n            k = k+1\r\n        end\r\n        out = out:sub(1,-3) .. ']'\r\n        print(out)\r\n    end\r\n    -- Round to decPlaces decimal places\r\n    -- if decPlaces nil round to nearest integer\r\n    math.round = function(arg, decPlaces)\r\n        if decPlaces == nil then decPlaces = 0 end\r\n        if decPlaces == 0 then\r\n            frac = arg - math.floor(arg)\r\n            if frac >= 0.5 then\r\n                return math.ceil(arg)\r\n            else\r\n                return math.floor(arg)\r\n            end\r\n        else\r\n            local mult = 10^(decPlaces or 0)\r\n            return math.floor(arg * mult + 0.5) / mult\r\n        end\r\n    end\r\n\r\n    -- Dot product\r\n    Vect.DotProd = function(vec1, vec2)\r\n        assert(type(vec1) == 'table', 'Vect.DotProd: arg#1 not a table!')\r\n        assert(type(vec2) == 'table', 'Vect.DotProd: arg#2 not a table!')\r\n        local sum = 0\r\n        local k = 1\r\n        while vec1[k] ~= nil and vec2[k] ~= nil do\r\n            sum = sum + vec1[k]*vec2[k]\r\n            k = k+1\r\n        end\r\n        return sum\r\n    end\r\n\r\n    -- Element-by-element comparison\r\n    -- Fails if length uneven\r\n    Vect.Compare = function(vec1, vec2)\r\n        assert(type(vec1) == 'table', 'Vect.Compare: arg#1 not a table!')\r\n        assert(type(vec2) == 'table', 'Vect.Compare: arg#2 not a table!')\r\n        if #vec1 ~= #vec2 then\r\n            return false\r\n        end\r\n        local k = 1\r\n        while vec1[k] ~= nil and vec2[k] ~= nil do\r\n            if vec1[k] ~= vec2[k] then\r\n                return false\r\n            end\r\n            k = k+1\r\n        end\r\n        return true\r\n    end\r\n\r\n    -- Euclidean norm\r\n    Vect.Norm = function(vec)\r\n        local selfDot = Vect.DotProd(vec, vec)\r\n        return math.sqrt(selfDot)\r\n    end\r\n\r\n    -- Convert a vector to unit vector in the same direction\r\n    -- Return zero vector for zero vector\r\n    Vect.ToUnit = function(vec)\r\n        if Vect.Norm(vec) == 0 then\r\n            return vec\r\n        end\r\n        return Vect.Scale(vec, 1/Vect.Norm(vec))\r\n    end\r\n\r\n    -- Angle between vectors in radians\r\n    -- If second argument not provided, calculate typical angle (from [1, 0, 0, ...] )\r\n    Vect.Angle = function(vec1, vec2)\r\n        if vec2 == nil then\r\n            vec2 = {1}\r\n            for k = 2, #vec1, 1 do\r\n                table.insert(vec2, 0)\r\n            end\r\n        end\r\n        return math.acos( Vect.DotProd(vec1, vec2) / (Vect.Norm(vec1)*Vect.Norm(vec2)) )\r\n    end\r\n\r\n    -- Angle between vectors in radians, in plane\r\n    -- If second argument not provided, calculate typical angle (from [1, 0, 0, ...] )\r\n    Vect.Angle2D = function(vec1, vec2)\r\n        if vec2 == nil then\r\n            vec2 = {1}\r\n            for k = 2, #vec1, 1 do\r\n                table.insert(vec2, 0)\r\n            end\r\n        end\r\n        return ( math.atan2(vec2[3], vec2[1]) - math.atan2(vec1[3], vec1[1]) )\r\n    end\r\n\r\n    -- Same as Vect.Angle but in degrees\r\n    Vect.AngleDeg = function(vec1, vec2)\r\n        return math.deg(Vect.Angle(vec1, vec2))\r\n    end\r\n\r\n    -- Same as Vect.Angle2D but in degrees\r\n    Vect.AngleDeg2D = function(vec1, vec2)\r\n        return math.deg(Vect.Angle2D(vec1, vec2))\r\n    end\r\n\r\n    -- Vector pointing from one position to another\r\n    Vect.Between = function(fromVec, toVec)\r\n        return Vect.Sum(toVec, Vect.Scale(fromVec, -1))\r\n    end\r\n\r\n    -- Vector pointing between two points\r\n    Vect.Middle = function(p1, p2)\r\n        return Vect.Sum(p1, Vect.Scale(Vect.Between(p1, p2), 0.5))\r\n    end\r\n\r\n    -- Subtract vector from another\r\n    Vect.Sub = function(vec1, vec2)\r\n        return Vect.Sum(vec1, Vect.Scale(vec2, -1))\r\n    end\r\n\r\n    -- Opposite of a vector\r\n    Vect.Opposite = function(vector)\r\n        return Vect.Scale(vector, -1)\r\n    end\r\n\r\n    -- Rotation of a 3D vector over its second element axis, arg in degrees\r\n    -- Elements past 3rd are copied\r\n    Vect.RotateDeg = function(vector, degRotation)\r\n        local radRotation = math.rad(degRotation)\r\n        return Vect.RotateRad(vector, radRotation)\r\n    end\r\n\r\n    -- Scale the vector to have set length\r\n    -- Negative \"length\" - opposite of set length\r\n    Vect.SetLength = function(vector, len)\r\n        return Vect.Scale(vector, len/Vect.Length(vector))\r\n    end\r\nend\r\n\n----#include TTS_lib/Vector/Vector\n\n----#include TTS_lib/ObjType/ObjType\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Package for easy object \"type\" definitions and searching nearby things\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['ObjType'] then\r\n\r\n    if not package.loaded['Vector'] then\r\n        error('ObjType package: depends on Vector package (not loaded)')\r\n    end\r\n    if not package.loaded['Util'] then\r\n        error('ObjType package: depends on Util package (not loaded)')\r\n    end\r\n\r\n    ObjType = {}\r\n    package.loaded['ObjType'] = ObjType\r\n\r\n    ObjType.types = {}\r\n    -- Add a type definition\r\n    ObjType.AddType = function(typeName, fcn)\r\n        ObjType.types[typeName] = fcn\r\n    end\r\n    ObjType.AddType('any', function() return true end)\r\n\r\n    -- Return true if object matches type\r\n    ObjType.IsOfType = function(obj, typeName)\r\n        if not typeName or not ObjType.types[typeName] then\r\n            error('ObjType.IsOfType: queried type \\'' .. typeName .. '\\' not defined')\r\n        end\r\n        return ObjType.types[typeName](obj)\r\n    end\r\n    -- Return a table of all type this object matches\r\n    ObjType.GetTypes = function(obj)\r\n        local types = {}\r\n        for type, typeFcn in pairs(ObjType.types) do\r\n            if typeFcn(obj) then\r\n                types[type] = true\r\n            end\r\n        end\r\n        return types\r\n    end\r\n\r\n    -- Cast a regular sphere and return hit objects\r\n    ObjType.SphereCast = function(center, distance)\r\n        local hits = Physics.cast({\r\n            origin = Vect.Sum(center, {0, -1.1*distance, 0}),\r\n            direction = {0, distance/500, 0},\r\n            type = 2,\r\n            size = {distance*2, distance*2, distance*2},\r\n            debug = false\r\n        })\r\n        local nearData = {}\r\n        for k, hitData in pairs(hits) do\r\n            table.insert(nearData, hitData.hit_object)\r\n            --table.insert(nearData, {obj = hitData.hit_object, dist=Vect.Distance(hitData.point, center)})\r\n        end\r\n        return nearData\r\n    end\r\n    -- Cast a box of given size and orientation and return hit objects\r\n    ObjType.BoxCast = function(center, orientation, size)\r\n        local hits = Physics.cast({\r\n            origin = Vect.Sum(center, {0, -1.1*size[2], 0}),\r\n            direction = {0, size[2]/200, 0},\r\n            type = 3,\r\n            size = size,\r\n            orientation = orientation,\r\n            debug = false\r\n        })\r\n        local nearData = {}\r\n        for k, hitData in pairs(hits) do\r\n            table.insert(nearData, hitData.hit_object)\r\n            --table.insert(nearData, {obj = hitData.hit_object, dist=Vect.Distance(hitData.point, center)})\r\n        end\r\n        return nearData\r\n    end\r\n\r\n    -- Get the object matching provided type, nearest to position/object in some radius\r\n    -- Args:\r\n    --      centerPosObj    <- Center position (vector) or object\r\n    --      maxDist         <- Max distance to check in\r\n    --      objType         <- Required type of the nearest object\r\n    --      excl            <- Table of objects excluded from search\r\n    -- Return: nearestObject, distance\r\n    ObjType.GetNearestOfType = function(centerPosObj, maxDist, objType, excl)\r\n        local centerPos = centerPosObj\r\n        if type(centerPosObj) == 'userdata' then\r\n            excl[centerPosObj] = true\r\n            centerPos = centerPosObj.getPosition()\r\n        end\r\n        local nearOfType = ObjType.GetNearOfType(centerPos, objType, maxDist, excl)\r\n        return table.min(nearOfType, function(obj) return Vect.Distance(cenerPos, obj) end)\r\n    end\r\n\r\n    -- Get all objects in given radius matching given type\r\n    -- Args identical like in ObjType.GetNearestOfType\r\n    -- Return: table of objects\r\n    ObjType.GetNearOfType = function(centerPosObj, maxDist, objType, excl)\r\n        excl = excl or {}\r\n        for k,v in ipairs(excl) do\r\n            excl[v] = true\r\n            excl[k] = nil\r\n        end\r\n        maxDist = maxDist or 100\r\n        assert(type(objType) == 'string', 'Obj.GetNearOfType: search type not provided')\r\n        local centerPos = centerPosObj\r\n        if type(centerPosObj) == 'userdata' then\r\n            excl[centerPosObj] = true\r\n            centerPos = centerPosObj.getPosition()\r\n        end\r\n        local nearData = ObjType.SphereCast(centerPos, maxDist)\r\n        nearData = table.sieve(nearData, function(obj) return (not excl[obj] and ObjType.IsOfType(obj, objType)) end)\r\n        return nearData\r\n    end\r\n\r\n    -- Get the all objects inside a box matching given type\r\n    -- Args:\r\n    --      centerPosObj    <- Center position (vector) or object\r\n    --      orient          <- Box orientation (vector)\r\n    --      size            <- Box size (vector)\r\n    --      objType         <- Required type of the nearest object\r\n    --      excl            <- Table of objects excluded from search\r\n    -- Return: table of objects\r\n    ObjType.GetBoxOfType = function(centerPosObj, orient, size, objType, excl)\r\n        excl = excl or {}\r\n        for k,v in ipairs(excl) do\r\n            excl[v] = true\r\n            excl[k] = nil\r\n        end\r\n        assert(type(objType) == 'string', 'Obj.GetNearOfType: search type not provided')\r\n        local centerPos = centerPosObj\r\n        if type(centerPosObj) == 'userdata' then\r\n            excl[centerPosObj] = true\r\n            centerPos = centerPosObj.getPosition()\r\n        end\r\n        local boxData = ObjType.BoxCast(centerPos, orient, size)\r\n        boxData = table.sieve(boxData, function(obj) return (not excl[obj] and ObjType.IsOfType(obj, objType)) end)\r\n        return boxData\r\n    end\r\nend\r\n\n----#include TTS_lib/ObjType/ObjType\n\nObjType.AddType('dialBag', function(obj) return (obj.type== 'Infinite') end)\n\nLayout = {}\n\n----#include TTS_xwing/src/Layouts/LayoutElements\nLayout.FillElements = function()\r\n    if state.active then\r\n        Layout.elements = {\r\n            ['Damage Decks']     = Layout.RequireFromGUID('b3ae5f'),\r\n            ['Huge Ship Damage Decks']     = Layout.RequireFromGUID('2bca1d'),\r\n            ['Tractor Beam']        = Layout.RequireFromGUID('e1c2fa'),\r\n            ['Reinforce']           = Layout.RequireFromGUID('8d45a9'),\r\n            ['Calculate']           = Layout.RequireFromGUID('eaca1b'),\r\n            ['Ion']                 = Layout.RequireFromGUID('3d8a79'),\r\n            ['Stress']              = Layout.RequireFromGUID('9851b8'),\r\n            ['Strain']              = Layout.RequireFromGUID('2abb81'),\r\n            ['Deplete']             = Layout.RequireFromGUID('b75e09'),\r\n            ['Evade']               = Layout.RequireFromGUID('9611d6'),\r\n            ['X-Wing Attack Die']   = Layout.RequireFromGUID('8a49f4'),\r\n            ['X-Wing Defense Die']  = Layout.RequireFromGUID('edbe72'),\r\n            ['Attack Dice changer'] = Layout.RequireFromGUID('e51a16'),\r\n            ['Defence Dice changer'] = Layout.RequireFromGUID('d9a9fa'),\r\n            ['Target Locks']        = Layout.RequireFromGUID('765252'),\r\n            ['Focus']               = Layout.RequireFromGUID('339681'),\r\n            ['Shield']              = Layout.RequireFromGUID('07d45b'),\r\n            ['Force']               = Layout.RequireFromGUID('ebb247'),\r\n            ['Energy']              = Layout.RequireFromGUID('717749'),\r\n            ['Charge']              = Layout.RequireFromGUID('224816'),\r\n            ['Critical Hit']        = Layout.RequireFromGUID('aae8f1'),\r\n            ['Fuse']                = Layout.RequireFromGUID('568727'),\r\n            ['Cloak']               = Layout.RequireFromGUID('2d8850'),\r\n            ['Disarm']              = Layout.RequireFromGUID('95141a'),\r\n            ['Jam']                 = Layout.RequireFromGUID('5806cd'),\r\n            ['All mines tokens']    = Layout.RequireFromGUID('688e04'),\r\n            ['Bomb drop tokens']    = Layout.RequireFromGUID('64f4d8'),\r\n            ['All bomb tokens']     = Layout.RequireFromGUID('e76065'),\r\n            ['Remotes']             = Layout.RequireFromGUID('3279a8'),\r\n            ['Spare parts']         = Layout.RequireFromGUID('8c8331'),\r\n            ['First player coin']   = Layout.RequireFromGUID('f5a488'),\r\n            ['1 Straight Templates']    = Layout.RequireFromGUID('637ad7'),\r\n            ['2 Straight Templates']    = Layout.RequireFromGUID('ef77a3'),\r\n            ['3 Straight Templates']    = Layout.RequireFromGUID('d81b3d'),\r\n            ['4 Straight Templates']    = Layout.RequireFromGUID('191bcf'),\r\n            ['5 Straight Templates']    = Layout.RequireFromGUID('0facc3'),\r\n            ['1 Bank Templates']        = Layout.RequireFromGUID('0e80e3'),\r\n            ['2 Bank Templates']        = Layout.RequireFromGUID('5ff1ea'),\r\n            ['3 Bank Templates']        = Layout.RequireFromGUID('5e6a99'),\r\n            ['1 Turn Templates']        = Layout.RequireFromGUID('4edff9'),\r\n            ['2 Turn Templates']        = Layout.RequireFromGUID('8aec47'),\r\n            ['3 Turn Templates']        = Layout.RequireFromGUID('747d61'),\r\n            ['Range 1 Rulers']          = Layout.RequireFromGUID('bf91d5'),\r\n            ['Range 1-2 Rulers']        = Layout.RequireFromGUID('0f08d4'),\r\n            ['Range 1-3 Rulers']        = Layout.RequireFromGUID('4f88fa'),\r\n            ['Range 1-5 Rulers']        = Layout.RequireFromGUID('3d90c5'),\r\n            ['Core Set Asteroids']      = Layout.RequireFromGUID('521a6a'),\r\n            ['TFA Set Asteroids']       = Layout.RequireFromGUID('3bac58'),\r\n            ['Debris Fields']           = Layout.RequireFromGUID('065d51'),\r\n            ['Gas Clouds']              = Layout.RequireFromGUID('8b1614'),\r\n            ['First player coin 2']     = Layout.RequireFromGUID('a50db2'),\r\n            ['1 Straight Templates 2'] = Layout.RequireFromGUID('7e4108'),\r\n            ['2 Straight Templates 2'] = Layout.RequireFromGUID('51ebe0'),\r\n            ['3 Straight Templates 2'] = Layout.RequireFromGUID('1dc80f'),\r\n            ['4 Straight Templates 2'] = Layout.RequireFromGUID('98b1bf'),\r\n            ['5 Straight Templates 2'] = Layout.RequireFromGUID('9ae5cb'),\r\n            ['1 Bank Templates 2']     = Layout.RequireFromGUID('26957c'),\r\n            ['2 Bank Templates 2']     = Layout.RequireFromGUID('405ab7'),\r\n            ['3 Bank Templates 2']     = Layout.RequireFromGUID('00e7dc'),\r\n            ['1 Turn Templates 2']     = Layout.RequireFromGUID('4d5ffb'),\r\n            ['2 Turn Templates 2']     = Layout.RequireFromGUID('2980ac'),\r\n            ['3 Turn Templates 2']     = Layout.RequireFromGUID('aa6531'),\r\n            ['Core Set Asteroids 2']   = Layout.RequireFromGUID('c19b69'),\r\n            ['TFA Set Asteroids 2']    = Layout.RequireFromGUID('bd3d1a'),\r\n            ['Debris Fields 2']        = Layout.RequireFromGUID('b8caf9'),\r\n            ['Gas Clouds 2']           = Layout.RequireFromGUID('c70f83'),\r\n            ['Range 1 Rulers 2']       = Layout.RequireFromGUID('68df70'),\r\n            ['Range 1-2 Rulers 2']     = Layout.RequireFromGUID('7e3b54'),\r\n            ['Range 1-3 Rulers 2']     = Layout.RequireFromGUID('a4e041'),\r\n\r\n            ['Deck Holder 1'] = Layout.RequireFromGUID('16e138'),\r\n            ['Deck Holder 2'] = Layout.RequireFromGUID('d43c5c'),\r\n            ['Deck Holder 3'] = Layout.RequireFromGUID('37932a'),\r\n            ['Deck Holder 4'] = Layout.RequireFromGUID('252512'),\r\n\r\n            ['Mine Rules']             = Layout.RequireFromGUID('ed1a41'),\r\n            ['Emplacement Rules 1']    = Layout.RequireFromGUID('463dd8'),\r\n            ['Emplacement Rules 2']    = Layout.RequireFromGUID('0ab824'),\r\n            ['Emplacement Rules 3']    = Layout.RequireFromGUID('05d16e'),\r\n            ['Other Rules']            = Layout.RequireFromGUID('9c1c58'),\r\n            ['Obstacle Rules']         = Layout.RequireFromGUID('ac9104'),\r\n            ['Turn Tracker']           = Layout.RequireFromGUID('83259b'),\r\n            ['Turn Marker']            = Layout.RequireFromGUID('ad6b64'),\r\n            ['End Marker']             = Layout.RequireFromGUID('9b8faf'),\r\n            ['Zone Extension 1']       = Layout.RequireFromGUID('e76836'),\r\n            ['Zone Extension 2']       = Layout.RequireFromGUID('b5f9c9'),\r\n            ['Zone Extension 3']       = Layout.RequireFromGUID('5a92c4'),\r\n            ['Zone Extension 4']       = Layout.RequireFromGUID('c9a7f6'),\r\n            ['Imp AI Sheet Bag']       = Layout.RequireFromGUID('0c4ffb'),\r\n            ['Rebel AI Sheet Bag']     = Layout.RequireFromGUID('6c59d6'),\r\n            ['Scum AI Sheet Bag']      = Layout.RequireFromGUID('f8a85b'),\r\n            ['Board Edge L']           = Layout.RequireFromGUID('ce0e09'),\r\n            ['Board Edge R']           = Layout.RequireFromGUID('e77d03'),\r\n            ['Board Edge T']           = Layout.RequireFromGUID('85f1b7'),\r\n            ['Board Edge B']           = Layout.RequireFromGUID('9500ad'),\r\n            ['IN 1']                   = Layout.RequireFromGUID('9d500c'),\r\n            ['IN 2']                   = Layout.RequireFromGUID('61784f'),\r\n            ['IN 3']                   = Layout.RequireFromGUID('7d52df'),\r\n            ['IN 4']                   = Layout.RequireFromGUID('940e76'),\r\n            ['IN 5']                   = Layout.RequireFromGUID('961d4e'),\r\n            ['IN 6']                   = Layout.RequireFromGUID('fea3d1'),\r\n            ['IN 7']                   = Layout.RequireFromGUID('637366'),\r\n            ['Player 1 Seat']          = Layout.RequireFromGUID('c43087'),\r\n            ['Player 2 Seat']          = Layout.RequireFromGUID('af6cec'),\r\n            ['Player 3 Seat']          = Layout.RequireFromGUID('58600e'),\r\n            ['Player 4 Seat']          = Layout.RequireFromGUID('e9b60d'),\r\n            ['Player 5 Seat']          = Layout.RequireFromGUID('f645b4'),\r\n            ['Player 6 Seat']          = Layout.RequireFromGUID('bef52a'),\r\n        }\r\n    end\r\nend\r\n\n----#include TTS_xwing/src/Layouts/LayoutElements\n\n\n\nLayout.layouts = {}\n\nLayout.AddLayout = function(layoutTable)\n    table.insert(Layout.layouts, layoutTable)\nend\n\n----#include TTS_xwing/src/Layouts/Standard\ndo\r\n    local standard = {}\r\n    standard.name = 'Standard'\r\n    standard.tableImage = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/table.jpg'\r\n    standard.elements = {\r\n        ['Damage Decks']            = { pos = {1.89, 1.06, -0.06},      rot = {0.00, 45.01, 0.00},      scale = {1.00, 0.95, 1.00} },\r\n        ['Huge Ship Damage Decks']  = { pos = {2.49, 1.00, -1.95},      rot = {0.00, 45.01, 0.00},      scale = {0.44, 0.42, 0.44} },\r\n        ['Tractor Beam']            = { pos = {-1.36, 1.06, -12.2},    rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95}},\r\n        ['Reinforce']               = { pos = {1.36, 1.06, -9.56},      rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Calculate']               = { pos = {-1.28, 1.06, -9.53},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Ion']                     = { pos = {-1.40, 1.07, 8.12},      rot = {0.00, 180.03, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Stress']                  = { pos = {-1.39, 1.07, 10.20},     rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Deplete']                 = { pos = {1.45, 1.07, 5.87},       rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Strain']                  = { pos = {1.43, 1.07, 10.16},      rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Evade']                   = { pos = {1.40, 1.06, -7.02},      rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['X-Wing Attack Die']       = { pos = {0.00, 1.08, -1.67},      rot = {0.00, 90.00, 90.00},     scale = {3.00, 3.00, 3.00} },\r\n        ['X-Wing Defense Die']      = { pos = {0.00, 1.08, 1.53},       rot = {90.00, 90.00, 0.00},     scale = {3.00, 3.00, 3.00} },\r\n        ['Attack Dice changer']     = { pos = {0.03, 1.01, -1.72},      rot = {0.00, 315.55, 0.00},     scale = {2.50, 0.10, 2.50} },\r\n        ['Defence Dice changer']    = { pos = {-0.03, 1.01, 1.49},      rot = {0.00, 137.13, 0.00},     scale = {2.50, 0.10, 2.50} },\r\n        ['Target Locks']            = { pos = {-1.93, 1.06, -0.06},     rot = {0.00, 180.00, 180.00},   scale = {0.95, 0.95, 0.95} },\r\n        ['Focus']                   = { pos = {-1.32, 1.06, -7.07},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Shield']                  = { pos = {1.46, 1.06, 3.81},       rot = {0.00, 0.00, 0.00},       scale = {0.95, 0.95, 0.95} },\r\n        ['Energy']                  = { pos = {2.91, 1.01, 1.60},       rot = {0.00, 0.00, 0.00},       scale = {0.38, 0.38, 0.38} },\r\n        ['Force']                   = { pos = {-1.44, 1.06, 6.01},      rot = {0.00, 90.00, 0.00},      scale = {0.95, 0.95, 0.95} },\r\n        ['Charge']                  = { pos = {-1.45, 1.06, 3.81},      rot = {0.00, 90.00, 0.00},      scale = {0.95, 0.95, 0.95} },\r\n        ['Critical Hit']            = { pos = {1.43, 1.07, 8.12},       rot = {0.00, 180.00, 0.00},     scale = {0.84, 1.08, 0.84} },\r\n        ['Cloak']                   = { pos = {1.36, 1.07, -4.37},      rot = {0.00, 270.00, 0.00},     scale = {1.00, 1.00, 1.00} },\r\n        ['Fuse']                    = { pos = {-1.31, 1.05, -4.36},     rot = {0.00, 90.00, 0.00},      scale = {0.93, 0.93, 0.93} },\r\n        ['Disarm']                  = { pos = {1.34, 1.06, -12.2},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Jam']                     = { pos = {0, 1.06, -14.66},        rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['All mines tokens']        = { pos = {1.36, 0.96, 12.54},      rot = {0.00, 90.00, 0.00},      scale = {0.30, 0.92, 0.30} },\r\n        ['Bomb drop tokens']        = { pos = {0.02, 1.05, 14.70},      rot = {0.00, 0.00, 0.00},       scale = {0.93, 1.19, 0.93} },\r\n        ['All bomb tokens']         = { pos = {-1.35, 0.96, 12.53},     rot = {0.00, 90.00, 0.00},      scale = {0.57, 0.83, 0.57} },\r\n        ['Remotes']                 = { pos = {-2.39, 1.06, 15.55},     rot = {0.00, 270.00, 0.00},     scale = {0.95, 1.71, 0.95} },\r\n        ['Spare parts']             = { pos = {2.35, 1.03, 15.59},      rot = {0.00, 180.00, 0.00},     scale = {0.80, 1.42, 0.80} },\r\n\r\n        ['1 Straight Templates']    = { pos = {-38.00, 0.96, -2.25}, rot = {0.00, 180.00, 0.00},    scale = {3.63, 3.63, 3.63} },\r\n        ['2 Straight Templates']    = { pos = {-40.00, 0.96, -3.00}, rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['3 Straight Templates']    = { pos = {-38.00, 0.96, 0.80},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['4 Straight Templates']    = { pos = {-40.00, 0.96, 1.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['5 Straight Templates']    = { pos = {-39.00, 0.96, 0.00},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['1 Bank Templates']        = { pos = {-39.50, 1.05, -7.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['2 Bank Templates']        = { pos = {-40.12, 1.05, -8.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['3 Bank Templates']        = { pos = {-40.75, 1.05, -9.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['1 Turn Templates']        = { pos = {-39.20, 0.96, 7.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['2 Turn Templates']        = { pos = {-39.70, 1.00, 8.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['3 Turn Templates']        = { pos = {-40.20, 0.96, 9.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['Core Set Asteroids']      = { pos = {-46.10, 0.99, -4.09}, rot = {0.00, 0.00, 0.00},   scale = {0.70, 0.53, 0.70} },\r\n        ['TFA Set Asteroids']       = { pos = {-45.97, 0.97, -0.02},  rot = {0.00, 0.00, 0.00},   scale = {0.38, 1.65, 0.38} },\r\n        ['Debris Fields']           = { pos = {-46.24, -0.27, 3.68}, rot = {0.00, 0.00, 0.00},   scale = {0.50, 1.90, 0.50} },\r\n        ['Gas Clouds']              = { pos = {-46.23, 0.96, 8.25}, rot = {0.00, 0.00, 0.00},   scale = {0.64, 1.14, 0.64} },\r\n        ['Range 1 Rulers']          = { pos = {-42.00, 1.00, -4.10}, rot = {0.00, 270.00, 0.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-2 Rulers']        = { pos = {-42.00, 1.00, 2.40}, rot = {0.00, 270.00, 180.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-3 Rulers']        = { pos = {-41.00, 1.00, 0.00}, rot = {0.00, 90.00, 0.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['First player coin']       = { pos = {-2.52, 0.96, -15.59}, rot = {0.00, 90.00, 0.00}, scale = {0.40, 0.86, 0.40}, lock = false},\r\n        ['1 Straight Templates 2']  = { pos = {38.00, 0.97, 2.25},   rot = {0.00, 180.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['2 Straight Templates 2']  = { pos = {40.00, 0.97, -3.00},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['3 Straight Templates 2']  = { pos = {38.00, 0.97, -0.80},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['4 Straight Templates 2']  = { pos = {40.00, 0.97, 1.50},   rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['5 Straight Templates 2']  = { pos = {39.00, 0.97, 0.00},   rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['1 Bank Templates 2']      = { pos = {39.50, 1.06, -7.50},  rot = {0.00, 225.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['2 Bank Templates 2']      = { pos = {40.12, 1.06, -8.50},  rot = {0.00, 225.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['3 Bank Templates 2']      = { pos = {40.75, 1.06, -9.50},  rot = {0.00, 225.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['1 Turn Templates 2']      = { pos = {39.20, 0.96, 7.50},   rot = {0.00, 90.00, 0.00},  scale = {3.63, 3.63, 3.63} },\r\n        ['2 Turn Templates 2']      = { pos = {39.70, 0.98, 8.50},   rot = {0.00, 90.00, 0.00},  scale = {3.63, 3.63, 3.63} },\r\n        ['3 Turn Templates 2']      = { pos = {40.20, 0.97, 9.50},   rot = {0.00, 90.00, 0.00},  scale = {3.63, 3.63, 3.63} },\r\n        ['Core Set Asteroids 2']    = { pos = {46.10, 0.99, -4.09}, rot = {0.00, 0.00, 0.00},   scale = {0.70, 0.53, 0.70} },\r\n        ['TFA Set Asteroids 2']     = { pos = {45.97, 0.97, -0.02},  rot = {0.00, 0.00, 0.00},   scale = {0.38, 1.65, 0.38} },\r\n        ['Debris Fields 2']         = { pos = {46.24, -0.27, 3.68}, rot = {0.00, 0.00, 0.00},   scale = {0.50, 1.90, 0.50} },\r\n        ['Gas Clouds 2']            = { pos = {46.23, 0.96, 8.25}, rot = {0.00, 0.00, 0.00},   scale = {0.64, 1.14, 0.64} },\r\n        ['Range 1 Rulers 2']        = { pos = {42.00, 1.00, 4.10}, rot = {0.00, 270.00, 180.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-2 Rulers 2']      = { pos = {42.00, 1.00, -2.40}, rot = {0.00, 270.01, 0.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-3 Rulers 2']      = { pos = {41.00, 1.00, 0.00}, rot = {0.00, 270.00, 180.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['First player coin 2']     = { pos = {2.52, 0.96, -15.59}, rot = {0.00, 270.00, 180.00}, scale = {0.40, 0.86, 0.40}, lock = false},\r\n        ['Deck Holder 1']   = { pos = {-40.00, 0.90, -15.00}, rot = {0.00, 0.00, 0.00}, scale = {0.65, 0.65, 0.65}},\r\n        ['Deck Holder 2']   = { pos = {-40.00, 0.90, 15.00}, rot = {0.00, 180.00, 0.00}, scale = {0.65, 0.65, 0.65}},\r\n        ['Deck Holder 3']   = { pos = {40.00, 0.90, 15.00}, rot = {0.00, 180.00, 0.00}, scale = {0.65, 0.65, 0.65}},\r\n        ['Deck Holder 4']   = { pos = {40.00, 0.90, -15.00}, rot = {0.00, 0.00, 0.00}, scale = {0.65, 0.65, 0.65}},\r\n    }\r\n    local assignOffset  = {-5, 1, 2}\r\n    local zonePos       = {22.5, 2.5, -32}\r\n    local zoneScale     = {44.9, 4, 12}\r\n    local stuffCenter   = {27, 0, -18.5}\r\n    local stuffSize     = {54, 1, 37}\r\n    local function left(data)\r\n        return Vect.ScaleEach(data, {-1, 1, 1})\r\n    end\r\n    local function opposite(data)\r\n        return Vect.ScaleEach(data, {1, 1, -1})\r\n    end\r\n    standard.hands = {\r\n        ['Red']     = { pos = {-22.50, 5.00, -40.00}, rot = {0.00, 0.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Blue']   = { pos = {-22.50, 5.00, 40.00}, rot = {0.00, 180.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Orange']    = { pos = {22.50, 5.00, 40.00}, rot = {0.00, 180.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Purple']    = { pos = {22.50, 5.00, -40.00}, rot = {0.00, 0.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Teal']  = { pos = {-50.00, 5.00, -15.00}, rot = {0.00, 90.28, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Green']  = { pos = {-52.00, 5.00, 0.00}, rot = {0.00, 90.00, 0.00}, scale = {5.01, 5.00, 1.00} },\r\n        ['Yellow']  = { pos = {-50.00, 5.00, 15.00}, rot = {0.00, 90.00, 0.00}, scale = {5.01, 5.00, 1.00} },\r\n        ['Brown']   = { pos = {50.00, 5.00, 15.00}, rot = {0.00, 270.00, 0.00}, scale = {5.01, 5.00, 1.00} },\r\n        ['Pink']    = { pos = {52.00, 5.00, 0.00}, rot = {0.00, 270.00, 0.00}, scale = {5.01, 5.00, 1.00} },\r\n        ['White']   = { pos = {50.00, 5.00, -15.00}, rot = {0.00, 270.00, 0.00}, scale = {5.01, 5.00, 1.00} },\r\n    }\r\n    standard.mats = {\r\n        ['Red-Blue'] = { pos = {-20.5142, 1, 0.00}, rot = {0.00, 180.00, 0.00}, scale = {1.63, 1.2, 1.63}, int = false },\r\n        ['Purple-Orange'] = { pos = {20.5142, 1, 0.00}, rot = {0.00, 180.00, 0.00}, scale = {1.63, 1.2, 1.63}, int = false },\r\n    }\r\n    function StandardCallMat(matName, callFcn)\r\n        local mat = Layout.GetMats()[standard.name][matName]\r\n        mat.call(callFcn)\r\n    end\r\n    function StandardChangeMatGR()\r\n        StandardCallMat('Red-Blue', 'NextImage')\r\n    end\r\n    function StandardChangeMatTB()\r\n        StandardCallMat('Purple-Orange', 'NextImage')\r\n    end\r\n    function StandardToggleRulersGR()\r\n        StandardCallMat('Red-Blue', 'ToggleRulers')\r\n    end\r\n    function StandardToggleRulersTB()\r\n        StandardCallMat('Purple-Orange', 'ToggleRulers')\r\n    end\r\n    function EpicLayout()\r\n        Layout.Switch(2)\r\n    end\r\n\r\n    local bWidth = 2200\r\n    local bHeight = 500\r\n    local bFontSize = 230\r\n    standard.controls = {\r\n        {   position = {50.5, 1, 0},\r\n            rotation = {0, 90, 0},\r\n            click_function = 'StandardChangeMatGR',\r\n            label = 'NEXT PLAYMAT'    },\r\n        {   position = {-50.5, 1, 0},\r\n            rotation = {0, -90, 0},\r\n            click_function = 'StandardChangeMatTB',\r\n            label = 'NEXT PLAYMAT'    },\r\n        {   position = {49, 1, 0},\r\n            rotation = {0, 90, 0},\r\n            click_function = 'StandardToggleRulersGR',\r\n            label = 'TOGGLE RULERS'    },\r\n        {   position = {-49, 1, 0},\r\n            rotation = {0, -90, 0},\r\n            click_function = 'StandardToggleRulersTB',\r\n            label = 'TOGGLE RULERS'    },\r\n        {   position = {52, 1, 0},\r\n            rotation = {0, 90, 0},\r\n            click_function = 'EpicLayout',\r\n            label = 'EPIC LAYOUT'    },\r\n        {   position = {80, 1, -35},\r\n            rotation = {0, 180, 0},\r\n            click_function = 'HotacLayout',\r\n            label = 'HOTAC MODE'    },\r\n    }\r\n    for k,button in ipairs(standard.controls) do\r\n        button.width = bWidth\r\n        button.height = bHeight\r\n        button.font_size = bFontSize\r\n        button.function_owner = self\r\n    end\r\n\r\n    Layout.AddLayout(standard)\r\nend\r\n\n----#include TTS_xwing/src/Layouts/Standard\n----#include TTS_xwing/src/Layouts/Epic\ndo\r\n    local epic = {}\r\n    epic.name = 'Epic'\r\n    epic.tableImage = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/tableEpic.jpg'\r\n    epic.elements = {\r\n        ['Damage Decks']            = { pos = {1.89 + 38, 1.06, -0.06},      rot = {0.00, 45.01, 0.00},      scale = {1.00, 0.95, 1.00} },\r\n        ['Huge Ship Damage Decks']  = { pos = {2.49 + 38, 1.00, -1.95},      rot = {0.00, 45.01, 0.00},      scale = {0.44, 0.42, 0.44} },\r\n        ['Tractor Beam']            = { pos = {-1.36 + 38, 1.06, -12.2},    rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95}},\r\n        ['Reinforce']               = { pos = {1.36 + 38, 1.06, -9.56},      rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Calculate']               = { pos = {-1.28 + 38, 1.06, -9.53},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Ion']                     = { pos = {-1.40 + 38, 1.07, 8.12},      rot = {0.00, 180.03, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Stress']                  = { pos = {-1.39 + 38, 1.07, 10.20},     rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Deplete']                 = { pos = {1.45 + 38, 1.07, 5.87},       rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Strain']                  = { pos = {1.43 + 38, 1.07, 10.16},      rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Evade']                   = { pos = {1.40 + 38, 1.06, -7.02},      rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['X-Wing Attack Die']       = { pos = {0.00 + 38, 1.08, -1.67},      rot = {0.00, 90.00, 90.00},     scale = {3.00, 3.00, 3.00} },\r\n        ['X-Wing Defense Die']      = { pos = {0.00 + 38, 1.08, 1.53},       rot = {90.00, 90.00, 0.00},     scale = {3.00, 3.00, 3.00} },\r\n        ['Attack Dice changer']     = { pos = {0.03 + 38, 1.01, -1.72},      rot = {0.00, 315.55, 0.00},     scale = {2.50, 0.10, 2.50} },\r\n        ['Defence Dice changer']    = { pos = {-0.03+ 38, 1.01, 1.49},      rot = {0.00, 137.13, 0.00},     scale = {2.50, 0.10, 2.50} },\r\n        ['Target Locks']            = { pos = {-1.93    + 38, 1.06, -0.06},     rot = {0.00, 180.00, 180.00},   scale = {0.95, 0.95, 0.95} },\r\n        ['Focus']                   = { pos = {-1.32 + 38, 1.06, -7.07},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Shield']                  = { pos = {1.46 + 38, 1.06, 3.81},       rot = {0.00, 0.00, 0.00},       scale = {0.95, 0.95, 0.95} },\r\n        ['Energy']                  = { pos = {2.91 + 38, 1.01, 1.60},       rot = {0.00, 0.00, 0.00},       scale = {0.38, 0.38, 0.38} },\r\n        ['Force']                   = { pos = {-1.44 + 38, 1.06, 6.01},      rot = {0.00, 90.00, 0.00},      scale = {0.95, 0.95, 0.95} },\r\n        ['Charge']                  = { pos = {-1.45 + 38, 1.06, 3.81},      rot = {0.00, 90.00, 0.00},      scale = {0.95, 0.95, 0.95} },\r\n        ['Critical Hit']            = { pos = {1.43 + 38, 1.07, 8.12},       rot = {0.00, 180.00, 0.00},     scale = {0.84, 1.08, 0.84} },\r\n        ['Cloak']                   = { pos = {1.36 + 38, 1.07, -4.37},      rot = {0.00, 270.00, 0.00},     scale = {1.00, 1.00, 1.00} },\r\n        ['Fuse']                    = { pos = {-1.31 + 38, 1.05, -4.36},     rot = {0.00, 90.00, 0.00},      scale = {0.93, 0.93, 0.93} },\r\n        ['Disarm']                  = { pos = {1.34 + 38, 1.06, -12.2},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Jam']                     = { pos = {-0.14 + 38, 1.06, -14.66},    rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['All mines tokens']        = { pos = {1.36 + 38, 0.96, 12.54},      rot = {0.00, 90.00, 0.00},      scale = {0.30, 0.92, 0.30} },\r\n        ['Bomb drop tokens']        = { pos = {0.02 + 38, 1.05, 14.70},      rot = {0.00, 0.00, 0.00},       scale = {0.93, 1.19, 0.93} },\r\n        ['All bomb tokens']         = { pos = {-1.35 + 38, 0.96, 12.53},     rot = {0.00, 90.00, 0.00},      scale = {0.57, 0.83, 0.57} },\r\n        ['Remotes']                 = { pos = {-2.39 + 38, 1.06, 15.55},     rot = {0.00, 270.00, 0.00},     scale = {0.95, 1.71, 0.95} },\r\n        ['Spare parts']             = { pos = {2.35 + 38, 1.03, 15.59},      rot = {0.00, 180.00, 0.00},     scale = {0.80, 1.42, 0.80} },\r\n        ['1 Straight Templates']    = { pos = {-39.00, 0.96, -2.25}, rot = {0.00, 180.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['2 Straight Templates']    = { pos = {-41.00, 0.96, -3.00}, rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['3 Straight Templates']    = { pos = {-39.00, 0.96, 0.80},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['4 Straight Templates']    = { pos = {-41.00, 0.96, 1.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['5 Straight Templates']    = { pos = {-40.00, 0.96, 0.00},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['1 Bank Templates']        = { pos = {-39.50, 1.05, -7.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['2 Bank Templates']        = { pos = {-40.12, 1.05, -8.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['3 Bank Templates']        = { pos = {-40.75, 1.05, -9.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['1 Turn Templates']        = { pos = {-39.20, 0.96, 7.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['2 Turn Templates']        = { pos = {-39.70, 1.00, 8.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['3 Turn Templates']        = { pos = {-40.20, 0.96, 9.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['Core Set Asteroids']      = { pos = {-46.10, 0.99, -4.09}, rot = {0.00, 0.00, 0.00},   scale = {0.70, 0.53, 0.70} },\r\n        ['TFA Set Asteroids']       = { pos = {-45.97, 0.97, -0.02},  rot = {0.00, 0.00, 0.00},   scale = {0.38, 1.65, 0.38} },\r\n        ['Debris Fields']           = { pos = {-46.24, -0.27, 3.68}, rot = {0.00, 0.00, 0.00},   scale = {0.50, 1.90, 0.50} },\r\n        ['Gas Clouds']              = { pos = {-46.23, 0.96, 8.25}, rot = {0.00, 0.00, 0.00},   scale = {0.64, 1.14, 0.64} },\r\n        ['Range 1 Rulers']          = { pos = {-42.00, 1.00, -4.10}, rot = {0.00, 269.99, 0.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-2 Rulers']        = { pos = {-42.00, 1.00, 2.40}, rot = {0.00, 270.00, 180.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-3 Rulers']        = { pos = {-41.00, 1.00, 0.00}, rot = {0.00, 90.00, 0.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-5 Rulers']        = { pos = {-43.00, 1.00, 0.00}, rot = {0.00, 0.00, 180.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Deck Holder 1']   = { pos = {-38.50, 0.90, -14.50}, rot = {0.00, 0.00, 0.00}, scale = {0.65, 0.65, 0.65}},\r\n        ['Deck Holder 2']   = { pos = {-38.50, 0.90, 14.50}, rot = {0.00, 180.00, 0.00}, scale = {0.65, 0.65, 0.65}},\r\n    }\r\n    local zonePos = {5, 2.5, 32}\r\n    local zoneScale = {100, 4, 12}\r\n    local assignOffset  = {-5, 1, 2}\r\n    local stuffCenter   = {0, 0, 18.5}\r\n    local stuffSize     = {108, 1, 37}\r\n    local function opposite(data)\r\n        return Vect.ScaleEach(data, {1, 1, -1})\r\n    end\r\n    local function left(data)\r\n        return Vect.ScaleEach(data, {-1, 1, 1})\r\n    end\r\n    epic.hands = {\r\n        ['Purple']     = { pos = {-48.00, 5.00, -15.00}, rot = {0.00, 90.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Green']   = { pos = {-52.00, 5.00, -5.00}, rot = {0.00, 90.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Orange']    = { pos = {-48.00, 5.00, 5.00}, rot = {0.00, 90.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Teal']    = { pos = {52.00, 5.00, -15.00}, rot = {0.00, 270.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Red']  = { pos = {0.00, 5.00, -40.00}, rot = {0.00, 0.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Blue']  = { pos = {0.00, 5.00, 40.00}, rot = {0.00, 180.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Yellow']  = { pos = {-52.00, 5.00, 15.00}, rot = {0.00, 90.00, 0.00}, scale = {5.01, 5.00, 1.00} },\r\n        ['Brown']   = { pos = {48.00, 5.00, 15.00}, rot = {0.00, 270.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Pink']    = { pos = {52.00, 5.00, 5.00}, rot = {0.00, 270.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['White']   = { pos = {48.00, 5.00, -5.00}, rot = {0.00, 270.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n    }\r\n    epic.mats = {\r\n        ['Main'] = { pos = {-3.00, 1, 0.00}, rot = {0.00, 180.00, 0.00}, scale = {3.41, 1.20, 1.64}, int = false },\r\n    }\r\n    function EpicChangeMat()\r\n        local mat = Layout.GetMats()[epic.name].Main\r\n        mat.call('NextImage')\r\n    end\r\n    function EpicToggleRulers()\r\n        local mat = Layout.GetMats()[epic.name].Main\r\n        mat.call('ToggleRulers')\r\n    end\r\n    function StandardLayout()\r\n        Layout.Switch(1)\r\n    end\r\n    function HotacLayout()\r\n        Layout.Switch(3)\r\n    end\r\n\r\n    local bWidth = 2200\r\n    local bHeight = 500\r\n    local bFontSize = 230\r\n    epic.controls = {\r\n        {   position = {50.5, 1, 0},\r\n            rotation = {0, 90, 0},\r\n            click_function = 'EpicChangeMat',\r\n            label = 'NEXT PLAYMAT'    },\r\n        {   position = {49, 1, 0},\r\n            rotation = {0, 90, 0},\r\n            click_function = 'EpicToggleRulers',\r\n            label = 'TOGGLE RULERS'    },\r\n        {   position = {52, 1, 0},\r\n            rotation = {0, 90, 0},\r\n            click_function = 'StandardLayout',\r\n            label = 'STANDARD LAYOUT'    },\r\n        {   position = {80, 1, -35},\r\n            rotation = {0, 180, 0},\r\n            click_function = 'HotacLayout',\r\n            label = 'HOTAC MODE'    },\r\n    }\r\n\r\n\r\n    for k,button in ipairs(epic.controls) do\r\n        button.width = bWidth\r\n        button.height = bHeight\r\n        button.font_size = bFontSize\r\n        button.function_owner = self\r\n    end\r\n\r\n    Layout.AddLayout(epic)\r\nend\r\n\n----#include TTS_xwing/src/Layouts/Epic\n----#include TTS_xwing/src/Layouts/HotAC\ndo\r\n    local hotac = {}\r\n    hotac.name = 'HotAC'\r\n    hotac.tableImage = 'https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/table.jpg'\r\n    hotac.elements = {\r\n        ['Damage Decks']            = { pos = {1.89 + 38, 1.06, -0.06},      rot = {0.00, 45.01, 0.00},      scale = {1.00, 0.95, 1.00} },\r\n        ['Huge Ship Damage Decks']  = { pos = {2.49 + 38, 1.00, -1.95},      rot = {0.00, 45.01, 0.00},      scale = {0.44, 0.42, 0.44} },\r\n        ['Tractor Beam']            = { pos = {-1.36 + 38, 1.06, -12.2},    rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95}},\r\n        ['Reinforce']               = { pos = {1.36 + 38, 1.06, -9.56},      rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Calculate']               = { pos = {-1.28 + 38, 1.06, -9.53},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Ion']                     = { pos = {-1.40 + 38, 1.07, 8.12},      rot = {0.00, 180.03, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Stress']                  = { pos = {-1.39 + 38, 1.07, 10.20},     rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Deplete']                 = { pos = {1.45 + 38, 1.07, 5.87},       rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Strain']                  = { pos = {1.43 + 38, 1.07, 10.16},      rot = {0.00, 180.00, 0.00},     scale = {1.08, 1.08, 1.08} },\r\n        ['Evade']                   = { pos = {1.40 + 38, 1.06, -7.02},      rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['X-Wing Attack Die']       = { pos = {0.00 + 38, 1.08, -1.67},      rot = {0.00, 90.00, 90.00},     scale = {3.00, 3.00, 3.00} },\r\n        ['X-Wing Defense Die']      = { pos = {0.00 + 38, 1.08, 1.53},       rot = {90.00, 90.00, 0.00},     scale = {3.00, 3.00, 3.00} },\r\n        ['Attack Dice changer']     = { pos = {0.03 + 38, 1.01, -1.72},      rot = {0.00, 315.55, 0.00},     scale = {2.50, 0.10, 2.50} },\r\n        ['Defence Dice changer']    = { pos = {-0.03+ 38, 1.01, 1.49},      rot = {0.00, 137.13, 0.00},     scale = {2.50, 0.10, 2.50} },\r\n        ['Target Locks']            = { pos = {-1.93    + 38, 1.06, -0.06},     rot = {0.00, 180.00, 180.00},   scale = {0.95, 0.95, 0.95} },\r\n        ['Focus']                   = { pos = {-1.32 + 38, 1.06, -7.07},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Shield']                  = { pos = {1.46 + 38, 1.06, 3.81},       rot = {0.00, 0.00, 0.00},       scale = {0.95, 0.95, 0.95} },\r\n        ['Energy']                  = { pos = {2.91 + 38, 1.01, 1.60},       rot = {0.00, 0.00, 0.00},       scale = {0.38, 0.38, 0.38} },\r\n        ['Force']                   = { pos = {-1.44 + 38, 1.06, 6.01},      rot = {0.00, 90.00, 0.00},      scale = {0.95, 0.95, 0.95} },\r\n        ['Charge']                  = { pos = {-1.45 + 38, 1.06, 3.81},      rot = {0.00, 90.00, 0.00},      scale = {0.95, 0.95, 0.95} },\r\n        ['Critical Hit']            = { pos = {1.43 + 38, 1.07, 8.12},       rot = {0.00, 180.00, 0.00},     scale = {0.84, 1.08, 0.84} },\r\n        ['Cloak']                   = { pos = {1.36 + 38, 1.07, -4.37},      rot = {0.00, 270.00, 0.00},     scale = {1.00, 1.00, 1.00} },\r\n        ['Fuse']                    = { pos = {-1.31 + 38, 1.05, -4.36},     rot = {0.00, 90.00, 0.00},      scale = {0.93, 0.93, 0.93} },\r\n        ['Disarm']                  = { pos = {1.34 + 38, 1.06, -12.2},     rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['Jam']                     = { pos = {-0.14 + 38, 1.06, -14.66},    rot = {0.00, 180.00, 0.00},     scale = {0.95, 0.95, 0.95} },\r\n        ['All mines tokens']        = { pos = {1.36 + 38, 0.96, 12.54},      rot = {0.00, 90.00, 0.00},      scale = {0.30, 0.92, 0.30} },\r\n        ['Bomb drop tokens']        = { pos = {0.02 + 38, 1.05, 14.70},      rot = {0.00, 0.00, 0.00},       scale = {0.93, 1.19, 0.93} },\r\n        ['All bomb tokens']         = { pos = {-1.35 + 38, 0.96, 12.53},     rot = {0.00, 90.00, 0.00},      scale = {0.57, 0.83, 0.57} },\r\n        ['Remotes']                 = { pos = {-2.39 + 38, 1.06, 15.55},     rot = {0.00, 270.00, 0.00},     scale = {0.95, 1.71, 0.95} },\r\n        ['Spare parts']             = { pos = {2.35 + 38, 1.03, 15.59},      rot = {0.00, 180.00, 0.00},     scale = {0.80, 1.42, 0.80} },\r\n        ['1 Straight Templates']    = { pos = {-39.00, 0.96, -2.25}, rot = {0.00, 180.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['2 Straight Templates']    = { pos = {-41.00, 0.96, -3.00}, rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['3 Straight Templates']    = { pos = {-39.00, 0.96, 0.80},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['4 Straight Templates']    = { pos = {-41.00, 0.96, 1.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['5 Straight Templates']    = { pos = {-40.00, 0.96, 0.00},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['1 Bank Templates']        = { pos = {-39.50, 1.05, -7.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['2 Bank Templates']        = { pos = {-40.12, 1.05, -8.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['3 Bank Templates']        = { pos = {-40.75, 1.05, -9.50}, rot = {0.00, 270.00, 0.00}, scale = {3.63, 3.63, 3.63} },\r\n        ['1 Turn Templates']        = { pos = {-39.20, 0.96, 7.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['2 Turn Templates']        = { pos = {-39.70, 1.00, 8.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['3 Turn Templates']        = { pos = {-40.20, 0.96, 9.50},  rot = {0.00, 0.00, 0.00},   scale = {3.63, 3.63, 3.63} },\r\n        ['Core Set Asteroids']      = { pos = {-46.10, 0.99, -4.09}, rot = {0.00, 0.00, 0.00},   scale = {0.70, 0.53, 0.70} },\r\n        ['TFA Set Asteroids']       = { pos = {-45.97, 0.97, -0.02},  rot = {0.00, 0.00, 0.00},   scale = {0.38, 1.65, 0.38} },\r\n        ['Debris Fields']           = { pos = {-46.24, -0.27, 3.68}, rot = {0.00, 0.00, 0.00},   scale = {0.50, 1.90, 0.50} },\r\n        ['Gas Clouds']              = { pos = {-46.23, 0.96, 8.25}, rot = {0.00, 0.00, 0.00},   scale = {0.64, 1.14, 0.64} },\r\n        ['Range 1 Rulers']          = { pos = {-42.00, 1.00, -4.10}, rot = {0.00, 269.99, 0.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-2 Rulers']        = { pos = {-42.00, 1.00, 2.40}, rot = {0.00, 270.00, 180.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-3 Rulers']        = { pos = {-41.00, 1.00, 0.00}, rot = {0.00, 90.00, 0.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Range 1-5 Rulers']        = { pos = {-43.00, 1.00, 0.00}, rot = {0.00, 0.00, 180.00}, scale = {0.63, 0.63, 0.63} },\r\n        ['Deck Holder 1']           = { pos = {-38.50, 0.90, -14.50}, rot = {0.00, 0.00, 0.00}, scale = {0.65, 0.65, 0.65}},\r\n        ['Deck Holder 2']           = { pos = {-38.50, 0.90, 14.50}, rot = {0.00, 180.00, 0.00}, scale = {0.65, 0.65, 0.65}},\r\n        ['Mine Rules']              = { pos = {50.00, 1.00, 34.50}, rot = {0.00, 180.00, 0.00}, scale = {3.58, 1.00, 3.58}},\r\n        ['Emplacement Rules 1']     = { pos = {50.00, 1.00, 23.50}, rot = {0.00, 180.00, 0.00}, scale = {3.58, 1.00, 3.58}},\r\n        ['Emplacement Rules 2']     = { pos = {50.00, 1.00, 12.50}, rot = {0.00, 180.00, 0.00}, scale = {3.58, 1.00, 3.58}},\r\n        ['Emplacement Rules 3']     = { pos = {50.00, 1.00, 1.50}, rot = {0.00, 180.00, 0.00}, scale = {3.58, 1.00, 3.58}},\r\n        ['Other Rules']             = { pos = {50.00, 1.00, -9.50}, rot = {0.00, 180.00, 0.00}, scale = {3.58, 1.00, 3.58}},\r\n        ['Obstacle Rules']          = { pos = {50.00, 1.00, -20.50}, rot = {0.00, 180.00, 0.00}, scale = {3.58, 1.00, 3.58}},\r\n        ['Turn Tracker']            = { pos = {-2.00, 0.96, 27.00}, rot = {0.00, 180.00, 0.00}, scale = {0.655, 1.00, 0.80}},\r\n        ['Turn Marker']             = { pos = {-41.50, 1.12, 27.00}, rot = {0.00, 180.00, 0.00}, scale = {0.67, 1.00, 0.67}},\r\n        ['End Marker']              = { pos = {37.00, 1.00, 27.00}, rot = {0.00, 180.00, 0.00}, scale = {0.97, 1.00, 0.97}},\r\n        ['Zone Extension 1']        = { pos = {-49.00, 0.65, 56.00}, rot = {0.00, 0.00, 180.00}, scale = {1.89, 0.5, 4.0}},\r\n        ['Zone Extension 2']        = { pos = {20.25, 0.65, 56.00}, rot = {0.00, 0.00, 180.00}, scale = {1.89, 0.5, 4.0}},\r\n        ['Zone Extension 3']        = { pos = {-49.00, 0.65, -42.50}, rot = {0.00, 0.00, 180.00}, scale = {1.89, 0.5, 1.23}},\r\n        ['Zone Extension 4']        = { pos = {20.25, 0.65, -42.50}, rot = {0.00, 0.00, 180.00}, scale = {1.89, 0.5, 1.23}},\r\n        ['Imp AI Sheet Bag']        = { pos = {42.00, 0.78, 35.00}, rot = {0.00, 0.00, 0.00}, scale = {1.0, 1.0, 1.0}},\r\n        ['Rebel AI Sheet Bag']      = { pos = {42.00, 0.78, 27.00}, rot = {0.00, 0.00, 0.00}, scale = {1.0, 1.0, 1.0}},\r\n        ['Scum AI Sheet Bag']       = { pos = {42.00, 0.78, 19.00}, rot = {0.00, 0.00, 0.00}, scale = {1.0, 1.0, 1.0}},\r\n        ['Board Edge L']            = { pos = {-19.50, 0.8, 0.00}, rot = {0.00, 0.00, 0.00}, scale = {0.5, 0.5, 16.75}},\r\n        ['Board Edge R']            = { pos = {13.50, 0.8, 0.00}, rot = {0.00, 0.00, 0.00}, scale = {0.5, 0.5, 16.75}},\r\n        ['Board Edge T']            = { pos = {-3.00, 0.8, 16.50}, rot = {0.00, 90.00, 0.00}, scale = {0.5, 0.5, 16.50}},\r\n        ['Board Edge B']            = { pos = {-3.00, 0.8, -16.50}, rot = {0.00, 90.00, 0.00}, scale = {0.5, 0.5, 16.50}},\r\n        ['IN 1']                    = { pos = {42.50, 1.0, -15.00}, rot = {0.00, 180.00, 0.00}, scale = {0.95, 0.95, 0.95}},\r\n        ['IN 2']                    = { pos = {42.50, 1.0, -13.00}, rot = {0.00, 180.00, 0.00}, scale = {0.95, 0.95, 0.95}},\r\n        ['IN 3']                    = { pos = {42.50, 1.0, -11.00}, rot = {0.00, 180.00, 0.00}, scale = {0.95, 0.95, 0.95}},\r\n        ['IN 4']                    = { pos = {42.50, 1.0, -9.00}, rot = {0.00, 180.00, 0.00}, scale = {0.95, 0.95, 0.95}},\r\n        ['IN 5']                    = { pos = {42.50, 1.0, -7.00}, rot = {0.00, 180.00, 0.00}, scale = {0.95, 0.95, 0.95}},\r\n        ['IN 6']                    = { pos = {42.50, 1.0, -5.00}, rot = {0.00, 180.00, 0.00}, scale = {0.95, 0.95, 0.95}},\r\n        ['IN 7']                    = { pos = {42.50, 1.0, -3.00}, rot = {0.00, 180.00, 0.00}, scale = {0.95, 0.95, 0.95}},\r\n        ['Player 1 Seat']           = { pos = {-42.50, 0.97, -39.00}, rot = {0.00, 180.00, 0.00}, scale = {3.00, 1.00, 5.00}},\r\n        ['Player 2 Seat']           = { pos = {-25.50, 0.97, -39.00}, rot = {0.00, 180.00, 0.00}, scale = {3.00, 1.00, 5.00}},\r\n        ['Player 3 Seat']           = { pos = {-8.50, 0.97, -39.00}, rot = {0.00, 180.00, 0.00}, scale = {3.00, 1.00, 5.00}},\r\n        ['Player 4 Seat']           = { pos = {8.50, 0.97, -39.00}, rot = {0.00, 180.00, 0.00}, scale = {3.00, 1.00, 5.00}},\r\n        ['Player 5 Seat']           = { pos = {25.50, 0.97, -39.00}, rot = {0.00, 180.00, 0.00}, scale = {3.00, 1.00, 5.00}},\r\n        ['Player 6 Seat']           = { pos = {42.50, 0.97, -39.00}, rot = {0.00, 180.00, 0.00}, scale = {3.00, 1.00, 5.00}},\r\n    }\r\n    local zonePos = {5, 2.5, 32}\r\n    local zoneScale = {100, 4, 12}\r\n    local assignOffset  = {-5, 1, 2}\r\n    local stuffCenter   = {0, 0, 18.5}\r\n    local stuffSize     = {108, 1, 37}\r\n    local function opposite(data)\r\n        return Vect.ScaleEach(data, {1, 1, -1})\r\n    end\r\n    local function left(data)\r\n        return Vect.ScaleEach(data, {-1, 1, 1})\r\n    end\r\n    hotac.hands = {\r\n        ['Purple']     = { pos = {42.50, 5.00, -50.00}, rot = {0.00, 0.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Green']   = { pos = {8.50, 5.00, -50.00}, rot = {0.00, 0.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Orange']    = { pos = {-25.50, 5.00, -50.00}, rot = {0.00, 0.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Teal']    = { pos = {80.00, 5.00, -15.00}, rot = {0.00, 270.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Red']  = { pos = {-42.50, 5.00, -50.00}, rot = {0.00, 0.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Blue']  = { pos = {25.50, 5.00, -50.00}, rot = {0.00, 0.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Yellow']  = { pos = {-8.50, 5.00, -50.00}, rot = {0.00, 0.00, 0.00}, scale = {5.01, 5.00, 1.00} },\r\n        ['Brown']   = { pos = {80.00, 5.00, 15.00}, rot = {0.00, 270.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['Pink']    = { pos = {80.00, 5.00, 5.00}, rot = {0.00, 270.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n        ['White']   = { pos = {80.00, 5.00, -5.00}, rot = {0.00, 270.00, 0.00}, scale = {5.00, 5.00, 1.00} },\r\n    }\r\n    hotac.mats = {\r\n        ['Main'] = { pos = {-3.00, 1, 0.00}, rot = {0.00, 180.00, 0.00}, scale = {1.63, 1.20, 1.63}, int = false },\r\n    }\r\n    function HotacChangeMat()\r\n        local mat = Layout.GetMats()[hotac.name].Main\r\n        mat.call('NextImage')\r\n    end\r\n    function HotacToggleRulers()\r\n        local mat = Layout.GetMats()[hotac.name].Main\r\n        mat.call('ToggleRulers')\r\n    end\r\n    function StandardLayout()\r\n        Layout.Switch(1)\r\n    end\r\n\r\n    local bWidth = 2200\r\n    local bHeight = 500\r\n    local bFontSize = 230\r\n    hotac.controls = {\r\n        {   position = {50.5, 1, 0},\r\n            rotation = {0, 90, 0},\r\n            click_function = 'HotacChangeMat',\r\n            label = 'NEXT PLAYMAT'    },\r\n        {   position = {49, 1, 0},\r\n            rotation = {0, 90, 0},\r\n            click_function = 'HotacToggleRulers',\r\n            label = 'TOGGLE RULERS'    },\r\n        {   position = {80, 1, -35},\r\n            rotation = {0, 180, 0},\r\n            click_function = 'StandardLayout',\r\n            label = 'STANDARD MODE'    },\r\n    }\r\n\r\n\r\n    for k,button in ipairs(hotac.controls) do\r\n        button.width = bWidth\r\n        button.height = bHeight\r\n        button.font_size = bFontSize\r\n        button.function_owner = self\r\n    end\r\n\r\n    Layout.AddLayout(hotac)\r\nend\r\n\n----#include TTS_xwing/src/Layouts/HotAC\n\nself.setPosition({0,3,0})\n\nstate = {\n    active = true,\n    index = 1,\n    dialZones = {},\n    tempObjs = {}\n}\n\nLayout.AddTempObj = function(obj)\n    state.tempObj[obj.getGUID()] = true\nend\n\nLayout.ClearTempObjs = function()\n    for guid in pairs(state.tempObj) do\n        local obj = getObjectFromGUID(guid)\n        if obj then obj.destruct() end\n    end\nend\n\nLayout.NearLocal = function(zone, pos)\n    local posAdj = Vect.ScaleEach(Vect.Sub(pos, {0, zone.getPosition()[2], zone.getScale()[3]/2}), Vect.Inverse(zone.getScale()))\n    posAdj[1] = posAdj[1] + 0.5*math.sgn(posAdj[1])\n    return posAdj\nend\n\nLayout.NearGlobal = function(zone, pos)\n    local posAdj = Vect.ScaleEach(Vect.Sub(pos, {0, zone.getPosition()[2], zone.getScale()[3]/2}), Vect.Inverse(zone.getScale()))\n    posAdj[1] = posAdj[1] + 0.5*math.sgn(posAdj[1])\n    return zone.positionToWorld(Vect.ScaleEach(posAdj, {-1, 1, 1}))\nend\n\nLayout.extIndex = 1\n\nLayout.required = {}\nfunction onObjectDestroyed(obj)\n    if state.active and Layout.required[obj] then\n        --broadcastToAll('An object that was part of layout system was destroyed, disabling layouts', {1, 0.4, 0})\n        broadcastToAll('You\\'re breaking the game, please don\\'t', {1, 0.4, 0})\n        state.active = false\n    end\n    if state.dialZones[obj.getGUID()] then\n        state.dialZones[obj.getGUID()] = nil\n        SaveState()\n    end\nend\nLayout.RequireFromGUID = function(guid)\n    local obj = (getObjectFromGUID(guid) or error('Layout.RequireFromGUID: object with \\'' .. guid .. '\\' GUID not found'))\n    Layout.required[obj] = true\n    return obj\nend\n\nLayout.GetTableRef = function()\n    local hits = Physics.cast({\n        origin = {0, 0, 0},\n        direction = {0, -1, 0},\n        type = 3,\n        size = {1, 1, 1},\n        orientation = {0, 0, 0},\n        debug = false\n    })\n    for k, hitData in pairs(hits) do\n        if hitData.hit_object.type== 'Surface' then\n            return hitData.hit_object\n        end\n    end\n    error('Layout.GetTableRef: No surface found')\nend\n\n\nLayout.Hide = function(obj)\n    obj.highlightOff()\n    obj.lock()\n    obj.tooltip = false\n    obj.interactable = false\n    obj.setPositionSmooth({0, -5, 0}, false, true)\n    local handlers = obj.getTable('__XW_LayoutHandlers') or {}\n    if handlers.hide then\n        obj.call(handlers.hide)\n    end\n    obj.setScale(Vect.Scale(obj.getScale(), 0.1))\nend\n\nLayout.Put = function(obj, data)\n    obj.setLock(data.lock ~= false)\n    local int = data.int\n    if int == nil then int = true end\n    obj.interactable = int\n    obj.tooltip = int\n    obj.setPositionSmooth(data.pos, false, true)\n    obj.setRotationSmooth(data.rot, false, true)\n    obj.setScale(data.scale)\n    if data.set then\n        data.set(obj)\n    end\n    local handlers = obj.getTable('__XW_LayoutHandlers') or {}\n    if handlers.show then\n        obj.call(handlers.show)\n    end\nend\n\nLayout.GetMats = function()\n    local mats = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj.getVar('__XW_Mat') then\n            local lay, ID = obj.getVar('__XW_MatLayout'), obj.getVar('__XW_MatID')\n            if not mats[lay] then\n                mats[lay] = {}\n            end\n            mats[lay][ID] = obj\n        end\n    end\n    return mats\nend\n\nLayout.Switch = function(newIndex)\n    self.clearButtons()\n    if not state.active then\n        broadcastToAll('Layout system disabled', {1, 0.2, 0})\n        return\n    end\n    --table.print(Layout.layouts)\n    local lay = Layout.layouts[newIndex]\n    --print('Switch to ' .. lay.name)\n    local tabRef = Layout.GetTableRef()\n    local cust = tabRef.getCustomObject()\n    cust.image = lay.tableImage\n    tabRef.setCustomObject(cust)\n    tabRef.reload()\n    for name,el in pairs(Layout.elements) do\n        if lay.elements[name] then\n            el.highlightOn({0, 0, 1}, 2)\n            Layout.Put(el, lay.elements[name])\n        else\n            Layout.Hide(el)\n        end\n    end\n\n    local matData = Layout.GetMats()\n    for layout, mats in pairs(matData) do\n        if layout ~= lay.name then\n            for _,mat in pairs(mats) do\n                Layout.Hide(mat)\n            end\n        else\n            for id,mat in pairs(mats) do\n                if lay.mats[id] then\n                    Layout.Put(mat, lay.mats[id])\n                else\n                    Layout.Hide(mat)\n                end\n            end\n        end\n    end\n    Layout.CreateControls(newIndex)\n    function setHandsDelayed()\n        for k=1,10 do\n            coroutine.yield()\n        end\n        for color, data in pairs(lay.hands) do\n            Player[color].setHandTransform({\n                position = data.pos,\n                rotation = data.rot,\n                scale    = data.scale,\n            })\n        end\n        return 1\n    end\n    startLuaCoroutine(self, 'setHandsDelayed')\n    state.index = newIndex\n    SaveState()\nend\n\nLayout.CreateControls = function(index)\n    local lay = Layout.layouts[index]\n    for k,button in pairs(lay.controls) do\n        self.createButton(button)\n    end\nend\n\nfunction onChat(message, player)\n    --[[\n    if message == 'std' then\n        Layout.Switch(1)\n    end\n    if message == 'ep' then\n        Layout.Switch(2)\n    end\n    --]]\nend\n\n\nfunction onLoad(saveState)\n    local load = JSON.decode(saveState)\n    state.active = true --load.active\n    state.index = load.index\n    Layout.FillElements()\n    Layout.CreateControls(load.index)\n    local sPos = self.getPosition()\n    self.setPosition({sPos[1], 0, sPos[3]})\n    self.interactable = false\n    self.tooltip = false\n    self.lock()\n\n    for _, layoutElement in pairs(getObjectsWithTag('TempLayoutElement')) do\n      layoutElement.destruct()\n    end\n    --addContextMenuItem(\"Standard setup\", function() Layout.Switch(1) end, false)\n    --addContextMenuItem(\"Epic setup\", function() Layout.Switch(2) end, false)\nend\n\nfunction onSave()\n    return JSON.encode(state)\nend\n\nfunction SaveState()\n    self.script_state = JSON.encode(state)\nend",
        "LuaScriptState": "{\"active\":true,\"dialZones\":[],\"index\":1,\"tempObjs\":[]}",
        "XmlUI": ""
      },
      {
        "GUID": "d24474",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 18.28,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.375,
          "scaleY": 0.375,
          "scaleZ": 0.375
        },
        "Nickname": "AoE Bomb source",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992191732,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombinea2.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/bomblet.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombinea2.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "-- List Builder for X-Wing 2.0\n-- ~~~~~~\n-- Script by Johnny Cheese\n--\n-- This module creates a set of buttons and text input on an object.\n-- Script has 3 main modules: FFG spawner, TTS spawner and Squad Builder.\n-- FFG spawner receives the link for a saved FFG web site squad and spawns said squad.\n-- TTS spawner receives a string containingthe name of all pilots and upgrades and set up a table wich will be passed to the global newSpawner function.\n-- Squad Builder offers options to build a squad, but does not apply any restrictions other than faction specific cards.\n-- The cards with the same name are diferentiated by faction when possible, and will if needed, the script inquires the player wich version is being summoned.\n-- The inquire happens in cases of pilots on the same faction using different ships (Sabine, Ezra, \"Zeb\") and in cases of upgrades with the same name (R2-D2 crew and astromech)\n-- ~~~~~~\n\n\n----#include TTS_lib/Util/Util\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_lib\r\n--\r\n-- Misc functions for extending Lua functionality\r\n-- Description and usage in README.md in this lib folder in repository\r\n-- ~~~~~~\r\n\r\nif not package.loaded['Util'] then\r\n\r\n    package.loaded['Util'] = true\r\n\r\n    -- Return value limited by min and max bounds\r\n    math.clamp = function(var, min, max)\r\n        if min and var < min then\r\n            return min\r\n        elseif max and var > max then\r\n            return max\r\n        end\r\n        return var\r\n    end\r\n\r\n    -- Sign function, zero for zero\r\n    math.sgn = function(arg)\r\n        if arg < 0 then\r\n            return -1\r\n        elseif arg > 0 then\r\n            return 1\r\n        end\r\n        return 0\r\n    end\r\n\r\n    -- Round to decPlaces decimal places\r\n    -- if decPlaces nil round to nearest integer\r\n    math.round = function(arg, decPlaces)\r\n        if decPlaces == nil then decPlaces = 0 end\r\n        if decPlaces == 0 then\r\n            frac = arg - math.floor(arg)\r\n            if frac >= 0.5 then\r\n                return math.ceil(arg)\r\n            else\r\n                return math.floor(arg)\r\n            end\r\n        else\r\n            local mult = 10^(decPlaces or 0)\r\n            return math.floor(arg * mult + 0.5) / mult\r\n        end\r\n    end\r\n\r\n    -- Check if table is empty\r\n    table.empty = function(tab)\r\n        return (next(tab) == nil)\r\n    end\r\n\r\n    -- Mash together two tables\r\n    table.join = function(tab1, tab2)\r\n        local out = {}\r\n        for k=1,#tab1 do\r\n            out[k] = tab1[k]\r\n        end\r\n        local off = #tab1\r\n        for k=1,#tab2 do\r\n            out[k+off] = tab2[k]\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Shallow table copy\r\n    -- Does not include metatables\r\n    table.shallowcopy = function(orig)\r\n        local orig_type = type(orig)\r\n        local copy\r\n        if orig_type == 'table' then\r\n            copy = {}\r\n            for orig_key, orig_value in pairs(orig) do\r\n                copy[orig_key] = orig_value\r\n            end\r\n        else\r\n            copy = orig\r\n        end\r\n        return copy\r\n    end\r\n\r\n    -- Deep table copy\r\n    -- Includes metatables, avoids __pairs, recursive\r\n    table.deepcopy = function(orig)\r\n        local orig_type = type(orig)\r\n        local copy\r\n        if orig_type == 'table' then\r\n            copy = {}\r\n            for orig_key, orig_value in next, orig, nil do\r\n                copy[table.deepcopy(orig_key)] = table.deepcopy(orig_value)\r\n            end\r\n            if getmetatable(orig) then\r\n                setmetatable(copy, table.deepcopy(getmetatable(orig)))\r\n            end\r\n        else\r\n            copy = orig\r\n        end\r\n        return copy\r\n    end\r\n\r\n    -- Elements count\r\n    -- Unlike #table, also counts non-number keyed values\r\n    table.size = function(tab)\r\n        local count = 0\r\n        for _ in pairs(tab) do\r\n            count = count + 1\r\n        end\r\n        return count\r\n    end\r\n\r\n    -- Return the element that return minimal value from eval function\r\n    -- Only iterates through numeric keys part\r\n    table.min = function(tab, eval)\r\n        if not tab[1] then return end\r\n        local min = { el = tab[1], val = eval(tab[1]) }\r\n        for k=2,#tab do\r\n            local val = eval(tab[k])\r\n            if val < min.val then\r\n                min.val = val\r\n                min.el = tab[k]\r\n            end\r\n        end\r\n        return min.el, min.val\r\n    end\r\n\r\n    -- Same as table.min, but takes the maximum\r\n    table.max = function(tab, eval)\r\n        local function invEval(el)\r\n            return -1*eval(el)\r\n        end\r\n        local el, min = table.min(tab, invEval)\r\n        return el, -1*min\r\n    end\r\n\r\n    -- Return those values in tab that return true from valid function\r\n    table.sieve = function(tab, valid)\r\n        local passed = {}\r\n        local rejected = {}\r\n        for k,v in ipairs(tab) do\r\n            if valid(v) then\r\n                if type(k) == 'number' then\r\n                    table.insert(passed, v)\r\n                else\r\n                    passed[k] = v\r\n                end\r\n            else\r\n                if type(k) == 'number' then\r\n                    table.insert(rejected, v)\r\n                else\r\n                    rejected[k] = v\r\n                end\r\n            end\r\n        end\r\n        return passed, rejected\r\n    end\r\n\r\n    -- Try to find en element in the table, return key if found, nil otherwise\r\n    table.find = function(tab, el)\r\n        for k,v in pairs(tab) do\r\n            if v == el then\r\n                return k\r\n            end\r\n        end\r\n    end\r\n\r\n    -- Shallow table print\r\n    table.print = function(tab, prefix)\r\n        prefix = prefix or 'Table'\r\n        print(prefix .. ':')\r\n        local function stringify(v)\r\n            local str = tostring(v)\r\n            if type(v) == 'string' then\r\n                str = '\\'' .. str .. '\\''\r\n            end\r\n            return str\r\n        end\r\n        for k,v in pairs(tab) do\r\n            print('   [' .. stringify(k) .. '] -> ' .. stringify(v))\r\n        end\r\n        print('')\r\n    end\r\n\r\n    -- Deep table print (sensitive to cycles!)\r\n    table.print_r = function(tab, prefix, indent)\r\n        prefix = prefix or 'Table'\r\n        local indent = indent or 1\r\n        print(prefix .. ':')\r\n        local function stringify(v)\r\n            local str = tostring(v)\r\n            if type(v) == 'string' then\r\n                str = '\\'' .. str .. '\\''\r\n            end\r\n            return str\r\n        end\r\n        local indentStr = string.rep('    ', indent)\r\n        for k,v in pairs(tab) do\r\n            print(indentStr .. '[' .. stringify(k) .. '] -> ' .. stringify(v))\r\n            if type(v) == 'table' then\r\n                table.print_r(v, indentStr .. stringify(v), indent+1)\r\n            end\r\n        end\r\n        if indent == 1 then\r\n            print('')\r\n        end\r\n    end\r\n\r\n    -- Apply a function on each table element\r\n    table.process = function(tab, fcn)\r\n        local out = {}\r\n        for k,v in pairs(tab) do\r\n            out[k] = fcn(v)\r\n        end\r\n        return out\r\n    end\r\n\r\n    -- Returns a copy of a table with the elements in a random order.\r\n    table.shuffle = function(tab)\r\n        local shuffled_table = {}\r\n        for i = 1, #tab do\r\n            shuffled_table[i] = tab[i]\r\n        end\r\n        for i = #shuffled_table, 2, -1 do\r\n            local j = math.random(i)\r\n            shuffled_table[i], shuffled_table[j] = shuffled_table[j], shuffled_table[i]\r\n        end\r\n        return shuffled_table\r\n    end\r\n\r\n    -- Check if string begins with the argument (no regex)\r\n    string.beginswith = function(str, prefix)\r\n        return (str:sub(1, prefix:len()) == prefix)\r\n    end\r\n    string.startswith = string.beginswith\r\n\r\n    -- Check if the string ends with the argument (no regex)\r\n    string.endswith = function(str, prefix)\r\n        return (str:sub(-1*prefix:len(), -1) == prefix)\r\n    end\r\n\r\n    -- CHeck if string contains argument anywhere in it (no regex)\r\n    string.contains = function(str, query)\r\n        return (str:find(query, 1, true) ~= nil)\r\n    end\r\n\r\nend\r\n\n----#include TTS_lib/Util/Util\n\nself.interactable = false\n\n --[[\n tintColors = {}\n tintColors[0] = color(0,0,0,0.0)\n tintColors[1] = color(255/255, 230/255, 137/255, 0.8)\n tintColors[2] = color(243/255,  99/255,  28/255, 0.8)\n tintColors[3] = color(230/255,  40/255,  56/255, 0.8)\n tintColors[4] = color(173/255, 250/255, 190/255, 0.8)\n tintColors[5] = color( 21/255,  21/255, 168/255, 0.8)\n tintColors[6] = color(238/255, 120/255, 234/255 ,0.8)\n tintColors[7] = color(255/255, 255/255, 255/255, 0.8)\n tintColors[8] = color(168/255, 241/255, 249/255, 0.8)]]\n\ntintColors = {}\ntintColors[0] = color(0,0,0,0.0)\ntintColors[1] = color(1,0,0,1.0)\ntintColors[2] = color(1,1,0,1.0)\ntintColors[3] = color(0,0.5,0,2.0)\ntintColors[4] = color(0.5,0.25,0.1,1.0)\ntintColors[5] = color(0,0,1,1.0)\ntintColors[6] = color(1,0,0.8,1.0)\ntintColors[7] = color(1,1,1,1.0)\ntintColors[8] = color(0.5,0.5,0.5,1.0)\n\n-- List and cost of variable cost upgrades based on base sizea\nvarCostS={}\nvarCostS[296] = {small = 2, medium = 4, large = 7, huge = 0} --Engine Upgrade\nvarCostS[234] = {small = 2, medium = 3, large = 4, huge = 0} --Expert Handling\nvarCostS[489] = {small = 3, medium = 6, large = 9, huge = 0} --Hate\nvarCostS[612] = {small = 7, medium = 8, large = 9, huge = 12} --Snap Shot\nvarCostS[281] = {small = 12, medium = 9, large = 7, huge = 7} --Veteran turret gunner\nvarCostS[388] = {small = 7, medium = 6, large = 5, huge = 4} -- Agile gunner\nvarCostS[689] = {small = 8, medium = 7, large = 6, huge = 3} -- Suppressive gunner\n\n-- List and cost of variable cost upgrades based on agility value\nvarCostA={}\nvarCostA[282] = {[0] = 3,[1] = 5,[2] = 7,[3] = 9} --R2 Astromech\nvarCostA[297] = {[0] = 2,[1] = 3,[2] = 5,[3] = 7} --Hull Upgrade\nvarCostA[299] = {[0] = 3,[1] = 4,[2] = 6,[3] = 8} --Shield Upgrade\nvarCostA[301] = {[0] = 3,[1] = 4,[2] = 6,[3] = 8} --Stealth Device\nvarCostA[315] = {[0] = 4,[1] = 6,[2] = 8,[3] = 10} --R2-D2 (Astromech)\n\nvarCostI={}\nvarCostI[245]={[0]=2,[1]=4,[2]=6,[3]=8,[4]=10,[5]=12,[6]=14} --Squad Leader\nvarCostI[246]={[0]=3,[1]=3,[2]=3,[3]=3,[4]=3,[5]=4,[6]=5} --Swarm Tactics\nvarCostI[276]={[0]=2,[1]=3,[2]=4,[3]=5,[4]=6,[5]=7,[6]=8} --Seasoned Navigator\nvarCostI[290]={[0]=0,[1]=1,[2]=2,[3]=3,[4]=4,[5]=5,[6]=6} --Inertial Dampeners\nvarCostI[463]={[0]=4,[1]=5,[2]=6,[3]=7,[4]=8,[5]=9,[6]=10} -- Primed Thrusters\nvarCostI[251]={[0]=4,[1]=4,[2]=4,[3]=8,[4]=16,[5]=24,[6]=32} --Supernatural Reflexes\nvarCostI[479]={[0]=2,[1]=3,[2]=4,[3]=5,[4]=6,[5]=7,[6]=8} -- BB8\nvarCostI[480]={[0]=0,[1]=1,[2]=2,[3]=3,[4]=4,[5]=5,[6]=6} -- bb astromech\nvarCostI[545]={[0]=0,[1]=2,[2]=4,[3]=4,[4]=6,[5]=8,[6]=10} -- Battle Meditation\nvarCostI[548]={[0]=14,[1]=15,[2]=16,[3]=15,[4]=18,[5]=21,[6]=24} -- Delta-7B\nvarCostI[549]={[0]=0,[1]=0,[2]=1,[3]=2,[4]=3,[5]=4,[6]=5} -- Calibrated laser Targeting\nvarCostI[614]={[0]=3,[1]=3,[2]=3,[3]=4,[4]=7,[5]=10,[6]=13} -- Precognitive Reflexes\nvarCostI[610]={[0]=21,[1]=21,[2]=21,[3]=21,[4]=21,[5]=24,[6]=28} -- Ensnare\nvarCostI[577]={[0]=2,[1]=2,[2]=2,[3]=2,[4]=2,[5]=4,[6]=6} -- Passive Sensors\n\n\n-- FFG uses full name on factions, so a conversion is needed\nffgFaction = {}\nffgFaction[0] = 'Dum'\nffgFaction[1] = 'Reb'\nffgFaction[2] = 'Imp'\nffgFaction[3] = 'Scu'\nffgFaction[4] = 'Res'\nffgFaction[5] = 'For'\nffgFaction[6] = 'Rep'\nffgFaction[7] = 'Cis'\n\ncardBackDB = {}\ncardBackDB.Dum = ''\ncardBackDB.Reb = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Rebelback.png'\ncardBackDB.Imp = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Empireback.png'\ncardBackDB.Scu = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Scumback.png'\ncardBackDB.Res = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Resback.jpg'\ncardBackDB.For = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/FOback.png'\ncardBackDB.Rep = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/REPback.jpg'\ncardBackDB.Cis = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/CISback.jpg'\ncardBackDB['1'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Eptupgrade.png' -- EPT\ncardBackDB['2'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/systemupg.png' -- Sensor\ncardBackDB['3'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Cannonup.png' -- Cannon\ncardBackDB['3b'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Cannonup.png' -- Dule Cannon NEEDS ART\ncardBackDB['4'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/turrups.png' -- Turret\ncardBackDB['5'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/torpups.png' -- Torpedo\ncardBackDB['6'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/missileupg.png' -- Missile\ncardBackDB['6b'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/DualMissile.png' -- Dual Missile\ncardBackDB['7'] = '' --\ncardBackDB['8'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Crew.png' -- Crew\ncardBackDB['8b'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/DualCrew.png' -- Dual Crew\ncardBackDB['9'] = ''\ncardBackDB['10'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Astro.png' --Astromech\ncardBackDB['11'] = ''\ncardBackDB['12'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Device.png' -- Device\ncardBackDB['12b'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/DualDevice.png' -- DualDevice\ncardBackDB['13'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Illicit.png' -- Ilicit\ncardBackDB['14'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Modification.png' -- Modification\ncardBackDB['15'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Title.png' -- Title\ncardBackDB['16'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Gunner.png' -- Gunner\ncardBackDB['17'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Force.png' -- Force Power\ncardBackDB['18'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Config.png' -- Configuration\ncardBackDB['19'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Tech.jpg' -- Tech\ncardBackDB['20'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Relay.jpg' -- Droid (PLACEHOLDER - TO DO)\ncardBackDB['21'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic.png' -- Command\ncardBackDB['22'] = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Cargo.png' -- Cargo\ncardBackDB['23'] = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Staff.png' -- Team\ncardBackDB.mc = 'http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/ModConfig.jpg' -- mod and config\n\n\n\n\n-- Attempt on Unified Data Base, based on XWS (dropped after w1, too much hassle) and FFG conversion table\nmasterShipDB={}\nmasterShipDB[0]={['name']='',['Hull']=0,['Shield']=0,['size']='small',['agi']=1,['XWS']='',['Fac']={[0]=true},['arcs']={'front'}}\n\nmasterShipDB[1]={\n    name = 'Modified YT-1300',\n    Hull = 8,\n    Shield = 5,\n    dTurret = 1,\n    size = 'large',\n    agi = 1,\n    XWS = 'modifiedyt1300lightfreighter',\n    Fac = {[1]=true},\n    arcs = {'doubleturret'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/rebel_falcon/rebel_falcon.obj',\n    moveSet = {'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','ws4','rk4'}\n}\n\nmasterShipDB[3]={\n    name = 'StarViper',\n    Hull = 4,\n    Shield = 1,\n    size = 'small',\n    agi = 3,\n    XWS = 'starviperclassattackplatform',\n    Fac = {[3]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/S%26V_starviper/starviper.obj',\n    moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','wbl3','bs3','wbr3','rbr3s','ws4' }\n}\n\nmasterShipDB[4]={\n    name = 'Scurrg H6 Bomber',\n    Hull = 6,\n    Shield = 4,\n    size = 'medium',\n    agi = 1,\n    XWS = 'scurrgh6bomber',\n    Fac = {[3]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/S%26V_scurrg/scurrg.obj',\n    moveSet = {'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3t','rtl3','wbl3','ws3','wbr3','rtr3','rtr3t','rs4'}\n}\n\nmasterShipDB[5]={\n    name = 'YT-2400',\n    Hull = 6,\n    Shield = 4,\n    dTurret = 1,\n    size = 'large',\n    agi = 2,\n    XWS = 'yt2400lightfreighter',\n    Fac = {[1]=true},\n    arcs = {'doubleturret'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/yt2400/yt2400.obj',\n    moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','wbl2','bs2','wbr2','wtr2','wtl3','wbl3','ws3','wbr3','wtr3','ws4','rk4'}\n}\n\nmasterShipDB[6]={\n    name = 'Auzituk Gunship',\n    Hull = 6,\n    Shield = 2,\n    size = 'small',\n    agi = 1,\n    XWS = 'auzituckgunship',\n    Fac = {[1]=true},\n    arcs = {'fullfront'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/REB_auzituk/auzituk.obj',\n    moveSet = {'bbl1', 'bs1', 'bbr1','wtl2','wbl2','bs2','wbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rs0'}\n}\n\nmasterShipDB[7]={\n    name = 'Khiraxz Fighter',\n    Hull = 5,\n    Shield = 1,\n    size = 'small',\n    agi = 2,\n    XWS = 'kihraxzfighter',\n    Fac = {[3]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/S%26V_khiraxz/khiraxz.obj',\n    moveSet = {'wtl1','bbl1','bbr1','wtr1','rtl2t','wtl2','bbl2','bs2','bbr2','wtr2','rtr2t','wbl3','bs3','wbr3','ws4','rk4'}\n}\n\nmasterShipDB[8]={\n    name = 'Sheathipede Shuttle',\n    Hull = 3,\n    Shield = 1,\n    size = 'small',\n    agi = 2,\n    XWS = 'sheathipedeclassshuttle',\n    Fac = {[1]=true},\n    arcs = {'front', 'back'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/REB_sheathipede/sheathipede.obj',\n    moveSet = {'rs1r','wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','bs3','wbr3','rtr3','rk3','rs4'}\n}\n\nmasterShipDB[9]={\n    name = 'Quad Jumper',\n    Hull = 6,\n    Shield = 0,\n    size = 'small',\n    agi = 2,\n    XWS = 'quadrijettransferspacetug',\n    Fac = {[3]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/S%26V_quadjumper/quadjumper.obj',\n    moveSet = {'rbl1r','rbr1r','wtl1','wbl1','ws1','wbr1','wtr1','rs2r','rbl2s','wtl2','bbl2','bs2','bbr2','wtr2','rbr2s','wbl3','bs3','wbr3'}\n}\n\nmasterShipDB[10]={\n    name = 'FireSpray',\n    Hull = 6,\n    Shield = 4,\n    size = 'medium',\n    agi = 2,\n    XWS = 'firesprayclasspatrolcraft',\n    Fac = {[3]=true},\n    arcs = {'front', 'back'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Medium/firespray/firespray.obj',\n    moveSet = {'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3t','wbl3','bs3','wbr3','rtr3t','ws4','rk4'}\n}\n\nmasterShipDB[11]={\n    name = 'TIE/ln Fighter',\n    Hull = 6,\n    Shield = 0,\n    size = 'small',\n    agi = 3,\n    XWS = 'tielnfighter',\n    Fac = {[1]=true,[2]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/tie_ln/tie_ln.obj',\n    moveSet = {'wtl1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rk4','ws5'}\n}\n\nmasterShipDB[12]={\n    name = 'Y-Wing',\n    Hull = 6,\n    Shield = 2,\n    size = 'small',\n    agi = 1,\n    XWS = 'btla4ywing',\n    Fac = {[1]=true,[3]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/btla4_ywing/btla4_ywing.obj',\n    moveSet = {'bbl1', 'bs1', 'bbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs4','rk4'}\n}\n\nmasterShipDB[13]={\n    name = 'TIE Advanced x1',\n    Hull = 3,\n    Shield = 2,\n    size = 'small',\n    agi = 3,\n    XWS = 'tieadvancedx1',\n    Fac = {[2]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/EMP_tieadvx1/tieadvx1.obj',\n    moveSet = {'bbl1','ws1','bbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3t','wtl3','wbl3','bs3','wbr3','wtr3','rtr3t','ws4','rk4','ws5'}\n}\n\nmasterShipDB[14]={\n    name = 'Alpha Class StarWing',\n    Hull = 4,\n    Shield = 3,\n    size = 'small',\n    agi = 2,\n    XWS ='alphaclassstarwing',\n    Fac = {[2]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/EMP_starwing/starwing.obj',\n    moveSet = {'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','ws3','wbr3','wtr3','rs4'}\n}\nmasterShipDB[15]={\n    name = 'U-Wing',\n    Hull = 5,\n    Shield = 3,\n    size = 'medium',\n    agi = 2,\n    XWS = 'ut60duwing',\n    Fac = {[1]=true},\n    arcs = {'front'},\n    moveSet = {'bbl1', 'bs1', 'bbr1', 'wtl2', 'bbl2', 'bs2', 'bbr2', 'wtr2','wbl3','ws3','wbr3','ws4','rs0'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/UWing.obj',\n    config = {\n        'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/UWing_Open.obj',\n        'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/UWing_Close.obj'\n    }\n}\n\nmasterShipDB[16]={['name']='TIE/sk Striker',['Hull']=4,['Shield']=0,['size']='small',['agi']=2,['XWS']='tieskstriker', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','bbl1','bs1','bbr1','wtr1','rk1','rbl2s','wtl2','bbl2','bs2','bbr2','wtr2','rbr2s','wbl3','bs3','wbr3'}}\nmasterShipDB[17]={['name']='B-Wing',['Hull']=4,['Shield']=4,['size']='small',['agi']=1,['XWS']='asf01bwing', ['Fac']={[1]=true}, ['arcs']={'front'},\n                            ['moveSet']={'rtl1t','rtl1','bbl1','bs1','bbr1','rtr1','rtr1t','wtl2','wbl2','bs2','wbr2','wtr2','rk2','rbl3','bs3','rbr3','rs4'}}\nmasterShipDB[18]={['name']='TIE/de Defender',['Hull']=3,['Shield']=4,['size']='small',['agi']=3,['XWS']='tieddefender', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'rtl1','bbl1','bbr1','rtr1','rtl2','wbl2','bs2','wbr2','rtr2','rk2','wtl3','wbl3','bs3','wbr3','wtr3','bs4','wk4','bs5'}}\nmasterShipDB[19]={['name']='TIE/sa Bomber',['Hull']=6,['Shield']=0,['size']='small',['agi']=2,['XWS']='tiesabomber', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rk5'}}\nmasterShipDB[20]={['name']='TIE/ca Punisher',['Hull']=6,['Shield']=3,['size']='medium',['agi']=1,['XWS']='tiecapunisher', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rk4','rs0'}}\nmasterShipDB[21]={['name']='Aggressor',['Hull']=5,['Shield']=3,['size']='medium',['agi']=3,['XWS']='aggressorassaultfighter', ['Fac']={[3]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','bbl3','bs3','bbr3','rbr3s','ws4','rk4'}}\nmasterShipDB[22]={['name']='G-1A StarFighter',['Hull']=5,['Shield']=4,['size']='medium',['agi']=1,['XWS']='g1astarfighter', ['Fac']={[3]=true}, ['arcs']={'front'},\n                            ['moveSet']={'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rk2','rbl3','ws3','rbr3','rs4','rk4','rs0'}}\nmasterShipDB[23]={['name']='VCX-100',['Hull']=10,['Shield']=4,['size']='large',['agi']=0,['XWS']='vcx100lightfreighter', ['Fac']={[1]=true}, ['arcs']={'front'},['Docking']=true,\n                            ['moveSet']={'rtl1','wbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','ws4','rk4'}}\nmasterShipDB[24]={['name']='YV-666',['Hull']=9,['Shield']=3,['size']='large',['agi']=1,['XWS']='yv666lightfreighter', ['Fac']={[3]=true}, ['arcs']={'fullfront'},\n                            ['moveSet']={'bbl1','bs1','bbr1','rtl2','wbl2','bs2','wbr2','rtr2','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rs0'}}\nmasterShipDB[25]={['name']='TIE Advanced v1',['Hull']=2,['Shield']=2,['size']='small',['agi']=3,['XWS']='tieadvancedv1', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'btl1','bbl1','bbr1','btr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl2t','rtr2t','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4','ws5'}}\nmasterShipDB[26]={['name']='Lambda Class Shuttle',['Hull']=6,['Shield']=4,['size']='large',['agi']=1,['XWS']='lambdaclasst4ashuttle', ['Fac']={[2]=true}, ['arcs']={'front', 'back'},\n                            ['moveSet']={'bbl1','bs1','bbr1','rtl2','wbl2','bs2','wbr2','rtr2','rbl3','ws3','rbr3','rs0'}}\nmasterShipDB[27]={['name']='TIE/ph Phantom',['Hull']=3,['Shield']=2,['size']='small',['agi']=2,['XWS']='tiephphantom', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','wbl1','wbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rk4'}}\nmasterShipDB[28]={['name']='VT-49 Decimator',['Hull']=12,['Shield']=4,['dTurret']=1,['size']='large',['agi']=0,['XWS']='vt49decimator', ['Fac']={[2]=true}, ['arcs']={'doubleturret'},\n                            ['moveSet']={'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','wtl3','wbl3','ws3','wbr3','wtr3','ws4'}}\nmasterShipDB[29]={['name']='TIE/ag Aggressor',['Hull']=4,['Shield']=1,['size']='small',['agi']=2,['XWS']='tieagaggressor', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4'}}\nmasterShipDB[30]={['name']='K-Wing',['Hull']=6,['Shield']=3,['dTurret']=1,['size']='medium',['agi']=1,['XWS']='btls8kwing', ['Fac']={[1]=true}, ['arcs']={'singleturret'},\n                            ['moveSet']={'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','wbl3','ws3','wbr3'}}\nmasterShipDB[31]={['name']='ARC-170',['Hull']=6, ['Shield']=3,['size']='medium',['agi']=1,['XWS']='arc170starfighter', ['Fac']={[1]=true,[6]=true}, ['arcs']={'front', 'back'},\n                            ['moveSet']={'bbl1','bs1','bbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs4','rk4'}}\nmasterShipDB[32]={['name']='Attack Shuttle',['Hull']=3,['Shield']=1,['size']='small',['agi']=2,['XWS']='attackshuttle', ['Fac']={[1]=true}, ['arcs']={'front'},\n                            ['moveSet']={'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','ws4','rk4'}}\nmasterShipDB[33]={['name']='X-Wing',['Hull']=4,['Shield']=2,['size']='small',['agi']=2,['XWS']='t65xwing', ['Fac']={[1]=true}, ['arcs']={'front'},\n                            ['moveSet']={'bbl1', 'bs1', 'bbr1', 'wtl2', 'bbl2', 'bs2', 'bbr2', 'wtr2', 'wtl3', 'wbl3', 'ws3', 'wbr3', 'wtr3', 'ws4', 'rtl3t', 'rtr3t', 'rk4' }}\nmasterShipDB[34]={['name']='HWK-290',['Hull']=3,['Shield']=2,['sTurret']=1,['size']='small',['agi']=2,['XWS']='hwk290lightfreighter', ['Fac']={[1]=true,[3]=true}, ['arcs']={'singleturret'},\n                            ['moveSet']={'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','bs3','wbr3','rtr3','ws4','rs0'}}\nmasterShipDB[35]={['name']='A-Wing',['Hull']=2,['Shield']=2,['size']='small',['agi']=3,['XWS']='rz1awing', ['Fac']={[1]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','bs4','bs5','rk5'}}\nmasterShipDB[36]={['name']='Fang Fighter',['Hull']=4,['Shield']=0,['size']='small',['agi']=3,['XWS']='fangfighter', ['Fac']={[3]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','wtr1','rtl2t','btl2','bbl2','bs2','bbr2','btr2','rtr2t','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4','ws5'}}\n--masterShipDB[37]={['name']='',['Shield']=3,['size']='small',['agi']=1,['XWS']='', ['Fac']={[1]=true}}\nmasterShipDB[38]={['name']='Z-95 Headhunter',['Hull']=2,['Shield']=2,['size']='small',['agi']=2,['XWS']='z95af4headhunter', ['Fac']={[1]=true,[3]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rk4'}}\nmasterShipDB[39]={['name']='M12-L Kimogila',['Hull']=7,['Shield']=2,['size']='medium',['agi']=2,['XWS']='m12lkimogilafighter', ['Fac']={[3]=true}, ['arcs']={'front'},\n                            ['moveSet']={'rtl1','wbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk4'}}\nmasterShipDB[40]={['name']='E-Wing',['Hull']=3,['Shield']=3,['size']='small',['agi']=3,['XWS']='ewing', ['Fac']={[1]=true}, ['arcs']={'front'},\n                            ['moveSet']={'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','bs4','rk4','ws5'}}\nmasterShipDB[41]={['name']='TIE/in Interceptor',['Hull']=3,['Shield']=0,['size']='small',['agi']=3,['XWS']='tieininterceptor', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','bs4','rk4','ws5'}}\nmasterShipDB[42]={['name']='Lancer Pursuit Craft',['Hull']=8,['Shield']=2,['sTurret']=1,['size']='large',['agi']=2,['XWS']='lancerclasspursuitcraft', ['Fac']={[3]=true}, ['arcs']={'front','singleturret'},\n                            ['moveSet']={'wbl1','ws1','wbr1','wtl2','wbl2','bs2','wbr2','wtr2','btl3','bbl3','bs3','bbr3','btr3','bs4','ws5','rk5'}}\nmasterShipDB[43]={['name']='TIE/re Reaper',['Hull']=6,['Shield']=2,['size']='medium',['agi']=1,['XWS']='tiereaper', ['Fac']={[2]=true}, ['arcs']={'front'},\n                            ['moveSet']={'rbl1s','rtl1','bbl1','bs1','bbr1','rtr1','rbr1s','rtl2','wbl2','bs2','wbr2','rtr2','wbl3','bs3','wbr3','rs0'}}\nmasterShipDB[44]={['name']='M3-A Interceptor',['Hull']=3,['Shield']=1,['size']='small',['agi']=3,['XWS']='m3ainterceptor', ['Fac']={[3]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','bbl1','bbr1','wtr1','wtl2','wbl2','bs2','wbr2','wtr2','wbl3','bs3','wbr3','rk3','ws4','ws5','rk5'}}\nmasterShipDB[45]={['name']='JumpMaster 5000',['Hull']=6,['Shield']=3,['sTurret']=1,['size']='large',['agi']=1,['XWS']='jumpmaster5000', ['Fac']={[3]=true}, ['arcs']={'singleturret'},\n                            ['moveSet']={'wtl1','bbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','wbr2','rtr2','rbl3s','bbl3','bs3','wbr3','ws4','rk4'}}\n\nmasterShipDB[47]={['name']='Customized YT-1300',['Hull']=8,['Shield']=3,['dTurret']=1,['size']='large',['agi']=1,['XWS']='customizedyt1300lightfreighter', ['Fac']={[3]=true}, ['arcs']={'doubleturret'},\n                            ['Docking']=true,['moveSet']={'bbl1','bs1','bbr1','wtl2','wbl2','bs2','wbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rbl3s','rbr3s','ws4','rk4'}}\nmasterShipDB[48]={['name']='Escape Craft',['Hull']=2,['Shield']=2,['size']='small',['agi']=2,['XWS']='escapecraft', ['Fac']={[3]=true}, ['arcs']={'front'},\n                            ['moveSet']={'bbl1','bs1','bbr1','rtl2','wbl2','bs2','wbr2','rtr2','wbl3','ws3','wbr3','rk3','rs0'}}\nmasterShipDB[49]={\n\tname = 'TIE/fo FO',\n\tHull = 3,\n\tShield = 1,\n\tsize = 'small',\n\tagi = 3,\n\tXWS = 'tiefofighter',\n\tFac = {[5]=true},\n\tarcs = {'front'},\n\tmoveSet = {'wtl1','wtr1','rbl2s','btl2','bbl2','bs2','bbr2','btr2','rbr2s','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk4','ws5'},\n\tmesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Tie_FO.obj'\n}\n\nmasterShipDB[50]={\n\tname = 'TIE/sf SF',\n\tHull = 3,\n\tShield = 3,\n\tTurret = 1,\n\tsize = 'small',\n\tagi = 2,\n\tXWS = 'tiesffighter',\n\tFac = {[5]=true},\n    sTurret = 1,\n\tarcs = {'front', 'back'},\n\tmoveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','wtl3','wbl3','bs3','wbr3','wtr3','rbr3s','ws4','ws5'},\n\tmesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Tie_SF.obj'\n}\nmasterShipDB[51]={\n\tname = 'Upsilon Class Shuttle',\n\tHull = 6,\n\tShield = 6,\n\tsize = 'large',\n\tagi = 1,\n\tXWS = 'upsilonclasscommandshuttle',\n\tFac = {[5]=true},\n\tarcs = {'front'},\n\tmoveSet = {'rtl1','wbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs0'},\n\tmesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/Upsilon_Shuttle.obj'\n}\nmasterShipDB[52]={\n\tname = 'TIE Silencer',\n\tHull = 4,\n\tShield = 2,\n\tsize = 'small',\n\tagi = 3,\n\tXWS = 'tievnsilencer',\n\tFac = {[5]=true},\n\tarcs = {'front'},\n\tmoveSet={'wtl1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rtl3t','wtl3','wbl3','bs3','wbr3','wtr3','rtr3t','bs4','rk4','bs5'},\n\tmesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Tie_VN.obj'\n}\n\nmasterShipDB[53]={\n    name = 'T-70 X-Wing',\n    Hull = 4,\n    Shield = 3,\n    size = 'small',\n    agi = 2,\n    XWS = '',\n    Fac = {[4]=true},\n    arcs = {'front'},\n    moveSet={'bbl1','bs1','bbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3t','wtl3','wbl3','bs3','wbr3','wtr3','rtr3t','ws4','rk4'},\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/t70xwing.obj'}\n\nmasterShipDB[54]={\n    name = 'A-Wing RZ-2',\n    Hull = 2,\n    Shield = 2,\n    sTurret = 1,\n    size = 'small',\n    agi = 3,\n    Fac = {[4]=true},\n    arcs = {'front', 'back'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/res_awing.obj',\n    moveSet = {'wtl1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rbl3s','wtl3','bbl3','bs3','bbr3','wtr3','rbr3s','bs4','bs5','rk5'}}\n\nmasterShipDB[55]={['name']='MG-100 StarFortress',['Hull']=9, ['Shield']=3,['dTurret']=1,['size']='large',['agi']=1,['XWS']='', ['Fac']={[4]=true}, ['arcs']={'front','doubleturret'},\n                            ['moveSet']={'rs0','rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rbl3','ws3','rbr3'}}\nmasterShipDB[56]={['name']='Mining Guild TIE',['Hull']=3,['Shield']=0,['size']='small',['agi']=3,['XWS']='', ['Fac']={[3]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rk3','ws4','rs5'}}\nmasterShipDB[57]={['name']='Scavenged YT-1300',['Hull']=8,['Shield']=3,['dTurret']=1,['size']='large',['agi']=1,['XWS']='', ['Fac']={[4]=true}, ['arcs']={'doubleturret'},\n                            ['moveSet']={'wbl1','bs1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','ws3','wbr3','wtr3','rbl3s','rbr3s','rs4'}}\n\n--w3ship\nmasterShipDB[61]={\n\tname = 'Delta-7',\n\tHull = 3,\n\tShield = 1,\n\tsize = 'small',\n\tagi = 3,\n\tXWS = '',\n\tFac = {[6]=true},\n\tarcs = {'front'},\n\tmoveSet={'wtl1','bbl1','bbr1','wtr1','rbl2s','wtl2','bbl2','bs2','bbr2','wtr2','rbr2s','wbl3','bs3','wbr3','ws4','rk4','ws5','rk5'},\n\t--mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/GRP_Delta7/Jedi_Delta7.obj'\n}\nmasterShipDB[62]={\n\tname = 'V-19',\n\tHull = 5,\n\tShield = 0,\n\tsize = 'small',\n\tagi = 2,\n\tXWS = '',\n\tFac = {[6]=true},\n\tarcs = {'front'},\n\tmoveSet ={'rtl1','bbl1','bs1','bbr1','rtr1','rtl2t','wtl2','wbl2','bs2','wbr2','wtr2','rtr2t','rbl3','bs3','rbr3','rk3','ws4'},\n\t--mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-19_Torrent/V-19_Torrent.obj'\n}\n\n\nmasterShipDB[59]={['name']='Vulture-Class Droid',['Hull']=3,['Shield']=0,['size']='small',['agi']=2,['XWS']='', ['Fac']={[7]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','wtr1','rk1','rtl2t','btl2','wbl2','bs2','wbr2','btr2','rtr2t','wtl3','rbl3','bs3','rbr3','wtr3','bs4','ws5'}}\nmasterShipDB[58]={['name']='Belbullab-22',['Hull']=4,['Shield']=2,['size']='small',['agi']=2,['XWS']='', ['Fac']={[7]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','wbl1','wbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','rbl3s','rtl3','wbl3','bs3','wbr3','rtr3','rbr3s','ws4','ws5'}}\nmasterShipDB[60]={['name']='Sith Infiltrator',['Hull']=6,['Shield']=4,['size']='large',['agi']=1,['XWS']='', ['Fac']={[7]=true}, ['arcs']={'front'},\n                            ['moveSet']={'rtl1','bbl1','bs1','bbr1','rtr1','rbl2s','wtl2','bbl2','bs2','bbr2','wtr2','rbr2s','wtl3','wbl3','bs3','wbr3','wtr3','ws4','rk5'}}\n\n--w4ship\nmasterShipDB[64]={\n    name = 'Resistance Transport',\n    Hull = 5,\n    Shield = 3,\n    size = 'small',\n    agi = 1,\n    Fac = {[4]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_transport/transport.obj',\n    moveSet = {'rbl1r','rbr1r','rs0','rbl1r','rbr1r','rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rbl3','ws3','rbr3','rs4'}\n}\n\nmasterShipDB[65]={\n    name = 'Resistance Transport Pod',\n    Shield = 1,\n    Hull = 3,\n    size = 'small',\n    agi = 2,\n    Fac = {[4]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_transport_pod/transport_pod.obj',\n    moveSet = {'rtl1','bbl1','bs1','bbr1','rtr1','wtl2','wbl2','bs2','wbr2','wtr2','rbl3','ws3','rbr3','rk3','rs4'}\n}\n\nmasterShipDB[63]={\n\tname ='N-1 StarFighter',\n\tHull = 3,\n\tShield = 2,\n\tsize = 'small',\n\tagi = 2,\n\tXWS = '',\n\tFac = {[6]=true},\n\tarcs = {'front'},\n\tmoveSet = {'wbl1','ws1','wbr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','bbl3','bs3','bbr3','wtr3','rtl3t','rtr3t','ws4','ws5'},\n\t--mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/GRP_N1/Naboo_Royal_N1.obj'\n}\n\nmasterShipDB[66]={['name']='Hyena-Class Droid Bomber',['Hull']=5,['Shield']=0,['size']='small',['agi']=2,['XWS']='', ['Fac']={[7]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','rbl1','ws1','rbr1','wtr1','btl2','wbl2','bs2','wbr2','btr2','rk2','rtl2t','rtr2t','wtl3','bs3','wtr3','ws4','rs5'}}\n\n\nmasterShipDB[67]={['name']='Nantex-Class StarFighter',['Hull']=4,['Shield']=0,['sTurret']=1,['size']='small',['agi']=3,['XWS']='', ['Fac']={[7]=true}, ['arcs']={'left', 'front', 'right', 'bullseye'},\n                            ['moveSet']={'wtl1','bbl1','bbr1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','bbl3','bs3','bbr3','wtr3','rbl3s','rbr3s','ws4','ws5','rk5'}}\nmasterShipDB[68]={\n\tname = 'BTL-B Y-Wing',\n\tHull = 5,\n\tShield = 3,\n\tsize = 'small',\n\tagi = 1,\n\tXWS = '',\n\tFac = {[6]=true},\n\tarcs = {'front'},\n\tmoveSet = {'wbl1','bs1','wbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs4','rk4'},\n}\n--w6ship\nmasterShipDB[69]={\n    name = 'TIE/ba Interceptor',\n    Hull = 2,\n    Shield = 2,\n    size = 'small',\n    agi = 3,\n    XWS = '',\n    Fac = {[5]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_Ba/TieBa.obj',\n    moveSet = {'btl1','bbl1','bbr1','btr1','wtl2','bbl2','bs2','bbr2','wtr2','wtl3','wbl3','bs3','wbr3','wtr3','rbl2s','rbr2s','bs4','ws5','rk5'}\n}\n\nmasterShipDB[70]={['name']='FireBall',['Hull']=6,['Shield']=0,['size']='small',['agi']=2,['XWS']='', ['Fac']={[4]=true}, ['arcs']={'front'},\n                            ['moveSet']={'wtl1','bbl1','bs1','bbr1','wtr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rtl3t','rtr3t','rs4'}}\n\n\n\n--w7ship\nmasterShipDB[71]={\n    name = 'Xi-class Light Shuttle',\n    Hull = 5,\n    Shield = 2,\n    size = 'medium',\n    agi = 2,\n    XWS = '',\n    Fac = {[5]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/XiClassLightShuttle.obj',\n    moveSet = {'rs0','bbl1','bs1','bbr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','ws4'}\n}\n\nmasterShipDB[72]={\n    name = 'HMP Droid Gunship',\n    Hull = 5,\n    Shield = 3,\n    size = 'small',\n    agi = 1,\n    XWS = '',\n    Fac = {[7]=true},\n    arcs = {'fullfront'},\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/HMP_Gunship.obj',\n    moveSet = {'rs0','rbl1','bs1','rbr1','btl2','wbl2','bs2','wbr2','btr2','wtl3','rbl3','ws3','rbr3','wtr3','rs4','rs5'},\n}\n\n\nmasterShipDB[73]={\n    name = 'LAAT/i Gunship',\n    Hull = 8,\n    Shield = 2,\n    Charge = 2,\n    dTurret = 1,\n    size = 'medium',\n    agi = 1,\n    XWS = '',\n    Fac = {[6]=true},\n    arcs = {'doubleturret'},\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/GRP_LAAT.obj',\n    moveSet = {'rs0','wbl1','bs1','wbr1','wtl2','wbl2','bs2','wbr2','wtr2','rtl3','wbl3','ws3','wbr3','rtr3','rs4'}\n}\n\n\n\n-- Unreleased content, need TODO change the ffg id's to match the builder\n\nmasterShipDB[83]={\n    name = 'TIE/rb Heavy',\n    Hull = 8,\n    Shield = 0,\n    size = 'medium',\n    agi = 1,\n    XWS = 'tierbheavy',\n    Fac = {[2]=true},\n    arcs = {'front', 'back'},\n    sTurret = 1,\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Rb%20Brute.obj',\n    moveSet = {'rtl1','wbl1','bs1','wbr1','rtr1','wtl2','bbl2','bs2','bbr2','wtr2','rtl3t','rtl3','wbl3','ws3','wbr3','rtr3','rtr3t','ws4'},\n}\n\nmasterShipDB[84]={\n    name = 'Eta-2 Actis',\n    Hull = 3,\n    Shield = 0,\n    size = 'small',\n    agi = 3,\n    XWS = 'eta2actis',\n    Fac = {[6]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ETA2%20Jedi%20Starfighter.obj',\n    moveSet = {'wtl1','wtr1','wtl2','bbl2','bs2','bbr2','wtr2','ptl2t','ptr2t','wtl3','bbl3','bs3','bbr3','wtr3','bs4','rk4','ws5'},\n}\n\nmasterShipDB[85]={\n    name = 'Nimbus-class V-wing',\n    Hull = 2,\n    Shield = 2,\n    size = 'small',\n    agi = 3,\n    XWS = 'nimbusclassvwing',\n    Fac = {[6]=true},\n    arcs = {'front'},\n    mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Republic_V-Wing.obj',\n    moveSet = {'wtl1','rbl1','rbr1','wtr1','btl2','bbl2','bs2','bbr2','btr2','rk2','wtl3','wbl3','bs3','wbr3','wtl3','ws4','rk4','ws5'},\n}\n\n-- Huge ships\nmasterShipDB[90]={\n    name = 'CR-90 Corvette',\n    Hull = 18,\n    Shield = 7,\n    Energy = 7,\n    size = 'huge',\n    agi = 0,\n    Fac = {[1]=true, [6]=true},\n    arcs = {'left','right'},\n    moveSet = {'rbl0','rs0','rbr0','wbl1','ws1','wbr1','bbl2','bs2','bbr2','rbl3','bs3','rbr3','rs4','rs5'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/CR90%20Corvette/CR90%20Corvette.obj'\n  }\n\nmasterShipDB[91]={\n    name = 'C-ROC Cruiser',\n    Hull = 12,\n    Shield = 4,\n    Energy = 4,\n    size = 'huge',\n    agi = 0,\n    Fac = {[3]=true, [7]=true},\n    arcs = {'front'},\n    moveSet = {'rbl0','rs0','rbr0','wbl1','bs1','wbr1','wbl2','bs2','wbr2','rbl3','ws3','rbr3','rs4','rs5'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/CR0C/CR0C%20Cruiser.obj'\n  }\n\nmasterShipDB[92]={\n    name = 'Gozanti-class Cruiser',\n    Hull = 11,\n    Shield = 5,\n    Energy = 3,\n    size = 'huge',\n    agi = 0,\n    Fac = {[2]=true, [5]=true},\n    arcs = {'front'},\n    moveSet = {'rbl0','rs0','rbr0','wbl1','bs1','wbr1','rbl2','bs2','rbr2','bs3','rs4'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/Gozanti-Class%20Cruiser/Gozanti-Class%20Cruiser.obj'\n  }\n\nmasterShipDB[93]={\n    name = 'GR-75 Medium Transport',\n    Hull = 12,\n    Shield = 3,\n    Energy = 4,\n    size = 'huge',\n    agi = 0,\n    Fac = {[1]=true, [4]=true},\n    arcs = {'front'},\n    moveSet = {'rbl0','rs0','rbr0','bbl1','bs1','bbr1','wbl2','ws2','wbr2','rs3','rs4'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/GR-75%20Transport/GR-75%20Transport.obj'\n  }\n\nmasterShipDB[94]={\n    name = 'Raider-class Corvette',\n    Hull = 20,\n    Shield = 8,\n    Energy = 6,\n    size = 'huge',\n    agi = 0,\n    Fac = {[2]=true, [5]=true},\n    arcs = {'fullfront'},\n    moveSet = {'rbl0','rs0','rbr0','bbl1','ws1','bbr1','wbl2','bs2','wbr2','rbl3','bs3','rbr3','ws4','rs5'},\n    mesh = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/Raider%20Class%20Corvette/Raider%20Class%20Corvette.obj'\n  }\n\n\nmasterPilotDB={}\nmasterPilotDB[0]={['name']='',['Faction']= 0,['ship_type']=0,['cost']=0,['slot']={},['Shield']=0,['card']='',['cardB']='',['init']=0,['actSet']={}}\n\nmasterPilotDB[1]={['name']='Wedge Antilles',['Faction']= 1,['ship_type']=33,['cost']=55,['slot']={21, 1, 5, 10, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_1.png',['init']=6,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[2]={['name']='Luke Skywalker',['Faction']= 1,['ship_type']=33,['cost']=62,['slot']={21, 17, 5, 10, 14, 18},['Shield']=2,['Force']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_2.png',['init']=5,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[3]={['name']='Thane Kyrell',['Faction']= 1,['ship_type']=33,['cost']=48,['slot']={21, 1, 5, 10, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_3.png',['init']=5,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[4]={['name']='Garven Dreis',['Faction']= 1,['ship_type']=33,['cost']=47,['slot']={21, 1, 5, 10, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_4.png',['init']=4,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[5]={['name']='Jek Porkins',['Faction']= 1,['ship_type']=33,['cost']=45,['slot']={21, 1, 5, 10, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_5.png',['init']=4,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[6]={['name']='Kullbee Sperado',['Faction']= 1,['ship_type']=33,['cost']=46,['slot']={21, 1, 5, 10, 13, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_6.png',['init']=4,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[7]={['name']='Biggs Darklighter',['Faction']= 1,['ship_type']=33,['cost']=48,['slot']={21, 5, 10, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_7.png',['init']=3,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[8]={['name']='Leevan Tenza',['Faction']= 1,['ship_type']=33,['cost']=44,['slot']={21, 1, 5, 10, 13, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_8.png',['init']=3,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[9]={['name']='Edrio Two Tubes',['Faction']= 1,['ship_type']=33,['cost']=43,['slot']={21, 5, 10, 13, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_9.png',['init']=2,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[10]={['name']='Red Squadron Veteran',['Faction']= 1,['ship_type']=33,['cost']=41,['slot']={21, 1, 5, 10, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_10.png',['init']=3,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[11]={['name']='Blue Squadron Escort',['Faction']= 1,['ship_type']=33,['cost']=40,['slot']={21, 5, 10, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_11.png',['init']=2,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[12]={['name']='Cavern Angels Zealot',['Faction']= 1,['ship_type']=33,['cost']=39,['slot']={21, 5, 10, 13, 14, 18},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_12.png',['init']=1,['actSet']={'F','TL', 'BR'}}\n\nmasterPilotDB[13]={\n    name = 'Norra Wexley',\n    Faction = 1,\n    ship_type = 12,\n    cost = 41,\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_13.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/norrawexley.png',\n    actSet = {'F','TL', 'BR'}\n}\n\nmasterPilotDB[14]={\n    name = '\"Dutch\" Vander',\n    Faction = 1,\n    ship_type = 12,\n    cost = 40,\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_14.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/dutchvander.png',\n    actSet = {'F','TL', 'BR'}\n}\n\nmasterPilotDB[15]={\n    name = 'Horton Salm',\n    Faction = 1,\n    ship_type = 12,\n    cost = 37,\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_15.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/hortonsalm.png',\n    actSet = {'F','TL', 'BR'}\n}\n\nmasterPilotDB[16]={\n    name = 'Evaan Verlaine',\n    Faction = 1,\n    ship_type = 12,\n    cost = 35,\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_16.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/evaanverlaine.png',\n    actSet = {'F','TL', 'BR'}\n}\n\nmasterPilotDB[17]={\n    name = 'Gold Squadron Veteran',\n    Faction = 1,\n    ship_type = 12,\n    cost = 32,\n    slot = {21, 1, 4, 5, 16, 10, 12, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_17.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/goldsquadronveteran.png',\n    actSet = {'F','TL', 'BR'}\n}\n\nmasterPilotDB[18]={\n    name = 'Gray Squadron Bomber',\n    Faction = 1,\n    ship_type = 12,\n    cost = 30,\n    slot = {21, 4, 5, 16, 10, 12, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_18.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/BTLA4YWing/graysquadronbomber.png',\n    actSet = {'F','TL', 'BR'}\n}\n\nmasterPilotDB[19]={['name']='Jake Farrell',['Faction']= 1,['ship_type']=35,['cost']=36,['slot']={21, 1,1, 6},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_19.png',['init']=4,['actSet']={'F','TL','E','BR','B'}}\nmasterPilotDB[20]={['name']='Arvel Crynyd',['Faction']= 1,['ship_type']=35,['cost']=34,['slot']={21, 1,1, 6},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_20.png',['init']=3,['actSet']={'F','TL','E','Ail','BR'}}\nmasterPilotDB[21]={['name']='Green Squadron Pilot',['Faction']= 1,['ship_type']=35,['cost']=32,['slot']={21, 1,1, 6},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_21.png',['init']=3,['actSet']={'F','TL','E','B','BR'}}\nmasterPilotDB[22]={['name']='Phoenix Squadron Pilot',['Faction']= 1,['ship_type']=35,['cost']=29,['slot']={21, 1,6},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_22.png',['init']=1,['actSet']={'F','TL','E','B','BR'}}\nmasterPilotDB[23]={['name']='Braylen Stramm',['Faction']= 1,['ship_type']=17,['cost']=52,['slot']={21, 1, 2, 3, 3, 5, 14, 18},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_23.png',['init']=4,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[24]={['name']='Ten Numb',['Faction']= 1,['ship_type']=17,['cost']=48,['slot']={21, 1, 2, 3, 3, 5, 14, 18},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_24.png',['init']=4,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[25]={['name']='Blade Squadron Veteran',['Faction']= 1,['ship_type']=17,['cost']=42,['slot']={21, 1, 2, 3, 3, 5, 14, 18},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_25.png',['init']=3,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[26]={['name']='Blue Squadron Pilot',['Faction']= 1,['ship_type']=17,['cost']=41,['slot']={21, 2, 3, 3, 5, 14, 18},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_26.png',['init']=2,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[27]={['name']='Airen Cracken',['Faction']= 1,['ship_type']=38,['cost']=36,['slot']={21, 1, 6, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_27.png',['init']=5,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[28]={['name']='Lieutenant Blount',['Faction']= 1,['ship_type']=38,['cost']=30,['slot']={21, 1, 6, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_28.png',['init']=4,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[29]={['name']='Tala Squadron Pilot',['Faction']= 1,['ship_type']=38,['cost']=24,['slot']={21, 1, 6, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_29.png',['init']=2,['actSet']={'F','TL', 'BR'}}\nmasterPilotDB[30]={['name']='Bandit Squadron Pilot',['Faction']= 1,['ship_type']=38,['cost']=22,['slot']={21, 6, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_30.png',['init']=1,['actSet']={'F','TL', 'BR'}}\n\nmasterPilotDB[31]={\n    name = 'Wullffwarro',\n    Faction = 1,\n    ship_type = 6,\n    cost = 54,\n    slot = {21, 1, 8, 8, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_31.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/Auzituck/wullffwarro.png',\n    actSet = {'F','R', 'BR'}\n}\n\nmasterPilotDB[32]={\n    name = 'Lowhhrick',\n    Faction = 1,\n    ship_type = 6,\n    cost = 51,\n    slot = {21, 1, 8, 8, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_32.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/Auzituck/lowhhrick.png',\n    actSet = {'F','R', 'BR'}\n}\n\nmasterPilotDB[33]={\n    name = 'Kashyyyk Defender',\n    Faction = 1,\n    ship_type = 6,\n    cost = 42,\n    slot = {21, 8, 8, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_33.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/Auzituck/kashyyykdefender.png',\n    actSet = {'F','R', 'BR'}\n}\n\nmasterPilotDB[34]={['name']='Hera Syndulla',['Faction']= 1,['ship_type']=32,['cost']=38,['slot']={21, 1, 4, 8, 14, 15},\n    executeOptions = {\n        rtl1  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        rtr1  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        rtl3  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        rtr3  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        rk4   = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        bs1   = {[1]='bs1',  [2]='bbl1', [3]='bbr1', [4]='bs2'},\n        bbl1  = {[1]='bs1',  [2]='bbl1', [3]='bbr1', [4]='bs2'},\n        bbr1  = {[1]='bs1',  [2]='bbl1', [3]='bbr1', [4]='bs2'},\n        bs2   = {[1]='bs1',  [2]='bbl1', [3]='bbr1', [4]='bs2'}\n    },\n    ['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_34.png',['init']=5,['actSet']={'F','E','BR'}}\nmasterPilotDB[35]={['name']='Sabine Wren',['Faction']= 1,['ship_type']=32,['cost']=41,['slot']={21, 1, 4, 8, 14, 15},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_35.png',['init']=3,['actSet']={'F','E','B', 'BR'}}\nmasterPilotDB[36]={['name']='Ezra Bridger',['Faction']= 1,['ship_type']=32,['cost']=40,['slot']={21, 17, 4, 8, 14, 15},['Shield']=1,['Force']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_36.png',['init']=3,['actSet']={'F','E','BR'}}\nmasterPilotDB[37]={['name']='\"Zeb\" Orrelios',['Faction']= 1,['ship_type']=32,['cost']=32,['slot']={21, 4, 8, 14, 15},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_37.png',['init']=2,['actSet']={'F','E','BR'}}\n\nmasterPilotDB[38]={\n    name = 'Fenn Rau',\n    Faction = 1,\n    ship_type = 8,\n    cost = 50,\n    slot = {21, 1, 8, 10, 14, 15},\n    Shield = 1,\n    card = 'https://sb-cdn.fantasyflightgames.com/card_images/en/43140025bc61b3e64ef6831987cafb2c.png',\n    init = 6,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/Sheathipede/fennrau.png',\n    actSet = {'F'}\n}\n\nmasterPilotDB[39]={\n    name = 'Ezra Bridger',\n    Faction = 1,\n    ship_type = 8,\n    cost = 40,\n    slot = {21, 17, 8, 10, 14, 15},\n    Shield = 1,\n    Force=1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_39.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/Sheathipede/ezrabridger.png',\n    actSet = {'F'}\n}\n\nmasterPilotDB[40]={\n    name = '\"Zeb\" Orrelios',\n    Faction = 1,\n    ship_type = 8,\n    cost = 33,\n    slot = {21, 1, 8, 10, 14, 15},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_40.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/Sheathipede/zeborrelios.png',\n    actSet = {'F'}\n}\n\nmasterPilotDB[41]={\n    name = 'AP-5',\n    Faction = 1,\n    ship_type = 8,\n    cost = 32,\n    slot = {21, 1, 8, 10, 14, 15},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_41.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/Sheathipede/ap5.png',\n    actSet = {'C'}\n}\n\nmasterPilotDB[42]={['name']='Jan Ors',['Faction']= 1,['ship_type']=34,['cost']=41,['slot']={21, 1, 8, 12, 14, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_42.png',['init']=5,['actSet']={'F','TL','B','Rot','BR'}}\nmasterPilotDB[43]={['name']='Kyle Katarn',['Faction']= 1,['ship_type']=34,['cost']=33,['slot']={21, 1, 8, 12, 14, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_43.png',['init']=3,['actSet']={'F','TL','B','Rot','BR'}}\nmasterPilotDB[44]={['name']='Roark Garnet',['Faction']= 1,['ship_type']=34,['cost']=38,['slot']={21, 1, 8, 12, 14, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_44.png',['init']=4,['actSet']={'F','TL','B','Rot','BR'}}\nmasterPilotDB[45]={['name']='Rebel Scout',['Faction']= 1,['ship_type']=34,['cost']=29,['slot']={21, 8, 12, 14, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_45.png',['init']=2,['actSet']={'F','TL','B','Rot','BR'}}\n\nmasterPilotDB[46]={\n    name = 'Ezra Bridger',\n    Faction = 1,\n    ship_type = 11,\n    cost = 30,\n    slot = {21, 17, 14},\n    Shield = 0,\n    Force = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_46.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/ezrabridger.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[47]={\n    name = 'Sabine Wren',\n    Faction = 1,\n    ship_type = 11,\n    cost = 28,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_47.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/sabinewren.png',\n    actSet = {'F','E','B', 'BR'}\n}\n\nmasterPilotDB[48]={\n    name = 'Captain Rex',\n    Condition = 'Suppressive Fire',\n    Faction = 1,\n    ship_type = 11,\n    cost = 29,\n    slot = {21, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_48.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/captainrex.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[49]={\n    name = '\"Zeb\" Orrelios',\n    Faction = 1,\n    ship_type = 11,\n    cost = 24,\n    slot = {21, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_49.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/TIEln/zeborrelios.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[50]={['name']='Corran Horn',['Faction']= 1,['ship_type']=40,['cost']=64,['slot']={21, 1, 2, 5, 10, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_50.png',['init']=5,['actSet']={'F','E','BR','B','TL'}}\nmasterPilotDB[51]={['name']='Gavin Darklighter',['Faction']= 1,['ship_type']=40,['cost']=60,['slot']={21, 1, 2, 5, 10, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_51.png',['init']=4,['actSet']={'F','E','BR','B','TL'}}\nmasterPilotDB[52]={['name']='Rogue Squadron Escort',['Faction']= 1,['ship_type']=40,['cost']=51,['slot']={21, 1, 2, 5, 10, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_52.png',['init']=4,['actSet']={'F','E','BR','B','TL'}}\nmasterPilotDB[53]={['name']='Knave Squadron Escort',['Faction']= 1,['ship_type']=40,['cost']=49,['slot']={21, 2, 5, 10, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_53.png',['init']=2,['actSet']={'F','E','BR','B','TL'}}\n\nmasterPilotDB[54]={\n    name = 'Bodhi Rook',\n    Faction = 1,\n    ship_type = 15,\n    cost = 48,\n    slot = {21, 1, 2, 8, 8, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_54.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/bodhirook.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[55]={\n    name = 'Saw Gerrera',\n    Faction = 1,\n    ship_type = 15,\n    cost = 52,\n    slot = {21, 1, 2, 8, 8, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_55.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/sawgerrera.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[56]={\n    name = 'Cassian Andor',\n    Faction = 1,\n    ship_type = 15,\n    cost = 51,\n    slot = {21, 1, 2, 8, 8, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_56.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/cassianandor.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[57]={\n    name = 'Magva Yarro',\n    Faction = 1,\n    ship_type = 15,\n    cost = 50,\n    slot = {21, 1, 2, 8, 8, 13, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_57.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/magvayarro.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[58]={\n    name = 'Benthic Two Tubes',\n    Faction = 1,\n    ship_type = 15,\n    cost = 46,\n    slot = {21, 2, 8, 8, 13, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_58.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/benthictwotubes.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[59]={\n    name = 'Heff Tobber',\n    Faction = 1,\n    ship_type = 15,\n    cost = 44,\n    slot = {21, 1, 2, 8, 8, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_59.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/hefftobber.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[60]={\n    name = 'Blue Squadron Scout',\n    Faction = 1,\n    ship_type = 15,\n    cost = 43,\n    slot = {21, 2, 8, 8, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_60.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/bluesquadronscout.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[61]={\n    name = 'Partisan Renegade',\n    Faction = 1,\n    ship_type = 15,\n    cost = 43,\n    slot = {21, 2, 8, 8, 13, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_61.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/partisanrenegade.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[62]={['name']='Miranda Doni',['Faction']= 1,['ship_type']=30,['cost']=40,['slot']={21, 5, 6, 6, 16, 8, 12, 12, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_62.png',['init']=4,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[63]={['name']='Esege Tuketu',['Faction']= 1,['ship_type']=30,['cost']=44,['slot']={21, 5, 6, 6, 16, 8, 12, 12, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_63.png',['init']=3,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[64]={['name']='Warden Squadron Pilot',['Faction']= 1,['ship_type']=30,['cost']=38,['slot']={21, 5, 6, 6, 16, 8, 12, 12, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_64.png',['init']=2,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[65]={['name']='Norra Wexley',['Faction']= 1,['ship_type']=31,['cost']=55,['slot']={21, 1, 5, 8, 16, 10, 14},['Shield']=3, ['card']='https://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_65.png',['init']=5,['actSet']={'F','TL','BR'}}\nmasterPilotDB[66]={['name']='Garven Dreis',['Faction']= 1,['ship_type']=31,['cost']=49,['slot']={21, 1, 5, 8, 16, 10, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_66.png',['init']=4,['actSet']={'F','TL','BR'}}\nmasterPilotDB[67]={['name']='Shara Bey',['Faction']= 1,['ship_type']=31,['cost']=50,['slot']={21, 1, 5, 8, 16, 10, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_67.png',['init']=4,['actSet']={'F','TL','BR'}}\nmasterPilotDB[68]={['name']='Ibtisam',['Faction']= 1,['ship_type']=31,['cost']=46,['slot']={21, 1, 5, 8, 16, 10, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_68.png',['init']=3,['actSet']={'F','TL','BR'}}\n\nmasterPilotDB[69]={\n    name = 'Han Solo',\n    Faction = 1,\n    ship_type = 1,\n    cost = 79,\n    slot = {21, 1, 6, 8, 8, 16, 14, 14, 15},\n    Shield = 5,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_69.png',\n    init = 6,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/hansolo.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[70]={\n    name = 'Lando Calrissian',\n    Faction = 1,\n    ship_type = 1,\n    cost = 78,\n    slot = {21, 1, 6, 8, 8, 16, 14, 14, 15},\n    Shield = 5,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_70.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/landocalrissian.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[71]={\n    name = 'Chewbacca',\n    Faction = 1,\n    ship_type = 1,\n    cost = 70,\n    slot = {21, 1, 6, 8, 8, 16, 14, 14, 15},\n    Shield = 5,\n    Charge = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_71.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/chewbacca.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[72]={\n    name = 'Outer Rim Smuggler',\n    Faction = 1,\n    ship_type = 1,\n    cost = 67,\n    slot = {21, 6, 8, 8, 16, 14, 14, 15},\n    Shield = 5,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_72.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/outerrimsmuggler.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[73]={['name']='Hera Syndulla',['Faction']= 1,['ship_type']=23,['cost']=72,['slot']={21, 1,2, 4, 5, 8, 8, 16, 14, 15},['Shield']=4,\n    executeOptions = {\n        rtl1  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        rtr1  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        rtl3  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        rtr3  = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        rk4   = {[1]='rtl1', [2]='rtr1', [3]='rtl3', [4]='rtr3', [5]='rk4'},\n        bs1   = {[1]='bs1',  [2]='bbl2', [3]='bbr2', [4]='bs2'},\n        bbl2  = {[1]='bs1',  [2]='bbl2', [3]='bbr2', [4]='bs2'},\n        bbr2  = {[1]='bs1',  [2]='bbl2', [3]='bbr2', [4]='bs2'},\n        bs2   = {[1]='bs1',  [2]='bbl2', [3]='bbr2', [4]='bs2'}\n    },\n    ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_73.png',['init']=5,['actSet']={'F','TL','R'}}\nmasterPilotDB[74]={['name']='Kanan Jarrus',['Faction']= 1,['ship_type']=23,['cost']=76,['slot']={21, 17,2, 4, 5, 8, 8, 16, 14, 15},['Shield']=4,['Force']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_74.png',['init']=3,['actSet']={'F','TL','R'}}\nmasterPilotDB[75]={['name']='\"Chopper\"',['Faction']= 1,['ship_type']=23,['cost']=67,['slot']={21, 4,2, 5, 8, 8, 16, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_75.png',['init']=2,['actSet']={'C','TL','R'}}\nmasterPilotDB[76]={['name']='Lothal Rebel',['Faction']= 1,['ship_type']=23,['cost']=67,['slot']={21, 4,2, 5, 8, 8, 16, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_76.png',['init']=2,['actSet']={'F','TL','R'}}\n\nmasterPilotDB[77]={\n    name = 'Dash Rendar',\n    Faction = 1,\n    ship_type = 5,\n    cost = 85,\n    slot = {21, 1, 6, 8, 16, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_77.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/YT2400/dashrendar.png',\n    actSet = {'F','TL','BR','Rot'}\n}\n\nmasterPilotDB[78]={\n    name = '\"Leebo\"',\n    Faction = 1,\n    ship_type = 5,\n    cost = 76,\n    slot = {1, 21, 6, 16, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_78.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/YT2400/leebo.png',\n    actSet = {'C','TL','BR','Rot'}\n}\n\nmasterPilotDB[79]={\n    name = 'Wild Space Fringer',\n    Faction = 1,\n    ship_type = 5,\n    cost = 72,\n    slot = {21, 6, 8, 16, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_79.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/YT2400/wildspacefringer.png',\n    actSet = {'F','TL','BR','Rot'}\n}\n\nmasterPilotDB[80]={\n    name = '\"Mauler\" Mithel',\n    Faction = 2,\n    ship_type = 11,\n    cost = 31,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_80.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/maulermithel.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[81]={\n    name = '\"Howlrunner\"',\n    Faction = 2,\n    ship_type = 11,\n    cost = 46,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_81.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/howlrunner.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[82]={\n    name = '\"Scourge\" Skutu',\n    Faction = 2,\n    ship_type = 11,\n    cost = 31,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_82.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/scourgeskutu.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[83]={\n    name = 'Iden Versio',\n    Faction = 2,\n    ship_type = 11,\n    cost = 41,\n    slot = {21, 1, 14},\n    Shield =0,\n    Charge = 1,\n    card ='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_83.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/idenversio.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[84]={\n    name = 'Gideon Hask',\n    Faction = 2,\n    ship_type = 11,\n    cost = 30,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_84.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/gideonhask.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[85]={\n    name = 'Del Meeko',\n    Faction = 2,\n    ship_type = 11,\n    cost = 30,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_85.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/delmeeko.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[86]={\n    name = 'Seyn Marana',\n    Faction = 2,\n    ship_type = 11,\n    cost = 30,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_86.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/seynmarana.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[87]={\n    name = 'Valen Rudor',\n    Faction = 2,\n    ship_type = 11,\n    cost = 27,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_87.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/valenrudor.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[88]={\n    name = '\"Night Beast\"',\n    Faction = 2,\n    ship_type = 11,\n    cost = 25,\n    slot = {21, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_88.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/nightbeast.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[89]={\n    name = '\"Wampa\"',\n    Faction = 2,\n    ship_type = 11,\n    cost = 29,\n    slot = {21, 14},\n    Shield = 0,\n    Charge = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_89.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/wampa.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[90]={\n    name = 'Black Squadron Ace',\n    Faction = 2,\n    ship_type = 11,\n    cost = 25,\n    slot = {21, 1, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_90.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/blacksquadronace.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[91]={\n    name = 'Obsidian Squadron Pilot',\n    Faction = 2,\n    ship_type = 11,\n    cost = 23,\n    slot = {21, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_91.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/obsidiansquadronace.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[92]={\n    name = 'Academy Pilot',\n    Faction = 2,\n    ship_type = 11,\n    cost = 22,\n    slot = {21, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_92.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEln/academypilot.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[93]={\n    name = 'Darth Vader',\n    Faction = 2,\n    ship_type = 13,\n    cost = 67,\n    slot = {21, 17, 2, 6, 14},\n    Shield = 2,\n    Force = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_93.png',\n    init = 6,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/darthvader.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[94]={\n    name = 'Maarek Stele',\n    Faction = 2,\n    ship_type = 13,\n    cost = 45,\n    slot = {21, 1, 2, 6, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_94.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/maarekstele.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[95]={\n    name = 'Ved Foslo',\n    Faction = 2,\n    ship_type = 13,\n    cost = 44,\n    slot = {21, 1, 2, 6, 14},\n    executeOptions = {\n        ws1  = {[1]='ws1', [2]='ws2'},\n        bs2  = {[1]='bs1', [2]='bs2', [3]='bs3'},\n        bs3  = {[1]='bs2', [2]='bs3', [3]='bs4'},\n        ws4  = {[1]='ws3', [2]='ws4', [3]='ws5'},\n        ws5  = {[1]='ws4', [2]='ws5'},\n        bbl1 = {[1]='bbl1', [2]='bbl2'},\n        bbr1 = {[1]='bbr1', [2]='bbr2'},\n        bbl2 = {[1]='bbl1', [2]='bbl2', [3]='bbl3'},\n        bbr2 = {[1]='bbr1', [2]='bbr2', [3]='bbr3'},\n        wbl3 = {[1]='wbl2', [2]='wbl3'},\n        wbr3 = {[1]='wbr2', [2]='wbr3'},\n        wtl2 = {[1]='wtl1', [2]='wtl2', [3]='wtl3'},\n        wtr2 = {[1]='wtr1', [2]='wtr2', [3]='wtr3'},\n        wtl3 = {[1]='wtl2', [2]='wtl3'},\n        wtr3 = {[1]='wtr2', [2]='wtr3'},\n        rtl3t = {[1]='rtl2t', [2]='rtl3t'},\n        rtr3t = {[1]='rtr2t', [2]='rtr3t'},\n        rk4  = {[1]='rk3', [2]='rk4', [3]='rk5'}\n    },\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_95.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/vedfoslo.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[96]={\n    name = 'Zertik Strom',\n    Faction = 2,\n    ship_type = 13,\n    cost = 41,\n    slot = {21, 2, 6, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_96.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/zertikstrom.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[97]={\n    name = 'Storm Squadron Ace',\n    Faction = 2,\n    ship_type = 13,\n    cost = 39,\n    slot = {21, 1, 2, 6, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_97.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/stormsquadronace.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[98]={\n    name = 'Tempest Squadron Pilot',\n    Faction = 2,\n    ship_type = 13,\n    cost = 36,\n    slot = {21, 2, 6, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_98.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/TIEAdvancedX1/tempestsquadronpilot.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[99]={['name']='Grand Inquisitor',['Faction']= 2,['ship_type']=25,['cost']=52,['slot']={21, 17, 2, 6},['Shield']=2,['Force']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_99.png',['init']=5,['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[100]={['name']='Seventh Sister',['Faction']= 2,['ship_type']=25,['cost']=43,['slot']={21, 17, 2, 6},['Shield']=2,['Force']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_100.png',['init']=4,['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[101]={['name']='Baron of the Empire',['Faction']= 2,['ship_type']=25,['cost']=28,['slot']={21, 1, 2, 6},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_101.png',['init']=3,['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[102]={['name']='Inquisitor',['Faction']= 2,['ship_type']=25,['cost']=36,['slot']={21, 17, 2, 6},['Shield']=2,['Force']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_102.png',['init']=3,['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[103]={['name']='Soontir Fel',['Faction']= 2,['ship_type']=41,['cost']=54,['slot']={21, 1, 14, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_103.png',['init']=6,['actSet']={'F','E','BR','B'}}\nmasterPilotDB[104]={['name']='Turr Phennir',['Faction']= 2,['ship_type']=41,['cost']=42,['slot']={21, 1, 14, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_104.png',['init']=4,['actSet']={'F','E','BR','B'}}\nmasterPilotDB[105]={['name']='Saber Squadron Ace',['Faction']= 2,['ship_type']=41,['cost']=36,['slot']={21, 1, 14, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_105.png',['init']=4,['actSet']={'F','E','BR','B'}}\nmasterPilotDB[106]={['name']='Alpha Squadron Pilot',['Faction']= 2,['ship_type']=41,['cost']=31,['slot']={21, 14, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_106.png',['init']=1,['actSet']={'F','E','BR','B'}}\nmasterPilotDB[107]={['name']='Tomax Bren',['Faction']= 2,['ship_type']=19,['cost']=35,['slot']={21, 1, 5, 6, 6, 16, 12, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_107.png',['init']=5,['actSet']={'F','TL','BR'}}\nmasterPilotDB[108]={['name']='Captain Jonus',['Faction']= 2,['ship_type']=19,['cost']=45,['slot']={21, 1, 5, 6, 6, 16, 12, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_108.png',['init']=4,['actSet']={'F','TL','BR'}}\nmasterPilotDB[109]={['name']='Major Rhymer',['Faction']= 2,['ship_type']=19,['cost']=37,['slot']={21, 1, 5, 6, 6, 16, 12, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_109.png',['init']=4,['actSet']={'F','TL','BR'}}\nmasterPilotDB[110]={['name']='\"Deathfire\"',['Faction']= 2,['ship_type']=19,['cost']=32,['slot']={21, 5, 6, 6, 16, 12, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_110.png',['init']=2,['actSet']={'F','TL','BR'}}\nmasterPilotDB[111]={['name']='Gamma Squadron Ace',['Faction']= 2,['ship_type']=19,['cost']=30,['slot']={21, 1, 5, 6, 6, 16, 12, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_111.png',['init']=3,['actSet']={'F','TL','BR'}}\nmasterPilotDB[112]={['name']='Scimitar Squadron Pilot',['Faction']= 2,['ship_type']=19,['cost']=27,['slot']={21, 5, 6, 6, 16, 12, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_112.png',['init']=2,['actSet']={'F','TL','BR'}}\nmasterPilotDB[113]={['name']='Major Vermeil',['Faction']= 2,['ship_type']=43,['cost']=49,['slot']={21, 1, 8, 8, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_113.png',['init']=4,['actSet']={'F','E','Ail'}}\nmasterPilotDB[114]={['name']='Captain Feroph',['Faction']= 2,['ship_type']=43,['cost']=47,['slot']={21, 1, 8, 8, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_114.png',['init']=3,['actSet']={'F','E','Ail'}}\nmasterPilotDB[115]={['name']='\"Vizier\"',['Faction']= 2,['ship_type']=43,['cost']=45,['slot']={21, 8, 8, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_115.png',['init']=2,['actSet']={'F','E','Ail'}}\nmasterPilotDB[116]={['name']='Scarif Base Pilot',['Faction']= 2,['ship_type']=43,['cost']=39,['slot']={21, 8, 8, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_116.png',['init']=1,['actSet']={'F','E','Ail'}}\nmasterPilotDB[117]={['name']='\"Duchess\"',['Faction']= 2,['ship_type']=16,['cost']=44,['slot']={21, 1, 16, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_117.png',['init']=5,['actSet']={'F','E','BR','Ail'}}\nmasterPilotDB[118]={['name']='\"Countdown\"',['Faction']= 2,['ship_type']=16,['cost']=43,['slot']={21, 1, 16, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_118.png',['init']=4,['actSet']={'F','E','BR','Ail'}}\nmasterPilotDB[119]={['name']='\"Pure Sabacc\"',['Faction']= 2,['ship_type']=16,['cost']=43,['slot']={21, 1, 16, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_119.png',['init']=4,['actSet']={'F','E','BR','Ail'}}\nmasterPilotDB[120]={['name']='Black Squadron Scout',['Faction']= 2,['ship_type']=16,['cost']=33,['slot']={21, 1, 16, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_120.png',['init']=3,['actSet']={'F','E','BR','Ail'}}\nmasterPilotDB[121]={['name']='Planetary Sentinel',['Faction']= 2,['ship_type']=16,['cost']=31,['slot']={21, 16, 12, 14},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_121.png',['init']=1,['actSet']={'F','E','BR','Ail'}}\nmasterPilotDB[122]={['name']='Rexler Brath',['Faction']= 2,['ship_type']=18,['cost']=79,['slot']={21, 1, 2, 3, 6},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_122.png',['init']=5,['actSet']={'F','E','BR','TL','B'}}\nmasterPilotDB[123]={['name']='Colonel Vessery',['Faction']= 2,['ship_type']=18,['cost']=82,['slot']={21, 1, 2, 3, 6},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_123.png',['init']=4,['actSet']={'F','E','BR','TL','B'}}\nmasterPilotDB[124]={\n    name = 'Countess Ryad',\n    Faction = 2,\n    ship_type = 18,\n    cost = 80,\n    slot = {21, 1, 2, 3, 6},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_124.png',\n    init = 4,\n    executeOptions = {\n        bs2 = {[1]='bs2', [2]='wk2'},\n        bs3 = {[1]='bs3', [2]='wk3'},\n        bs4 = {[1]='bs4', [2]='wk4'},\n        bs5 = {[1]='bs5', [2]='wk5'}\n    },\n    actSet = {'F','E','BR','TL','B'}\n}\nmasterPilotDB[125]={['name']='Onyx Squadron Ace',['Faction']= 2,['ship_type']=18,['cost']=74,['slot']={21, 1, 2, 3, 6},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_125.png',['init']=4,['actSet']={'F','E','BR','TL','B'}}\nmasterPilotDB[126]={['name']='Delta Squadron Pilot',['Faction']= 2,['ship_type']=18,['cost']=67,['slot']={21, 2, 3, 2006},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_126.png',['init']=1,['actSet']={'F','E','BR','TL','B'}}\nmasterPilotDB[127]={['name']='Lieutenant Kestal',['Faction']= 2,['ship_type']=29,['cost']=30,['slot']={21, 1, 4, 6, 6, 16, 14},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_127.png',['init']=4,['actSet']={'F','E','BR','TL'}}\nmasterPilotDB[128]={['name']='\"Double Edge\"',['Faction']= 2,['ship_type']=29,['cost']=28,['slot']={21, 1, 4, 6, 6, 16, 14},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_128.png',['init']=2,['actSet']={'F','E','BR','TL'}}\nmasterPilotDB[129]={['name']='Onyx Squadron Scout',['Faction']= 2,['ship_type']=29,['cost']=28,['slot']={21, 1, 4, 6, 6, 16, 14},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_129.png',['init']=3,['actSet']={'F','E','BR','TL'}}\nmasterPilotDB[130]={['name']='Sienar Specialist',['Faction']= 2,['ship_type']=29,['cost']=26,['slot']={21, 4, 6, 6, 16, 14},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_130.png',['init']=2,['actSet']={'F','E','BR','TL'}}\nmasterPilotDB[131]={['name']='\"Whisper\"',['Faction']= 2,['ship_type']=27,['cost']=60,['slot']={21, 1, 2, 16, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_131.png',['init']=5,['actSet']={'F','E','BR','CL'}}\nmasterPilotDB[132]={['name']='\"Echo\"',['Faction']= 2,['ship_type']=27,['cost']=51,['slot']={21, 1, 2, 16, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_132.png',['init']=4,['actSet']={'F','E','BR','CL'}}\nmasterPilotDB[133]={['name']='Sigma Squadron Ace',['Faction']= 2,['ship_type']=27,['cost']=48,['slot']={21, 1, 2, 16, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_133.png',['init']=4,['actSet']={'F','E','BR','CL'}}\nmasterPilotDB[134]={['name']='Imdaar Test Pilot',['Faction']= 2,['ship_type']=27,['cost']=43,['slot']={21, 2, 16, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_134.png',['init']=3,['actSet']={'F','E','BR','CL'}}\n\nmasterPilotDB[135]={\n    name = 'Major Vynder',\n    Faction = 2,\n    ship_type = 14,\n    cost = 40,\n    slot = {21, 1, 2, 5, 6, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_135.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/Alphaclass/majorvynder.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[136]={\n    name = 'Lieutenant Karsabi',\n    Faction = 2,\n    ship_type = 14,\n    cost = 36,\n    slot = {21, 1, 2, 5, 6, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_136.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/Alphaclass/lieutenantkarsabi.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[137]={\n    name = 'Rho Squadron Pilot',\n    Faction = 2,\n    ship_type = 14,\n    cost = 34,\n    slot = {21, 1, 2, 5, 6, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_137.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/Alphaclass/rhosquadronpilot.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[138]={\n    name = 'Nu Squadron Pilot',\n    Faction = 2,\n    ship_type = 14,\n    cost = 32,\n    slot = {21, 2, 5, 6, 14, 18},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_138.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Empire/Alphaclass/nusquadronpilot.png',\n    actSet = {'F','TL'}\n}\n\nmasterPilotDB[139]={['name']='\"Redline\"',['Faction']= 2,['ship_type']=20,['cost']=51,['slot']={21, 2, 5, 6, 6, 16, 12, 12, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_139.png',['init']=5,['actSet']={'F','TL','BR',\"B\"}}\nmasterPilotDB[140]={['name']='\"Deathrain\"',['Faction']= 2,['ship_type']=20,['cost']=43,['slot']={21, 2, 5, 6, 6, 16, 12, 12, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_140.png',['init']=4,['actSet']={'F','TL','BR',\"B\"}}\nmasterPilotDB[141]={['name']='Cutlass Squadron Pilot',['Faction']= 2,['ship_type']=20,['cost']=35,['slot']={21, 2, 5, 6, 6, 16, 12, 12, 14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_141.png',['init']=2,['actSet']={'F','TL','BR',\"B\"}}\nmasterPilotDB[142]={['name']='Captain Kagi',['Faction']= 2,['ship_type']=26,['cost']=48,['slot']={21, 2, 3, 8, 8, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_142.png',['init']=4,['actSet']={'F','R'}}\nmasterPilotDB[143]={['name']='Colonel Jendon',['Faction']= 2,['ship_type']=26,['cost']=49,['slot']={21, 2, 3, 8, 8, 14, 15},['Shield']=4,['Charge']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_143.png',['init']=3,['actSet']={'F','R'}}\nmasterPilotDB[144]={['name']='Lieutenant Sai',['Faction']= 2,['ship_type']=26,['cost']=47,['slot']={21, 2, 3, 8, 8, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_144.png',['init']=3,['actSet']={'F','R'}}\nmasterPilotDB[145]={['name']='Omicron Group Pilot',['Faction']= 2,['ship_type']=26,['cost']=43,['slot']={21, 2, 3, 8, 8, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_145.png',['init']=1,['actSet']={'F','R'}}\nmasterPilotDB[146]={['name']='Captain Oicunn',['Faction']= 2,['ship_type']=28,['cost']=74,['slot']={21, 1, 5, 8, 8, 8, 16, 12, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_146.png',['init']=3,['actSet']={'F','R','TL','Rot'}}\nmasterPilotDB[147]={['name']='Rear Admiral Chiraneau',['Faction']= 2,['ship_type']=28,['cost']=76,['slot']={21, 1, 5, 8, 8, 8, 16, 12, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_147.png',['init']=5,['actSet']={'F','R','TL','Rot'}}\nmasterPilotDB[148]={['name']='Patrol Leader',['Faction']= 2,['ship_type']=28,['cost']=67,['slot']={21, 5, 8, 8, 8, 16, 12, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_148.png',['init']=2,['actSet']={'F','R','TL','Rot'}}\n\nmasterPilotDB[149]={\n    name = 'Boba Fett',\n    Faction = 3,\n    ship_type = 10,\n    cost = 86,\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_149.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/bobafett.png',\n    actSet = {'F','R','TL','B'}\n}\n\nmasterPilotDB[150]={\n    name = 'Emon Azzameen',\n    Faction = 3,\n    ship_type = 10,\n    cost = 71,\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_150.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/emonazzameen.png',\n    actSet = {'F','R','TL','B'}\n}\n\nmasterPilotDB[151]={\n    name = 'Kath Scarlet',\n    Faction = 3,\n    ship_type = 10,\n    cost = 72,\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_151.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/kathscarlet.png',\n    actSet = {'F','R','TL','B'}\n}\n\nmasterPilotDB[152]={\n    name = 'Koshka Frost',\n    Faction = 3,\n    ship_type = 10,\n    cost = 70,\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_152.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/koshkafrost.png',\n    actSet = {'F','R','TL','B'}\n}\n\nmasterPilotDB[153]={\n    name = 'Krassis Trelix',\n    Faction = 3,\n    ship_type = 10,\n    cost = 65,\n    slot = {21, 1, 3, 6, 8, 12, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_153.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/krassistrelix.png',\n    actSet = {'F','R','TL','B'}\n}\n\nmasterPilotDB[154]={\n    name = 'Bounty Hunter',\n    Faction = 3,\n    ship_type = 10,\n    cost = 62,\n    slot = {21, 3, 6, 8, 12, 13, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_154.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Firespray/bountyhunter.png',\n    actSet = {'F','R','TL','B'}\n}\n\nmasterPilotDB[155]={['name']='Fenn Rau',['Faction']= 3,['ship_type']=36,['cost']=68,['slot']={21, 1, 5},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_155.png',['init']=6,['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[156]={['name']='Old Teroch',['Faction']= 3,['ship_type']=36,['cost']=56,['slot']={21, 1, 5},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_156.png',['init']=5,['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[157]={['name']='Joy Rekkoff',['Faction']= 3,['ship_type']=36,['cost']=52,['slot']={21, 1, 5},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_157.png',['init']=4,['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[158]={['name']='Kad Solus',['Faction']= 3,['ship_type']=36,['cost']=54,['slot']={21, 1, 5},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_158.png',['init']=4,['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[159]={['name']='Skull Squadron Pilot',['Faction']= 3,['ship_type']=36,['cost']=47,['slot']={21, 1, 5},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_159.png',['init']=4,['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[160]={['name']='Zealous Recruit',['Faction']= 3,['ship_type']=36,['cost']=41,['slot']={21, 5},['Shield']=0,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_160.png',['init']=1,['actSet']={'F','TL','B','BR'}}\n\nmasterPilotDB[161]={\n    name = 'Constable Zuvio',\n    Faction = 3,\n    ship_type = 9,\n    cost = 30,\n    slot = {21, 1, 19, 8, 12, 13, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_161.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/quadrijet/constablezuvio.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[162]={\n    name = 'Sarco Plank',\n    Faction = 3,\n    ship_type = 9,\n    cost = 29,\n    slot = {21, 19, 8, 12, 13, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_162.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/quadrijet/sarcoplank.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[163]={\n    name = 'Unkar Plutt',\n    Faction = 3,\n    ship_type = 9,\n    cost = 29,\n    slot = {21, 19, 8, 12, 13, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_163.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/quadrijet/unkarplutt.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[164]={\n    name = 'Jakku Gunrunner',\n    Faction = 3,\n    ship_type = 9,\n    cost = 29,\n    slot = {21, 19, 8, 12, 13, 14},\n    Shield = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_164.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/quadrijet/jakkugunrunner.png',\n    actSet = {'F','E','BR'}\n}\n\nmasterPilotDB[165]={\n    name = 'Kavil',\n    Faction = 3,\n    ship_type = 12,\n    cost = 43,\n    slot = {21, 1, 4, 5, 16, 10, 12, 13, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_165.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/kavil.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[166]={\n    name = 'Drea Renthal',\n    Faction = 3,\n    ship_type = 12,\n    cost = 49,\n    slot = {21, 1, 4, 5, 16, 10, 12, 13, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_166.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/drearenthal.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[167]={\n    name = 'Hired Gun',\n    Faction = 3,\n    ship_type = 12,\n    cost = 32,\n    slot = {21, 1, 4, 5, 16, 10, 12, 13, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_167.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/hiredgun.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[168]={\n    name = 'Crymorah Goon',\n    Faction = 3,\n    ship_type = 12,\n    cost = 30,\n    slot = {21, 4, 5, 16, 10, 12, 13, 14},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_168.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/BTLA4YWing/crymorahgun.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[169]={['name']=\"N'dru Suhlak\",['Faction']= 3,['ship_type']=38,['cost']=30,['slot']={21, 1, 6, 13, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_169.png',['init']=4,['actSet']={'F','TL','BR'}}\nmasterPilotDB[170]={['name']=\"Kaa'to Leeachos\",['Faction']= 3,['ship_type']=38,['cost']=27,['slot']={21, 1, 6, 13, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_170.png',['init']=3,['actSet']={'F','TL','BR'}}\nmasterPilotDB[171]={['name']='Nashtah Pup',['Faction']= 3,['ship_type']=38,['cost']=6,['slot']={21, 6, 13, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_171.png',['init']=0,['actSet']={'F','TL','BR'}}\nmasterPilotDB[172]={['name']='Black Sun Soldier',['Faction']= 3,['ship_type']=38,['cost']=24,['slot']={21, 1, 6, 13, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_172.png',['init']=3,['actSet']={'F','TL','BR'}}\nmasterPilotDB[173]={['name']='Binayre Pirate',['Faction']= 3,['ship_type']=38,['cost']=22,['slot']={21, 6, 13, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_173.png',['init']=1,['actSet']={'F','TL','BR'}}\nmasterPilotDB[174]={['name']='Dace Bonearm',['Faction']= 3,['ship_type']=34,['cost']=31,['slot']={21, 1, 8, 12, 13, 14, 14, 15},['Shield']=2,['Charge']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_174.png',['init']=4,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[175]={['name']='Palob Godalhi',['Faction']= 3,['ship_type']=34,['cost']=40,['slot']={21, 1, 8, 12, 13, 14, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_175.png',['init']=3,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[176]={['name']='Torkil Mux',['Faction']= 3,['ship_type']=34,['cost']=38,['slot']={21, 8, 12, 13, 14, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_176.png',['init']=2,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[177]={['name']='Spice Runner',['Faction']= 3,['ship_type']=34,['cost']=28,['slot']={21, 8, 12, 13, 14, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_177.png',['init']=1,['actSet']={'F','TL','B','Rot'}}\n\nmasterPilotDB[178]={\n    name = 'Guri',\n    Faction = 3,\n    ship_type = 3,\n    cost = 64,\n    slot = {21, 1, 2, 5, 14, 15},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_178.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/guri.png',\n    actSet = {'C','F','TL','B','VR'}\n}\n\nmasterPilotDB[179]={\n    name = 'Dalan Oberos',\n    Faction = 3,\n    ship_type = 3,\n    cost = 54,\n    slot = {21, 1, 2, 5, 14, 15},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_179.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/dalanoberos.png',\n    actSet = {'F','TL','B','VR','Piv'}\n}\n\nmasterPilotDB[180]={\n    name = 'Prince Xizor',\n    Faction = 3,\n    ship_type = 3,\n    cost = 54,\n    slot = {21, 1, 2, 5, 14, 15},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_180.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/princexizor.png',\n    actSet = {'F','TL','B','VR'}\n}\n\nmasterPilotDB[181]={\n    name = 'Black Sun Assassin',\n    Faction = 3,\n    ship_type = 3,\n    cost = 48,\n    slot = {21, 1, 2, 5, 14, 15},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_181.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/blacksunassassin.png',\n    actSet = {'F','TL','B','VR'}\n}\n\nmasterPilotDB[182]={\n    name = 'Black Sun Enforcer',\n    Faction = 3,\n    ship_type = 3,\n    cost = 45,\n    slot = {21, 2, 5, 14, 15},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_182.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Starviper/blacksunenforcer.png',\n    actSet = {'F','TL','B','VR'}\n}\n\nmasterPilotDB[183]={['name']='Serissu',['Faction']= 3,['ship_type']=44,['cost']=41,['slot']={21, 1,14,99},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_183.png',['init']=5,['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[184]={['name']='Genesis Red',['Faction']= 3,['ship_type']=44,['cost']=31,['slot']={21, 1,14,99},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_184.png',['init']=4,['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[185]={['name']=\"Laetin A'shera\",['Faction']= 3,['ship_type']=44,['cost']=30,['slot']={21, 1,14,99},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_185.png',['init']=3,['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[186]={['name']='Quinn Jast',['Faction']= 3,['ship_type']=44,['cost']=31,['slot']={21, 1,14,99},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_186.png',['init']=3,['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[187]={['name']='Inaldra',['Faction']= 3,['ship_type']=44,['cost']=30,['slot']={21, 14,99},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_187.png',['init']=2,['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[188]={['name']='Sunny Bounder',['Faction']= 3,['ship_type']=44,['cost']=27,['slot']={21, 14,99},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_188.png',['init']=1,['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[189]={['name']='Tansarii Point Veteran',['Faction']= 3,['ship_type']=44,['cost']=29,['slot']={21, 1,14,99},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_189.png',['init']=3,['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[190]={['name']='Cartel Spacer',['Faction']= 3,['ship_type']=44,['cost']=25,['slot']={21, 14,99},['Shield']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_190.png',['init']=1,['actSet']={'F','E','TL','BR'}}\n\nmasterPilotDB[191]={\n    name = 'Talonbane Cobra',\n    Faction = 3,\n    ship_type = 7,\n    cost = 50,\n    slot = {21, 1, 6, 13, 13, 14, 14},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_191.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/talonbanecobra.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[192]={\n    name = 'Graz',\n    Faction = 3,\n    ship_type = 7,\n    cost = 46,\n    slot = {21, 1, 6, 13, 13, 14, 14},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_192.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/graz.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[193]={\n    name = 'Viktor Hel',\n    Faction = 3,\n    ship_type = 7,\n    cost = 44,\n    slot = {21, 1, 6, 13, 13, 14, 14},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_193.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/viktorhel.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[194]={\n    name = 'Captain Jostero',\n    Faction = 3,\n    ship_type = 7,\n    cost = 42,\n    slot = {21, 6, 13, 13, 14, 14},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_194.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/captainjostero.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[195]={\n    name = 'Black Sun Ace',\n    Faction = 3,\n    ship_type = 7,\n    cost = 40,\n    slot = {21, 1, 6, 13, 13, 14, 14},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_195.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/blacksunace.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[196]={\n    name = 'Cartel Marauder',\n    Faction = 3,\n    ship_type = 7,\n    cost = 38,\n    slot = {21, 6, 13, 13, 14, 14},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_196.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/Kihraxz/cartelmarauder.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[197]={['name']='IG-88A',['Faction']= 3,['ship_type']=21,['cost']=66,['slot']={21, 1, 2, 3, 3, 12, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_197.png',['init']=4,['actSet']={'C','E','TL','B'}}\nmasterPilotDB[198]={['name']='IG-88B',['Faction']= 3,['ship_type']=21,['cost']=62,['slot']={21, 1, 2, 3, 3, 12, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_198.png',['init']=4,['actSet']={'C','E','TL','B'}}\nmasterPilotDB[199]={['name']='IG-88C',['Faction']= 3,['ship_type']=21,['cost']=63,['slot']={21, 1, 2, 3, 3, 12, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_199.png',['init']=4,['actSet']={'C','E','TL','B'}}\nmasterPilotDB[200]={['name']='IG-88D',['Faction']= 3,['ship_type']=21,['cost']=62,['slot']={21, 1, 2, 3, 3, 12, 13, 14, 15},['Shield']=3,\n                    executeOptions = {\n                        rbl3s = {[1]='rtl3s', [2]='rbl3s', [3]='rk3'},\n                        rbr3s = {[1]='rk3', [2]='rbr3s', [3]='rtr3s'}\n                    },\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_200.png',['init']=4,['actSet']={'C','E','TL','B'}}\nmasterPilotDB[201]={['name']='4-LOM',['Faction']= 3,['ship_type']=22,['cost']=49,['slot']={21, 1, 2, 8, 13, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_201.png',['init']=3,['actSet']={'C','TL'}}\nmasterPilotDB[202]={['name']='Zuckuss',['Faction']= 3,['ship_type']=22,['cost']=45,['slot']={21, 1, 2, 8, 13, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_202.png',['init']=3,['actSet']={'F','TL'}}\nmasterPilotDB[203]={['name']='Gand Findsman',['Faction']= 3,['ship_type']=22,['cost']=41,['slot']={21, 2, 8, 13, 14, 15},['Shield']=4,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_203.png',['init']=1,['actSet']={'F','TL'}}\n\nmasterPilotDB[204]={\n    name = 'Captain Nym',\n    Faction = 3,\n    ship_type = 4,\n    cost = 47,\n    slot = {21, 1, 4, 8, 12, 12, 16, 14, 15},\n    Shield = 4,\n    Charge = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_204.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/scurrgH6/captainnym.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[205]={\n    name = 'Sol Sixxa',\n    Faction = 3,\n    ship_type = 4,\n    cost = 46,\n    slot = {21, 1, 4, 8, 12, 12, 16, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_205.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/scurrgH6/solsixxa.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[206]={\n    name = 'Lok Revenant',\n    Faction = 3,\n    ship_type = 4,\n    cost = 45,\n    slot = {21, 4, 8, 12, 16, 12, 14, 15},\n    Shield = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_206.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Scum/scurrgH6/lokrevenant.png',\n    actSet = {'F','TL','BR'}\n}\n\nmasterPilotDB[207]={['name']='Torani Kulda',['Faction']= 3,['ship_type']=39,['cost']=48,['slot']={21, 1, 5, 6, 10, 13, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_207.png',['init']=4,['actSet']={'F','TL','BR'}}\nmasterPilotDB[208]={['name']='Dalan Oberos',['Faction']= 3,['ship_type']=39,['cost']=45,['slot']={21, 1, 5, 6, 10, 13, 14},['Shield']=2,['Charge']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_208.png',['init']=3,['actSet']={'F','TL','BR'}}\nmasterPilotDB[209]={['name']='Cartel Executioner',['Faction']= 3,['ship_type']=39,['cost']=41,['slot']={21, 1, 5, 6, 10, 13, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_209.png',['init']=3,['actSet']={'F','TL','BR'}}\nmasterPilotDB[210]={['name']='Bossk',['Faction']= 3,['ship_type']=24,['cost']=60,['slot']={21, 1, 3, 6, 8, 8, 16, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_210.png',['init']=4,['actSet']={'F','TL','R'}}\nmasterPilotDB[211]={['name']='Moralo Eval',['Faction']= 3,['ship_type']=24,['cost']=66,['slot']={21, 1, 3, 6, 8, 8, 16, 13, 14, 15},['Shield']=3,['Charge']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_211.png',['init']=4,['actSet']={'F','TL','R'}}\nmasterPilotDB[212]={['name']='Latts Razzi',['Faction']= 3,['ship_type']=24,['cost']=56,['slot']={21, 1, 3, 6, 8, 8, 16, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_212.png',['init']=3,['actSet']={'F','TL','R'}}\nmasterPilotDB[213]={['name']='Trandoshan Slaver',['Faction']= 3,['ship_type']=24,['cost']=51,['slot']={21, 3, 6, 8, 8, 16, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_213.png',['init']=2,['actSet']={'F','TL','R'}}\nmasterPilotDB[214]={['name']='Dengar',['Faction']= 3,['ship_type']=45,['cost']=53,['slot']={21, 1, 3, 8, 5, 13, 14, 15, 16},['Shield']=3,['Charge']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_214.png',['init']=6,['actSet']={'F','TL','BR','Rot'}}\nmasterPilotDB[215]={['name']='Manaroo',['Faction']= 3,['ship_type']=45,['cost']=45,['slot']={21, 1, 3, 8, 5, 13, 14, 15, 16},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_215.png',['init']=3,['actSet']={'F','TL','BR','Rot'}}\nmasterPilotDB[216]={['name']='Tel Trevura',['Faction']= 3,['ship_type']=45,['cost']=44,['slot']={21, 1, 3, 8, 5, 13, 14, 15, 16},['Shield']=3,['Charge']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_216.png',['init']=4,['actSet']={'F','TL','BR','Rot'}}\nmasterPilotDB[217]={['name']='Contracted Scout',['Faction']= 3,['ship_type']=45,['cost']=41,['slot']={21, 8, 3, 5, 13, 14, 15, 16},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_217.png',['init']=2,['actSet']={'F','TL','BR','Rot'}}\nmasterPilotDB[218]={['name']='Ketsu Onyo',['Faction']= 3,['ship_type']=42,['cost']=67,['slot']={21, 1, 8, 13, 13, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_218.png',['init']=5,['actSet']={'F','TL','E','Rot'}}\nmasterPilotDB[219]={['name']='Asajj Ventress',['Faction']= 3,['ship_type']=42,['cost']=69,['slot']={21, 17, 8, 13, 13, 14, 15},['Shield']=2,['Force']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_219.png',['init']=4,['actSet']={'F','TL','E','Rot'}}\nmasterPilotDB[220]={['name']='Sabine Wren',['Faction']= 3,['ship_type']=42,['cost']=59,['slot']={21, 1, 8, 13, 13, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_220.png',['init']=3,['actSet']={'F','TL','E','Rot'}}\nmasterPilotDB[221]={['name']='Shadowport Hunter',['Faction']= 3,['ship_type']=42,['cost']=55,['slot']={21, 8, 13, 13, 14, 15},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_221.png',['init']=2,['actSet']={'F','TL','E','Rot'}}\nmasterPilotDB[222]={['name']='Han Solo',['Faction']= 3,['ship_type']=47,['cost']=48,['slot']={21, 1, 6, 8, 8, 16, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_222.png',['init']=6,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[223]={['name']='Lando Calrissian',['Faction']= 3,['ship_type']=47,['cost']=42,['slot']={21, 1, 6, 8, 8, 16, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_223.png',['init']=4,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[224]={['name']='L3-37',['Faction']= 3,['ship_type']=47,['cost']=41,['slot']={21, 6, 8, 8, 16, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_224.png',['init']=2,['actSet']={'C','TL','B','Rot'}}\nmasterPilotDB[225]={['name']='Freighter Captain',['Faction']= 3,['ship_type']=47,['cost']=41,['slot']={21, 6, 8, 8, 16, 13, 14, 15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_225.png',['init']=1,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[226]={['name']='Lando Calrissian',['Faction']= 3,['ship_type']=48,['cost']=29,['slot']={21, 1, 8, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_226.png',['init']=4,['actSet']={'F','BR'}}\nmasterPilotDB[227]={['name']='Outer Rim Pioneer',['Faction']= 3,['ship_type']=48,['cost']=28,['slot']={21, 1, 8, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_227.png',['init']=3,['actSet']={'F','BR'}}\nmasterPilotDB[228]={['name']='L3-37',['Faction']= 3,['ship_type']=48,['cost']=26,['slot']={21, 1, 8, 14},['Shield']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_228.png',['init']=2,['actSet']={'C','BR'}}\nmasterPilotDB[229]={['name']='Autopilot Drone',['Faction']= 3,['ship_type']=48,['cost']=12,['slot']={21, 0},['Shield']=2,['Charge']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Pilot_229.png',['init']=1,['actSet']={'C','BR'}}\n\nmasterPilotDB[397]={\n\tname = '\"Midnight\"',\n\tFaction = 5,\n\tship_type = 49,\n\tcost =42,\n\tslot = {21, 1,19,14},\n\tShield =1,\n\tcard='http://sb-cdn.fantasyflightgames.com/card_images/en/c7994885b38757f92bdf3a98c37b3c96.png',\n\tinit = 6,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Midnight.png',\n\tactSet = {'F','TL','E','BR'}\n\t}\nmasterPilotDB[398]={\n\tname = '\"Scorch\"',\n\tFaction = 5,\n\tship_type = 49,\n\tcost =33 ,\n\tslot = {21, 1,19,14},\n\tShield = 1,\n\tcard = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9dd11d408bb869cb947663fc29622833.png',\n\tinit = 4,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Scorch.png',\n\tactSet = {'F','TL','E','BR'}\n\t}\nmasterPilotDB[399]={\n\tname ='\"Static\"',\n\tFaction =5,\n\tship_type =49,\n\tcost =33,\n\tslot ={21, 1,19,14},\n\tShield =1,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/2481fe5d98026e086a901d83dbe87018.png',\n\tinit =4,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Static.png',\n\tactSet ={'F','TL','E','BR'}}\nmasterPilotDB[400]={\n\tname ='\"Longshot\"',\n\tFaction =5,\n\tship_type =49,\n\tcost =31,\n\tslot ={21, 1,19,14},\n\tShield =1,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/d0e698f59696c15b60d7eaa1e2d51eeb.png',\n\tinit =3,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Longshot.png',\n\tactSet ={'F','TL','E','BR'}}\nmasterPilotDB[401]={\n\tname ='\"Muse\"',\n\tFaction =5,\n\tship_type =49,\n\tcost =30,\n\tslot ={21, 1,19,14},\n\tShield =1,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/7de4e91de0906eb548bfe3a08a1b6abe.png',\n\tinit =2,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Muse.png',\n\tactSet ={'F','TL','E','BR'}}\nmasterPilotDB[402]={\n\tname ='\"Null\"',\n\tFaction =5,\n\tship_type =49,\n\tcost =30,\n\tslot ={21, 19,14},\n\tShield =1,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/79a9d780d3540647af1e057113869294.png',\n\tinit =0,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Null.png',\n\tactSet ={'F','TL','E','BR'}}\nmasterPilotDB[403]={\n\tname ='Omega Squadron Ace',\n\tFaction =5,\n\tship_type =49,\n\tcost =28,\n\tslot ={21, 1,19,14},\n\tShield =1,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/97e72d0f5dc8c2dd21a355e3258f37dd.png',\n\tinit =3,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Omega%20Squadron%20Ace.png',\n\tactSet ={'F','TL','E','BR'}}\nmasterPilotDB[404]={\n\tname ='Zeta Squadron Pilot',\n\tFaction =5,\n\tship_type =49,\n\tcost =26,\n\tslot ={21, 19,14},\n\tShield =1,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/be1062b6a7a8e4644223146342990a02.png',\n\tinit =2,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/ZetaSquadronPilot.png',\n\tactSet ={'F','TL','E','BR'}}\nmasterPilotDB[405]={\n\tname ='Epsilon Squadron Cadet',\n\tFaction =5,\n\tship_type =49,\n\tcost =25,\n\tslot ={21, 19,14},\n\tShield =1,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/e911cd18f04225bbd36c48114b56f3cc.png',\n\tinit =1,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/EpsilonSquadronCadet.png',\n\tactSet ={'F','TL','E','BR'}\n}\nmasterPilotDB[406]={\n\tname ='\"Quickdraw\"',\n\tFaction = 5,\n\tship_type = 50,\n\tcost = 47,\n\tslot = {21, 1,2,19,6,16,14},\n\tShield = 3,\n\tCharge = 1,\n\tcard = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d038dadd7a62bbe2de89d3866e1a3639.png',\n\tinit = 6,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Quickdraw.png',\n\tactSet = {'F','TL','E','BR','Rot'}\n}\nmasterPilotDB[407]={\n\tname ='\"Backdraft\"',\n\tFaction =5,\n\tship_type =50,\n\tcost =39,\n\tslot ={21, 1,2,19,6,16,14},\n\tShield =3,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/317cc5350980277f1d389ed618030d85.png',\n\tinit =4,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Backdraft.png',\n\tactSet ={'F','TL','E','BR','Rot'}}\nmasterPilotDB[408]={\n\tname ='Omega Squadron Expert',\n\tFaction =5,\n\tship_type =50,\n\tcost =34,\n\tslot ={21, 1,2,19,6,16,14},\n\tShield =3,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/784d00f653ff7cd58cb634c7a59e47c1.png',\n\tinit =3,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/OmegaSquadronExpert.png',\n\tactSet ={'F','TL','E','BR','Rot'}}\nmasterPilotDB[409]={\n\tname ='Zeta Squadron Survivor',\n\tFaction =5,\n\tship_type =50,\n\tcost =32,\n\tslot ={21, 2,19,6,16,14},\n\tShield =3,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/848db1993150bda19217e2c14b3c3df6.png',\n\tinit =2,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/ZetaSquadronSurvivor.png',\n\tactSet ={'F','TL','E','BR','Rot'}}\nmasterPilotDB[410]={\n\tname ='Major Stridan',\n\tFaction =5,\n\tship_type =51,\n\tcost =61,\n\tslot ={21, 2,19,19,3,8,8,8,14},\n\tShield =6,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/8420beca035dedf1596c7c99255fb2e7.png',\n\tinit =4,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/MajorStridan.png',\n\tactSet ={'F','TL','R'}}\nmasterPilotDB[411]={\n\tname ='Lieutenant Tavson',\n\tFaction =5,\n\tship_type =51,\n\tcost =64,\n\tslot ={21, 2,19,19,3,8,8,8,14},\n\tShield =6,\n\tCharge =2,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/20fbf3ed79c50d2082cdb44caac26064.png',\n\tinit =3,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/LieutenantTavson.png',\n\tactSet ={'F','TL','R'}}\nmasterPilotDB[412]={\n\tname ='Lieutenant Dormitz',\n\tFaction =5,\n\tship_type =51,\n\tcost =70,\n\tslot ={21, 2,19,19,3,8,8,8,14},\n\tShield =6,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/e4acd80da2c39e25d4f999cb7c314fe5.png',\n\tinit =2,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/LieutenantDormitz.png',\n\tactSet ={'F','TL','R'}}\nmasterPilotDB[413]={\n\tname ='Starkiller Base Pilot',\n\tFaction =5,\n\tship_type =51,\n\tcost =58,\n\tslot ={21, 2,19,19,3,8,8,8,14},\n\tShield =6,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/41f6d936f14a058ed1c5e6ac12de37c2.png',\n\tinit =2,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/StarkillerBasePilot.png',\n\tactSet ={'F','TL','R'}}\nmasterPilotDB[414]={\n\tname ='Kylo Ren',\n\tCondition =\"I'll Show You the Dark Side\",\n\tFaction =5,\n\tship_type =52,\n\tcost =76,\n\tslot ={21, 17,19,5,6},\n\tShield =2,\n\tForce =2,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/71dbde337b9ff5aab897781d40d8f653.png',\n\tinit =5,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/KyloRen.png',\n\tactSet ={'F','TL','BR','B'}\n}\n\nmasterPilotDB[415]={\n\tname ='\"Blackout\"',\n\tFaction =5,\n\tship_type =52,\n\tcost =63,\n\tslot ={21, 1,19,5,6},\n\tShield =2,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/c5659b210e13b4e11fdd5f1396f2847c.png',\n\tinit =5,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Blackout.png',\n\tactSet ={'F','TL','BR','B'}\n}\n\nmasterPilotDB[416]={\n\tname ='First Order Test Pilot',\n\tFaction =5,\n\tship_type =52,\n\tcost =56,\n\tslot ={21, 1,19,5,6},\n\tShield =2,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/568abbcd68bb174173da4e7ee92051e3.png',\n\tinit =4,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/FirstOrderTestPilot.png',\n\tactSet ={'F','TL','BR','B'}\n}\n\nmasterPilotDB[417]={\n\tname ='Sienar-Jaemus Engineer',\n\tFaction =5,\n\tship_type =52,\n\tcost =48,\n\tslot ={21, 19,5,6},\n\tShield =2,\n\tcard ='http://sb-cdn.fantasyflightgames.com/card_images/en/8f7c4680fbc001169baf6538ab259e9b.png',\n\tinit =1,\n\ttexture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Sienar-JaemusEngineer.png',\n\tactSet ={'F','TL','BR','B'}\n}\n\n\nmasterPilotDB[418]={\n    name = 'Poe Dameron',\n    title = 'Trigger-Happy Flyboy',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 67,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    Charge = 1,\n    card='http://sb-cdn.fantasyflightgames.com/card_images/en/14c504c0815213a66010c4013d9296ee.png',\n    init = 6,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/PoeDameron.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[419]={\n    name = 'Ello Asty',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 55,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/f77180ae05fd919a0dff2225380246a6.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/ElloAsty.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[420]={\n    name = 'Nien Nunb',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 55,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/00a3c393a33b33168bc61e47749e1474.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/NienNunb.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[421]={\n    name = 'Kare Kun',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 51,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/6edb8ed4cbf882bf6dbe7a37b5981d85.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/KareKun.png',\n    actSet = {'F','TL','B', 'Dare'}\n}\n\nmasterPilotDB[422]={\n    name = 'Temmin Wexley',\n    title = 'Snap',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 53,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/bb98b7ea3a580542b586a9999fd352c9.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/TemminWexley.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[423]={\n    name = 'Jessika Pava',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 51,\n    slot = {21, 19,14,18,15,10,99},\n    Shield = 3,\n    Charge = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/bc26d8864f421f1362473aa4982108ba.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/JessikaPava.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[424]={\n    name = 'Joph Seastriker',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 49,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/df85f5b77e16363a05c8f68792440166.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/JophSeastriker.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[425]={\n    name = 'Red Squadron Expert',\n    Faction = 4,\n    ship_type = 53,\n    cost = 44,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/58967d94cfef285c4df2fdbb77fd0502.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/RedSquadronExpert.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[426]={\n    name = 'Blue Squadron Rookie',\n    Faction = 4,\n    ship_type = 53,\n    cost = 42,\n    slot = {21, 19,14,18,15,10,99},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/a82a39a4c9baf883fbc6ae353abdd2ec.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/BlueSquadronRookie.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[427]={['name']=\"Han Solo\",['Faction']=4,['ship_type']=57,['cost']=63,['slot']={21, 1,8,8,16,13,14,15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/5816bd53c272ed50096e22ae1af2b38a.png',['init']=6,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[428]={['name']=\"Rey\",['Faction']=4,['ship_type']=57,['cost']=68,['slot']={21, 17,8,8,16,13,14,15},['Shield']=3,['Force']=2,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/0ee7006e6cc51d8c08b784c9b770f1b0.png',['init']=5,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[429]={['name']=\"Chewbacca\",['Faction']=4,['ship_type']=57,['cost']=61,['slot']={21, 1,8,8,16,13,14,15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/422fc30e0e10445e80b304ef2d96dc06.png',['init']=4,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[430]={['name']=\"Resistance Sympathizer\",['Faction']=4,['ship_type']=57,['cost']=59,['slot']={21, 8,8,16,13,14,15},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/28411b84c1b15f0bfa9928f2206e44f5.png',['init']=2,['actSet']={'F','TL','B','Rot'}}\nmasterPilotDB[431]={['name']=\"Finch Dallow\",['Faction']=4,['ship_type']=55,['cost']=58,['slot']={21, 2,19,8,16,16,12,12,14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/43d9a0555f719a4cbe1ffe905fd38c46.png',['init']=4,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[432]={['name']=\"Ben Teene\",['Faction']=4,['ship_type']=55,['cost']=56,['slot']={21, 2,19,8,16,16,12,12,14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/c9189c7e510b4d734d4d78c4f595010f.png',['init']=3,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[433]={['name']=\"Cat\",['Faction']=4,['ship_type']=55,['cost']=52,['slot']={21, 2,19,8,16,16,12,12,14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/b386dc25736682ebc785b15551de903b.png',['init']=1,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[434]={['name']=\"Cobalt Squadron Bomber\",['Faction']=4,['ship_type']=55,['cost']=51,['slot']={21, 2,19,8,16,16,12,12,14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/6b6a3bb8049699e2d66fe09531e8bc00.png',['init']=1,['actSet']={'F','TL','Rot'}}\n\nmasterPilotDB[435]={\n    name = \"L'ulo L'ampar\",\n    Faction = 4,\n    ship_type = 54,\n    cost = 43,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e15d3e2a2fc082b95a64a83df0c96f7f.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/lulo_lampar.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}}\n\nmasterPilotDB[436]={\n    name = \"Tallissan Lintra\",\n    Faction = 4,\n    ship_type = 54,\n    cost = 36,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    Charge = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/72cb6c4e50b0ad24af0bb84ce0aa53f0.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/talli_lintra.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}}\n\nmasterPilotDB[437]={\n    name = \"Greer Sonnel\",\n    Faction = 4,\n    ship_type = 54,\n    cost = 36,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/7fc7b194b02ad7af6adf4ef9b79108d1.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/greer_sonnel.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}}\n\nmasterPilotDB[438]={\n    name = \"Zari Bangel\",\n    Faction = 4,\n    ship_type = 54,\n    cost = 35,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d7f37dbb86bb706dd535e9a65b69149a.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/zari_bangel.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}}\n\nmasterPilotDB[439]={\n    name = \"Green Squadron Expert\",\n    Faction = 4,\n    ship_type = 54,\n    cost = 34,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3f7ad9efb4c5af8b4d1f5c07a3c7538b.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/green_sq_expert.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}}\n\nmasterPilotDB[440]={\n    name = \"Blue Squadron Recruit\",\n    Faction = 4,\n    ship_type = 54,\n    cost = 32,\n    slot = {21, 1,19,6},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e033b2729305ac0b678d6031ada7b2b8.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/blue_sq_recruit.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}}\n\nmasterPilotDB[441]={['name']='Foreman Proach',['Faction']=3,['ship_type']=56,['cost']=32,['slot']={21, 1,14},['Shield']=6,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/cfb3b5fa9d747afc3aa10f3b86f45818.png',['init']=4,['actSet']={'F','E','BR'}}\nmasterPilotDB[442]={['name']='Ahhav',['Faction']=3,['ship_type']=56,['cost']=30,['slot']={21, 1,14},['Shield']=6,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d58a0696c8d85a63e90eb8a1e522a54c.png',['init']=3,['actSet']={'F','E','BR'}}\nmasterPilotDB[443]={['name']='Captain Seevor',['Faction']=3,['ship_type']=56,['cost']=30,['slot']={21, 1,14},['Shield']=6,['Charge']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/70b64586cc2eb05d10efc7ba8dfd69d0.png',['init']=3,['actSet']={'F','E','BR'}}\nmasterPilotDB[444]={['name']='Overseer Yushyn',['Faction']=3,['ship_type']=56,['cost']=26,['slot']={21, 1,14},['Shield']=6,['Charge']=1,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/6c9268d3e6cc6b671d6db6ac39fcad0f.png',['init']=2,['actSet']={'F','E','BR'}}\nmasterPilotDB[445]={['name']='Mining Guild Surveyor',['Faction']=3,['ship_type']=56,['cost']=23,['slot']={21, 1,14},['Shield']=6,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/3e5872dea32f2015bb6737592c21efaf.png',['init']=2,['actSet']={'F','E','BR'}}\nmasterPilotDB[446]={['name']='Mining Guild Sentry',['Faction']=3,['ship_type']=56,['cost']=22,['slot']={21, 1,14},['Shield']=6,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/6d67112b15c3c97bd3d4acf2c8d000ed.png',['init']=1,['actSet']={'F','E','BR'}}\nmasterPilotDB[447]={['name']=\"Edon Kappehl\",['Faction']=4,['ship_type']=55,['cost']=58,['slot']={21, 2,19,8,16,16,12,12,14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f58fe0b57dc4a9c878627f0fea9cf1ef.png',['init']=3,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[448]={['name']=\"Vennie\",['Faction']=4,['ship_type']=55,['cost']=54,['slot']={21, 2,19,8,16,16,12,12,14},['Shield']=3,\n                  ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/0d494986a24e6c55efae066a43161b0d.png',['init']=2,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[449]={\n    name = 'Lieutenant Bastian',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 47,\n    slot = {21, 19,14,18,15,10},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3f43d6b3c6e87bde6a681e9d4421dec8.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/LieutenantBastian.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[450]={\n    name = 'Jaycris Tubbs',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 48,\n    slot = {21, 19,14,18,15,10},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/5f3abacb9a081f5a3ca42f7a30da0e6c.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/JaycrisTubbs.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[451]={\n    name = 'Black Squadron Ace',\n    Faction = 4,\n    ship_type = 53,\n    cost = 47,\n    slot = {21, 1,19,14,18,15,10},\n    Shield = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d2b6a5166b3fd985df5d1941408b58e1.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/BlackSquadronAce.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[452]={\n    name = 'Commander Malarus',\n    Faction = 5,\n    ship_type = 49,\n    cost = 38,\n    slot = {21, 1,19,14},\n    Shield = 1,\n    Charge = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/f7506ec739f5580d484ff0ee49b041f3.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Commander%20Malarus.png',\n    actSet = {'F','E','TL','BR'}\n}\n\nmasterPilotDB[453]={\n    name = 'TN-3465',\n    Faction = 5,\n    ship_type = 49,\n    cost = 28,\n    slot = {21, 19,14},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/333cbf0da8849edb38c4e93944d8fe57.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/TN-3465.png',\n    actSet = {'F','E','TL','BR'}\n}\n\nmasterPilotDB[454]={\n    name = 'Lieutenant Rivas',\n    Faction = 5,\n    ship_type = 49,\n    cost = 27,\n    slot = {21, 19, 14},\n    Shield = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/7188ec2eb699261dbd47a15df6164f4c.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_FO/Lieutenant%20Rivas.png',\n    actSet = {'F','E','TL','BR'}\n}\n\nmasterPilotDB[455]={\n    name = '\"Recoil\"',\n    Faction = 5,\n    ship_type = 52,\n    cost = 57,\n    slot = {21, 1, 19, 5, 6},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/ab11858b2b9ac5c8bbfb2dc21023ba34.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Recoil.png',\n    actSet = {'F','B','TL','BR'}\n}\n\nmasterPilotDB[456]={\n    name = '\"Avenger\"',\n    Faction = 5,\n    ship_type = 52,\n    cost = 56,\n    slot = {21, 1, 19, 5, 6},\n    Shield = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/d90d3057ead18b5df5f6de55a199a4cd.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Avenger.png',\n    actSet = {'F','B','TL','BR'}\n}\n\nmasterPilotDB[457]={\n    name = 'Captain Cardinal',\n    Faction = 5,\n    ship_type = 51,\n    cost = 62,\n    slot = {21, 2, 19, 19, 3, 8, 8, 8, 14},\n    Shield = 6,\n    Charge = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/be29a69f75726ad48f607eecca671e01.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/Captain%20Cardinal.png',\n    actSet = {'F','TL','R'}\n}\n\nmasterPilotDB[458]={\n    name = 'Petty Officer Thanisson',\n    Faction = 5,\n    ship_type = 51,\n    cost = 59,\n    slot = {21, 2, 19, 19, 3, 8, 8, 8, 14},\n    Shield = 6,\n    Charge = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3a2232a5238d8bf5e7538fe1d6003dbc.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Large/FO_Upsilon_Shuttle/Petty%20Officer%20Thanisson.png',\n    actSet = {'F','TL','R'}\n}\n\n--w3pilot\n\nmasterPilotDB[492]={['name']='General Grievous',['Faction']=7,['ship_type']=58,['cost']=44,['slot']={21, 1,14,15,20},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/9e4a215e799a9e7ad1853d19d149dd20.png',['init']=4,\n                  ['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[493]={['name']='Wat Tambor',['Faction']=7,['ship_type']=58,['cost']=42,['slot']={21, 1,14,15,20},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/68cbd6082683fe17778f829555f23a26.png',['init']=3,\n                  ['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[494]={['name']='Captain Sear',['Faction']=7,['ship_type']=58,['cost']=45,['slot']={21, 14,15,20},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/3d3704ab454433a8b4d73ee6bff430b8.png',['init']=2,\n                  ['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[495]={['name']='Skakoan Ace',['Faction']=7,['ship_type']=58,['cost']=38,['slot']={21, 1,14,15,20},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/ceb7a3bc406ff17be5dee5de62b39195.png',['init']=3,\n                  ['actSet']={'F','TL','B','BR'}}\nmasterPilotDB[496]={['name']='Feethan Ottraw Autopilot',['Faction']=7,['ship_type']=58,['cost']=35,['slot']={21, 14,15,20},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/538c4833605af80b226da9e5f800e6ef.png',['init']=1,\n                  ['actSet']={'C','TL','B','BR'}}\nmasterPilotDB[497]={['name']='Separatist Drone',['Faction']=7,['ship_type']=59,['cost']=22,['slot']={21, 6,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/64e75b9a1024ac0c909634e62e165b2e.png',['init']=3,\n                  ['actSet']={'C','BR','TL'}}\nmasterPilotDB[498]={['name']='Trade Federation Drone',['Faction']=7,['ship_type']=59,['cost']=20,['slot']={21, 6,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/4d8ed38f907fb4869611add738abda11.png',['init']=1,\n                  ['actSet']={'C','BR','TL'}}\nmasterPilotDB[499]={['name']='DFS-081',['Faction']=7,['ship_type']=59,['cost']=26,['slot']={21, 6,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/808de8db6d43921b4e3124f01d5d4947.png',['init']=3,\n                  ['actSet']={'C','BR','TL'}}\nmasterPilotDB[500]={['name']='Precise Hunter',['Faction']=7,['ship_type']=59,['cost']=23,['slot']={21, 6,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/44cd712b4db9f34091cff73a4fda4303.png',['init']=3,\n                  ['actSet']={'C','BR','TL'}}\nmasterPilotDB[501]={['name']='DFS-311',['Faction']=7,['ship_type']=59,['cost']=23,['slot']={21, 6,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/741f05dbe0f7e56fc9918b86bdb0e3fb.png',['init']=1,\n                  ['actSet']={'C','BR','TL'}}\nmasterPilotDB[502]={['name']='Haor Chall Prototype',['Faction']=7,['ship_type']=59,['cost']=21,['slot']={21, 6,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/91421be1f3bbbefd005c1b2682f0bc44.png',['init']=1,\n                  ['actSet']={'C','BR','TL'}}\nmasterPilotDB[503]={['name']='Darth Maul',['Faction']=7,['ship_type']=60,['cost']=65,['slot']={21, 17,5,3,8,8,20,12,15,14},['Force']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/95428161db7de4adcea6fa8bcbf9de2f.png',['init']=5,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[504]={['name']='Count Dooku',['Faction']=7,['ship_type']=60,['cost']=63,['slot']={21, 17,5,3,8,8,20,12,15,14},['Force']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/88959087710ec5a80a16dd93573f149d.png',['init']=3,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[505]={['name']='O-66',['Faction']=7,['ship_type']=60,['cost']=49,['slot']={21, 1,5,3,8,8,20,12,15,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/9edd9bb6846e77723d8f0381bb7909aa.png',['init']=3,\n                  ['actSet']={'C','TL','BR'}}\nmasterPilotDB[506]={['name']='Dark Courier',['Faction']=7,['ship_type']=60,['cost']=51,['slot']={21, 5,3,8,8,20,12,15,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/132f1957b904c890b94bf3aaf2a944ce.png',['init']=2,\n                  ['actSet']={'F','TL','BR'}}\n\nmasterPilotDB[507]={['name']='Anakin Skywalker',['Faction']=6,['ship_type']=61,['cost']=62,['slot']={21, 17,10,18,14},['Force']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d60f4eca355471465ca3f6b99fb98e56.png',['init']=6,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[508]={['name']='Luminara Unduli',['Faction']=6,['ship_type']=61,['cost']=43,['slot']={21, 17,10,18,14},['Force']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/7f87b6c12631687bedf75a18582af0b0.png',['init']=4,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[509]={['name']='Barriss Offee',['Faction']=6,['ship_type']=61,['cost']=38,['slot']={21, 17,10,18,14},['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f8f58005da18d7041b1ec2374701465c.png',['init']=4,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[510]={['name']='Ahsoka Tano',['Faction']=6,['ship_type']=61,['cost']=44,['slot']={21, 17,10,18,14},['Force']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/15f6bf84f63970c982dd722a5473217f.png',['init']=3,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[511]={['name']='Obi-Wan Kenobi',['Faction']=6,['ship_type']=61,['cost']=49,['slot']={21, 17,10,18,14},['Force']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/fcf515534a722b581bc2f85f36cb5c30.png',['init']=5,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[512]={['name']='Mace Windu',['Faction']=6,['ship_type']=61,['cost']=46,['slot']={21, 17,10,18,14},['Force']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f0c905f162de8d77dd78c3d49cca77f1.png',['init']=4,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[513]={['name']='Plo Koon',['Faction']=6,['ship_type']=61,['cost']=45,['slot']={21, 17,10,18,14},['Force']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/c0936c57c897ea7bacadf723cfcbd0b6.png',['init']=5,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[514]={['name']='Saesee Tiin',['Faction']=6,['ship_type']=61,['cost']=43,['slot']={21, 17,10,18,14},['Force']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e0fdedf1af8fd1e5b36c2fba17b4f6b0.png',['init']=4,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[515]={['name']='Jedi Knight',['Faction']=6,['ship_type']=61,['cost']=37,['slot']={21, 17,10,18,14},['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/13d08d0d1131e7a11f6d10fd1626bff9.png',['init']=3,\n                  ['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[516]={['name']='\"Odd Ball\"',['Faction']=6,['ship_type']=62,['cost']=31,['slot']={21, 1,6,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/9ecf7600f20da9a9eff5d3e244934ccb.png',['init']=5,\n                  ['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[517]={['name']='\"Kickback\"',['Faction']=6,['ship_type']=62,['cost']=30,['slot']={21, 1,6,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/76c1228dd4c70dc4e56ac99284a11b0f.png',['init']=4,\n                  ['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[518]={['name']='\"Axe\"',['Faction']=6,['ship_type']=62,['cost']=29,['slot']={21, 1,6,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/89ade203dec6b0fa5ed6360aae3b3022.png',['init']=3,\n                  ['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[519]={['name']='\"Swoop\"',['Faction']=6,['ship_type']=62,['cost']=28,['slot']={21, 1,6,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/8ae255235c0c1d3892344fb43fcab773.png',['init']=3,\n                  ['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[520]={['name']='\"Tucker\"',['Faction']=6,['ship_type']=62,['cost']=27,['slot']={21, 6,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a457cc2ab3038736cb37541ad94b9b34.png',['init']=2,\n                  ['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[521]={['name']='Blue Squadron Protector',['Faction']=6,['ship_type']=62,['cost']=26,['slot']={21, 1,6,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/77b2dfdca20865d8d667c41539a7356e.png',['init']=3,\n                  ['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[522]={['name']='Gold Squadron Trooper',['Faction']=6,['ship_type']=62,['cost']=25,['slot']={21, 6,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/ed881318b45485a197e514b2d13e178c.png',['init']=2,\n                  ['actSet']={'F','E','TL','BR'}}\nmasterPilotDB[523]={['name']='\"Odd Ball\"',['Faction']=6,['ship_type']=31,['cost']=49,['slot']={21, 1,5,14,8,16,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/b0e39e35b57982a9cdffe663ff47b2dc.png',['init']=5,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[524]={['name']='\"Wolffe\"',['Faction']=6,['ship_type']=31,['cost']=50,['slot']={21, 1,5,14,8,16,10},['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/2a15fd003a7fc1d475b562a958c6c263.png',['init']=4,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[525]={['name']='\"Jag\"',['Faction']=6,['ship_type']=31,['cost']=48,['slot']={21, 5,14,8,16,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/28152f1d6ee09d27a4afd2459947dc3d.png',['init']=3,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[526]={['name']='\"Sinker\"',['Faction']=6,['ship_type']=31,['cost']=54,['slot']={21, 5,14,8,16,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/8297fc7d58ec0a5e6068f8dabbbc00f1.png',['init']=3,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[527]={['name']='Squad Seven Veteran',['Faction']=6,['ship_type']=31,['cost']=44,['slot']={21, 1,5,14,8,16,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/0e0fb59b2806b41214275255986965f2.png',['init']=3,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[528]={['name']='104th Battalion Pilot',['Faction']=6,['ship_type']=31,['cost']=42,['slot']={21, 5,14,8,16,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1798ea30f603f073200326864ef9424c.png',['init']=2,\n                  ['actSet']={'F','TL','BR'}}\n--w4 Pilots\n--N-1\nmasterPilotDB[557]={['name']='Ric Olié',['Faction']=6,['ship_type']=63,['cost']=45,['slot']={21, 1,2,5,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/87829b7b808c535eb1e2c8314b04971a.png',['init']=5,\n                  ['actSet']={'F','TL','B','BR','E'}}\nmasterPilotDB[558]={['name']='Anakin Skywalker',['Faction']=6,['ship_type']=63,['cost']=41,['slot']={21, 1,2,5,10},['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/21e28ea4e8784dce5a554a33888d8be0.png',['init']=4,\n                  ['actSet']={'F','TL','B','BR','E'}}\nmasterPilotDB[559]={['name']='Padmé Amidala',['Faction']=6,['ship_type']=63,['cost']=45,['slot']={21, 1,2,5,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/3bc6bb14d0c80011145a36c132550298.png',['init']=4,\n                  ['actSet']={'F','TL','B','BR','E'}}\nmasterPilotDB[560]={['name']='Dineé Ellberger',['Faction']=6,['ship_type']=63,['cost']=38,['slot']={21, 1,2,5,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/06e0863851b95dba4874b211e05661cc.png',['init']=3,\n                  ['actSet']={'F','TL','B','BR','E'}}\nmasterPilotDB[561]={['name']='Naboo Handmaiden',['Faction']=6,['ship_type']=63,['cost']=42,['slot']={21, 2,5,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/4493fe57050175b6a75e3a13e7553b1e.png',['init']=1, ['Condition']='Decoyed',\n                  ['actSet']={'F','TL','B','BR','E'}}\nmasterPilotDB[562]={['name']='Bravo Flight Officer',['Faction']=6,['ship_type']=63,['cost']=33,['slot']={21, 2,5,10},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/274db1f70ed4da939b9440837a30c39a.png',['init']=2,\n                  ['actSet']={'F','TL','B','BR','E'}}\n--Resistance Transport\nmasterPilotDB[569]={\n    name = 'Cova Nell',\n    Faction = 4,\n    ship_type = 64,\n    cost = 38,\n    slot = {21, 1,19,3,5,8,8,10,14},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/a9ae63785f4cadaa28a74858ff1d1bc4.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport/cova_nell.png',\n    actSet = {'F','TL'}}\n\nmasterPilotDB[570]={\n    name = 'Pammich Nerro Goode',\n    Faction = 4,\n    ship_type = 64,\n    cost = 36,\n    slot = {21, 19,3,5,8,8,10,14},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9d7dd5d0851911412dd5c86603a0ea91.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport/pammich_nerro_goode.png',\n    actSet = {'F','TL'}}\n\nmasterPilotDB[571]={\n    name = 'Nodin Chavdri',\n    Faction = 4,\n    ship_type = 64,\n    cost = 36,\n    slot = {21, 19,3,5,8,8,10,14},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/9f41de269cb1ff091487554fb53b2374.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport/nodin_chavdri.png',\n    actSet = {'F','TL'}}\n\nmasterPilotDB[572]={\n    name = 'Logistics Division Pilot',\n    Faction = 4,\n    ship_type = 64,\n    cost = 32,\n    slot = {21, 19,3,5,8,8,10,14},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/57ea37cdb13f52ec3f3e0b745fc9d630.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport/logistics_div_pilot.png',\n    actSet = {'F','TL'}}\n\n--Resistance Pod\nmasterPilotDB[574]={\n    name = 'Rose Tico',\n    Faction = 4,\n    ship_type = 65,\n    cost = 26,\n    slot = {21, 1,19,8,14},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/1dbf7b355d60f5b3f278522eb702f99f.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport_pod/rose.png',\n    actSet = {'F','TL','BR'}}\n\nmasterPilotDB[573]={\n    name = 'BB-8',\n    Faction = 4,\n    ship_type = 65,\n    cost = 26,\n    slot = {21, 1,19,8,14},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/4d2201d40635299aa134acd52c9587af.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport_pod/bb8.png',\n    actSet ={'C','TL','BR', 'B'}}\n\nmasterPilotDB[575]={\n    name = 'Finn',\n    Faction = 4,\n    ship_type = 65,\n    cost = 29,\n    slot = {21, 1,19,8,14},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/311d88e51a039b79e9a422ab3c475288.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport_pod/finn.png',\n    actSet = {'F','TL','BR'}}\n\nmasterPilotDB[576]={\n    name = 'Vi Moradi',\n    Faction = 4,\n    ship_type = 65,\n    cost = 27,\n    slot = {21, 19,8,14},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/14139a2d20ff13b01bd5810371a89064.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships//Small/RIS_transport_pod/vi_moradi.png',\n    actSet ={'F','TL','BR'}}\n\n--Hyena Bomber\nmasterPilotDB[563]={['name']='DBS-404',['Faction']=7,['ship_type']=66,['cost']=30,['slot']={21, 5,6,12,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/3e647295c7237a5eb36b94d887eb8e56.png',['init']=4,\n                  ['actSet']={'C','TL','BR'}}\nmasterPilotDB[564]={['name']='DBS-32C',['Faction']=7,['ship_type']=66,['cost']=40,['slot']={21, 2,20,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1befc5619a02e2ea8b7bfb8df93471a1.png',['init']=3,\n                  ['actSet']={'C','TL','BR'}}\nmasterPilotDB[565]={['name']='Bombardment Drone',['Faction']=7,['ship_type']=66,['cost']=29,['slot']={21, 2,12,12,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/099422de35fb5ad2c2d238237e7dfe2c.png',['init']=3,\n                  ['actSet']={'C','TL','BR'}}\nmasterPilotDB[566]={['name']='Baktoid Prototype',['Faction']=7,['ship_type']=66,['cost']=28,['slot']={21, 2,6,6,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/254bc7be63cc9f4e629198f8d45f2f9b.png',['init']=1,\n                  ['actSet']={'C','TL','BR'}}\nmasterPilotDB[567]={['name']='Separatist Bomber',['Faction']=7,['ship_type']=66,['cost']=28,['slot']={21, 5,6,12,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/cf510ca885a5f85395542b9aa51fba73.png',['init']=3,\n                  ['actSet']={'C','TL','BR'}}\nmasterPilotDB[568]={['name']='Techno Union Bomber',['Faction']=7,['ship_type']=66,['cost']=25,['slot']={21, 5,6,12,14,18},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/749bdc89c3da6b8034154780959e9c34.png',['init']=1,\n                  ['actSet']={'C','TL','BR'}}\n--Republic Y-Wing\nmasterPilotDB[596]={['name']='Anakin Skywalker',['Faction']=6,['ship_type']=68,['cost']=55,['slot']={21, 17, 4, 5, 16, 10, 12, 14},['Force']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/c7c979a7d90961d2e3afe377a71285df.png',['init']=6,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[597]={['name']='\"Odd Ball\"',['Faction']=6,['ship_type']=68,['cost']=42,['slot']={21, 1, 4, 5, 16, 10, 12, 14},['card']='https://sb-cdn.fantasyflightgames.com/card_images/en/8f1d65004c763b48293d1324a49c563a.png',['init']=5,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[598]={['name']='\"Matchstick\"',['Faction']=6,['ship_type']=68,['cost']=43,['slot']={21, 1, 4, 5, 16, 10, 12, 14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/6aa658fe4082ed67500d2ac92c7731a0.png',['init']=4,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[599]={['name']='\"Broadside\"',['Faction']=6,['ship_type']=68,['cost']=36,['slot']={21, 1, 4, 5, 16, 10, 12, 14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1f0842573067d73acd7bb7589707ec4e.png',['init']=3,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[600]={['name']='R2-D2',['Faction']=6,['ship_type']=68,['cost']=32,['slot']={21, 1, 4, 5, 16, 8, 12, 14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/b37b960f2e79ab5eb905bc3593de8961.png',['init']=2,\n                  ['actSet']={'C','TL','BR'}}\nmasterPilotDB[601]={['name']='\"Goji\"',['Faction']=6,['ship_type']=68,['cost']=29,['slot']={21, 4, 5, 16, 10, 12, 14},['card']='https://sb-cdn.fantasyflightgames.com/card_images/en/3b34b6fc25db55b66654d355c7f514eb.png',['init']=2,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[602]={['name']='Shadow Squadron Veteran',['Faction']=6,['ship_type']=68,['cost']=31,['slot']={21, 1, 4, 5, 16, 10, 12, 14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/fe59b8b8bd7ca5d4104030b50a30a299.png',['init']=3,\n                  ['actSet']={'F','TL','BR'}}\nmasterPilotDB[603]={['name']='Red Squadron Bomber',['Faction']=6,['ship_type']=68,['cost']=29,['slot']={21, 4, 5, 16, 10, 12, 14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/692a1f1d4b5f5370dad7cacf2f19d699.png',['init']=2,\n                  ['actSet']={'F','TL','BR'}}\n--Nantex\nmasterPilotDB[604]={['name']='Sun Fac',['Faction']=7,['ship_type']=67,['cost']=45,['slot']={21, 1,1},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/42265df53c90026a58ac96b0acd3c1f8.png',['init']=6,\n                  ['actSet']={'F','E'}}\nmasterPilotDB[605]={['name']='Berwer Kret',['Faction']=7,['ship_type']=67,['cost']=36,['slot']={21, 1,1},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f1c76ce6ff266c23099686392efef565.png',['init']=5,\n                  ['actSet']={'F','E'}}\nmasterPilotDB[606]={['name']='Chertek',['Faction']=7,['ship_type']=67,['cost']=34,['slot']={21, 1,1},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/07504533be45d13cb82d71ea11d234f7.png',['init']=4,\n                  ['actSet']={'F','E'}}\nmasterPilotDB[607]={['name']='Gorgol',['Faction']=7,['ship_type']=67,['cost']=28,['slot']={21, 1,14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d2d0764f83a2740f407082e934986ff2.png',['init']=2,\n                  ['actSet']={'F','E'}}\nmasterPilotDB[608]={['name']='Petranaki Arena Ace',['Faction']=7,['ship_type']=67,['cost']=30,['slot']={21, 1,1},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d2d62b6070fdf59b58db79aadb845d54.png',['init']=4,\n                  ['actSet']={'F','E'}}\nmasterPilotDB[609]={['name']='Stalgasin Hive Guard',['Faction']=7,['ship_type']=67,['cost']=29,['slot']={21, 1},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e97a0ae22847e0b71d920a0df9dfcfab.png',['init']=3,\n                  ['actSet']={'F','E'}}\n--w7\n--TIE/ba\nmasterPilotDB[627]={\n    name = 'First Order Provocateur',\n    Faction = 5,\n    ship_type = 69,\n    cost = 41,\n    slot = {21, 1,19,6,14},\n    Shield = 2,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/ef/d7/efd7cc94-bdf7-4f63-80eb-476444dfeb28/swz62_card_first-order-provocateur.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/FO/TIEba/provocateur.png',\n    actSet = {'F','TL','E','BR','B'}\n}\n\nmasterPilotDB[626]={\n    name = '\"Ember\"',\n    Faction = 5,\n    ship_type = 69,\n    cost = 48,\n    slot = {21, 1,19,6,14},\n    Shield = 2,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/76/2e/762e6c35-81ce-4c9e-b8c5-f442d9fad0ee/swz62_card_ember.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/FO/TIEba/ember.png',\n    actSet = {'F','TL','E','BR','B'}\n}\n\nmasterPilotDB[625]= {\n    name = '\"Holo\"',\n    Faction = 5,\n    ship_type = 69,\n    cost = 53,\n    slot = {21, 1,19,6,14},\n    Shield = 2,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/2e/fe/2efe3183-8d4a-402a-9b11-4c8bf56a0b6c/swz62_card_holo.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/FO/TIEba/holo.png',\n    actSet = {'F','TL','E','BR','B'}\n}\n\nmasterPilotDB[624]={\n    name = 'Major Vonreg',\n    Faction = 5,\n    ship_type = 69,\n    cost = 55,\n    slot = {21, 1,19,6,14},\n    Shield = 2,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/b6/de/b6de4a15-0b5d-4c39-8a2e-c96af5dff9fe/swz62_card_major-vonreg.png',\n    init = 6,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/FO/TIEba/vonreg.png',\n    actSet = {'F','TL','E','BR','B'}\n}\n\n--FireBall\nmasterPilotDB[620]={['name']='Jarek Yeager',['Faction']=4,['ship_type']=70,['cost']=33,['slot']={21, 1,6,10,13,14,14,15},['Shield']=0,['card']='http://images-cdn.fantasyflightgames.com/filer_public/85/b2/85b26549-26a7-4f48-88c5-4d52733704ee/swz63_a1_card_jarek-yeager.png',['init']=5,\n                ['actSet']={'F','E','BR'}}\nmasterPilotDB[621]={['name']='Kazuda Xiono',['Faction']=4,['ship_type']=70,['cost']=40,['slot']={21, 1,6,10,13,14,14,15},['Shield']=0,['card']='http://images-cdn.fantasyflightgames.com/filer_public/16/42/164202d5-47a5-44ea-a96b-49c795005ca8/swz63_a1_card_kazuda-xiono.png',['init']=4,\n                ['actSet']={'F','E','BR'}}\nmasterPilotDB[622]={['name']='R1-J5',['Faction']=4,['ship_type']=70,['cost']=29,['slot']={21, 6,8,13,14,14,15},['Shield']=0,['card']='http://images-cdn.fantasyflightgames.com/filer_public/21/b3/21b3db84-a517-41ab-b3b0-dd3e5159b0c3/swz63_a1_card_r1-j5.png',['init']=1,\n                ['actSet']={'C','E','BR'}}\nmasterPilotDB[623]={['name']='Colossus Station Mechanic',['Faction']=4,['ship_type']=70,['cost']=26,['slot']={21, 6,10,13,14,14,15},['Shield']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/533ab83e881838eb8006c8f8dcf19145.png',['init']=2,\n                ['actSet']={'F','E','BR'}}\n\n--hotshot and aces\nmasterPilotDB[628]={['name']='Gina Moonsong',['Faction']= 1,['ship_type']=17,['cost']=50,['slot']={21, 1, 2, 3, 3, 5, 14, 18},['Shield']=4,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/32/8a/328a4f31-c01e-4966-a418-59c6fd42739e/swz66_gina-moonsong.png',['init']=5,['actSet']={'F','TL', 'BR'}}\n\nmasterPilotDB[629]={\n    name = 'K-2SO',\n    Faction = 1,\n    ship_type = 15,\n    cost = 46,\n    slot = {21, 1, 2, 8, 8, 14, 18},\n    Shield = 3,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/2f/27/2f277cc2-9cd8-4aa6-bf7c-daf6f7416829/swz66_k-2so.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/UTD60DUWing/k2so.png',\n    actSet = {'C','TL'}\n}\n\nmasterPilotDB[631]={['name']='Alexsandr Kallus',['Faction']= 1,['ship_type']=23,['cost']=68,['slot']={21, 1, 2, 4, 5, 8, 8, 16, 14, 15},['Shield']=4,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/d0/bf/d0bf7c63-2c2c-4372-8ace-7299d180c774/swz66_alexsandr-kallus.png',['init']=4,['actSet']={'F','TL','R'}}\n\nmasterPilotDB[630]={\n    name = 'Leia Organa',\n    Force = 1,\n    Faction = 1,\n    ship_type = 1,\n    cost = 77,\n    slot = {21, 17, 6, 8, 8, 16, 14, 14, 15},\n    Shield = 5,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/5b/ff/5bffb367-cb6e-4b8b-948f-25a70acd3a3f/swz66_leia-organa.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Rebel/modYT1300/leia.png',\n    actSet = {'F','TL','B'}\n}\n\nmasterPilotDB[638]={\n    name = \"Zizi Tlo\",\n    Faction = 4,\n    ship_type = 54,\n    cost = 41,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    Charge = 1,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/bf/4f/bf4f8372-b151-45ee-b38b-5c67bba7d2d8/swz66_zizi-tlo.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/zizi_tlo.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}}\n\nmasterPilotDB[639]={\n    name = \"Ronith Blario\",\n    Faction = 4,\n    ship_type = 54,\n    cost = 34,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/27/9a/279ac02a-e274-4bcb-9570-d469cd12936e/swz66_ronith-blario.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/ronith_blario.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}}\n\n\nmasterPilotDB[640]={['name']=\"Paige Tico\",['Faction']=4,['ship_type']=55,['cost']=58,['slot']={21, 2,19,8,16,16,12,12,14},['Shield']=3,['Charge']=1,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/48/7e/487e95ce-b13c-4d39-97f6-8e28e633d07f/swz66_paige-tico.png',['init']=5,['actSet']={'F','TL','Rot'}}\nmasterPilotDB[632]={['name']='Fifth Brother',['Faction']= 2,['ship_type']=25,['cost']=42,['slot']={21, 17, 2, 6},['Shield']=2,['Force']=2,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/c9/64/c964c977-9c57-4f50-a077-ac4fb7b70ebd/swz66_fifth-brother.png',['init']=4,['actSet']={'F','E','TL','BR','B'}}\nmasterPilotDB[633]={['name']='\"Vagabond\"',['Faction']= 2,['ship_type']=16,['cost']=34,['slot']={21, 1, 16, 12, 14},['Shield']=0,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/98/a8/98a8c9cc-53b2-4b57-ac0b-96da7c064740/swz66_vagabond.png',['init']=2,['actSet']={'F','E','BR','Ail'}}\nmasterPilotDB[634]={['name']='Morna Kee',['Faction']= 2,['ship_type']=28,['cost']=75,['slot']={21, 1, 5, 8, 8, 8, 16, 12, 14, 15},['Shield']=4,['Charge']=3,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/53/16/53162173-c0c4-423e-8bbe-d5d0be9554cb/swz66_morna-kee.png',['init']=4,['actSet']={'F','R','TL','Rot'}}\n\nmasterPilotDB[641]={\n    name = 'Lieutenant LeHuse',\n    Faction = 5,\n    ship_type = 50,\n    cost = 38,\n    slot = {21, 1, 2, 19, 6, 16, 14},\n    Shield = 3,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/5d/d9/5dd92afa-a038-4f4c-869d-19b108c6bb6a/swz66_lieutenant-lehuse.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Lieutenant%20LeHuse.png',\n    actSet = {'F','TL','E','BR','Rot'}\n}\n\nmasterPilotDB[642]={\n    name = 'Captain Phasma',\n    Faction = 5,\n    ship_type = 50,\n    cost = 39,\n    slot = {21, 1, 2, 19, 6, 16, 14},\n    Shield = 3,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/3e/07/3e077a49-bea5-4d65-92c8-6e658ffb27af/swz66_captain-phasma.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_SF/Captain%20Phasma.png',\n    actSet = {'F','TL','E','BR','Rot'}\n}\n\nmasterPilotDB[643]={\n    name = '\"Rush\"',\n    Faction = 5,\n    ship_type = 52,\n    cost = 57,\n    slot = {21, 1, 19, 5, 6},\n    Shield = 2,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/cf/12/cf121b68-8355-422f-bdc7-797c9a309b03/swz66_rush.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Small/FO_Tie_VN/Rush.png',\n    actSet = {'F','B','TL','BR'}\n}\n\nmasterPilotDB[635]={['name']='Bossk',['Faction']= 3,['ship_type']=38,['cost']=29,['slot']={21, 6, 13, 14},['Shield']=2,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/d3/9d/d39d7a92-7829-4bc8-ab2c-05843ab3d099/swz66_bossk.png',['init']=4,['actSet']={'F','TL','BR'}}\nmasterPilotDB[636]={['name']='G4R-G0R V/M',['Faction']= 3,['ship_type']=44,['cost']=28,['slot']={21, 14,99},['Shield']=1,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/4c/2c/4c2c309f-f9b0-4a93-a3a5-28b43fe981c3/swz66_g4r-g0r_vm.png',['init']=5,['actSet']={'C','E','TL','BR'}}\nmasterPilotDB[637]={['name']='Nom Lumb',['Faction']= 3,['ship_type']=45,['cost']=38,['slot']={21, 1, 3, 8, 5, 13, 14, 15, 16},['Shield']=3,['Charge']=1,\n                  ['card']='http://images-cdn.fantasyflightgames.com/filer_public/f9/67/f96780a9-1fff-460c-8480-4294fd7a7a27/swz66_nom-lumb.png',['init']=1,['actSet']={'F','TL','BR','Rot'}}\n\nmasterPilotDB[656]={\n  name = 'Commander Malarus',\n  Faction = 5,\n  limited = 1,\n  ship_type = 71,\n  cost = 43,\n  slot = {1,19,19,8,8,14},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/85/c4/85c41c14-3071-401b-b3ee-89d048acd9f0/swz69_a1_ship_malarus.png',\n  init = 5,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/Commander%20Malarus.jpg',\n  actSet = {'F','TL'}\n}\n\nmasterPilotDB[657]={\n  name = 'Gideon Hask',\n  Faction = 5,\n  limited = 1,\n  ship_type = 71,\n  cost = 40,\n  slot = {1,19,19,8,8,14},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/fc/47/fc47d552-1b3f-4281-8a0e-5ced929d7ec8/swz69_a1_ship_hask.png',\n  init = 4,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/Gideon%20Hask.jpg',\n  actSet = {'F','TL'}\n}\n\nmasterPilotDB[658]={\n  name = 'Agent Terex',\n  Faction = 5,\n  limited = 1,\n  ship_type = 71,\n  cost = 42,\n  slot = {19,19,8,8,13,13,13,14},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/9a/27/9a27c06f-58be-49b7-ab36-63dc2fae3b9a/swz69_a1_ship_terex.png',\n  init = 3,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/Agent%20Terex.jpg',\n  actSet = {'F','TL'}\n}\n\nmasterPilotDB[659]={\n  name = 'First Order Courier',\n  Faction = 5,\n  ship_type = 71,\n  cost = 38,\n  slot =  {19,19,8,8,14},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/9f/49/9f490467-49a5-456f-b649-42cb74ecdd8a/swz69_a1_ship_courier.png',\n  init = 2,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Xi_Shuttle/First%20Order%20Courier.jpg',\n  actSet = {'F','TL'}\n}\n\nmasterPilotDB[660]={\n    name = '\"Hawk\"',\n    limited = 1,\n    Faction = 6,\n    ship_type = 73,\n    cost = 55,\n    slot = {1, 6, 6, 8, 8, 16, 16, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/a0/d0/a0d0bfa8-544c-4872-8f6e-ef5fc3329c3a/swz70_a1_hawk_ship.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/Hawk.png',\n    actSet = {'F','R','TL','Rot'},\n    addSqdAction = {'BR', 'B'}\n}\n\nmasterPilotDB[661]={\n    name = '\"Warthog\"',\n    limited = 1,\n    Faction = 6,\n    ship_type = 73,\n    cost = 54,\n    slot = {6, 6, 8, 8, 16, 16, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/63/a5/63a5a158-1bb9-43f9-a461-a4778edb212d/swz70_a1_warthog_ship.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/Warthog.png',\n    actSet = {'F','R','TL','Rot'},\n}\n\nmasterPilotDB[662]={\n    name = '\"Hound\"',\n    limited = 1,\n    Faction = 6,\n    ship_type = 73,\n    cost = 52,\n    slot = {6, 6, 8, 8, 16, 16, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/61/ee/61ee228d-9369-4a23-9cb6-3068c0920f10/swz70_a1_hound_ship.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/Hound.png',\n    actSet = {'F','R','TL','Rot'},\n}\n\nmasterPilotDB[663]={\n    name = '212th Battalion Pilot',\n    Faction = 6,\n    ship_type = 73,\n    cost = 51,\n    slot = {6, 6, 8, 8, 16, 16, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/80/e7/80e7698b-13df-4d66-ba2b-575df467a7df/swz70_a1_battalion-pilot_ship.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/GRP_LAAT/212th%20Battalion%20Pilot.png',\n    actSet = {'F','R','TL','Rot'},\n}\n\nmasterPilotDB[665]={\n  name = 'Onderon Oppressor',\n  limited = 2,\n  Faction = 7,\n  ship_type = 72,\n  cost = 40,\n  slot = {6,6,8,12,20,14,18},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/d7/74/d774cd1d-eadc-4cf4-bf7f-f8169f9d14a3/swz71_card_oppressor.png',\n  init = 3,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/Onderon%20Oppressor.png',\n  actSet = {'C','TL','BR'},\n}\n\n\nmasterPilotDB[668]={\n  name = 'Geonosian Prototype',\n  limited = 2,\n  Faction = 7,\n  ship_type = 72,\n  cost = 35,\n  slot = {3,3,6,6,20,14,18},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/46/92/469279ec-b2cc-4168-81e2-f1bc616b0037/swz71_card_prototype.png',\n  init = 2,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/Geonosian%20Prototype.png',\n  actSet = {'C','TL','BR'},\n}\n\nmasterPilotDB[666]={\n  name = 'DGS-047',\n  limited = 1,\n  Faction = 7,\n  ship_type = 72,\n  cost = 35,\n  slot = {6,6,8,12,20,14,18},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/27/e8/27e89f93-eaa8-40bc-b62f-d8d009e54b82/swz71_card_dgs047.png',\n  init = 2,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/DGS-047.png',\n  actSet = {'C','TL','BR'},\n}\n\nmasterPilotDB[664]={\n  name = 'DGS-286',\n  limited = 1,\n  Faction = 7,\n  ship_type = 72,\n  cost = 42,\n  slot = {6,6,8,12,20,14,18},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/26/c0/26c041f8-90e4-4cc6-8fa4-219b87ac502b/swz71_card_dgs286.png',\n  init = 2,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/DGS-286.png',\n  actSet = {'C','TL','BR'},\n}\n\nmasterPilotDB[667]={\n  name = 'Separatist Predator',\n  Faction = 7,\n  ship_type = 72,\n  cost = 36,\n  slot = {6,6,8,12,20,14,18},\n  Shield = 2,\n  card = 'https://cdn.discordapp.com/attachments/693114202763558912/748518047504924722/separatist_predator.png',\n  init = 3,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/Separatist%20Predators.png',\n  actSet = {'C','TL','BR'},\n}\n\nmasterPilotDB[669]={\n  name = 'Baktoid Drone',\n  Faction = 7,\n  ship_type = 72,\n  cost = 34,\n  slot = {6,6,8,12,20,14,18},\n  Shield = 2,\n  card = 'https://images-cdn.fantasyflightgames.com/filer_public/7c/61/7c61a6d9-0c5a-4bc0-9d4d-f38e3723a2c1/swz71_card_baktoid.png',\n  init = 1,\n  texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/CIS_HMP_Gunship/Baktoid%20Drones.png',\n  actSet = {'C','TL','BR'},\n}\n\n\n\n\n\n-- Unreleased content below: TODO: Update ffg id from spawner\n\n\nmasterPilotDB[714]={\n    name = '\"Rampage\"',\n    limited = 1,\n    Faction = 2,\n    ship_type = 83,\n    cost = 200,\n    slot = {1,3,3,14,18},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/ee/88/ee888bad-fa08-42e2-a558-cbf9a6f2da62/swz67_rampage.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Rampage.png',\n    actSet = {'F','C','TL','BR','R','Rot'},\n}\n\nmasterPilotDB[715]={\n    name = 'Lyttan Dree',\n    limited = 1,\n    Faction = 2,\n    ship_type = 83,\n    cost = 200,\n    slot = {1,3,3,14,18},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/6f/37/6f375dcd-61b2-407d-bb3f-0c01cf9491ae/swz67_lyttan-dree.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Lyttan%20Dree.png',\n    actSet = {'F','C','TL','BR','R','Rot'},\n}\n\nmasterPilotDB[716]={\n    name = 'Onyx Squadron Sentry',\n    Faction = 2,\n    ship_type = 83,\n    cost = 200,\n    slot = {1,3,3,14,18},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/3d/7c/3d7ca1c1-9e57-4085-a9a6-e82a3d92c6df/swz67_onyx-sentry.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Onyx%20Squadron%20Sentry.png',\n    actSet = {'F','C','TL','BR','R','Rot'},\n}\n\nmasterPilotDB[717]={\n    name = 'Carida Academy Cadet',\n    Faction = 2,\n    ship_type = 83,\n    cost = 200,\n    slot = {3,3,14,18},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/43/2d/432db246-0a8d-42de-9711-a893c825b9b3/swz67_carida-cadet.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Medium/Tie_Rb/Cardia%20Academy%20Pilot.png',\n    actSet = {'F','C','TL','BR','R','Rot'},\n}\n\nmasterPilotDB[718]={\n    name = 'Anakin Skywalker',\n    limited = 1,\n    Faction = 6,\n    Force = 3,\n    ship_type = 84,\n    cost = 200,\n    slot = {17, 10, 14},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/ef/ca/efcac3d6-868a-4e99-a872-3f2265e4983e/swz79_anakin-skywalker.png',\n    init = 6,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ETA2%20Anakin.png',\n    actSet = {'F','E','TL','BR','B'},\n}\n\nmasterPilotDB[719]={\n    name = 'Obi-Wan Kenobi',\n    limited = 1,\n    Faction = 6,\n    Force = 3,\n    ship_type = 84,\n    cost = 200,\n    slot = {17, 10, 14},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/2d/36/2d3610e5-ebc0-4448-8fb3-4b6dcc5f391a/swz79_obi-wan_kenobi.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ETA2%20ObiWan%20(Red).png',\n    actSet = {'F','E','TL','BR','B'},\n}\n\nmasterPilotDB[720]={\n    name = 'Aayla Secura',\n    limited = 1,\n    Faction = 6,\n    Force = 2,\n    ship_type = 84,\n    cost = 200,\n    slot = {17, 10, 14},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c2/e2/c2e2ee1f-1bdd-4ff7-ad95-c442af9b510a/swz79_aayla-secura.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ETA2%20Aayla%20Secura.png',\n    actSet = {'F','E','TL','BR','B'},\n}\n\nmasterPilotDB[721]={\n    name = 'Shaak Ti',\n    limited = 1,\n    Faction = 6,\n    Force = 2,\n    ship_type = 84,\n    cost = 200,\n    slot = {17, 10, 14},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/fa/6a/fa6afe10-be85-46ee-93e6-0637b3ce34b0/swz79_shaak-ti.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ETA2%20Shaak%20Ti.png',\n    actSet = {'F','E','TL','BR','B'},\n}\n\nmasterPilotDB[722]={\n    name = 'Yoda',\n    limited = 1,\n    Faction = 6,\n    Force = 3,\n    ship_type = 84,\n    cost = 200,\n    slot = {17, 10, 14},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/5b/fb/5bfbf23b-29c5-47c9-a6ba-1a2a7ddba319/swz79_yoda.png',\n    init = 3,\n    texture = 'https://github.com/JohnnyCheese/TTS_X-Wing2.0/blob/master/assets/ships/Small/GRP_ETA2/ETA2%20Yoda.png',\n    actSet = {'F','E','TL','BR','B'},\n}\n\nmasterPilotDB[723]={\n    name = 'Jedi General',\n    Faction = 6,\n    Force = 2,\n    ship_type = 84,\n    cost = 200,\n    slot = {17, 10, 14},\n    Shield = 0,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/b4/8d/b48d787d-96db-4955-9a58-5c8aa3ab9035/swz79_jedi-general.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_ETA2/ETA2%20Jedi%20General.png',\n    actSet = {'F','E','TL','BR','B'},\n}\n\nmasterPilotDB[724]={\n    name = '\"Odd Ball\"',\n    limited = 1,\n    Faction = 6,\n    ship_type = 85,\n    cost = 200,\n    slot = {1, 10, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/8e/70/8e70bbf1-d0ca-4367-9e3a-4ad0186af71f/swz80_ship_odd-ball.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Odd%20Ball.png',\n    actSet = {'F','TL','BR','B'},\n}\n\nmasterPilotDB[725]={\n    name = '\"Contrail\"',\n    limited = 1,\n    Faction = 6,\n    ship_type = 85,\n    cost = 200,\n    slot = {1, 10, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/b0/bc/b0bcccdb-fd02-4ab1-847b-66bae01e7ddc/swz80_ship_contrail.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Contrail.png',\n    actSet = {'F','TL','BR','B'},\n}\n\nmasterPilotDB[726]={\n    name = '\"Klick\"',\n    limited = 1,\n    Faction = 6,\n    ship_type = 85,\n    cost = 200,\n    slot = {1, 10, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/d6/ba/d6baed95-5960-4615-9949-faf5a5c0d96f/swz80_ship_klick.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Klick.png',\n    actSet = {'F','TL','BR','B'},\n}\n\nmasterPilotDB[727]={\n    name = 'Wilhuff Tarkin',\n    limited = 1,\n    Faction = 6,\n    ship_type = 85,\n    cost = 200,\n    slot = {1, 10, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/bf/0e/bf0e3b50-3f36-4940-953b-f0a2d9f2b9b9/swz80_ship_tarkin.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Wilhuff%20Tarkin.png',\n    actSet = {'F','TL','BR','B'},\n}\n\nmasterPilotDB[728]={\n    name = 'Shadow Squadron Escort',\n    Faction = 6,\n    ship_type = 85,\n    cost = 200,\n    slot = {1, 10, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c0/b0/c0b03f12-cff6-43af-99df-6ddf61fd471a/swz80_ship_shadow-escort.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Shadow%20Squadron%20Escorts.png',\n    actSet = {'F','TL','BR','B'},\n}\n\nmasterPilotDB[729]={\n    name = 'Loyalist Volunteer',\n    Faction = 6,\n    ship_type = 85,\n    cost = 200,\n    slot = {10, 14},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/a1/27/a127938a-aecc-48eb-ba09-622781e84084/swz80_ship_volunteer.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/GRP_V-Wing/Loyalist%20Volunteers.pngg',\n    actSet = {'F','TL','BR','B'},\n}\n\n\nmasterPilotDB[800]={\n    name = 'Nimi Chereen',\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 200,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c3/49/c349eef1-f13a-4c31-9b73-73dab884af41/swz68_nimi-chereen.png',\n    init = 2,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/Nimi%20Chereen.png',\n    actSet = {'F','TL','B'},\n}\n\nmasterPilotDB[801]={\n    name = \"C'ai Threnalli\",\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 200,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/60/8a/608a4657-6612-417d-bd10-be587c2a208f/swz68_cai-threnalli.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/Cai%20Threnalli.png',\n    actSet = {'F','TL','B','E'},\n}\n\n\nmasterPilotDB[802]={\n    name = \"Temmin Wexley\",\n    title = \"Black Two\",\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 200,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/2c/81/2c81e32f-8c0d-4d26-a9b5-e6bfbe9dab0e/swz68_temmin-wexley.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/SnapHoHPack.png',\n    actSet = {'F','TL','B'},\n    addSqdAction = {'C'}\n}\n\nmasterPilotDB[803]={\n    name = \"Poe Dameron\",\n    title = \"Resistance Commander\",\n    limited = 1,\n    Faction = 4,\n    ship_type = 53,\n    cost = 200,\n    slot = {21, 1,19,14,18,15,10,99},\n    Shield = 3,\n    Charge = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/76/66/76668017-6298-4471-b1cc-d388d5fc11b8/swz68_poe-dameron.png',\n    init = 6,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_T70Xwing/PoeHoHPack.png',\n    actSet = {'F','TL','B'},\n}\n\nmasterPilotDB[804]={\n    name = \"Seftin Vanik\",\n    limited = 1,\n    Faction = 4,\n    ship_type = 54,\n    cost = 43,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/73/ef/73ef0cdc-deb6-451d-a76c-0b3d9ef147ec/swz68_seftin-vanik.png',\n    init = 5,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/Seftin%20Vanik.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}\n}\n\nmasterPilotDB[805]={\n    name = \"Merl Cobben\",\n    limited = 1,\n    Faction = 4,\n    ship_type = 54,\n    cost = 43,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/18/3e/183ed99b-c562-4db5-9377-daf4661dfac9/swz68_merl-cobben.png',\n    init = 1,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/Merl%20Cobben.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}\n}\n\nmasterPilotDB[807]={\n    name = \"Suralinda Javos\",\n    limited = 1,\n    Faction = 4,\n    ship_type = 54,\n    cost = 43,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/e1/64/e1644adc-8d8a-4408-90a1-621e0dd4b0c6/swz68_suralinda-javos.png',\n    init = 3,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/Suralinda%20Javos.png',\n    actSet = {'F','TL','Rot180','E','B','BR', 'Piv'}\n}\n\nmasterPilotDB[808]={\n    name = \"Wrobie Tyce\",\n    limited = 1,\n    Faction = 4,\n    ship_type = 54,\n    cost = 43,\n    slot = {21, 1,1,19,6},\n    Shield = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/d3/66/d3669149-00da-4abf-9e08-9655e10db166/swz68_wrobie-tyce.png',\n    init = 4,\n    texture = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/ships/Small/RIS_awing/Wrobie%20Tyce.png',\n    actSet = {'F','TL','Rot180','E','B','BR'}\n}\n\n\n\n\n-- Huge ships\nmasterPilotDB[1000]={\n  name = 'Alderaanian Guard',\n  Faction = 1,\n  ship_type = 90,\n  cost = 146,\n  slot = {21, 24, 24, 8, 8, 16, 23, 23, 22, 15},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/2/2c/Swz55_alderaanian-guard_card.png',\n  init = 0,\n  actSet = {'F','TL','R'},\n  texture = 'https://github.com/eirikmun/TTS_X-Wing2.0/raw/master/assets/ships/Huge/CR90%20Corvette/CR90%20Corvet%20TTS.png'\n}\n\nmasterPilotDB[1001]={\n  name = 'Republic Judiciary',\n  Faction = 6,\n  ship_type = 90,\n  cost = 146,\n  slot = {21, 24, 24, 8, 8, 16, 23, 23, 22},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/1/19/Swz55_republic-judiciary_card.png',\n  init = 0,\n  actSet = {'F','TL','R'},\n  texture = 'https://github.com/eirikmun/TTS_X-Wing2.0/raw/master/assets/ships/Huge/CR90%20Corvette/Republic%20Judiciary%20TTS.png'\n}\n\nmasterPilotDB[1002]={\n  name = 'Separatist Privateers',\n  Faction = 7,\n  ship_type = 91,\n  cost = 58,\n  slot = {21, 24, 8, 8, 20, 23, 22, 12, 18},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/d/df/Separatist_privateers.png',\n  init = 1,\n  actSet = {'F','TL','R'},\n  texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/CR0C/Separatist%20Privateers.png'\n}\n\nmasterPilotDB[1003]={\n  name = 'Syndicate Smugglers',\n  Faction = 3,\n  ship_type = 91,\n  cost = 58,\n  slot = {21, 24, 8, 8, 23, 22, 12, 13, 15, 18},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/2/2d/Swz55_syndicate-smugglers_card.png',\n  init = 1,\n  actSet = {'F','TL','R'},\n  texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/CR0C/Syndicate%20Smugglers.png'\n}\n\nmasterPilotDB[1004]={\n  name = 'First Order Sympathizers',\n  Docking = true,\n  Faction = 5,\n  ship_type = 92,\n  cost = 60,\n  slot = {21, 24, 8, 8, 16, 23, 22, 22},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/6/6f/First_Order_Sympathizers.png',\n  init = 1,['actSet']={'F','TL','R'},\n  texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/Gozanti-Class%20Cruiser/FO%20Sympthizers.png'\n}\n\nmasterPilotDB[1005]={\n  name = 'Outer Rim Garrison',\n  Docking = true,\n  Faction = 2,\n  ship_type = 92,\n  cost = 60,\n  slot = {21, 24, 8, 8, 16, 23, 22, 22, 15},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/e/ec/Outer_Rim_Garrison.png',\n  init = 1,\n  actSet = {'F','TL','R'},\n  texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/Gozanti-Class%20Cruiser/Gozanti-Class%20Cruiser.png'\n}\n\nmasterPilotDB[1006]={\n  name = 'Echo Base Evacuees',\n  Faction = 1,\n  ship_type = 93,\n  cost = 55,\n  slot = {21, 24, 4, 8, 8, 23, 22, 22, 15},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/3/39/Swz53_echo-base-evacuees.png',\n  init = 1,\n  actSet = {'F','TL','R'},\n  texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/GR-75%20Transport/Echo%20Base%20Evacuees%20TTS.png'\n}\n\nmasterPilotDB[1007]={\n  name = 'New Republic Volunteers',\n  Faction = 4,\n  ship_type = 93,\n  cost = 55,\n  slot = {21, 24, 4, 8, 8, 23, 22, 22},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/d/d8/New_Republic_Volunteers.png',\n  init = 1,\n  actSet = {'F','TL','R'},\n  texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/GR-75%20Transport/New%20Republic%20Volunteers%20TTS.png'\n}\n\nmasterPilotDB[1008]={\n  name = 'First Order Collaborators',\n  Faction = 5,\n  ship_type = 94,\n  cost = 146,\n  slot = {21, 5, 6, 24, 24, 8, 23, 23, 22},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/0/09/First_Order_Collaborators.png',\n  init = 1,\n  actSet = {'F','TL','R'},\n  texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/Raider%20Class%20Corvette/FO%20Collaborators%20TTS.png'\n}\n\nmasterPilotDB[1009]={\n  name = 'Outer Rim Patrol',\n  Faction = 2,\n  ship_type = 94,\n  cost = 146,\n  slot = {21, 5, 6, 24, 24, 8, 23, 23, 22, 15},\n  card = 'https://vignette.wikia.nocookie.net/xwing-miniatures-second-edition/images/b/bf/Outer_Rim_Patrol.png',\n  init = 1,\n  actSet = {'F','TL','R'},\n  texture = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/ships/Huge/Raider%20Class%20Corvette/IMP%20Raider.png'\n}\n\nmasterUpgradesDB={}\nmasterUpgradesDB[230]={['name']='Crack Shot',['slot']=1,['cost']=2,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_1.png',}\nmasterUpgradesDB[231]={\n    name = 'Daredevil',\n    slot = 1,\n    addAction = {'Dare'},\n    cost = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_2.png',\n    restriction = {Size = {small=true}}\n}\n\nmasterUpgradesDB[232]={['name']='Debris Gambit',['slot']=1,addAction={'E'},['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_3.png',['restriction']={['Size']={small=true,medium=true}}}\nmasterUpgradesDB[233]={['name']='Elusive',['slot']=1,['cost']=3,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_4.png',['restriction']={['Size']={small=true,medium=true}}}\nmasterUpgradesDB[234]={['name']='Expert Handling',['slot']=1,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_5.png',}\nmasterUpgradesDB[235]={['name']='Fearless',['slot']=1,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_6.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[236]={['name']='Intimidation',['slot']=1,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_7.png',}\nmasterUpgradesDB[237]={['name']='Juke',['slot']=1,['cost']=7,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_8.png',['restriction']={ ['Size']={small=true,medium=true}}}\nmasterUpgradesDB[238]={['name']='Lone Wolf',['slot']=1,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_9.png',}\nmasterUpgradesDB[239]={['name']='Marksmanship',['slot']=1,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_10.png',}\nmasterUpgradesDB[240]={['name']='Outmaneuver',['slot']=1,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_11.png',}\nmasterUpgradesDB[241]={['name']='Predator',['slot']=1,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_12.png',}\nmasterUpgradesDB[242]={['name']='Ruthless',['slot']=1,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_13.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[243]={['name']='Saturation Salvo',['slot']=1,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_14.png',}\nmasterUpgradesDB[244]={['name']='Selfless',['slot']=1,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_15.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[245]={['name']='Squad Leader',['slot']=1,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_16.png',}\nmasterUpgradesDB[246]={['name']='Swarm Tactics',['slot']=1,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_17.png',}\nmasterUpgradesDB[247]={['name']='Trick Shot',['slot']=1,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_18.png',}\nmasterUpgradesDB[248]={['name']='Heightened Perception',['slot']=17,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_19.png',}\nmasterUpgradesDB[249]={['name']='Instinctive Aim',['slot']=17,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_20.png',}\nmasterUpgradesDB[250]={['name']='Sense',['slot']=17,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_21.png',}\nmasterUpgradesDB[251]={\n    name = 'Supernatural Reflexes',\n    slot = 17,\n    addAction = {'B', 'BR'},\n    cost = 'i',\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_22.png',\n    restriction = {Size={small=true}}}\nmasterUpgradesDB[252]={['name']='Advanced Sensors',['slot']=2,['cost']=10,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_23.png',}\nmasterUpgradesDB[253]={['name']='Collision Detector',['slot']=2,['cost']=6,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_24.png',}\nmasterUpgradesDB[254]={['name']='Fire-Control System',['slot']=2,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_25.png',}\nmasterUpgradesDB[255]={['name']='Trajectory Simulator',['slot']=2,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_26.png',}\nmasterUpgradesDB[256]={['name']='Heavy Laser Cannon',['slot']=3,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_27.png',}\nmasterUpgradesDB[257]={['name']='Ion Cannon',['slot']=3,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_28.png',}\nmasterUpgradesDB[258]={['name']='Jamming Beam',['slot']=3,['cost']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_29.png',}\nmasterUpgradesDB[259]={['name']='Tractor Beam',['slot']=3,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_30.png',}\nmasterUpgradesDB[260]={['name']='Dorsal Turret',['sTurret']=1,['slot']=4,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_31.png',}\nmasterUpgradesDB[261]={['name']='Ion Cannon Turret',['sTurret']=1,['slot']=4,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_32.png',}\nmasterUpgradesDB[262]={['name']='Adv. Proton Torpedoes',['slot']=5,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_33.png',}\nmasterUpgradesDB[263]={['name']='Ion Torpedoes',['slot']=5,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_34.png',}\nmasterUpgradesDB[264]={['name']='Proton Torpedoes',['slot']=5,['cost']=13,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_35.png',}\nmasterUpgradesDB[265]={['name']='Barrage Rockets',['slot']=6,['remSlot']={6}, ['cost']=8,['Charge']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_36.png',['cardB']=cardBackDB['6b'],}\nmasterUpgradesDB[266]={['name']='Cluster Missiles',['slot']=6,['cost']=4,['Charge']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_37.png',}\nmasterUpgradesDB[267]={['name']='Concussion Missiles',['slot']=6,['cost']=6,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_38.png',}\nmasterUpgradesDB[268]={['name']='Homing Missiles',['slot']=6,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_39.png',}\nmasterUpgradesDB[269]={['name']='Ion Missiles',['slot']=6,['cost']=3,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_40.png',}\nmasterUpgradesDB[270]={['name']='Proton Rockets',['slot']=6,['cost']=6,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_41.png',}\nmasterUpgradesDB[271]={['name']='Freelance Slicer',['slot']=8,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_42.png',}\nmasterUpgradesDB[272]={['name']='GNK \"Gonk\" Droid',['slot']=8,['cost']=10,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_43.png',}\nmasterUpgradesDB[273]={['name']='Informant',['Condition']=\"Listening Device\",['slot']=8,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_44.png',}\nmasterUpgradesDB[274]={['name']='Novice Technician',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_45.png',}\nmasterUpgradesDB[275]={['name']='Perceptive Copilot',['slot']=8,['cost']=8,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_46.png',}\nmasterUpgradesDB[276]={\n    name = 'Seasoned Navigator',\n    slot = 8,\n    cost = 'i',\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_47.png',\n    restriction = { },\n    executeOptions = function(list, pilotid)\n        exopts = {}\n        nextdiff = { b = \"w\", w = \"r\"}\n        if pilotid == 0 then\n            return {}\n        end\n        for i, man in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\n            local Char= man:find(\"%d\")\n            local speed = tonumber(man:sub(Char,Char))\n            local exopt = {man}\n            for k, man2 in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\n\n                local diff = man2:sub(1,1)\n                Char = man2:find(\"%d\")\n                local thisspeed = tonumber(man2:sub(Char,Char))\n                if (thisspeed == speed) and (nextdiff[diff] ~= nil) and (man ~= man2) then\n                    --print(man .. \" \" .. man2 .. \" \" .. tostring(thisspeed))\n                    exopt[#exopt+1] = nextdiff[diff] .. man2:sub(2)\n                end\n            end\n            if #exopt > 1 then\n                --table.print(exopt)\n                exopts[man] = exopt\n\n            end\n        end\n        return exopts\n    end\n\n}\nmasterUpgradesDB[277]={['name']='Tactical Officer',['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_48.png',}\nmasterUpgradesDB[278]={['name']='Hotshot Gunner',['slot']=16,['cost']=7,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_49.png',}\nmasterUpgradesDB[279]={['name']='Skilled Bombardier',['slot']=16,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_50.png',}\nmasterUpgradesDB[280]={['name']='Veteran Tail Gunner',['slot']=16,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_51.png',}\nmasterUpgradesDB[281]={['name']='Veteran Turret Gunner',['slot']=16,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_52.png',}\nmasterUpgradesDB[282]={['name']='R2 Astromech',['slot']=10,['cost']='a',['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_53.png',}\nmasterUpgradesDB[283]={['name']='R3 Astromech',['slot']=10,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_54.png',}\nmasterUpgradesDB[284]={['name']='R4 Astromech',['slot']=10,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_55.png',['restriction']={ ['Size']={small=true}}}\nmasterUpgradesDB[285]={['name']='R5 Astromech',['slot']=10,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_56.png',}\nmasterUpgradesDB[286]={\n    name = 'Cloaking Device',\n    slot = 13,\n    limited = 1,\n    addAction = {'CL'},\n    cost = 4,\n    Charge = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_57.png',\n    restriction = { Size={small=true,medium=true}}}\nmasterUpgradesDB[287]={['name']='Contraband Cybernetics',['slot']=13,['cost']=2,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_58.png',}\nmasterUpgradesDB[288]={['name']=\"Deadman's Switch\",['slot']=13,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_59.png',}\nmasterUpgradesDB[289]={['name']='Feedback Array',['slot']=13,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_60.png',}\nmasterUpgradesDB[290]={['name']='Inertial Dampeners',['slot']=13,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_61.png',}\nmasterUpgradesDB[291]={['name']='Rigged Cargo Chute',['slot']=13,['Bomb']=true,['cost']=4,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_62.png',['restriction']={ ['Size']={large=true,medium=true}}}\nmasterUpgradesDB[292]={['name']='Ablative Plating',['slot']=14,['cost']=6,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_68.png',['restriction']={ ['Size']={large=true,medium=true}}}\nmasterUpgradesDB[293]={['name']='Advanced SLAM',['slot']=14,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_69.png',}\n\nmasterUpgradesDB[294]={\n    name = 'Afterburners',\n    addAction = {'B'},\n    slot = 14,\n    cost = 6,\n    Charge = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_70.png',\n    restriction = {\n        Size = {small=true}\n    }\n}\n\nmasterUpgradesDB[295]={['name']='Electronic Baffle',['slot']=14,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_71.png',}\nmasterUpgradesDB[296]={['name']='Engine Upgrade',['slot']=14,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_72.png',}\nmasterUpgradesDB[297]={\n    name = 'Hull Upgrade',\n    slot = 14,\n    cost = 'a',\n    Hull = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_73.png',\n    restriction={}\n}\nmasterUpgradesDB[298]={['name']='Munitions Failsafe',['slot']=14,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_74.png',}\nmasterUpgradesDB[299]={['name']='Shield Upgrade',['slot']=14,['cost']='a',['shd']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_75.png',}\nmasterUpgradesDB[300]={['name']='Static Discharge Vanes',['slot']=14,['cost']=6,['card']='https://sb-cdn.fantasyflightgames.com/card_images/en/9c42b09b923d60ac8504e52bd0cbaf25.png',}\nmasterUpgradesDB[301]={['name']='Stealth Device',['slot']=14,['cost']='a',['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_77.png',}\nmasterUpgradesDB[302]={['name']='Tactical Scrambler',['slot']=14,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_78.png',['restriction']={ ['Size']={large=true,medium=true}}}\nmasterUpgradesDB[303]={['name']='Baze Malbus',['slot']=8,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_79.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[304]={\n    name = 'C-3PO',\n    slot = 8,\n    addAction = {'C'},\n    cost = 8,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_80.png',\n    restriction = {Faction={[1]=true}}}\nmasterUpgradesDB[305]={['name']='Cassian Andor',['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_81.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[306]={['name']='Chewbacca',['slot']=8,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_82.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[307]={['name']='\"Chopper\"',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_83.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[308]={['name']='Hera Syndulla',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_84.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[309]={\n    name = 'Jyn Erso',\n    slot = 8,\n    limited = 1,\n    addSqdAction = {'E'},\n    cost = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_85.png',\n    restriction = {Faction={[1]=true}}}\n\nmasterUpgradesDB[310]={\n    name = 'Kanan Jarrus',\n    slot = 8,\n    limited = 1,\n    cost = 12,\n    Force = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_86.png',\n    restriction = {Faction={[1]=true}}}\n\nmasterUpgradesDB[311]={\n    name = 'Lando Calrissian',\n    slot = 8,\n    addAction = {'F','E'},\n    cost = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_87.png',\n    restriction = {Faction={[1]=true}}}\nmasterUpgradesDB[312]={['name']='Leia Organa',['slot']=8,['cost']=7,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_88.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[313]={\n    name = 'Magva Yarro',\n    slot = 8,\n    addAction = {'TL'},\n    cost = 8,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_89.png',\n    restriction = {Faction={[1]=true}}}\nmasterUpgradesDB[314]={['name']='Nien Nunb',['slot']=8,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_90.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[315]={['name']='R2-D2',['slot']=8,['cost']='a',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_91.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[316]={['name']='Sabine Wren',['slot']=8,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_92.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[317]={['name']='Saw Gerrera',['slot']=8,['cost']=9,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_93.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[318]={['name']='\"Zeb\" Orrelios',['slot']=8,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_94.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[319]={['name']='Bistan',['slot']=16,['cost']=10,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_95.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[320]={['name']='Ezra Bridger',['slot']=16,['cost']=12,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_96.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[321]={['name']='Han Solo',['slot']=16,['cost']=12,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_97.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[322]={['name']='Luke Skywalker',['slot']=16,['cost']=26,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_98.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[323]={['name']='\"Chopper\"',['slot']=10,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_99.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[324]={['name']='R2-D2',['slot']=10,['cost']=10,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_100.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[325]={['name']='R5-D8',['slot']=10,['cost']=6,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_101.png',['restriction']={['Faction']={[1]=true}}}\nmasterUpgradesDB[326]={['name']='Ghost',['slot']=15,['cost']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_102.png',['restriction']={['Faction']={[1]=true},['ship']={[23]=true}}}\nmasterUpgradesDB[327]={\n    name = 'Millennium Falcon',\n    slot = 15,\n    addAction = {'E'},\n    cost = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_103.png',\n    restriction = {Faction={[1]=true},ship={[1] = true}}}\nmasterUpgradesDB[328]={['name']='Moldy Crow',['slot']=15,['cost']=18,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_104.png',['restriction']={['Faction']={[1]=true,[3]=true},['ship']={[34]=true}}}\nmasterUpgradesDB[329]={['name']='Outrider',['slot']=15,['cost']=14,['card']='https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Cards/Erreta/Outrider.png',['restriction']={['Faction']={[1]=true},['ship']={5}}}\nmasterUpgradesDB[330]={['name']='Phantom',['slot']=15,['cost']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_106.png',['restriction']={['Faction']={[1]=true},['ship']={[32]=true,[8]=true}}}\nmasterUpgradesDB[331]={\n    name = 'Pivot Wing',\n    dual = 1,\n    slot = 18,\n    addAction = {'Piv'},\n    cost = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_107.png',\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_107b.png',\n    restriction = {Faction={[1]=true},ship={[15]=true}}}\nmasterUpgradesDB[333]={\n    name = 'Servomotor S-Foils',\n    dual = 1,\n    slot = 18,\n    addAction = {'B'},\n    cost = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_108.png',\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_108b.png',\n    restriction={Faction={[1]=true},ship={[33]=true}}}\nmasterUpgradesDB[335]={['name']='Admiral Sloane',['slot']=8,['cost']=9,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_109.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[336]={['name']='Agent Kallus',['Condition']=\"Hunted\",['slot']=8,['cost']=5,['card']='https://sb-cdn.fantasyflightgames.com/card_images/en/5e9b30fb5a437355afd9d17d8700bd9c.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[337]={\n    name = 'Ciena Ree',\n    slot = 8,\n    limited = 1,\n    addSqdAction = {'Piv'},\n    cost = 6,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_111.png',\n    restriction = {Faction={[2]=true}}}\n\nmasterUpgradesDB[338]={\n    name = 'Darth Vader',\n    slot = 8,\n    limited = 1,\n    cost = 14,\n    Force = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_112.png',\n    restriction = {Faction={[2]=true}}}\n\nmasterUpgradesDB[339]={['name']='Death Troopers',['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_113.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[340]={\n    name = 'Director Krennic',\n    Condition = \"Optimized Prototype\",\n    slot = 8,\n    limited = 1,\n    addAction = {'TL'},\n    cost = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_114.png',\n    restriction = {Faction={[2]=true}}}\nmasterUpgradesDB[341]={['name']='Emperor Palpatine',['slot']=8,['remSlot']={8}, ['cost']=11,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_115.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[342]={['name']='Grand Inquisitor',['slot']=8,['cost']=13,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_116.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[343]={['name']='Grand Moff Tarkin',['slot']=8,['cost']=6,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_117.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[344]={['name']='ISB Slicer',['slot']=8,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_118.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[345]={\n    name = 'Minister Tua',\n    slot = 8,\n    limited = 1,\n    addAction = {'R'},\n    cost = 7,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_119.png',\n    restriction = {Faction={[2]=true}}}\n\nmasterUpgradesDB[346]={\n    name='Moff Jerjerrod',\n    slot = 8,\n    limited = 1,\n    addSqdAction = {'B'},\n    cost = 8,\n    Charge = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_120.png',\n    restriction = {Faction={[2]=true}}}\n\nmasterUpgradesDB[347]={['name']='Seventh Sister',['slot']=8,['cost']=9,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_121.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[348]={['name']='Fifth Brother',['slot']=16,['cost']=12,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_122.png',['restriction']={['Faction']={[2]=true}}}\nmasterUpgradesDB[349]={['name']='Dauntless',['slot']=15,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_123.png',['restriction']={['Faction']={[2]=true},['ship']={[28]=true}}}\nmasterUpgradesDB[350]={['name']='Os-1 Arsenal Loadout',['slot']=18,['cost']=0,['addSlot']={5, 6},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_125.png',['restriction']={['Faction']={[2]=true},['ship']={[14]=true}}}\nmasterUpgradesDB[351]={['name']='Xg-1 Assault Configuration',['slot']=18,['cost']=0,['addSlot']={3},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_126.png',['restriction']={['Faction']={[2]=true},['ship']={[14]=true}}}\nmasterUpgradesDB[352]={\n    name = '0-0-0',\n    slot = 8,\n    addAction = {'C'},\n    cost = 5,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_127.png',\n    restriction = {Faction={[2]=true, [3]=true},card_id=343}}\nmasterUpgradesDB[353]={['name']='4-LOM',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_128.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[354]={['name']='Boba Fett',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_129.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[355]={\n    name = 'Cad Bane',\n    slot = 8,\n    cost = 4,\n    limited = 1,\n    addAction = {'B'},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_130.png',\n    restriction = {Faction={[3]=true}}}\nmasterUpgradesDB[356]={['name']='Cikatro Vizago',['slot']=8,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_131.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[357]={\n    name = 'IG-88D',\n    slot = 8,\n    limited = 1,\n    addAction = {'C'},\n    cost = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_132.png',\n    restriction = { Faction ={[3]=true}}}\nmasterUpgradesDB[358]={['name']='Jabba the Hutt',['slot']=8,['remSlot']={8},['cost']=6,['Charge']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_133.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[359]={['name']='Ketsu Onyo',['slot']=8,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_134.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[360]={['name']='Latts Razzi',['slot']=8,['cost']=7,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_135.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[361]={['name']='Maul',['slot']=8,['cost']=12,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_136.png',['restriction']={['Faction']={[1]=true,[3]=true},['card_id']=325}}\nmasterUpgradesDB[362]={['name']='Unkar Plutt',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_137.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[363]={['name']='Zuckuss',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_138.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[364]={['name']='Bossk',['slot']=16,['cost']=9,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_139.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[365]={['name']='BT-1',['slot']=16,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_140.png',['restriction']={['Faction']={[2]=true, [3]=true},['card_id']=343}}\nmasterUpgradesDB[366]={['name']='Dengar',['slot']=16,['cost']=6,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_141.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[367]={['name']='Greedo',['slot']=16,['cost']=1,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_142.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[368]={['name']='\"Genius\"',['slot']=10,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_143.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[369]={['name']='R5-P8',['slot']=10,['cost']=4,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_144.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[370]={['name']='R5-TK',['slot']=10,['cost']=0,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_145.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[371]={['name']='Andrasta',['slot']=15,['cost']=3,['addSlot']={12},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_146.png',['restriction']={['Faction']={[3]=true},['ship']={[10]=true}}}\nmasterUpgradesDB[372]={['name']='Havoc',['slot']=15,['cost']=2,['addSlot']={2, 10},['remSlot']={8},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_147.png',['restriction']={['Faction']={[3]=true},['ship']={[4]=true}}}\nmasterUpgradesDB[373]={['name']=\"Hound's Tooth\",['Docking']=true,['slot']=15,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_148.png',['restriction']={['Faction']={[3]=true},['ship']={[24]=true}}}\n\nmasterUpgradesDB[374]={\n    name = 'IG-2000',\n    slot = 15,\n    cost = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_149.png',\n    restriction = {\n        Faction = {[3]=true},\n        ship =  {[21]=true}\n    },\n    executeOptions = function(list, me)\n        for k, pid in pairs(list.Pilots) do\n            pilot = masterPilotDB[pid]\n            if pid ~= me and pilot.name == \"IG-88D\" then\n                for _, uid in pairs(list.Upgrades[k]) do\n                    if  masterUpgradesDB[uid].name == \"IG-2000\" then\n                        return {\n                            rbl3s = {[1]='rtl3s', [2]='rbl3s', [3]='rk3'},\n                            rbr3s = {[1]='rk3', [2]='rbr3s', [3]='rtr3s'}\n                        }\n                    end\n                end\n            end\n        end\n        return {}\n    end\n}\nmasterUpgradesDB[375]={['name']='Marauder',['slot']=15,['cost']=6,['addSlot']={16},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_150.png',['restriction']={['Faction']={[3]=true},['ship']={[10]=true}}}\nmasterUpgradesDB[376]={\n    name = 'Mist Hunter',\n    slot = 15,\n    limited = 1,\n    addAction = {'BR'},\n    cost = 1,\n    addSlot = {3},\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_151.png',\n    restriction ={Faction={[3]=true},ship={[22]=true}}}\nmasterUpgradesDB[377]={['name']='Punishing One',['slot']=15,['cost']=5,['addSlot']={10},['remSlot']={8},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_152.png',['restriction']={['Faction']={[3]=true},['ship']={[45]=true}}}\nmasterUpgradesDB[378]={['name']='Shadow Caster',['slot']=15,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_153.png',['restriction']={['Faction']={[3]=true},['ship']={[42]=true}}}\nmasterUpgradesDB[379]={\n    name = 'Slave I',\n    slot = 15,\n    cost = 5,\n    addSlot = {5},\n    executeOptions = function(list, pid)\n        return {\n            bbl1 = {[1]='bbl1', [2]='bbr1'},\n            wbl2 = {[1]='wbl2', [2]='wbr2'},\n            wbl3 = {[1]='wbl3', [2]='wbr3'},\n            bbr1 = {[1]='bbr1', [2]='bbl1'},\n            wbr2 = {[1]='wbr2', [2]='wbl2'},\n            wbr3 = {[1]='wbr3', [2]='wbl3'},\n            wtl1 = {[1]='wtl1', [2]='wtr1'},\n            wtl2 = {[1]='wtl2', [2]='wtr2'},\n            wtr1 = {[1]='wtr1', [2]='wtl1'},\n            wtr2 = {[1]='wtr2', [2]='wtl2'},\n        }\n    end,\n    card = 'https://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_154.png',\n    restriction = {\n        Faction = {[3]=true},\n        ship = {[10]=true}\n    }\n}\nmasterUpgradesDB[380]={['name']='Virago',['slot']=15,['cost']=8,['Charge']=2,['shd']=1,['addSlot']={14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_155.png',['restriction']={['ship']={[3]=true}}}\nmasterUpgradesDB[381]={\n    name = 'Composure',\n    slot =1,\n    addAction = {'F'},\n    cost = 1,\n    card = 'https://sb-cdn.fantasyflightgames.com/card_images/en/73927eb0dc7bc2bb0de194f1af1dead2.png'}\nmasterUpgradesDB[382]={['name']='Chewbacca',['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_157.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[383]={['name']='L3-37',['dual']=1,['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_158.png',['cardB']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_158b.png',['restriction']={['Faction']={[3]=true}}}\n--[[masterUpgradesDB[384]={['name']=\"L3-37's Programming\",['dual']=1,['slot']=18,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_158b.png',['cardB']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_158.png',['restriction']={['Faction']={[3]=true}}}]]\nmasterUpgradesDB[385]={['name']='Lando Calrissian',['slot']=8,['cost']=8,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_159.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[386]={['name']='Tobias Beckett',['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_160.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[387]={['name']=\"Qi'ra\",['slot']=8,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_161.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[388]={['name']='Agile Gunner',['slot']=16,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_162.png',}\nmasterUpgradesDB[389]={['name']='Han Solo',['slot']=16,['cost']=12,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_163.png',['restriction']={['Faction']={[3]=true}}}\nmasterUpgradesDB[390]={['name']=\"Lando's Millennium Falcon\",['slot']=15,['cost']=3,['card']='https://sb-cdn.fantasyflightgames.com/card_images/en/96b50606e65bfe308b9e75a03d9a1884.png',['restriction']={['Faction']={[3]=true},['ship']={[47]=true}}}\nmasterUpgradesDB[391]={\n    name = 'ST-321',\n    slot = 15,\n    limited = 1,\n    addAction = {'TL'},\n    cost = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_124.png',\n    restriction = {Faction = {[2]=true}, ship ={[26]=true}}}\n\nmasterUpgradesDB[392]={['name']='Bomblet Generator',['slot']=12,['remSlot']={12},['Bomb']=true,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_63.png',['cardB']=cardBackDB['12b'],}\nmasterUpgradesDB[393]={['name']='Conner Nets',['slot']=12,['Bomb']=true,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_64.png',}\nmasterUpgradesDB[394]={['name']='Proton Bombs',['slot']=12,['Bomb']=true,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_65.png',}\nmasterUpgradesDB[395]={['name']='Proximity Mines',['slot']=12,['Bomb']=true,['cost']=6,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_66.png',}\nmasterUpgradesDB[396]={['name']='Seismic Charges',['slot']=12,['Bomb']=true,['cost']=3,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/Card_Upgrade_67.png',}\n\n\n\nmasterUpgradesDB[459]={['name']=\"Fanatical\",['slot']=1,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/8b164bdb2b401b6741519f6c6e067550.png',['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[460]={['name']=\"Advanced Optics\",['slot']=19,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e77e204e6b7164f6a1d945b20a0c4359.png',}\nmasterUpgradesDB[461]={['name']=\"Hyperspace Tracking Data\",['slot']=19,['cost']=10,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a48713c6784bf33bd3f8b36eb19221c3.png',['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[462]={['name']=\"Pattern Analyzer\",['slot']=19,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/ace963fc4fe9d97f64ab8564dc4beae7.png',}\nmasterUpgradesDB[463]={['name']=\"Primed Thrusters\",['slot']=19,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a114625347a0f3088f4679f8107ab631.png',}\nmasterUpgradesDB[464]={['name']=\"Targeting Synchronizer\",['slot']=19,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/83782f01cd3486006c4d279864d2983a.png',}\nmasterUpgradesDB[465]={['name']=\"Captain Phasma\",['slot']=8,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/784566afc8c540d5e392689865207059.png',['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[466]={['name']=\"General Hux\",['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/fa0b8492eff625bc66f00bd561015465.png',['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[467]={['name']=\"Kylo Ren\",['Condition']=\"I'll Show You the Dark Side\",['slot']=8,['cost']=11,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f60322a1f5ace7e45f6c7e0fa0200705.png',['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[468]={['name']=\"Petty Officer Thanisson\",['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/900397d209adfd3f7bd6429909cc20cc.png',['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[469]={['name']=\"Supreme Leader Snoke\",['slot']=8,['remSlot']={8},['cost']=13,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/5b699f8b5268e5290c42adce0fd2ee3e.png',['cardB']=cardBackDB['8b'],['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[470]={['name']=\"Special Forces Gunner\",['slot']=16,['cost']=9,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d3aed19c7eb6f9ebc2352ac49cdd6b87.png',['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[471]={['name']=\"Heroic\",['slot']=1,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/9f8baf4893cd90288df44b69b50fa788.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[472]={\n    name = \"C-3PO\",\n    slot = 8,\n    addAction = {'C'},\n    cost = 10,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/a0e80bb89748e7415e945a050f82ba84.png',\n    restriction = {Faction={[4]=true}}}\nmasterUpgradesDB[473]={['name']=\"Chewbacca\",['slot']=8,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/3090c218acff7dc71a81e791ce15860e.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[474]={\n    name = \"Han Solo\",\n    slot = 8,\n    addAction = {'E'},\n    cost = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/622ea4b573afbb5c95b3e9f2989a8aef.png',\n    restriction = {Faction={[4]=true}}}\nmasterUpgradesDB[475]={\n    name = \"Rose Tico\",\n    slot = 8,\n    addAction = {'TL'},\n    cost = 9,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/60ac08169a90794c33d1d582f1a08480.png',\n    restriction = {Faction={[4]=true}}}\nmasterUpgradesDB[476]={['name']=\"Finn\",['slot']=16,['cost']=10,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/79477be319935f42270f1712cd269dff.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[477]={['name']=\"Paige Tico\",['slot']=16,['cost']=7,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/9dc15f634233b5daba107a07aa63d04c.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[478]={['name']=\"Rey\",['slot']=16,['cost']=14,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e11aec8ae6ec855694947bc2f9d1917e.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[479]={\n    name = \"BB-8\",\n    slot = 10,\n    addAction = {'BR'},\n    cost = 'i',\n    Charge = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/37297ef7839800afd543de5d1a363561.png',\n    restriction = {Faction={[4]=true}}}\nmasterUpgradesDB[480]={\n    name = \"BB Astromech\",\n    slot = 10,\n    addAction = {'BR'},\n    cost = 'i',\n    Charge = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/010399f4054469aed3b04acba08d41b0.png',\n    restriction = {Faction={[4]=true}}}\nmasterUpgradesDB[481]={['name']=\"M9-G8\",['slot']=10,['cost']=7,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/cd67f33e8aa52d2aeb07f432125a8c73.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[482]={['name']=\"R2-HA\",['slot']=10,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/b3e6d35ca6b6fd297312248ddf4e69a7.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[483]={['name']=\"R5-X3\",['slot']=10,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/aed4536536b67bae316b260ed151c22a.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[484]={['name']=\"Black One\",['slot']=15,['cost']=2,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/3e9870bff7f61acc12970c254eaeca89.png',['restriction']={ ['ship']={[53]=true}}}\nmasterUpgradesDB[485]={['name']=\"Rey's Millennium Falcon\",['slot']=15,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/23627443c7f5e7447c306ea7c6242634.png',['restriction']={ ['ship']={[57]=true}}}\nmasterUpgradesDB[486]={\n    name = \"Integrated S-foils\",\n    dual = 1,\n    slot = 18,\n    addAction = {'BR'},\n    cost = 0,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e3b44142faf0f13e541bf674a6c06dbc.png',\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/en/49372b4efb974ff673a1b79441186fd5.png',\n    restriction = {Faction={[4]=true}, ship={[53]=true}}}\nmasterUpgradesDB[488]={['name']=\"Ferrosphere Paint\",['slot']=19,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/55d8ff7d35b714d9c9a6ef1fd7732a60.png',['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[489]={['name']=\"Hate\",['slot']=17,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/4a10b5c8a3d796116163a741d145f4e9.png',}\nmasterUpgradesDB[490]={['name']=\"Predictive Shot\",['slot']=17,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e0100c63b2753daf68a9d3948824b086.png',}\nmasterUpgradesDB[491]={['name']=\"Biohexacrypt Codes\",['slot']=19,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/094f3bbc6e3041886398e9eaf692d4ab.png',['restriction']={['Faction']={[5]=true}}}\n\n--w3up\nmasterUpgradesDB[544]={['name']=\"Dedicated\",['slot']=1,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/31c6723d7e5670c257acfa8788160437.png',['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[529]={['name']=\"Treacherous\",['slot']=1,['cost']=2,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a10d907fea50e32ab28d924c67486d37.png',['restriction']={['Faction']={[7]=true}}}\nmasterUpgradesDB[530]={['name']=\"TV-94\",['slot']=20,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/633a34a139c912116c1b034fc2765484.png',['restriction']={['Faction']={[7]=true}}}\nmasterUpgradesDB[531]={\n    name = \"Kraken\",\n    slot = 20,\n    addAction = {'C'},\n    cost = 11,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/47dae8a3ecd27a48f3dc35aff03a1a75.png',\n    restriction = {Faction={[7]=true}}}\nmasterUpgradesDB[532]={['name']=\"Energy-Shell Charges\",['slot']=6,['cost']=5,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/4b6213e5ed13735bb381df08bdd1398d.png',['restriction']={['Faction']={[7]=true}}}\nmasterUpgradesDB[533]={['name']=\"Soulless One\",['slot']=15,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/36b33e7330846570087096cb55fba140.png',['restriction']={ ['ship']={[58]=true}}}\nmasterUpgradesDB[534]={['name']=\"Impervium Plating\",['slot']=14,['cost']=4,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/93e0fe1b2931944d128126b854c4ad33.png',['restriction']={ ['ship']={[58]=true}}}\n\nmasterUpgradesDB[536]={['name']=\"Brilliant Evasion\",['slot']=17,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/24b175ad35d035f33a35056b0d1d7a36.png',}\nmasterUpgradesDB[537]={['name']=\"K2-B4\",['slot']=20,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/2178079ef9488899e51e927b2e136572.png',['restriction']={['Faction']={[7]=true}}}\n\nmasterUpgradesDB[539]={['name']=\"Count Dooku\",['slot']=8,['cost']=10,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a1920988dd8634d9780c6363e3f36f6e.png',['restriction']={['Faction']={[7]=true}}}\nmasterUpgradesDB[540]={['name']=\"General Grievous\",['slot']=8,['cost']=3,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f3740c47b0253ec848c4cfcdde195393.png',['restriction']={['Faction']={[7]=true}}}\nmasterUpgradesDB[541]={['name']=\"DRK-1 Probe Droids\",['Condition']='DRK-1 Probe Droid',['slot']=12,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/44556cd042e536b41e7e89850e13081a.png',['restriction']={['Faction']={[7]=true}}}\nmasterUpgradesDB[542]={\n    name = \"Scimitar\",\n    slot = 15,\n    limited = 1,\n    addAction = {'CL'},\n    cost = 4,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/73d545fd02afd29fa8aa9e9015e7be6e.png',\n    restriction = { ship ={[60]=true}}}\nmasterUpgradesDB[543]={['name']=\"Discord Missiles\",['Condition']=\"Buzz Droid Swarm\",['slot']=6,['cost']=4,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/ee2f0b906cb4f1dbcafc274f44b76d3d.png',['restriction']={['Faction']={[7]=true}}}\nmasterUpgradesDB[545]={['name']=\"Battle Meditation\",['slot']=17,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d0641df31a0fc40c501055dcd34094f6.png',['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[546]={['name']=\"R4-P Astromech\",['slot']=10,['cost']=2,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/26f6dd68ba6bb37fa5315f45a6237c88.png',['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[547]={['name']=\"R4-P17\",['slot']=10,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/80c71951bb28b45b9ffdc84c9e7e69f8.png',['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[548]={['name']=\"Delta-7B\",['slot']=18,['cost']='i',['shd']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/515903e04a0d06a9200860698326896d.png',['restriction']={ ['ship']={[61]=true}}}\nmasterUpgradesDB[549]={['name']=\"Calibrated laser Targeting\",['slot']=18,['cost']='i',['remSlot']={14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f3e06326ab525e07f9a85363b6d69580.png',['cardB']=cardBackDB.mc,['restriction']={ ['ship']={[61]=true}}}\nmasterUpgradesDB[550]={['name']=\"Spare Parts Canisters\",['slot']=14,['cost']=4,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/79d9f2b2bc32bd78ab67dc82eece696a.png',}\nmasterUpgradesDB[551]={\n    name = \"R4-P44\",\n    slot = 10,\n    limited = 1,\n    addAction = {'C'},\n    cost = 3,\n    Charge = 2,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/749fa54f44bc3327349aa3f8b1742a67.png',\n    restriction = {Faction={[6]=true}}}\nmasterUpgradesDB[552]={['name']=\"Clone Commander Cody\",['slot']=16,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1da8e9de468d456f724d0c1f37e90d28.png',['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[553]={['name']=\"Seventh Fleet Gunner\",['slot']=16,['cost']=9,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/a532c1de311e8d0a288af8232495a007.png',['restriction']={['Faction']={[6]=true}}}\n\nmasterUpgradesDB[554]={\n    name = \"Synchronized Console\",\n    slot = 14,\n    addSqdAction = {'TL'},\n    cost = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/e3e5bd38f39f904fbaaa75293e56fb38.png',\n    restriction = {Faction={[6]=true}}}\n\nmasterUpgradesDB[555]={\n    name = \"Grappling Struts\",\n    dual = 1,\n    slot = 18,\n    addAction = {'Piv'},\n    cost = 1,\n    executeOptions = function(moves)\n        return {\n            rk1  = {[1]='rk1', [2]='bs0'},\n            wtl1 = {[1]='wtl1', [2]='btl0'},\n            wtr1 = {[1]='wtr1', [2]='btr0'},\n            wbl2 = {[1]='wbl2', [2]='btl0'},\n            wbr2 = {[1]='wbr2', [2]='btr0'},\n            btl2 = {[1]='btl2', [2]='btl0'},\n            btr2 = {[1]='btr2', [2]='btr0'},\n            rtl2t = {[1]='rtl2t', [2]='btl0'},\n            rtr2t = {[1]='rtr2t', [2]='btr0'},\n            rbl3 = {[1]='rbl3', [2]='btl0'},\n            rbr3 = {[1]='rbr3', [2]='btr0'},\n            wtl3 = {[1]='wtl3', [2]='btl0'},\n            wtr3 = {[1]='wtr3', [2]='btr0'},\n            bs3  = {[1]='bs3', [2]='bs0'},\n            bs4  = {[1]='bs4', [2]='bs0'},\n            ws5  = {[1]='ws5', [2]='bs0'},\n        }\n    end,\n    Charge = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/ca74271f47c42b390ca0ba0b389144a5.png',\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/en/be82da17cfd39003fda380bead210eb9.png',\n    restriction ={ ship={[59]=true}}}\n\nmasterUpgradesDB[556]={\n    name = \"Chancellor Palpatine\",\n    slot = 8,\n    limited = 1,\n    addSqdAction = {'F'},\n    cost = 14,\n    Force = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/8218d7b903ea8c0c0f88375124a93a5f.png',\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/en/fe4d36bbd6f43ada43a5cf55354211c0.png',\n    restriction = {Faction={[6]=true,[7]=true}}}\n\n--w4\nmasterUpgradesDB[577]={\n    name = \"Passive Sensors\",\n    slot = 2,\n    addAction = {'C','TL'},\n    cost = 'i',\n    Charge = 1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/08a980b359fb73dbcb9a315e94d505f0.png',\n    restriction ={ }}\nmasterUpgradesDB[578]={['name']=\"Autoblasters\",['slot']=3,['cost']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/59d4a52e3a534dd090259bd5546e7bab.png',\n                        }\nmasterUpgradesDB[579]={['name']=\"Plasma Torpedoes\",['slot']=5,['cost']=8,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/60fb85c3782c235904678bac8a106150.png',\n                        }\nmasterUpgradesDB[580]={['name']=\"Diamond-Boron Missiles\",['slot']=6,['cost']=6,['Charge']=3,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/f2c1893053af65ce47300fb133a30312.png',\n                        }\nmasterUpgradesDB[581]={['name']=\"Amilyn Holdo\",['slot']=8,['cost']=8,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/cbe5e849e9daa4f3f968b2ff6e2879b1.png',\n                        ['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[582]={\n    name = \"GA-97\",\n    slot = 8,\n    limited = 1,\n    addAction = {'C'},\n    cost = 6,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/3af44c6d32812dc07238b40842d67b47.png',\n    restriction = {Faction ={[4]=true}}}\nmasterUpgradesDB[583]={\n    name = \"Kaydel Connix\",\n    slot = 8,\n    cost = 5,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/29a0eb418850a3821c38874daf0a6b0d.png',\n    restriction = {\n        Faction = {[4]=true}\n    },\n    executeOptions = function(list, pilotid)\n        exopts = {}\n        nextdiff = { b = \"w\", w = \"r\", r = \"r\", p = \"p\"}\n        basicman = { [0] = {\"tl1\", \"bl1\", \"s1\", \"br1\", \"tr1\"},\n                     [1] = {\"tl2\", \"bl2\", \"s2\", \"br2\", \"tr2\"},\n                     [2] = {\"tl3\", \"bl3\", \"s3\", \"br3\", \"tr3\"},\n                     [3] = {\"s4\"},\n                     [4] = {\"s5\"},\n                     [5] = {}\n                   }\n       if pilotid == 0 then\n           return {}\n       end\n        for _, man in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\n            local Char= man:find(\"%d\")\n            local speed = tonumber(man:sub(Char,Char))\n            --print(\"Man:\" .. man .. \" lower:\" .. lower .. \" higher:\" .. higher)\n            exopt = {man}\n            for _, man2 in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\n                local diff = man2:sub(1,1)\n                if nextdiff[diff] ~= nil then\n                    for _, bman in pairs(basicman[speed]) do\n                        if man2:sub(2) == bman then\n                            exopt[#exopt+1]= nextdiff[diff] .. bman\n                        end\n                    end\n                end\n            end\n            if #exopt > 1 then\n                --table.print(exopt)\n                exopts[man] = exopt\n            end\n        end\n        return exopts\n    end\n}\n\nmasterUpgradesDB[584]={['name']=\"Korr Sella\",['slot']=8,['cost']=6,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/dd102b8e517399d12b17756a863d19ee.png',\n                        ['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[585]={['name']=\"Larma D'Acy\",['slot']=8,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/555a815e60cd7bf4612109c3fd65beaa.png',\n                        ['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[586]={['name']=\"Leia Organa\",['slot']=8,['remSlot']={8},['cost']=17,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/0a194c8c529278b471e64edc597b06fc.png', ['cardB']=cardBackDB['8b'],\n                        ['restriction']={['Faction']={[4]=true}}}\nmasterUpgradesDB[587]={\n    name = \"PZ-4CO\",\n    slot = 8,\n    limited = 1,\n    addAction = {'C'},\n    cost = 6,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/11c5bdf18a62dc43bdda0834026dace2.png',\n    restriction = { Faction={[4]=true}}}\nmasterUpgradesDB[588]={['name']=\"R2-A6\",['slot']=10,['cost']=6,\n    executeOptions = function(list, pilotid)\n        exopts = {}\n        for _, man in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\n            local Char= man:find(\"%d\")\n            local speed = tonumber(man:sub(Char,Char))\n            local lower = man:sub(2,Char-1) .. tostring(speed - 1) .. man:sub(Char + 1)\n            local higher = man:sub(2,Char-1) .. tostring(speed + 1) .. man:sub(Char + 1)\n            --print(\"Man:\" .. man .. \" lower:\" .. lower .. \" higher:\" .. higher)\n            exopt = {man}\n            for _, man2 in pairs(masterShipDB[masterPilotDB[pilotid].ship_type].moveSet) do\n                if man2:sub(2) == lower then\n                    exopt[#exopt+1]=man2\n                end\n                if man2:sub(2) == higher then\n                    exopt[#exopt+1]=man2\n                end\n                if #exopt > 1 then\n                    --table.print(exopt)\n                    exopts[man] = exopt\n                end\n            end\n        end\n        return exopts\n    end,\n    ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1d90c6b2f87d17c061e07a92373310b4.png',\n                        ['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[589]={['name']=\"R2-C4\",['slot']=10,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/8fce75228aa2c4eaaf3e9666c4da8caf.png',\n                        ['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[590]={['name']=\"TA-175\",['slot']=20,['cost']=11,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/d71e07aa3147c6fe943bd0c8131a0096.png',\n                        ['restriction']={['Faction']={[7]=true}}}\nmasterUpgradesDB[591]={['name']=\"Electro-Proton Bomb\",['slot']=12,['Bomb']=true,['cost']=11,['Charge']=1,['remSlot']={14},['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/0f76484cc390fc97d1fe2f863d75944b.png',\n                        }\nmasterUpgradesDB[592]={['name']=\"Delayed Fuses\",['slot']=14,['cost']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/4572ece39224eeaf2dfce2770b96f919.png',\n                        }\nmasterUpgradesDB[593]={\n    name = \"Angled Deflectors\",\n    slot = 14,\n    addAction = {'R'},\n    cost = 6,\n    shd = -1,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/41cf9c90abcd8ff5c668bb447967b75c.png',\n    restriction ={Size={small=true, medium=true}}}\n\nmasterUpgradesDB[594]={\n    name = \"Landing Struts\",\n    slot = 18,\n    addAction = {'Piv'},\n    cost = 1,\n    executeOptions = function(moves)\n        return {\n            ws1  = {[1]='ws1', [2]='bs0'},\n            rbl1 = {[1]='rbl1', [2]='btl0'},\n            rbr1 = {[1]='rbr1', [2]='btr0'},\n            wtl1 = {[1]='wtl1', [2]='btl0'},\n            wtr1 = {[1]='wtr1', [2]='btr0'},\n            wbl2 = {[1]='wbl2', [2]='btl0'},\n            wbr2 = {[1]='wbr2', [2]='btr0'},\n            btl2 = {[1]='btl2', [2]='btl0'},\n            btr2 = {[1]='btr2', [2]='btr0'},\n            rk2 = {[1]='rk2', [2]='bs0'},\n            rtl2t = {[1]='rtl2t', [2]='btl0'},\n            rtr2t = {[1]='rtr2t', [2]='btr0'},\n            wtl3 = {[1]='wtl3', [2]='btl0'},\n            wtr3 = {[1]='wtr3', [2]='btr0'},\n            bs3  = {[1]='bs3', [2]='bs0'},\n            ws4  = {[1]='ws4', [2]='bs0'},\n            rs5  = {[1]='rs5', [2]='bs0'},\n        }\n    end,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/c23a0130bad7330c0abb6218745910aa.png',\n    cardB = 'http://sb-cdn.fantasyflightgames.com/card_images/en/aba79159308e850b635f6c43721ccdee.png',\n    restriction ={Faction={[7]=true}, ship={[66]=true}}}\n\nmasterUpgradesDB[613]={['name']=\"Foresight\",['slot']=17,['cost']=4,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/12c948b9a0fe9f619ecda00f9fdcc437.png',\n                        }\nmasterUpgradesDB[614]={['name']=\"Precognitive Reflexes\",['slot']=17,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/931c84c3e1b3afe5d078f6b3dd4f677a.png',\n                        ['restriction']={ ['Size']={small=true}}}\nmasterUpgradesDB[619]={\n    name = \"Targeting Computer\",\n    slot = 14,\n    addAction = {'TL'},\n    cost = 3,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/619d3d56eadaada29c6602cc7cd00148.png'}\n\nmasterUpgradesDB[612]={['name']=\"Snap Shot\",['slot']=1,['cost']='s',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/fed45c0416dfd298d9433c4608e99b7e.png',\n                        }\nmasterUpgradesDB[610]={['name']=\"Ensnare\",['slot']=1,['cost']='i',['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/5d7e0560460a1d91281537a658ddfc86.png',\n                        ['restriction']={ ['ship']={[67]=true}}}\nmasterUpgradesDB[611]={['name']=\"Gravitic Deflection\",['slot']=1,['cost']=5,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/50ec6aa5a267ece16d36533f4efe2bb0.png',\n                        ['restriction']={ ['ship']={[67]=true}}}\nmasterUpgradesDB[618]={['name']=\"C1-10P\",['slot']=10,['cost']=7,['Charge']=2,['cardB']='http://sb-cdn.fantasyflightgames.com/card_images/en/cde74a191d82775eacf2e273e855ef5f.png', ['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/6150404202e627187f39b6092cdf702c.png',\n                        ['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[617]={['name']=\"C1-10P (Erratic)\",['slot']=10,['cost']=7,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/cde74a191d82775eacf2e273e855ef5f.png', ['cardB']='http://sb-cdn.fantasyflightgames.com/card_images/en/6150404202e627187f39b6092cdf702c.png',\n                        ['restriction']={['Faction']={[6]=true}}}\nmasterUpgradesDB[616]={\n    name = \"C-3PO\",\n    slot = 8,\n    addAction = {'C'},\n    cost = 8,\n    card = 'http://sb-cdn.fantasyflightgames.com/card_images/en/01e1a3b43aee6c564662825cadcd3f22.png',\n    restriction = {Faction={[6]=true}}}\nmasterUpgradesDB[615]={['name']=\"Ahsoka Tano\",['slot']=16,['cost']=12,['Force']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/bdc101788f827aeaf2f50a513b59aa7e.png',\n                        ['restriction']={['Faction']={[6]=true}}}\n\n--w7\nmasterUpgradesDB[644]={\n    name = \"R1-J5\",\n    slot = 10,\n    limited = 1,\n    cost = 6,\n    Charge = 3,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/cc/90/cc901ec5-cb47-4b15-8dd5-76e997698d15/swz63_a1_card_upgrade_r1-j5.png',\n    restriction = {Faction={[4]=true}}}\n\nmasterUpgradesDB[645]={\n    name = \"Stabilized S-Foils\",\n    dual = 1,\n    slot = 18,\n    addAction = {'E'},\n    cost = 2,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/64/9d/649d6f6e-8cba-404f-a00f-9a36a0076e34/swz66_stabilized-s-foils-open.png',\n    cardB = 'http://images-cdn.fantasyflightgames.com/filer_public/52/d5/52d52e74-c744-40b7-ad74-c98bcb04016c/swz66_stabilized-s-foils-closed.png', restriction ={ship={[17]=true}}}\n\nmasterUpgradesDB[647]={\n    name = \"K-2SO\",\n    slot = 8,\n    limited = 1,\n    addAction = {'C'},\n    cost = 8,\n    card = 'http://images-cdn.fantasyflightgames.com/filer_public/e9/71/e97130c3-368d-4453-a0ff-51a63d30394c/swz66_k-2so_upgrade.png',\n    restriction ={Faction={[1]=true}}}\n\nmasterUpgradesDB[648]={['name']='Cluster Mines',['slot']=12,['Bomb']=true,['cost']=8,['Charge']=1,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/c27f0dcda78915239450bedf5b931d86.png',}\nmasterUpgradesDB[649]={['name']='Ion Bombs',['slot']=12,['Bomb']=true,['cost']=5,['Charge']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/e4c43791c16aea639f2e811c16d1dbcf.png',}\nmasterUpgradesDB[650]={['name']=\"Coaxium Hyperfuel\",['slot']=13,['cost']=2,['card']='http://sb-cdn.fantasyflightgames.com/card_images/en/1622f5d9e279b54d4610820f5dd31a95.png'}\nmasterUpgradesDB[651]={['name']=\"Mag-Pulse Warheads\",['slot']=6,['cost']=6,['Charge']=2,['card']='http://images-cdn.fantasyflightgames.com/filer_public/20/a6/20a60741-4adf-485e-bee2-f93b9e5de7bb/swz62_card_mag-pulse-warheads.png',\n                        }\nmasterUpgradesDB[653]={['name']=\"Proud Tradition\",['dual']=1,['slot']=1,['cost']=2,['card']='http://images-cdn.fantasyflightgames.com/filer_public/38/09/3809c0fe-c113-43ee-bc6e-90e6afadef73/swz62_card_proud-tradition.png', ['cardB']='http://images-cdn.fantasyflightgames.com/filer_public/0b/48/0b48c067-b088-41aa-8af1-6d7f4ff840d1/swz62_card_false-tradition.png', ['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[654]={['name']=\"Deuterium Power Cells\",['slot']=19,['cost']=9,['Charge']=2,['remSlot']={14},['card']='http://images-cdn.fantasyflightgames.com/filer_public/d1/af/d1afeaf7-166b-4874-8544-982d8c4c445e/swz62_card_deuterium-power-cells.png',\n                        ['restriction']={['Faction']={[5]=true}}}\nmasterUpgradesDB[655]={['name']=\"Kaz's Fireball\",['slot']=15,['cost']=2,['card']='http://images-cdn.fantasyflightgames.com/filer_public/47/dd/47dd508f-6751-4b19-b3da-d0530aeb9a33/swz63_a1_card_kazs-fireball.png',\n                        ['restriction']={ ['ship']={[70]=true}}}\n\n\n\nmasterUpgradesDB[670]={\n    name = \"Deadeye Shot\",\n    slot = 1,\n    cost = 1,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/4d/84/4d84d319-d6ad-425b-b05e-4e679a54a508/swz70_a1_deadeye-shot_upgrade.png',\n    restriction = {\n        Size = { small=true, medium=true}\n    }\n}\n\nmasterUpgradesDB[671]={\n    name = \"Automated Target Priority\",\n    slot = 19,\n    cost = 1,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/e9/e2/e9e2f789-fc77-4ac5-861d-6c08b97ea244/swz69_target-priority_card.png',\n    restriction = {\n        -- int 3 or less\n    }\n}\n\nmasterUpgradesDB[672]={\n    name = \"Sensor Buoy Suite\",\n    slot = 19,\n    cost = 4,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/7d/19/7d199d6b-808a-47d2-9aa1-1fc3432e7d3f/swz69_sensor-buoy-suite_card.png',\n    restriction = {\n        Faction = {[5]=true},\n        Size = { medium=true, large=true}\n    },\n    remotes = {'Sensor Buoy (Red)', 'Sensor Buoy (Blue)'}\n}\n\nmasterUpgradesDB[673]={\n    name = \"Multi-Missile Pods\",\n    slot = 6,\n    remSlot = {6},\n    Charge = 5,\n    cost = 8,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/2b/f1/2bf158e3-099c-4969-a882-b52af5a88273/swz71_upgrade_multi-missile-pod.png',\n    restriction = {},\n}\n\nmasterUpgradesDB[674]={\n    name = \"Synced Laser Cannons\",\n    slot = 3,\n    remSlot = {3},\n    cost = 6,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/9b/11/9b115a04-a49d-40f0-ac06-5accb903aa5c/swz71_upgrade_synced-cannons.png',\n    cardB = cardBackDB['3b'],\n    restriction = {}\n}\n\nmasterUpgradesDB[675]={\n    name = \"Aayla Secura\",\n    Force = 1,\n    limited = 1,\n    slot = 8,\n    cost = 16,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/40/9a/409a5444-ec9c-48ae-a91c-0301bc0575df/swz70_a1_aayla_upgrade.png',\n    restriction = {\n        Faction = {[6]=true}\n    }\n}\n\nmasterUpgradesDB[676]={\n    name = \"Kit Fisto\",\n    Force = 1,\n    limited = 1,\n    addAction = {'E'},\n    slot = 8,\n    cost = 9,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/18/f5/18f5a7f6-8fce-4dba-b6cf-f5c739f807ca/swz70_a1_kit-fisto_upgrade.png',\n    restriction = {\n        Faction = {[6]=true}\n    }\n}\n\n\nmasterUpgradesDB[677]={\n    name = \"Plo Koon\",\n    Force = 1,\n    limited = 1,\n    slot = 8,\n    addAction = {'R'},\n    cost = 10,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/9a/a5/9aa5ef62-7c41-425d-9f27-01369d3e1571/swz70_a1_plo-koon_upgrade.png',\n    restriction = {\n        Faction = {[6]=true}\n    }\n}\n\nmasterUpgradesDB[678]={\n    name = \"Yoda\",\n    Force = 2,\n    limited = 1,\n    slot = 8,\n    cost = 15,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/27/8a/278a7c83-c1e0-4ea4-b36b-2114e95fde99/swz70_a1_yoda_upgrade.png',\n    restriction = {\n        Faction = {[6]=true}\n    }\n}\n\nmasterUpgradesDB[679]={\n    name = '\"Fives\"',\n    limited = 1,\n    slot = 8,\n    cost = 3,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/fa/fe/fafeeec4-919f-4968-b26f-93f3cdda03b3/swz70_a1_fives_upgrade.png',\n    restriction = {\n        Faction = {[6]=true}\n    }\n}\n\nmasterUpgradesDB[680]={\n    name = \"Wolfpack\",\n    limited = 1,\n    slot = 16,\n    remSlot = {8},\n    cost = 4,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/11/69/116909f3-2f9f-4a5d-b8b4-6beed48e7a03/swz70_a1_wolfpack_upgrade.png',\n    restriction = {\n        Faction = {[6]=true}\n    }\n}\n\nmasterUpgradesDB[681]={\n    name = \"Ghost Company\",\n    limited = 1,\n    slot = 16,\n    addAction = {'F'},\n    remSlot = {8},\n    cost = 5,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/7e/83/7e836a20-1ed5-44c3-9f21-3e0e5e7f9347/swz70_a1_ghost-company_upgrade.png',\n    restriction = {\n        Faction = {[6]=true}\n        -- Todo: Add rotate requirement\n    }\n}\n\nmasterUpgradesDB[682]={\n    name = \"Kalani\",\n    limited = 1,\n    slot = 20,\n    addAction = {'C'},\n    Charge = 3,\n    cost = 5,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/81/b3/81b32459-3421-4da7-8a45-9bbdbcf1bc31/swz71_upgrade_kalani.png',\n    restriction = {\n        Faction={[7]=true}\n    },\n}\n\n\nmasterUpgradesDB[684]={\n    name = \"Commander Malarus\",\n    dual = 1,\n    slot = 8,\n    limited = 1,\n    cost = 7,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/6d/2a/6d2a8204-2de1-4b1e-8980-456501628a24/swz69_malarus_card.png',\n    cardB = 'https://images-cdn.fantasyflightgames.com/filer_public/42/ed/42edc96c-938a-4bd4-88de-7be1e449d96b/swz69_malarus-perfected_card.png',\n    restriction = {\n        Faction = {[5]=true}\n    }\n}\n\nmasterUpgradesDB[686]={\n    name = \"Agent Terex\",\n    dual = 1,\n    slot = 8,\n    limited = 1,\n    cost = 6,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/27/56/27568de2-a0be-4de5-8107-8c8c584fdd18/swz69_terex_card.png',\n    cardB = 'https://images-cdn.fantasyflightgames.com/filer_public/ae/fc/aefc02a4-e435-4842-964d-ec54d70913f6/swz69_cyborg-terex_card.png',\n    restriction = {\n        Faction = {[5]=true}\n    }\n}\n\nmasterUpgradesDB[687]={\n    name = 'Commander Pyre',\n    slot = 8,\n    limited = 1,\n    cost = 5,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/10/5d/105d386c-ff1b-44be-9b9c-a2c1dc2877ec/swz69_pyre_card.png',\n    restriction = {\n        Faction = {[5]=true}\n    }\n}\n\nmasterUpgradesDB[688]={\n    name = \"Clone Captain Rex\",\n    limited = 1,\n    slot = 16,\n    cost = 4,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/41/90/4190fb29-a8d8-4576-b112-48df9944fc4c/swz70_a1_cpt-rex_upgrade.png',\n    restriction = {\n        Faction = {[6]=true}\n    }\n}\n\nmasterUpgradesDB[689]={\n    name = \"Suppressive Gunner\",\n    slot = 16,\n    cost = 's',\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/71/36/7136b2b9-dc7c-494a-9509-4ffbe0d2870d/swz70_a1_suppressive-gunner_upgrade.png',\n    restriction = {}\n}\n\nmasterUpgradesDB[690]={\n    name = \"Concussion Bombs\",\n    slot = 12,\n    Charge = 3,\n    cost = 3,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/00/c6/00c65f3f-e738-4a5d-80a8-6b3aef6e8074/swz71_upgrade_concussion-bomb.png',\n    cardB = cardBackDB['12b'],\n    restriction = {},\n    Bomb = true\n}\n\n\nmasterUpgradesDB[692]={\n    name = \"Repulsorlift Stabilizers\",\n    dual = 1,\n    slot = 18,\n    cost = 3,\n    cardB = 'https://images-cdn.fantasyflightgames.com/filer_public/b9/24/b92420be-2835-4e12-b76e-b2675533249c/swz71_upgrade_stabilizer-active.png',\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/28/39/2839eb69-5a45-47e1-a69d-4bb0b4f8ab5d/swz71_upgrade_stabilizer-inactive.png',\n    restriction = {\n        ship = {[72]=true}\n    },\n    executeOptions = function()\n        return {\n        rbl1 = {'rbl1', 'rbl1z'},\n        rbr1 = {'rbr1', 'rbr1z'},\n        btl2 = {'btl2', 'btl2z'},\n        wbl2 = {'wbl2', 'wbl2z'},\n        wbr2 = {'wbr2', 'wbr2z'},\n        btr2 = {'btr2', 'btr2z'},\n        wtl3 = {'wtl3', 'wtl3z'},\n        rbl3 = {'rbl3', 'rbl3z'},\n        rbr3 = {'rbr3', 'rbr3z'},\n        wtr3 = {'wtr3', 'wtr3z'}\n    } end\n}\n\n\n-- Unreleased upgrades: TODO: Give proper FFG id's\nmasterUpgradesDB[700]={\n    name = \"Maneuver-Assist MGK-300\",\n    slot = 18,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/a2/c9/a2c98345-8ee6-4e63-a659-6ec1928e6979/swz67_maneuver-assist_mgk300.png',\n    restriction = {\n        ship = {[83]=true}\n    },\n}\n\nmasterUpgradesDB[701]={\n    name = \"Target-Assist MGK-300\",\n    slot = 18,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c1/d7/c1d74e73-d6e7-47c5-9d2f-707d1c88cb67/swz67_target-assist_mgk300.png',\n    restriction = {\n        ship = {[83]=true}\n    },\n}\n\nmasterUpgradesDB[702]={\n    name = \"Ion Limiter Override\",\n    slot = 1,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/a5/d9/a5d987e9-ec4c-4a99-828b-c498799a7d6c/swz67_ion-limiter-overdrive.png',\n    restriction = {\n        ship = {\n            [11]=true,\n            [13]=true,\n            [16]=true,\n            [18]=true,\n            [19]=true,\n            [20]=true,\n            [25]=true,\n            [27]=true,\n            [29]=true,\n            [41]=true,\n            [43]=true,\n            [49]=true,\n            [50]=true,\n            [52]=true,\n            [56]=true,\n            [85]=true,\n            [83]=true}\n    },\n}\n\nmasterUpgradesDB[703]={\n    name = \"Backwards Tailslide\",\n    slot = 1,\n    addAction = {'E'},\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c4/d5/c4d543bc-bcf0-4c88-b8df-f652210752b9/swz68_backward-tailslide.png',\n    restriction = {\n        ship = {[33]=true,\n                [53]=true}\n    },\n}\n\nmasterUpgradesDB[704]={\n    name = \"Overdrive Thruster\",\n    limited = 1,\n    slot = 14,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/21/3e/213e1b33-19c8-4081-9ed2-e30b0fe345dd/swz68_overdrive-thruster.png',\n    restriction = {\n        ship = {[53]=true}\n    },\n}\n\nmasterUpgradesDB[705]={\n    name = \"R2-D2\",\n    limited = 1,\n    slot = 10,\n    cost = 200,\n    Charge = 4,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/1c/97/1c971472-6fea-493b-ac8f-888fc6363c84/swz68_r2d2.png',\n    restriction = {\n        Faction={[4]=true},\n    },\n}\n\nmasterUpgradesDB[706]={\n    name = \"R6-D8\",\n    limited = 1,\n    slot = 10,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/e5/c2/e5c25a09-ca2a-4742-92d5-d39d0d33d99b/swz68_r6d8.png',\n    restriction = {\n        Faction={[4]=true},\n    },\n}\n\nmasterUpgradesDB[707]={\n    name = \"Underslung Blaster Cannon\",\n    slot = 3,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/b5/6d/b56db2ed-dca8-4cdf-8fa0-a8e35d27ae2b/swz68_underslung-blaster-cannon.png',\n    sTurret = 1,\n    restriction = {\n        Faction={[4]=true},\n        ship = {[53]=true}\n    },\n}\n\nmasterUpgradesDB[708]={\n    name = \"Starbird Slash\",\n    slot = 1,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/65/61/656136b2-2981-4e18-80fb-771fb2810669/swz68_starbird-slash.png',\n    restriction = {\n        ship = {[35]=true,\n                [54]=true}\n    },\n}\n\nmasterUpgradesDB[709]={\n    name = \"Extreme Maneuvers\",\n    slot = 17,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/5f/dd/5fdda9e7-dea9-4188-aaf1-e06446b38e45/swz79_extreme-maneuvers.png',\n    addAction = {'dare'},\n    restriction = {\n        Size = { small=true },\n        -- Todo: add boost requirement\n    },\n}\n\nmasterUpgradesDB[710]={\n    name = \"Jedi Commander\",\n    slot = 21,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/fd/1f/fd1ff8be-72b9-4c61-b5cc-7b892c7244e3/swz79_jedi-commander2.png'\n}\n\nmasterUpgradesDB[711]={\n    name = \"R2-D2\",\n    limited = 1,\n    slot = 10,\n    cost = 200,\n    Charge = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/c3/6f/c36f6f13-6998-4120-acbf-3c85132ea416/swz79_r2d2.png',\n    restriction = {\n        Faction={[6]=true},\n    }\n}\n\nmasterUpgradesDB[712]={\n    name = \"Patience\",\n    slot = 17,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/5c/f9/5cf91573-a7a8-47ec-9139-f3d0043fce0c/swz79_patience.png',\n    restriction = {\n        Faction={\n            [1]=true,\n            [4]=true,\n            [6]=true\n        },\n    }\n}\n\nmasterUpgradesDB[713]={\n    name = 'Alpha-3B \"Besh\"',\n    slot = 18,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/6d/43/6d434e52-68f4-4b8d-9166-4365fb920625/swz80_upgrade_alpha-3b.png',\n    addSlot ={12},\n    restriction = {\n        ship={\n            [85]=true,\n        },\n    }\n}\n\nmasterUpgradesDB[714]={\n    name = 'Alpha-3E \"Esk\"',\n    slot = 18,\n    cost = 200,\n    Charge = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/08/3a/083ae697-4a97-4e74-bcb0-77cb590e51e3/swz80_upgrade_alpha-3e.png',\n    restriction = {\n        ship={\n            [85]=true,\n        },\n    }\n}\n\nmasterUpgradesDB[715]={\n    name = 'Thermal Detonators',\n    slot = 12,\n    cost = 200,\n    Charge = 4,\n    Bomb = true,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/52/bf/52bff580-897d-4af0-9084-5088765babf0/swz80_upgrade_thermal-detonators.png',\n}\n\nmasterUpgradesDB[716]={\n    name = 'R7-A7',\n    limited = 1,\n    slot = 10,\n    cost = 200,\n    Charge = 3,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/f5/84/f58409a7-8000-4201-a912-014b011521cb/swz80_upgrade_r7-a7.png',\n    restriction = {\n        Faction={[6]=true},\n    }\n}\n\nmasterUpgradesDB[717]={\n    name = 'Precision Ion Engines',\n    slot = 14,\n    cost = 200,\n    Charge = 2,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/bb/fb/bbfb4727-e2f5-4f23-be9a-3341ea4de7b5/swz80_upgrade_precison-ion-engines.png',\n    restriction = {\n        ship = {\n        [11]=true,\n        [13]=true,\n        [18]=true,\n        [25]=true,\n        [41]=true,\n        [49]=true,\n        [52]=true,\n        [56]=true,\n        [85]=true,\n        },\n    }\n}\n\nmasterUpgradesDB[716]={\n    name = 'Q7 Astromech',\n    slot = 10,\n    cost = 200,\n    card = 'https://images-cdn.fantasyflightgames.com/filer_public/f5/84/f58409a7-8000-4201-a912-014b011521cb/swz80_upgrade_r7-a7.png',\n    restriction = {\n        Faction={[6]=true},\n    }\n}\n\n-- Epic upgrade cards\n-- Commands\nmasterUpgradesDB[1000]={\n    name = \"Agent of the Empire\",\n    wingleader = true,\n    slot = 21,\n    cost = 4,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/AgentEmpire.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[13]=true, [25]=true}\n    }\n}\nmasterUpgradesDB[1001]={\n    name = \"First Order Elite\",\n    wingleader = true,\n    slot = 21,\n    cost = 4,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/FOElite.png',\n    restriction = {\n        Faction = {[5]=true},\n        ship = {[50]=true, [52]=true}\n    }\n}\nmasterUpgradesDB[1002]={\n    name = \"Veteran Wing Leader\",\n    wingleader = true,\n    slot = 21,\n    cost = 2,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/VeteranWingLeader.png',\n    restriction = {\n        Size={small=true}\n    }\n}\nmasterUpgradesDB[1003]={\n    name = \"Dreadnought hunter\",\n    slot = 21,\n    cost = 6,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/DreadnoughtHunter.png',\n    restriction = {\n        Size={small=true} -- TODO: Add initiative 4 or higher restriction\n    }\n}\n-- Command and Crew\nmasterUpgradesDB[1004]={\n    name = \"Admiral Ozzel\",\n    slot = 21,\n    remSlot = {8},\n    cost = 6,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/AdmiralOzzel.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\n    restriction = {\n        Faction = {[2]=true},\n        Size={huge=true}\n    }\n}\nmasterUpgradesDB[1005]={\n    name = \"Azmorigan\",\n    slot = 21,\n    remSlot = {8},\n    cost = 4,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Azmorigan.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\n    restriction = {\n        Faction = {[3]=true},\n        Size={huge=true}\n    }\n}\nmasterUpgradesDB[1006]={\n    name = \"Captain Needa\",\n    slot = 21,\n    remSlot = {8},\n    cost = 8,\n    Charge = 4,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/CaptainNeeda.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\n    restriction = {\n        Faction = {[2]=true},\n        Size={huge=true}\n    }\n}\nmasterUpgradesDB[1007]={\n    name = \"Carlist Rieekan\",\n    slot = 21,\n    addAction = {'E'},\n    remSlot = {8},\n    cost = 6,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/CarlistRieekan.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\n    restriction = {\n        Faction = {[1]=true},\n        Size={huge=true}\n    }\n}\nmasterUpgradesDB[1008]={\n    name = \"Jan Dodonna\",\n    slot = 21,\n    remSlot = {8},\n    cost = 4,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/JanDodonna.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\n    restriction = {\n        Faction = {[1]=true},\n        Size={huge=true}\n    }\n}\nmasterUpgradesDB[1009]={\n    name = \"Raymus Antilles\",\n    slot = 21,\n    remSlot = {8},\n    cost = 12,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/RaymusAntillies.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\n    restriction = {\n        Faction = {[1]=true},\n        Size={huge=true}\n    }\n}\nmasterUpgradesDB[1010]={\n    name = \"Stalwart Captain\",\n    slot = 21,\n    remSlot = {8},\n    cost = 6,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/StalwartCaptain.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\n    restriction = {\n        Size={huge=true}\n    }\n}\n-- Hardpoints\nmasterUpgradesDB[1011]={\n    name = \"Ion Cannon Battery\",\n    slot = 24,\n    cost = 5,\n    sTurret = 1,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/IonCannonBattery.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/IonCannonBattery(Offline).png',\n    restriction = {}\n}\nmasterUpgradesDB[1012]={\n    name = \"Ordnance Tubes\",\n    slot = 24,\n    cost = 1,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/OrdnanceTubes.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/OrdnanceTubes(Offline).png',\n    restriction = {}\n}\nmasterUpgradesDB[1013]={\n    name = \"Point-Defense Battery\",\n    slot = 24,\n    cost = 9,\n    dTurret = 1,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/PointDefenseBattery.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/PointDefenseBattery(Offline).png',\n    restriction = {}\n}\nmasterUpgradesDB[1014]={\n    name = \"Targeting Battery\",\n    slot = 24,\n    cost = 6,\n    sTurret = 1,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/TargetingBattery.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/TargetingBattery(Offline).png',\n    restriction = {}\n}\nmasterUpgradesDB[1015]={\n    name = \"Turbolaser Battery\",\n    slot = 24,\n    cost = 13,\n    sTurret = 1,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/TurbolaserBattery.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/TurbolaserBattery(Offline).png',\n    restriction = {\n        -- TODO: Add restriction energy 5 or higher\n    }\n}\n-- Crew\nmasterUpgradesDB[1016]={\n    name = \"Toryn Farr\",\n    slot = 8,\n    addAction = {'TL'},\n    cost = 4,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/TorynFarr.png',\n    restriction = {\n        Faction = {[1]=true},\n        Size={huge=true}\n    }\n}\n-- Team\nmasterUpgradesDB[1017]={\n    name = \"Bombardment Specialists\",\n    slot = 23,\n    addAction = {'TL','C'},\n    cost = 6,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/BombardmentSpecialists.png',\n    restriction = {}\n}\nmasterUpgradesDB[1018]={\n    name = \"Comms Team\",\n    slot = 23,\n    addAction = {'C'},\n    cost = 8,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/CommsTeam.png',\n    restriction = {}\n}\nmasterUpgradesDB[1019]={\n    name = \"Damage Control Team\",\n    slot = 23,\n    addAction = {'R','C'},\n    cost = 3,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/DamageControlTeam.png',\n    restriction = {}\n}\nmasterUpgradesDB[1020]={\n    name = \"Gunnery Specialists\",\n    slot = 23,\n    addAction = {'C'},\n    cost = 8,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/GunnerySpecialists.png',\n    restriction = {}\n}\nmasterUpgradesDB[1021]={\n    name = \"IG-RM Droids\",\n    slot = 23,\n    addAction = {'C'},\n    cost = 2,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/IGRM%20Droids.png',\n    restriction = {\n        Faction = {[3]=true}\n    }\n}\nmasterUpgradesDB[1022]={\n    name = \"Ordnance Team\",\n    slot = 23,\n    addAction = {'C'},\n    cost = 4,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/OrdnanceTeam.png',\n    restriction = {}\n}\nmasterUpgradesDB[1023]={\n    name = \"Sensor Experts\",\n    slot = 23,\n    addAction = {'TL','C'},\n    cost = 10,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/SensorExperts.png',\n    restriction = {}\n}\n-- Cargo\nmasterUpgradesDB[1024]={\n    name = \"Adaptive Shields\",\n    slot = 22,\n    cost = 10,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/AdaptiveShields.png',\n    restriction = {}\n}\nmasterUpgradesDB[1025]={\n    name = \"Boosted Scanners\",\n    slot = 22,\n    cost = 8,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/BoostedScanners.png',\n    restriction = {}\n}\nmasterUpgradesDB[1026]={\n    name = \"Optimized Power Core\",\n    slot = 22,\n    cost = 6,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/OptimizedPowerCore.png',\n    restriction = {}\n}\nmasterUpgradesDB[1027]={\n    name = \"Tibanna Reserves\",\n    slot = 22,\n    cost = 3,\n    Charge = 3,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/TibannaReserves.png',\n    restriction = {}\n}\n-- Illicit\nmasterUpgradesDB[1028]={\n    name = \"Quick-Release Locks\",\n    slot = 13,\n    cost = 5,\n    Charge = 2,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/QuickReleaseLocks.png',\n    restriction = {\n        Size={huge=true}\n    }\n}\nmasterUpgradesDB[1029]={\n    name = \"Saboteur's Map\",\n    slot = 13,\n    cost = 3,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/SaboteursMap.png',\n    restriction = {\n        Size={huge=true}\n    }\n}\nmasterUpgradesDB[1030]={\n    name = \"Scanner Baffler\",\n    slot = 13,\n    cost = 8,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/ScannerBaffler.png',\n    restriction = {\n        Size={huge=true}\n    }\n}\n-- title\nmasterUpgradesDB[1031]={\n    name = \"Dodonna's Pride\",\n    limited = 1,\n    slot = 15,\n    addAction = {'E','F'},\n    cost = 8,\n    shd = -2,\n    addSlot ={23, 22},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/DodonnasPride.png',\n    restriction = {\n        Faction={[1]=true},\n        ship = {[90]=true}\n    }\n}\nmasterUpgradesDB[1032]={\n    name = \"Jaina's Light\",\n    slot = 15,\n    limited = 1,\n    cost = 6,\n    shd = 1,\n    Energy = -1,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/JainasLight.png',\n    restriction = {\n        Faction={[1]=true},\n        ship = {[90]=true}\n    }\n}\nmasterUpgradesDB[1033]={\n    name = \"Liberator\",\n    slot = 15,\n    cost = 5,\n    Energy = 1,\n    Docking = true,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Liberator.png',\n    restriction = {\n        Faction={[1]=true},\n        ship = {[90]=true}\n    }\n}\nmasterUpgradesDB[1034]={\n    name = \"Tantive IV\",\n    slot = 15,\n    cost = 6,\n    addSlot ={8, 8},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/TantiveIV.png',\n    restriction = {\n        Faction={[1]=true},\n        ship = {[90]=true}\n    }\n}\nmasterUpgradesDB[1035]={\n    name = \"Thunderstrike\",\n    slot = 15,\n    cost = 4,\n    addSlot = {16},\n    shd = -3,\n    Hull = 3,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Thunderstrike.png',\n    restriction = {\n        Faction={[1]=true},\n        ship = {[90]=true}\n    }\n}\nmasterUpgradesDB[1036]={\n    name = \"Bright Hope\",\n    slot = 15,\n    cost = 5,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/BrightHope.png',\n    restriction = {\n        Faction={[1]=true},\n        ship = {[93]=true}\n    }\n}\nmasterUpgradesDB[1037]={\n    name = \"Luminous\",\n    slot = 15,\n    cost = 12,\n    shd = -1,\n    Energy = 2,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Luminous.png',\n    restriction = {\n        Faction={[1]=true},\n        ship = {[93]=true}\n    }\n}\nmasterUpgradesDB[1038]={\n    name = \"Quantum Storm\",\n    slot = 15,\n    cost = 3,\n    Energy = 1,\n    addSlot = {23, 22},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/QuantumStorm.png',\n    restriction = {\n        Faction={[1]=true},\n        ship = {[93]=true}\n    }\n}\nmasterUpgradesDB[1039]={\n    name = \"Assailer\",\n    slot = 15,\n    limited = 1,\n    cost = 7,\n    shd = -2,\n    Hull = 2,\n    addSlot = {16},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Assailer.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[94]=true}\n    }\n}\nmasterUpgradesDB[1040]={\n    name = \"Corvus\",\n    slot = 15,\n    limited = 1,\n    addAction = {'C'},\n    cost = 3,\n    Docking = true,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Corvus.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[94]=true}\n    }\n}\nmasterUpgradesDB[1041]={\n    name = \"Impetuous\",\n    slot = 15,\n    limited = 1,\n    cost = 4,\n    shd = -2,\n    Energy = 2,\n    addSlot = {8},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Impetuous.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[94]=true}\n    }\n}\nmasterUpgradesDB[1042]={\n    name = \"Instigator\",\n    slot = 15,\n    limited = 1,\n    cost = 6,\n    addSlot = {23},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Instigator.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[94]=true}\n    }\n}\nmasterUpgradesDB[1043]={\n    name = \"Blood Crow\",\n    slot = 15,\n    limited = 1,\n    cost = 5,\n    Energy = 2,\n    shd = -1,\n    addSlot = {16},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/BloodCrow.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[92]=true}\n    }\n}\nmasterUpgradesDB[1044]={\n    name = \"Requiem\",\n    slot = 15,\n    limited = 1,\n    cost = 7,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Requiem.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[92]=true}\n    }\n}\nmasterUpgradesDB[1045]={\n    name = \"Suppressor\",\n    slot = 15,\n    limited = 1,\n    cost = 6,\n    shd = 2,\n    Hull = -2,\n    addSlot = {2},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Suppressor.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[92]=true}\n    }\n}\nmasterUpgradesDB[1046]={\n    name = \"Vector\",\n    slot = 15,\n    limited = 1,\n    addSqdAction = {'E','B'},\n    cost = 8,\n    addSlot = {8, 22},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/Vector.png',\n    restriction = {\n        Faction={[2]=true},\n        ship = {[92]=true}\n    }\n}\nmasterUpgradesDB[1047]={\n    name = \"Broken Horn\",\n    slot = 15,\n    limited = 1,\n    cost = 4,\n    addSlot = {8, 13},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/BrokenHorn.png',\n    restriction = {\n        Faction={[3]=true},\n        ship = {[91]=true}\n    }\n}\nmasterUpgradesDB[1048]={\n    name = \"Merchant One\",\n    slot = 15,\n    limited = 1,\n    addAction = {'E'},\n    cost = 8,\n    addSlot = {4, 23, 22},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/MerchantOne.png',\n    restriction = {\n        Faction={[3]=true},\n        ship = {[91]=true}\n    }\n}\nmasterUpgradesDB[1049]={\n    name = \"Insatiable Worrt\",\n    slot = 15,\n    cost = 7,\n    shd = -1,\n    Energy = -1,\n    Hull = 3,\n    addSlot = {22},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/InsatiableWorrt.png',\n    restriction = {\n        Faction={[3]=true},\n        ship = {[91]=true}\n    }\n}\n-- Configuration\nmasterUpgradesDB[1050]={\n    name = \"Corsair Refit\",\n    slot = 18,\n    cost = 15,\n    shd = -2,\n    Energy = 1,\n    Hull = 2,\n    addSlot = {3, 4, 6},\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/CorsirRefit.png',\n    restriction = {\n        ship = {[91]=true}\n    }\n}\n\nmasterUpgradesDB[1051]={\n    name = \"Strategic Commander\",\n    slot = 21,\n    remSlot = {8},\n    cost = 6,\n    card = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/EpicCards/StrategicCommander.png',\n    cardB = 'https://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/textures/cardback/Back_Epic+Crew.png',\n    restriction = {\n        Size={huge=true}\n    }\n}\n\n\n\nffgSpecial = {}\nffgSpecial[315]= 'Crew'--r2d2crew\nffgSpecial[324]= 'Astr'--r2d2astro\nffgSpecial[321]= 'Rebel Gunner'--hanReb\nffgSpecial[389]= 'Scum Gunner'--hanScu\nffgSpecial[474]= 'Resist. Crew'--Han Res\nffgSpecial[311]= 'Rebel Crew'--landoReb\nffgSpecial[385]= 'Scum Crew' --landoScu\nffgSpecial[306]= 'Rebel Crew' --chewReb\nffgSpecial[382]= 'Scum Crew' --chewScu\nffgSpecial[473]= 'Resist. Crew' --chewRes\nffgSpecial[472]= 'Resist. Crew'--3po Res\nffgSpecial[304]= 'Rebel Crew' --3po Reb\n\ndualUpgradeList = {}\ndualUpgradeList[538] = 556 -- Chancellor Palp / Darth Sidious\ndualUpgradeList[332] = 331 -- Pivot wing\ndualUpgradeList[334] = 333 -- Servomotor S-foils\ndualUpgradeList[384] = 383 -- L3-37\ndualUpgradeList[487] = 486 -- Integrated S-foils\ndualUpgradeList[535] = 555 -- Grappling Struts\ndualUpgradeList[595] = 594 -- Landing Struts\ndualUpgradeList[646] = 645 -- Stabilized S-Foils\ndualUpgradeList[652] = 653 -- Proud tradition\ndualUpgradeList[683] = 684 -- Commander Malarus\ndualUpgradeList[685] = 686 -- Agent terex\ndualUpgradeList[691] = 692 -- Repulsorlift Stabilizers\n\n\n\n-- on load initiate the process\nfunction onLoad()\n    initiate()\nend\n\n-- Initial function: Creates a start button for each mode: FFG Spawner (paste the link of the squad in the FFG web site and spawn), TTS Spawner (write or paste a snippet and spawn) and List Builder (offers options to build a squadron on the fly)\nfunction initiate()\n    self.clearButtons()\n    self.clearInputs()\n    self.createButton({click_function = 'ffgStart', function_owner = self, label = 'FFG Spawner', position = {-0.45,0.45,-0.1}, width = 1600, height = 380, font_size = 250, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'xwsStart', function_owner = self, label = 'XWS Spawner', position = {0.5,0.45,-0.1}, width = 1600, height = 380, font_size = 250, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'singleSpawner', function_owner = self, label = 'Single Spawner', position = {-0.45,0.45,0.2}, width = 1600, height = 380, font_size = 200, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'spawnerStart', function_owner = self, label = 'TTS Spawner', position = {0.5,0.45,0.2}, width = 1600, height = 380, font_size = 250, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'builderStart', function_owner = self, label = 'Builder', position = {0,0.45,0.5}, width = 1600, height = 380, font_size = 250, scale = {0.25,0.25,0.25}})\nend\n\n\n--Spawn from XWS JSON\nfunction xwsStart()\n    self.clearButtons()\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Paste XWS', position = {0,0.45,-0.3}, width = 1800, height = 520, font_size = 240,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'xwsClick', function_owner = self, label = 'Spawn Ships', position = {-0.3,0.45,0.6}, width = 1800, height = 520, font_size = 240,  scale = {0.15,0.15,0.15}})\n    self.createButton({click_function = 'xwsSave', function_owner = self, label = 'Spawn as Disk', position = {0.3,0.45,0.6}, width = 1800, height = 520, font_size = 240,  scale = {0.15,0.15,0.15}})\n    self.createInput({input_function = 'xwsAction', function_owner = self, position = {0,0.45,0.2}, width = 1000, height = 500, font_size = 50, scale = {0.5,0.5,0.5}})\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Back', position = {-0.5,0.45,0.8}, width = 1000, height = 300, font_size = 150,  scale = {0.21,0.21,0.21}})\nend\n\n--XWS spawner input field\nfunction xwsAction(obj, playerColor, value, editing)\n    if not editing then\n        lista = value\n    else\n        nl_index = string.find(value, '\\n')\n        if nl_index != nil then\n            lista = string.sub(value, 1, nl_index - 1)\n            xwsLoad(playerColor)\n        end\n    end\nend\n\n--XWS spawner button\nfunction xwsClick(obj, playerColor, alt_click)\n    savingList = false\n    xwsLoad(playerColor)\nend\n\n--XWS spawner disk button\nfunction xwsSave(obj, playerColor, alt_click)\n    savingList = true\n    xwsLoad(playerColor)\nend\n\n--Load list and ffg <-> xws map\nXWS_TO_FFG = nil\nfunction xwsLoad(playerColor)\n    if lista ~= nil then\n        local list = JSON.decode(lista)\n\n        -- Load ffg <-> xws map if it hasn't been loaded yet\n        if XWS_TO_FFG == nil then\n            WebRequest.get('https://raw.githubusercontent.com/guidokessels/xwing-data2/master/data/ffg-xws.json', function(request)\n                if request.is_error then\n                    print(\"Failed to load ffg-xws.json which is required to map XWS ids to FFG ids.\")\n                    print(\"Cannot spawn squad... Please try again later\");\n                elseif request.is_done then\n                    local ffgToXws = JSON.decode(request.text)\n                    XWS_TO_FFG = {}\n                    XWS_TO_FFG.pilots = table_invert(ffgToXws.pilots)\n                    XWS_TO_FFG.upgrades = table_invert(ffgToXws.upgrades)\n                    XWS_TO_FFG.factions = table_invert(ffgToXws.factions)\n                    xwsSpawn(list, XWS_TO_FFG, playerColor)\n                end\n            end)\n        else\n            xwsSpawn(list, XWS_TO_FFG, playerColor)\n        end\n    else\n        print('Please paste XWS')\n    end\nend\n\nfunction table_invert(t)\n    local s = {}\n    for k,v in pairs (t) do\n        s[v] = k\n    end\n    return s\nend\n\n--Takes the XWS JSON and the xws <-> FFG ID map and constructs a parts list to pass to idSpawner\nfunction xwsSpawn(list, XWS_TO_FFG, playerColor)\n    if list then\n        local parts = {}\n        parts.Pilots = {}\n        parts.Upgrades = {}\n        parts.spawnCard = self\n        parts.Faction = tonumber(XWS_TO_FFG.factions[list.faction])\n        parts.Obstacles = {}\n\n        for k,v in pairs (list.pilots) do\n            parts.Pilots[k] = tonumber(XWS_TO_FFG.pilots[v.id])\n            parts.Upgrades[k] = {}\n\n            if v.upgrades then\n                local upgradeCount = 1\n                for slot,upgrades in pairs (v.upgrades) do\n                    for i,upgrade in pairs (upgrades) do\n                        parts.Upgrades[k][upgradeCount] = tonumber(XWS_TO_FFG.upgrades[upgrade])\n                        upgradeCount = upgradeCount + 1\n                    end\n                end\n            end\n        end\n\n        if list.obstacles then\n            for i, obstacle in ipairs(list.obstacles) do\n                if obstacleNames[obstacle] then\n                    table.insert(parts.Obstacles, obstacleNames[obstacle])\n                else\n                    printToAll(\"Unable to find obstacle: \" .. obstacle .. \" please check correct spelling\", {1,0,0})\n                end\n            end\n        end\n\n        idSpawner(parts)\n\n        local player = Player[playerColor]\n        local message  = player.steam_name .. \" spawned a list\"\n\n        if list.name then\n            message = message .. \" \\\"\" .. list.name .. \"\\\"\"\n        end\n\n        if list.points then\n            message = message .. \". The list reports \" .. list.points .. \" points\"\n        end\n\n        print(message .. \".\");\n\n        FFGinitiate()\n    else\n        print('Please paste XWS')\n    end\nend\n\n\n--Spawn from FFG squad shareable link. User must paste his link on the input field, load the squad, then press the spawn squad button. Maybe streamline the process and do it with one button?\nfunction ffgStart()\n    self.clearButtons()\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Paste squad link', position = {0,0.45,-0.3}, width = 1800, height = 520, font_size = 240,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'ffgLoad', function_owner = self, label = 'Load Squad', position = {0,0.45,0.6}, width = 1800, height = 520, font_size = 240,  scale = {0.15,0.15,0.15}})\n    self.createInput({input_function = 'action2', function_owner = self, position = {0,0.45,0.2}, width = 1000, height = 500, font_size = 50, scale = {0.5,0.5,0.5}})\n    self.createButton({click_function = 'FFGinitiate', function_owner = self, label = 'Back', position = {-0.5,0.45,0.8}, width = 1000, height = 300, font_size = 150,  scale = {0.21,0.21,0.21}})\n    --self.createButton({click_function = 'printInput', function_owner = self, label = 'Print Input', position = {0,0.6,0.5}, width = 1000, height = 200, font_size = 150, tooltip = 'Print'})\n    --self.createButton({click_function = 'parseList', function_owner = self, label = 'Parse', position = {0,0,3.2}, width = 1000, height = 200, font_size = 150, tooltip = 'Parse'})\nend\n\nfunction DummyFFG()\nend\n\n--prepares the link and call the json extractor\nfunction FFGinitiate()\n    if lista ~= nil then\n        lista =  nil\n    end\n    if partList ~= nil then\n        partList = nil\n    end\n    initiate()\nend\n\n--takes a link and converts it for the API link\nfunction ffgLoad()\n    if lista ~= nil then\n        lista = string.gsub(lista, 'saved%-squads', 'api/squads')\n        lista = string.gsub(lista, 'squad%-builder/tool', 'api/squads')\n        lista = string.gsub(lista, 'squad%-preview', 'api/squads')\n        ffgLoad2(lista)\n    else\n        print ('Please paste a link')\n    end\nend\n\nfunction ffgClearName(string)  --Clars FFG name from all of their shenannigans\n    name = string.gsub(string, '•', '')\n    name = string.gsub(name, '’', '')\n    name = string.gsub(name, '”', '\"')\n    name = string.gsub(name, '��', '\"')\n    name = string.gsub(name, '<italic>', '') --So stupid....\n    name = string.gsub(name, '</italic>', '')\n    name = string.gsub(name, ' %(Open%)', '')\n    newName = string.gsub(name, ' %(Closed%)', '')\n    return newName\nend\n\n--parses and organize the extracted json table and calls the spawner (TO-DO)\nfunction ffgSpawn()\n    if JSONlist ~=nil then\n        partList = {}\n        partList.Pilots = {}\n        partList.Upgrades = {}\n        partList.nameCounts = {}\n        partList.spawnCard = self\n        partList.Faction = JSONlist.faction.id\n        for k,v in pairs (JSONlist.deck) do\n\n            --[[for key, value in pairs(v[\"pilot_card\"]) do\n                print(key .. \" \" .. tostring(value))\n            end]]\n\n            partList.Pilots[k] = v.pilot_card.id\n            --[[\n            print(\"Pilot Name: \"..v[\"pilot_card\"].name)\n            print(\"Pilot ID: \"..v.pilot_card.id)\n            print(\"Pilot Cost: \"..v.pilot_card.cost)\n            print(\"Ship Type: \"..v.pilot_card.ship_type)\n            print()--]]\n            partList.Upgrades[k] ={}\n            for key,value in pairs (v.slots) do\n                partList.Upgrades[k][key] = value.id\n                --[[for i, uval in pairs(value) do\n                    print(\"upgrade[\" .. tostring(i) .. \"]=\" .. tostring(uval))\n                end]]\n                --[[\n                print(\"Upgrade Name: \"..value.name)\n                print(\"Upgrade Id: \"..value.id)\n                print(\"Upgrade Cost: \"..value.cost)\n                print()\n                --]]\n\n            end\n        end\n        idSpawner(partList)\n        partList = nil\n        JSONlist = nil\n        lista = nil\n        FFGinitiate()\n    else\n        print('Please paste a link')\n    end\n\nend\n\n--Extracts the json table from FFG site, reporting success or failure\nfunction ffgLoad2(squadId, onLoaded)\n    squadJson = squadId\n    WebRequest.get(squadJson, function(request)\n        if request.is_error then\n            error(\"Failed to load squad JSON.\")\n        elseif request.is_done then\n            --list = JSON.decode(request.text)\n            JSONlist = JSON.decode(request.text)\n            print(\"You've loaded a squad: \"..JSONlist.name)\n            print()\n            ffgSpawn()\n        end\n    end)\nend\n\n--FFG spawner input field\nfunction action2(obj, playerColor, value, editing)\n    if not editing then\n        lista = value\n    else\n        nl_index = string.find(value, '\\n')\n        if nl_index != nil then\n            lista = string.sub(value, 1,nl_index-1)\n            ffgLoad()\n        end\n    end\nend\n\n--TTS spawner input field\nfunction action(obj, playerColor, value, editing)\n    if not editing then\n        lista = value\n    else\n        nl_index = string.find(value, '\\n')\n        if nl_index != nil then\n            lista = string.sub(value, 1,nl_index-1)\n            validCheck()\n        end\n    end\nend\n\n-- Single Spawner input field\nfunction action3(obj, playerColor, value, editing)\n    if not editing then\n        single = value\n    else\n        nl_index = string.find(value, '\\n')\n        if nl_index != nil then\n            single = string.sub(value, 1,nl_index-1)\n            singleSearch()\n        end\n    end\nend\n\n-- Single Spawner: Receives a string, then goes across all card names and spawns that card with its appropriate components.\nfunction singleSpawner()\n    self.clearInputs()\n    self.clearButtons()\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Type a card name', position = {0,0.45,-0.37}, width = 1800, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'singleSearch', function_owner = self, label = 'Search', position = {0.45,0.45,-0.17}, width = 1200, height = 320, font_size = 200,  scale = {0.15,0.15,0.15}})\n    self.createInput({input_function = 'action3', function_owner = self, position = {-0.3,0.45,-0.17}, width = 1800, height = 200, font_size = 160, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Back', position = {0.7,0.45,0.8}, width = 1000, height = 300, font_size = 150,  scale = {0.21,0.21,0.21}})\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Pilots', position = {-0.45,0.45,-0.025}, width = 1000, height = 280, font_size = 200,  scale = {0.20,0.20,0.20}})\n    self.createButton({click_function = 'DummyFFG', function_owner = self, label = 'Upgrades', position = {0.45,0.45,-0.025}, width = 1000, height = 280, font_size = 200,  scale = {0.20,0.20,0.20}})\nend\n\nfunction singleSearch()\n    savingList = false\n    self.clearButtons()\n    self.clearInputs()\n    singleSpawner()\n    butPilCount = 0\n    butPilData = {}\n    butUpCount = 0\n    butUpData = {}\n    if single ~= nil then\n        for k, v in pairs(masterPilotDB) do\n            if string.find(string.lower(v.name), string.lower(single), 1, true) then\n                if butPilCount < 7 then\n                    butPilCount = butPilCount + 1\n                    local title = ''\n                    if v.title ~= nil then\n                        title = ' - ' .. v.title\n                    end\n                    self.createButton({click_function = 'singlePil'..butPilCount, function_owner = self, label = v.name..title..' ('..masterShipDB[v.ship_type].name..')', position = {-0.45,0.45,0+butPilCount*0.09}, width = 2800, height = 230, font_size = 120,  scale = {0.15,0.15,0.15}})\n                    butPilData[butPilCount] = k\n                end\n            end\n        end\n        for k, v in pairs(masterUpgradesDB) do\n            if string.find(string.lower(v.name), string.lower(single), 1, true) then\n                if butUpCount < 7 then\n                    butUpCount = butUpCount+1\n                    local upName = v.name\n                    if ffgSpecial[k] ~= nil then\n                        upName = upName..' ('..ffgSpecial[k]..')'\n                    end\n                    butUpData[butUpCount] = k\n                    self.createButton({click_function = 'singleUp'..butUpCount, function_owner = self, label = upName, position = {0.45,0.45,0+butUpCount*0.09}, width = 2800, height = 230, font_size = 120,  scale = {0.15,0.15,0.15}})\n                end\n            end\n        end\n    else\n        print('Please type a card name')\n    end\n    single = nil\nend\n\nfunction singlePil1()\n    local pilotPick = butPilData[1]\n    singlePilotSpawn(pilotPick)\nend\nfunction singlePil2()\n    local pilotPick = butPilData[2]\n    singlePilotSpawn(pilotPick)\nend\nfunction singlePil3()\n    local pilotPick = butPilData[3]\n    singlePilotSpawn(pilotPick)\nend\nfunction singlePil4()\n    local pilotPick = butPilData[4]\n    singlePilotSpawn(pilotPick)\nend\nfunction singlePil5()\n    local pilotPick = butPilData[5]\n    singlePilotSpawn(pilotPick)\nend\nfunction singlePil6()\n    local pilotPick = butPilData[6]\n    singlePilotSpawn(pilotPick)\nend\nfunction singlePil7()\n    local pilotPick = butPilData[7]\n    singlePilotSpawn(pilotPick)\nend\n\nfunction singleUp1()\n    local upPick = butUpData[1]\n    singleUpSpawn(upPick)\nend\nfunction singleUp2()\n    local upPick = butUpData[2]\n    singleUpSpawn(upPick)\nend\nfunction singleUp3()\n    local upPick = butUpData[3]\n    singleUpSpawn(upPick)\nend\nfunction singleUp4()\n    local upPick = butUpData[4]\n    singleUpSpawn(upPick)\nend\nfunction singleUp5()\n    local upPick = butUpData[5]\n    singleUpSpawn(upPick)\nend\nfunction singleUp6()\n    local upPick = butUpData[6]\n    singleUpSpawn(upPick)\nend\nfunction singleUp7()\n    local upPick = butUpData[7]\n    singleUpSpawn(upPick)\nend\n\n\nfunction singlePilotSpawn(Id)\n    partList={}\n    partList.spawnCard = self\n    partList.Pilots = {}\n    partList.Pilots[1] = Id\n    partList.Upgrades = {}\n    partList.Upgrades[1] = {}\n    partList.Faction = masterPilotDB[Id].Faction\n\n    idSpawner(partList)\n    singleSpawner()\nend\n\nfunction singleUpSpawn(upId)\n    partList={}\n    partList.spawnCard = self\n    partList.Pilots = {}\n    partList.Pilots[1] = 0\n    partList.Upgrades = {}\n    partList.Upgrades[1] = {}\n    partList.Upgrades[1][1] = upId\n    partList.Faction = ffgFaction[0]\n    idSpawner(partList)\n    singleSpawner()\nend\n\n--[[\n    id table should look like this:\n    idTable.Pilots = {[1]=id1, [2]=id2}\n    idTable.Upgrades = {[1] = {[1]=upId1, [2]=upId2},\n                        [2]={[1]=upId3, [2]=upId3}}\n    idTable.Faction = masterPilotDB[id1].Faction\n]]\n\ndialSkin={\n  [1]='http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/dial/skin/1/Rebel.png',\n  [2]='http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/dial/skin/1/Empire.png',\n  [3]='http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/dial/skin/1/Scum.png',\n  [4]='http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/dial/skin/1/Resistance.png',\n  [5]='http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/dial/skin/1/FO.png',\n  [6]='http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/dial/skin/1/Republic.png',\n  [7]='http://raw.githubusercontent.com/eirikmun/TTS_X-Wing2.0/master/assets/dial/skin/1/CIS.png',}\n\nfunction calculateShipIndicators(idTable)\n  shipTable = {}\n  for k,v in pairs (idTable.Pilots) do\n      local ship = masterPilotDB[v].ship_type\n      if shipTable[ship] == nil then\n        shipTable[ship] = {k}\n      else\n        table.insert(shipTable[ship], k)\n      end\n    end\n    pilotIndicators = {}\n    local i = 1\n    for ship, pilots in pairs(shipTable) do\n      if #pilots > 1 then\n        for k, pilot in pairs(pilots) do\n          pilotIndicators[pilot] = i\n          i = i+1\n        end\n      else\n        pilotIndicators[pilots[1]] = 0\n      end\n    end\n    return pilotIndicators\nend\n\nfunction idSpawner(idTable)\n    spawnedPilotList = {}\n    fList={}\n    fList.SqdExecOptions = {}\n    fList.Pilots = {}\n    fList.Upgrades = {}\n    fList.Remotes = {}\n    fList.Obstacles = idTable.Obstacles\n    fList.Configuration = {}\n    if idTable.Faction == nil then\n        fList.Faction = masterPilotDB[idTable.Pilots[1]].Faction\n    else\n        fList.Faction = idTable.Faction\n    end\n    fList.factionDial=dialSkin[fList.Faction]\n    fList.sqdAction = {}\n    pilotIndicators = calculateShipIndicators(idTable)\n    for k,v in pairs (idTable.Pilots) do\n        local pilotName = masterPilotDB[v].name\n        spawnedPilotList[pilotName] = spawnedPilotList[pilotName] or 0\n        spawnedPilotList[pilotName] = spawnedPilotList[pilotName] + 1\n        if spawnedPilotList[pilotName] > 1 then\n            pilotName = pilotName .. ' ' .. tostring(spawnedPilotList[pilotName])\n        end\n        fList.Pilots[k] ={}\n        fList.Pilots[k].id = v\n        fList.Pilots[k].name = pilotName\n        local cost = masterPilotDB[v].cost\n        fList.Pilots[k].cost = cost\n        fList.Configuration[pilotName] = {tint=tintColors[pilotIndicators[k]]}\n        --fList.Pilots[k].tint = tintColors[pilotIndicators[k]]\n        fList.Pilots[k].card = masterPilotDB[v].card\n        fList.Pilots[k].cardB = cardBackDB[ffgFaction[fList.Faction]]\n        local Ship = masterPilotDB[v].ship_type\n        fList.Pilots[k].Ship = Ship\n        fList.Pilots[k].Size = masterShipDB[Ship].size\n        fList.Pilots[k].Shield = masterShipDB[Ship].Shield\n        fList.Pilots[k].Energy = masterShipDB[Ship].Energy\n        fList.Pilots[k].Hull = masterShipDB[Ship].Hull\n        fList.Pilots[k].list = pilotName..' - '..masterShipDB[Ship].name ..' (' .. cost .. ')\\n'\n        fList.Pilots[k].mesh = masterShipDB[Ship].mesh\n        fList.Pilots[k].texture = masterPilotDB[v].texture\n        fList.Pilots[k].config = masterShipDB[Ship].config\n        fList.Pilots[k].bombD = 's1'\n        fList.Pilots[k].Docking = masterShipDB[Ship].Docking\n        fList.Pilots[k].Data = {}\n        fList.Pilots[k].Data.shipId = Ship\n        fList.Pilots[k].Data.initiative = masterPilotDB[v].init\n        fList.Pilots[k].Data.moveSet = masterShipDB[Ship].moveSet\n        fList.Pilots[k].Data.arcs = masterShipDB[Ship].arcs\n        fList.Pilots[k].Data.actSet = masterPilotDB[v].actSet\n        fList.Pilots[k].Data.executeOptions = masterPilotDB[v].executeOptions or {}\n        if masterPilotDB[v].sqdExecuteOptions ~= nil then\n            table.insert(fList.SqdExecOptions, masterPilotDB[v].sqdExecuteOptionss )\n        end\n\n        fList.Pilots[k].Data.Faction = fList.Faction\n        fList.Pilots[k].Data.Size = fList.Pilots[k].Size\n        if v == 150 then  -- Emon Azzameen special drops\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':s3:tr3:te3'\n        elseif v == 205 then  -- Sol Sixxa special drops\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':te1:be1:br1:tr1'\n        elseif Ship == 19 then -- TIE Bomber special drops\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':be1:br1'\n        elseif v == 161 then -- Constable Zuvio\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':s1r'\n        elseif v == 565 then -- Bombardment Drone\n            fList.Pilots[k].bombD = fList.Pilots[k].bombD .. ':s1r'\n        end\n\n        if masterShipDB[Ship].sTurret ~= nil then\n            fList.Pilots[k].Turret = 1\n        elseif masterShipDB[Ship].dTurret ~= nil then\n            fList.Pilots[k].Turret = 2\n        end\n        id = v\n        if masterPilotDB[id].Condition ~= nil then\n            fList.Pilots[k].Condition = masterPilotDB[id].Condition\n        end\n        for K,V in pairs(masterPilotDB[id].addSqdAction or {}) do\n            table.insert(fList.sqdAction,V)\n        end\n\n        fList.Pilots[k].Charge = (masterShipDB[Ship].Charge or 0) + (masterPilotDB[id].Charge or 0)\n        fList.Pilots[k].Force = masterPilotDB[id].Force or 0\n        fList.Upgrades[k] = {}\n        local skilled_bombardier = false\n        for key,value in pairs (idTable.Upgrades[k]) do\n            value = dualUpgradeList[value] or value\n            local name = masterUpgradesDB[value].name\n            local upSlot = masterUpgradesDB[value].slot\n            fList.Upgrades[k][key] = {}\n            fList.Upgrades[k][key].name = name\n            local cost = masterUpgradesDB[value].cost\n            if cost == 'a' then\n                local agi = masterShipDB[Ship].agi\n                cost = varCostA[value][agi]\n            elseif cost == 'i' then\n                local init = masterPilotDB[v].init\n                cost = varCostI[value][init]\n            elseif cost == 's' then\n                local shipSize = masterShipDB[Ship].size\n                cost = varCostS[value][shipSize]\n            end\n            fList.Pilots[k].list = fList.Pilots[k].list .. '   '..name..' ('..cost..')\\n'\n            fList.Pilots[k].cost = fList.Pilots[k].cost + cost\n            fList.Upgrades[k][key].card = masterUpgradesDB[value].card\n            for K,V in pairs(masterUpgradesDB[value].addAction or {}) do --Upgrades that adds an action to a ship\n                table.insert(fList.Pilots[k].Data.actSet,V)\n            end\n            for K,V in pairs(masterUpgradesDB[value].addSqdAction or {}) do --upgrades that adds an action to the whole squad, sets up a list of actions that will be added later\n                table.insert(fList.sqdAction,V)\n            end\n            if masterUpgradesDB[value].cardB ==  nil then\n                fList.Upgrades[k][key].cardB = cardBackDB[tostring(upSlot)]\n            else\n                fList.Upgrades[k][key].cardB = masterUpgradesDB[value].cardB\n            end\n            if masterUpgradesDB[value].Charge ~= nil then\n                fList.Upgrades[k][key].Charge = masterUpgradesDB[value].Charge\n            else\n                fList.Upgrades[k][key].Charge = 0\n            end\n            if fList.Pilots[k].Turret == nil then\n                if masterUpgradesDB[value].sTurret  then\n                    fList.Pilots[k].Turret = 1\n                    if fList.Pilots[k].Data.arcs == nil then\n                        fList.Pilots[k].Data.arcs = {'singleturret'}\n                    else\n                        table.insert(fList.Pilots[k].Data.arcs, 'singleturret')\n                    end\n                end\n            end\n            if masterUpgradesDB[value].Force ~= nil then\n                fList.Pilots[k].Force = fList.Pilots[k].Force + masterUpgradesDB[value].Force\n            end\n            if masterUpgradesDB[value].shd ~= nil then\n                fList.Pilots[k].Shield = fList.Pilots[k].Shield + masterUpgradesDB[value].shd\n            end\n            if masterUpgradesDB[value].Energy ~= nil then\n                fList.Pilots[k].Energy = fList.Pilots[k].Energy + masterUpgradesDB[value].Energy\n            end\n            if masterUpgradesDB[value].Hull ~= nil then\n                fList.Pilots[k].Hull = fList.Pilots[k].Hull + masterUpgradesDB[value].Hull\n            end\n\n            fList.Upgrades[k][key].Condition = masterUpgradesDB[value].Condition or nil\n            for i, r in pairs(masterUpgradesDB[value].remotes or {}) do\n                table.insert(fList.Remotes, r)\n            end\n\n            if masterUpgradesDB[value].Bomb then\n                fList.Pilots[k].Bomb= true\n            elseif upSlot == 18 then\n                fList.Upgrades[k][key].Config = true\n            end\n            if masterUpgradesDB[value].Docking ~= nil then\n                fList.Pilots[k].Docking = masterUpgradesDB[value].Docking\n            end\n            if masterUpgradesDB[value].wingleader ~= nil then\n                fList.Pilots[k].wingleader = masterUpgradesDB[value].wingleader\n            end\n            --print(\"Test value:\".. tostring(value) .. \" name:\" .. masterUpgradesDB[value].name .. tostring(masterUpgradesDB[value].executeOptions))\n            if masterUpgradesDB[value].executeOptions ~= nil then\n                --print(\"Got upgrade execute options\")\n                local newexecuteoptions = masterUpgradesDB[value].executeOptions(idTable, idTable.Pilots[k])\n                --print(\"Test \" .. masterUpgradesDB[value].name)\n                combineExecuteOptions(fList.Pilots[k].Data.executeOptions, newexecuteoptions)\n            end\n\n            if masterUpgradesDB[value].sqdExecuteOptions ~= nil then\n                table.insert(fList.SqdExecOptions,masterUpgradesDB[value].sqdExecuteOptions)\n            end\n\n            if value == 279 then  -- Skilled Bombardier special drops\n                skilled_bombardier = true\n                --fList.Pilots[k].bombD = fList.Pilots[k].bombD ..  ':s2:tr2:te2:be2:br2'\n            elseif value == 255 then  -- Trajectory Simulator special drop\n                fList.Pilots[k].bombD = fList.Pilots[k].bombD ..  ':s5r'\n            end\n        end\n        if skilled_bombardier then\n            local bombD = fList.Pilots[k].bombD\n            parts = mysplit(bombD,':')\n            for k, part in pairs(parts) do\n                pre, speedstr, post = string.match(part, \"(%a+)(%d)(%a*)\")\n                speed = tonumber(speedstr)\n                if speed > 1 then\n                    bombD = bombD .. \":\" .. pre .. tostring(speed - 1) ..  post\n                end\n                if (pre == 's' and (speed < 5)) or (speed < 3) then\n                    bombD = bombD .. \":\" .. pre .. tostring(speed + 1) ..  post\n                end\n            end\n            fList.Pilots[k].bombD = bombD\n        end\n        local threshold = 0\n        fList.Pilots[k].list = fList.Pilots[k].list .. '\\nShip Cost = '..cost..'      Half Ship = '..math.ceil(cost/2)..'      Threshold = '.. math.floor( fList.Pilots[k].Shield + fList.Pilots[k].Hull ) ..'\\n'\n    end\n    for k,v in pairs(fList.sqdAction) do -- adds Squad actions coming from specific upgrades\n        for K,V in pairs(fList.Pilots) do\n            table.insert(V.Data.actSet,v)\n        end\n    end\n\n    for _, sqExOpt in pairs(fList.SqdExecOptions) do\n        for k, pilot in pairs(fList.Pilots) do\n            local newexecuteoptions = sqExOpt(fList, fList.Pilots[k])\n            combineExecuteOptions(pilot.Data.executeOptions, newexecuteoptions)\n        end\n    end\n    fList.listCost = 0\n    for k, v in pairs (fList.Pilots) do\n        --print(v.list)\n        fList.listCost = fList.listCost + v.cost\n    end\n    --print('Total List Cost = '.. fList.listCost)\n    if savingList == true then\n        saveToDisk(fList)\n    else\n        fList.spawnCard = self\n        spawnNow(fList)\n    end\nend\n\ncardLua = [[\nself.createButton({\n  click_function = 'spawnerCaller',\n  function_owner = self,\n  label          = 'Spawn',\n  position       = {0,0.02,0.35},\n  rotation       = {0,0,0},\n  scale          = {0.1,0.1,0.1},\n  width          = 2000,\n  height         = 500,\n  font_size      = 400,\n  color          = 'Black',\n  font_color     = 'White',\n  tooltip        = 'Click here to spawn the saved list',\n})\n\ncustomizing = true\n\nfunction spawnerCaller()\n    spawnTable = self.getTable(\"List\")\n    spawnTable.spawnCard = self\n    Global.call('newSpawner', spawnTable)\n    spawnTable = nil\nend\n\nfunction onSave()\n    if state == nil then\n        local state = {cardData=self.getTable(\"List\")}\n        return JSON.encode(state)\n    end\nend\n\nfunction onObjectDrop(player_color, dropped_object)\n    if customizing then\n        local relpos = self.positionToLocal(dropped_object.getPosition())\n        local distance = math.sqrt(relpos[1]*relpos[1] + relpos[2]*relpos[2] + relpos[3]*relpos[3])\n        if distance < 1 then\n            if (dropped_object.type== 'Figurine') and (dropped_object.getVar(\"__XW_Ship\") == true) then\n                printToAll(self.getName() .. \" gets the configuration of \" .. dropped_object.getName(), color(1.0,0.5,0.0))\n                local customobj = dropped_object.getCustomObject()\n                config = List.Configuration[dropped_object.getName()] or {}\n                config.model = customobj.mesh\n                config.texture = customobj.diffuse\n                config.modeltint = dropped_object.getColorTint()\n                for i, attachment in pairs(dropped_object.getAttachments()) do\n                    id = dropped_object.removeAttachment(attachment.index)\n                    config.tint = id.getColorTint(tint)\n                    dropped_object.addAttachment(id)\n                end\n                List.Configuration[dropped_object.getName()] = config\n            end\n        end\n    end\nend\n\n-- Restore self state\nfunction onLoad(savedData)\n    --print(\"OnLoad: \".. self.getName() .. \" \" .. savedData)\n    if savedData ~= \"\" then\n        self.setTable(\"List\", JSON.decode(savedData).cardData)\n    end\nend\n]]\n\nfunction saveToDisk(finalList)\n    print('Saving to Disk')\n    local accBag = getObjectFromGUID('53ad3d')-- Accessories bag\n    local accList = accBag.getObjects()\n    for k, v in pairs(accBag.getObjects()) do\n        if v.name == 'Data Card' then\n            dataDisk = accBag.takeObject({position = {-66,1,-15}, rotation = {0,90,0},scale={3.75,3.75,3.75}, guid = v.guid})\n            dataDiskClone = dataDisk.clone()\n            accBag.putObject(dataDiskClone)\n            dataDisk.setTable(\"List\",finalList)\n            dataDisk.setName(\"New Disk\")\n            dataDisk.setLuaScript(cardLua)\n            print(\"Done\")\n        end\n    end\n    initiate()\nend\n\n\n-- Builder first step: sets up basic list table and select faction.\nfunction builderStart()\n    self.clearButtons()\n    partList = {}\n    partList.Pilots = {}\n    partList.Upgrades = {}\n    partList.nameCounts = {}\n    partList.spawnCard = self\n    availablePilots = {}\n    availableUps = {}\n    shipSlots = {}\n    currentIndex = nil\n    totalCost = nil\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'Choose Faction', position = {0,0.45,-0.3}, width = 1800, height = 520, font_size = 240,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'buiReb', function_owner = self, label = 'Rebel', position = {-0.6,0.45,0.1}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'buiImp', function_owner = self, label = 'Imperial', position = {-0.6,0.45,0.4}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'buiScu', function_owner = self, label = 'Scum', position = {-0.6,0.45,0.7}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'buiRes', function_owner = self, label = 'Resistance', position = {0,0.45,0.1}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'buiFor', function_owner = self, label = 'First Order', position = {0,0.45,0.4}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Back', position = {0.55,0.45,0.75}, width = 900, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'buiRep', function_owner = self, label = 'Republic', position = {0.6,0.45,0.1}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'buiCis', function_owner = self, label = 'CIS', position = {0.6,0.45,0.4}, width = 1000, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\nend\n\n\n-- One function for each faction, forwards to main menu.\nfunction buiReb()\n    partList.Faction = 1\n    mainMenu()\nend\n\nfunction buiImp()\n    partList.Faction = 2\n    mainMenu()\nend\n\nfunction buiScu()\n    partList.Faction = 3\n    mainMenu()\nend\n\nfunction buiRes()\n    partList.Faction = 4\n    mainMenu()\nend\n\nfunction buiFor()\n    partList.Faction = 5\n    mainMenu()\nend\n\nfunction buiRep()\n    partList.Faction = 6\n    mainMenu()\nend\n\nfunction buiCis()\n    partList.Faction = 7\n    mainMenu()\nend\n\nfunction initialSetUp()\n\nend\n\n-- Main Menu: shows wich ship is on the list, indicates how many points is dedicated to each ship.\n-- Offers 3 options: reset (Back to initiate), add ship and spawn.\nfunction mainMenu()\n    totalCost = {}\n    self.clearButtons()\n    self.createButton({click_function = 'addShip', function_owner = self, label = 'Add Ship', position = {-0.45,0.45,-0.3}, width = 1300, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'builderSpawn', function_owner = self, label = 'Spawn List', position = {0.45,0.45,-0.3}, width = 1300, height = 380, font_size = 200,  scale = {0.25,0.25,0.25}})\n    for i, pilot in pairs(partList.Pilots) do\n        local cost = pilot[3]\n        for k,v in pairs (partList.Upgrades[i]) do\n            if v[3]~= nil then\n                cost = cost+v[3]\n            end\n        end\n        self.createButton({click_function = 'selectShip'..i, function_owner = self, label = pilot[2]..' ('..cost..')', position = {-0.4,0.45,-0.2+i*0.15}, width = 1500, height = 300, font_size = 130,  scale = {0.25,0.25,0.25}})\n        totalCost[i] = cost\n    end\n    listCost = 0\n    for i, cost in pairs(totalCost) do\n        listCost = listCost + cost\n    end\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'List cost: '..listCost, position = {0.4,0.45,0.8}, width = 1300, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'RESET', position = {-0.5,0.45,0.8}, width = 1300, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\nend\n\n-- Adding a ship will open a list of all available ship types.\nfunction addShip()\n    self.clearButtons()\n    if partList.Pilots == nil then\n        shipIndex = 1\n    else\n        shipIndex=1\n        for i, pilot in pairs(partList.Pilots) do\n            shipIndex = shipIndex + 1\n        end\n    end\n    local modelIndex = 1\n    local aux = 1\n    local auxB = 0\n    availableShips = {}\n    for i, shipModel in pairs(masterShipDB) do\n        for k, fac in pairs (shipModel.Fac) do\n            if  k == partList.Faction then\n                Font=100\n                availableShips[modelIndex] = i\n                if aux > 7 then\n                    aux=1\n                    auxB=auxB+1\n                end\n                if string.len(i)>18 then\n                    Font = 80\n                end\n                self.createButton({click_function = 'selectModel'..modelIndex, function_owner = self, label = shipModel.name, position = {-0.52+auxB*0.6,0.45,aux*0.16-0.35}, width = 1000, height = 220, font_size = Font,  scale = {0.25,0.25,0.25}})\n                aux = aux+1\n                modelIndex=modelIndex+1\n            end\n        end\n    end\nend\n\n\nfunction selectModelGeneric(arg)\n    chosenModel = availableShips[arg]\n    availableShips = {}\n    self.clearButtons()\n    availablePilots = {}\n\n    local aux = 0\n    local auxB = 0\n    local index = 1\n    for k, v in pairs(masterPilotDB) do\n        if v.ship_type == chosenModel then\n            local validOption = true\n            if v.limited ~= nil then\n                if v.limited <= (partList.nameCounts[v.name] or 0) then\n                    validOption=false\n                end\n            end\n            if validOption and v.Faction==partList.Faction then\n                cost = v.cost\n                availablePilots[index] = {}\n                availablePilots[index][1] = k\n                availablePilots[index][2] = v.name\n                availablePilots[index][3] = cost\n                local title = ''\n                if v.title ~= nil then\n                    title = '\\n' .. v.title\n                end\n                self.createButton({click_function = 'setPilot'..index, function_owner = self, label = v.name..title..' ('..cost..')',  position = {-0.615+auxB*0.65,0.45,aux*0.16-0.35}, width = 1200, height = 220, font_size = 90,  scale = {0.25,0.25,0.25}})\n\n\n                aux= aux+1\n                if aux>6 then\n                    aux = 0\n                    auxB = auxB+1\n                end\n                index = index+1\n            end\n        end\n    end\n    chosenModel = nil\nend\n\n--selecting a ship type will open a list of every pilot for that ship. MUST REWRITE! 18 ship types, with more to come. Each option should set a variable and call an unified function to spawn the pilot buttons!\nfunction selectModel1()\n    selectModelGeneric(1)\nend\n\nfunction selectModel2()\n    selectModelGeneric(2)\nend\n\nfunction selectModel3()\n    selectModelGeneric(3)\nend\n\nfunction selectModel4()\n    selectModelGeneric(4)\nend\n\nfunction selectModel5()\n    selectModelGeneric(5)\nend\n\nfunction selectModel6()\n    selectModelGeneric(6)\nend\n\nfunction selectModel7()\n    selectModelGeneric(7)\nend\n\nfunction selectModel8()\n    selectModelGeneric(8)\nend\n\nfunction selectModel9()\n    selectModelGeneric(9)\nend\n\nfunction selectModel10()\n    selectModelGeneric(10)\nend\n\nfunction selectModel11()\n    selectModelGeneric(11)\nend\n\nfunction selectModel12()\n    selectModelGeneric(12)\nend\n\nfunction selectModel13()\n    selectModelGeneric(13)\nend\n\nfunction selectModel14()\n    selectModelGeneric(14)\nend\n\nfunction selectModel15()\n    selectModelGeneric(15)\nend\n\nfunction selectModel16()\n    selectModelGeneric(16)\nend\n\nfunction selectModel17()\n    selectModelGeneric(17)\nend\n\nfunction selectModel18()\n    selectModelGeneric(18)\nend\n\nfunction selectModel19()\n    selectModelGeneric(19)\nend\n\nfunction selectModel20()\n    selectModelGeneric(20)\nend\n\n\n-- Selecting a pilot will add ship model and pilot to part list, update max index and go back to main menu. MUST REWRITE! Each pilot option should set variables and call an unified function to set up the part list!\nfunction setPilotGeneric(arg)\n    self.clearButtons()\n    local name = masterPilotDB[availablePilots[arg][1]].name\n    partList.nameCounts[name] = (partList.nameCounts[name] or 0) + 1\n    partList.Pilots[shipIndex] = {}\n    partList.Pilots[shipIndex][1] = availablePilots[arg][1]\n    partList.Pilots[shipIndex][2] = availablePilots[arg][2]\n    partList.Pilots[shipIndex][3] = availablePilots[arg][3]\n    partList.Upgrades[shipIndex] = {}\n    for ind, slot in pairs(masterPilotDB[availablePilots[arg][1]].slot) do\n        partList.Upgrades[shipIndex][ind] = {}\n        partList.Upgrades[shipIndex][ind][4]= slot        --id of the slot\n        local slotNam = slotName[slot]\n        partList.Upgrades[shipIndex][ind][5]= slotNam     --String of the Slot Name\n        partList.Upgrades[shipIndex][ind][6]=false        --slot has been removed? T for yes, F for no\n    end\n    availablePilots = nil\n    mainMenu()\nend\n\n\nfunction setPilot1()\n    setPilotGeneric(1)\nend\n\nfunction setPilot2()\n    setPilotGeneric(2)\nend\n\nfunction setPilot3()\n    setPilotGeneric(3)\nend\n\nfunction setPilot4()\n    setPilotGeneric(4)\nend\n\nfunction setPilot5()\n    setPilotGeneric(5)\nend\n\nfunction setPilot6()\n    setPilotGeneric(6)\nend\n\nfunction setPilot7()\n    setPilotGeneric(7)\nend\n\nfunction setPilot8()\n    setPilotGeneric(8)\nend\n\nfunction setPilot9()\n    setPilotGeneric(9)\nend\n\nfunction setPilot10()\n    setPilotGeneric(10)\nend\n\nfunction setPilot11()\n    setPilotGeneric(11)\nend\n\nfunction setPilot12()\n    setPilotGeneric(12)\nend\n\nfunction setPilot13()\n    setPilotGeneric(13)\nend\n\nfunction setPilot14()\n    setPilotGeneric(14)\nend\n\nfunction setPilot15()\n    setPilotGeneric(15)\nend\n\nfunction setPilot16()\n    setPilotGeneric(16)\nend\n\nfunction builderSpawn()\n    finalList = {}\n    finalList.Pilots = {}\n    for i, pilot in pairs(partList.Pilots) do\n        finalList.Pilots[i] = pilot[1]\n    end\n    finalList.Faction = partList.Faction\n    finalList.spawnCard = partList.spawnCard\n    finalList.Upgrades = {}\n    for i, upList in pairs(partList.Upgrades) do\n        finalList.Upgrades[i] = {}\n        for k, Up in pairs(upList) do\n            table.insert(finalList.Upgrades[i], Up[1])\n        end\n    end\n    idSpawner(finalList)\nend\n\n-- Selecting a ship that is on the main menu will show wich slots are empty and wich ones are taken, indicating how many points are being used on this ship and how many points the list as a whole is using.\n-- To Do: Set up auxiliary table with slots and upgrades so the correct buttons are spawned. Stablishes variables for special cases (Froce Powers, dual slots). Show point costs of each ship and full squad.\nfunction selectShipGeneric(arg)\n    self.clearButtons()\n    local aux = 1\n    local auxB = 0\n    shipIndex = arg -- constant for the select ship number\n    local index = 1\n    availableSlots = {}\n    addedSlot={}\n    lastSlot=0\n    slotNum=0\n    totalCost[shipIndex] = 0\n    pilotId= partList.Pilots[shipIndex][1]\n    pilotName= partList.Pilots[shipIndex][2]\n    shipCost= partList.Pilots[shipIndex][3]\n    shipSlots[shipIndex]={}\n\n\n    --Adds all possible slots for given ship\n    for k, v in pairs(partList.Upgrades[shipIndex]) do\n        partList.Upgrades[shipIndex][k][6] = true\n    end\n\n\n    for k, v in pairs(masterPilotDB[pilotId].slot) do\n        slotNum=slotNum+1\n        partList.Upgrades[shipIndex][k][6]=false\n        addedSlot[slotNum]=true\n    end\n\n    --Checks and adds slot for every upgrade that adds a slot\n    for k, Upg in pairs(partList.Upgrades[shipIndex]) do\n        if Upg[1] ~=nil then\n            if masterUpgradesDB[Upg[1]].addSlot ~= nil then\n                for i, addSlot in pairs(masterUpgradesDB[Upg[1]].addSlot) do\n                    slotNum=slotNum+1\n                    if partList.Upgrades[shipIndex][slotNum] == nil then\n                        partList.Upgrades[shipIndex][slotNum] = {}\n                        partList.Upgrades[shipIndex][slotNum][4] = addSlot\n                        partList.Upgrades[shipIndex][slotNum][5] = slotName[addSlot]\n                        partList.Upgrades[shipIndex][slotNum][6] = false\n                        addedSlot[slotNum]=true\n                    else\n                        partList.Upgrades[shipIndex][slotNum][6] = false\n                    end\n                end\n            end\n        end\n    end\n\n    for k, Upg in pairs(partList.Upgrades[shipIndex]) do\n        if Upg[1] ~=nil then\n            if masterUpgradesDB[Upg[1]].remSlot ~= nil then\n                for u, s in pairs (masterUpgradesDB[Upg[1]].remSlot) do\n                    local rem = true\n                    for i, v in pairs (partList.Upgrades[shipIndex]) do\n                        if v[4] == s and rem ==true then\n                            v[6]=true\n                            rem=false\n                        end\n                    end\n                end\n            end\n        end\n    end\n\n    for k, v in pairs(partList.Upgrades[shipIndex]) do\n        if v[6]==true then\n            v[1]=nil\n            v[2]=nil\n            v[3]=nil\n        end\n    end\n\n    for i, slots in pairs(partList.Upgrades[shipIndex]) do\n        if aux > 5 then\n            aux = 1\n            auxB = auxB+1\n        end\n        if partList.Upgrades[shipIndex][i][6] == true then\n\n        elseif partList.Upgrades[shipIndex][i][1] == nil then\n            self.createButton({click_function = 'selectSlot'..i, function_owner = self, label = partList.Upgrades[shipIndex][i][5], position = {-0.4+auxB*0.8,0.45,-0.22+aux*0.15}, width = 1500, height = 300, font_size = 120,  scale = {0.25,0.25,0.25}})\n            aux=aux+1\n        else\n            self.createButton({click_function = 'selectSlot'..i, function_owner = self, label = partList.Upgrades[shipIndex][i][2]..' ('..partList.Upgrades[shipIndex][i][3]..')', position = {-0.4+auxB*0.8,0.45,-0.22+aux*0.15}, width = 1500, height = 300, font_size = 120,  scale = {0.25,0.25,0.25}})\n            aux=aux+1\n        end\n        local index=index+1\n    end\n\n    for i, pilot in pairs(partList.Pilots) do\n        local cost = pilot[3]\n        for k,v in pairs (partList.Upgrades[i]) do\n            if v[3]~= nil then\n                cost = cost+v[3]\n            end\n        end\n        totalCost[i] = cost\n    end\n    listCost = 0\n    for i, cost in pairs(totalCost) do\n        listCost = listCost + cost\n    end\n\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = partList.Pilots[shipIndex][2]..' ('..partList.Pilots[shipIndex][3]..')', position = {-0.3,0.45,-0.35}, width = 2000, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'mainMenu', function_owner = self, label = 'Back', position = { 0.5,0.45,-0.35}, width = 1000, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'removeShip', function_owner = self, label = 'Remove Ship', position = { 0.6,0.45,0.75}, width = 1000, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'Ship cost: '..totalCost[shipIndex], position = {-0.6,0.45,0.8}, width = 1000, height = 220, font_size = 150,  scale = {0.25,0.25,0.25}})\n\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'List cost: '..listCost, position = {0,0.45,0.8}, width = 1000, height = 220, font_size = 150,  scale = {0.25,0.25,0.25}})\nend\n\nfunction removeShip()\n    partList.Pilots[shipIndex] = nil\n    partList.Upgrades[shipIndex] = nil\n    totalCost[shipIndex] = nil\n    for i, index in pairs(partList.Pilots) do\n        if i > shipIndex then\n            partList.Pilots[i-1] = partList.Pilots[i]\n            partList.Pilots[i] = nil\n            partList.Upgrades[i-1] = partList.Upgrades[i]\n            partList.Upgrades[i] = nil\n            totalCost[i-1] = totalCost[i]\n            totalCost[i] = nil\n        end\n    end\n    mainMenu()\nend\n\nfunction selectShip1()\n    selectShipGeneric(1)\nend\n\nfunction selectShip2()\n    selectShipGeneric(2)\nend\n\nfunction selectShip3()\n    selectShipGeneric(3)\nend\n\nfunction selectShip4()\n    selectShipGeneric(4)\nend\n\nfunction selectShip5()\n    selectShipGeneric(5)\nend\n\nfunction selectShip6()\n    selectShipGeneric(6)\nend\n\nfunction selectShip7()\n    selectShipGeneric(7)\nend\n\nfunction selectShip8()\n    selectShipGeneric(8)\nend\n\nfunction selectSlotGeneric(slotIndex)\n    self.clearButtons()\n    slotId = partList.Upgrades[shipIndex][slotIndex][4]             -- Value tied for this function!\n    currSlotInd = slotIndex\n    local index = 1\n    local aux = 1\n    local auxB = 0\n    acailableUps = {}\n    self.createButton({click_function = 'selectUpNone', label = 'None (0)', function_owner = self, position = {-0.45+auxB*0.6,0.45,-0.2}, width = 1500, height = 220, font_size = 120,  scale = {0.25,0.25,0.25}})\n    for id, up in pairs(masterUpgradesDB) do\n        if up.slot == slotId then\n            local validUp=true\n            if up.restriction ~= nil then\n                if up.restriction.Faction ~= nil then\n                    if up.restriction.Faction[partList.Faction]~=true then\n                        validUp=false\n                    end\n                end\n                if up.restriction.Size ~= nil then\n                    if up.restriction.Size[masterShipDB[masterPilotDB[partList.Pilots[shipIndex][1]].ship_type].size]~=true then\n                        validUp=false\n                    end\n                end\n                if up.restriction.ship ~= nil then\n                    if up.restriction.ship[masterPilotDB[partList.Pilots[shipIndex][1]].ship_type] ~= true then\n                        validUp=false\n                    end\n                end\n            end\n            if up.limited ~= nil then\n                if up.limited <= (partList.nameCounts[up.name] or 0) then\n                    validUp=false\n                end\n            end\n            if validUp == true then\n                if up.cost =='a' then\n                    sAgi =   masterShipDB[masterPilotDB[ partList.Pilots[shipIndex][1] ].ship_type ].agi\n                    upCost = varCostA[id][sAgi]\n                elseif up.cost == 's' then\n                    sSize =   masterShipDB[masterPilotDB[ partList.Pilots[shipIndex][1] ].ship_type ].size\n                    upCost = varCostS[id][sSize]\n                elseif up.cost == 'i' then\n                    pInit = masterPilotDB[partList.Pilots[shipIndex][1]].init\n                    upCost = varCostI[id][pInit]\n                else\n                    upCost = up.cost\n                end\n                availableUps[index] = {[1]=id, [2]=up.name, [3]=upCost}\n                self.createButton({click_function = 'selectUp'..index, label = up.name..' ('..upCost..')', function_owner = self, position = {-0.53+auxB*0.58,0.45,aux*0.1-0.1}, width = 1100, height = 200, font_size = 100,  scale = {0.25,0.25,0.25}})\n                aux=aux+1\n                index = index+1\n                if aux > 8 then\n                    aux=1\n                    auxB=auxB+1\n                end\n                validUp= false\n            end\n        elseif slotId == 99 then\n            local hpCheck={[3]=true,[5]=true,[6]=true}\n            if hpCheck[up.slot] == true then\n                availableUps[index] = {[1]=id, [2]=up.name, [3]=up.cost}\n                self.createButton({click_function = 'selectUp'..index, label = up.name..' ('..up.cost..')', function_owner = self, position = {-0.53+auxB*0.58,0.45,aux*0.1-0.1}, width = 1100, height = 200, font_size = 100,  scale = {0.25,0.25,0.25}})\n                aux=aux+1\n                index = index+1\n                if aux > 8 then\n                    aux=1\n                    auxB=auxB+1\n                end\n            end\n        end\n\n    end\n\n    self.createButton({click_function = 'backFromSelectUp', function_owner = self, label = 'Back', position = { 0.5,0.45,-0.35}, width = 1000, height = 320, font_size = 150,  scale = {0.25,0.25,0.25}})\nend\n\n\nfunction backFromSelectUp()\n        if shipIndex == 1 then\n            selectShip1()\n        elseif shipIndex == 2 then\n            selectShip2()\n        elseif shipIndex == 3 then\n            selectShip3()\n        elseif shipIndex == 4 then\n            selectShip4()\n        elseif shipIndex == 5 then\n            selectShip5()\n        elseif shipIndex == 6 then\n            selectShip6()\n        elseif shipIndex == 7 then\n            selectShip7()\n        elseif shipIndex == 8 then\n            selectShip8()\n        end\n    end\n\nfunction selectSlot1()\n    selectSlotGeneric(1)\nend\n\nfunction selectSlot2()\n    selectSlotGeneric(2)\nend\n\nfunction selectSlot3()\n    selectSlotGeneric(3)\nend\n\nfunction selectSlot4()\n    selectSlotGeneric(4)\nend\n\nfunction selectSlot5()\n    selectSlotGeneric(5)\nend\n\nfunction selectSlot6()\n    selectSlotGeneric(6)\nend\n\nfunction selectSlot6()\n    selectSlotGeneric(6)\nend\n\nfunction selectSlot7()\n    selectSlotGeneric(7)\nend\n\nfunction selectSlot8()\n    selectSlotGeneric(8)\nend\n\nfunction selectSlot9()\n    selectSlotGeneric(9)\nend\n\nfunction selectSlot10()\n    selectSlotGeneric(10)\nend\n\nfunction selectSlot11()\n    selectSlotGeneric(11)\nend\n\nfunction selectSlot12()\n    selectSlotGeneric(12)\nend\n\nfunction selectSlot13()\n    selectSlotGeneric(13)\nend\n\nfunction selectSlot14()\n    selectSlotGeneric(14)\nend\n\nfunction selectSlot14()\n    selectSlotGeneric(14)\nend\n\nfunction selectSlot15()\n    selectSlotGeneric(15)\nend\n\nfunction selectSlot16()\n    selectSlotGeneric(16)\nend\n\nfunction selectSlot17()\n    selectSlotGeneric(17)\nend\n\nfunction selectSlot18()\n    selectSlotGeneric(18)\nend\n\nfunction selectSlot19()\n    selectSlotGeneric(19)\nend\n\nfunction selectSlot99()\n    selectSlotGeneric(99)\nend\n\n\nfunction selectUpNone()\n    partList.Upgrades[shipIndex][currSlotInd][1] = nil     --first '1' tied to selectUp1, second value indicate the names\n    partList.Upgrades[shipIndex][currSlotInd][2] = nil\n    partList.Upgrades[shipIndex][currSlotInd][3] = nil\n    if shipIndex == 1 then\n        selectShip1()\n    elseif shipIndex == 2 then\n        selectShip2()\n    elseif shipIndex == 3 then\n        selectShip3()\n    elseif shipIndex == 4 then\n        selectShip4()\n    elseif shipIndex == 5 then\n        selectShip5()\n    elseif shipIndex == 6 then\n        selectShip6()\n    elseif shipIndex == 7 then\n        selectShip7()\n    elseif shipIndex == 8 then\n        selectShip8()\n    end\nend\n\nfunction selectUpGeneric(arg)\n    partList.Upgrades[shipIndex][currSlotInd][1] = availableUps[arg][1]      --first '1' tied to selectUp1, second value indicate the Id\n    partList.Upgrades[shipIndex][currSlotInd][2] = availableUps[arg][2]      --first '1' tied to selectUp1, second value indicate the Name\n    partList.Upgrades[shipIndex][currSlotInd][3] = availableUps[arg][3]      --first '1' tied to selectUp1, second value indicate the cost\n    local name = availableUps[arg][2]\n    partList.nameCounts[name] = (partList.nameCounts[name] or 0) + 1\n    if shipIndex == 1 then\n        selectShip1()\n    elseif shipIndex == 2 then\n        selectShip2()\n    elseif shipIndex == 3 then\n        selectShip3()\n    elseif shipIndex == 4 then\n        selectShip4()\n    elseif shipIndex == 5 then\n        selectShip5()\n    elseif shipIndex == 6 then\n        selectShip6()\n    elseif shipIndex == 7 then\n        selectShip7()\n    elseif shipIndex == 8 then\n        selectShip8()\n    end\nend\n\nfunction selectUp1()\n    selectUpGeneric(1)\nend\n\nfunction selectUp2()\n    selectUpGeneric(2)\nend\n\nfunction selectUp3()\n    selectUpGeneric(3)\nend\n\nfunction selectUp4()\n    selectUpGeneric(4)\nend\n\nfunction selectUp5()\n    selectUpGeneric(5)\nend\n\nfunction selectUp6()\n    selectUpGeneric(6)\nend\n\nfunction selectUp7()\n    selectUpGeneric(7)\nend\n\nfunction selectUp8()\n    selectUpGeneric(8)\nend\n\nfunction selectUp9()\n    selectUpGeneric(9)\nend\n\nfunction selectUp10()\n    selectUpGeneric(10)\nend\n\nfunction selectUp11()\n    selectUpGeneric(11)\nend\n\nfunction selectUp12()\n    selectUpGeneric(12)\nend\n\nfunction selectUp13()\n    selectUpGeneric(13)\nend\n\nfunction selectUp14()\n    selectUpGeneric(14)\nend\n\nfunction selectUp15()\n    selectUpGeneric(15)\nend\n\nfunction selectUp16()\n    selectUpGeneric(16)\nend\n\nfunction selectUp17()\n    selectUpGeneric(17)\nend\n\nfunction selectUp18()\n    selectUpGeneric(18)\nend\n\nfunction selectUp19()\n    selectUpGeneric(19)\nend\n\nfunction selectUp20()\n    selectUpGeneric(20)\nend\n\nfunction selectUp21()\n    selectUpGeneric(21)\nend\n\nfunction selectUp22()\n    selectUpGeneric(22)\nend\n\nfunction selectUp23()\n    selectUpGeneric(23)\nend\n\nfunction selectUp24()\n    selectUpGeneric(24)\nend\n\nfunction selectUp25()\n    selectUpGeneric(25)\nend\n\nfunction selectUp26()\n    selectUpGeneric(26)\nend\n\nfunction selectUp27()\n    selectUpGeneric(27)\nend\n\nfunction selectUp28()\n    selectUpGeneric(28)\nend\n\n\n\n\n\n-- List Spawner starts here\n-- First step: Create the table that ultimately will be provided to newSpawner. Then, inquires player wich faction his list belongs to.\nfunction spawnerStart ()\n    self.clearButtons()\n    finalList = {}\n    finalList.Pilots = {}\n    finalList.Upgrades = {}\n    finalList.Faction = 0\n    finalList.Aux = {}\n    finalList.AuxU = {}\n    finalList.spawnCard = self\n    self.createButton({click_function = 'Dummy1', function_owner = self, label = 'Choose Faction', position = {0,0.45,-0.3}, width = 1800, height = 520, font_size = 240,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'Reb', function_owner = self, label = 'Rebel', position = {-0.4,0.45,0}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'Imp', function_owner = self, label = 'Imperial', position = {-0.4,0.45,0.2}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'Rep', function_owner = self, label = 'Republic', position = {-0.4,0.45,0.4}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'Res', function_owner = self, label = 'Resistance', position = {0.4,0.45,0}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'For', function_owner = self, label = 'First Order', position = {0.4,0.45,0.2}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'CIS', function_owner = self, label = 'CIS', position = {0.4,0.45,0.4}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'Scu', function_owner = self, label = 'Scum', position = {-0.4,0.45,0.6}, width = 1200, height = 280, font_size = 200,  scale = {0.25,0.25,0.25}})\n\n\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Back', position = {0.55,0.45,0.75}, width = 900, height = 320, font_size = 180,  scale = {0.25,0.25,0.25}})\nend\n\n--Set up faction in the table\nfunction Reb()\n    finalList.Faction = 1\n    inputList()\nend\n\nfunction Imp()\n    finalList.Faction = 2\n    inputList()\nend\n\nfunction Scu()\n    finalList.Faction = 3\n    inputList()\nend\n\nfunction Res()\n    finalList.Faction = 4\n    inputList()\nend\n\nfunction For()\n    finalList.Faction = 5\n    inputList()\nend\n\nfunction Rep()\n    finalList.Faction = 6\n    inputList()\nend\n\nfunction CIS()\n    finalList.Faction = 7\n    inputList()\nend\n\n-- Dummy functions for label buttons\nfunction Dummy()\nend\n\nfunction Dummy1()\n    print('Please pick a faction')\nend\n\nfunction Dummy2()\n    print('Please choose a ship for this pilot:')\nend\n\nfunction Dummy3()\n    print('Please type or paste your list. Refer to the manual if help is needed formating the list!')\nend\n\nfunction Dummy4()\n    print('Please choose a slot for this upgrade card:')\nend\n\n-- Second step: Create the input field where the list should be pasted/typed. Offers a button to spawn the list and a button to save to a data disk (FEATURE NOT IMPLEMENTED YET)\nfunction inputList()\n    savingList=false\n    self.clearButtons()\n    self.createButton({click_function = 'Dummy3', function_owner = self, label = 'Please type or paste your list', position = {-0,0.45,-0.4}, width = 2500, height = 280, font_size = 200, scale = {0.4,0.4,0.4}, tooltip = 'Click here to spawn yout list',  scale = {0.25,0.25,0.25}})\n    --self.createButton({click_function = 'printInput', function_owner = self, label = 'print', position = {-0.5,0.45,-1}, width = 800, height = 240, font_size = 100, scale = {0.4,0.4,0.4}, tooltip = 'Click here to spawn yout list',  scale = {0.25,0.25,0.25}})\n    self.createInput({input_function = 'action', function_owner = self, position = {0,0.45,0.12}, width = 3200, height = 1600, font_size = 200, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'validCheck', function_owner = self, label = 'Spawn Ships', position = {-0.5,0.45,0.7}, width = 1400, height = 400, font_size = 200, scale = {0.4,0.4,0.4}, tooltip = 'Click here to spawn yout list',  scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'saveList', function_owner = self, label = 'Spawn as Disk', position = {0.5,0.45,0.7}, width = 1400, height = 400, font_size = 200, scale = {0.4,0.4,0.4}, tooltip = 'Click here to save your list in a data disk', scale = {0.25,0.25,0.25}})\nend\n\n-- This function is supposed to store the list in the script of the data disk object and set up a button wich will spawn the stored list calling the list parser and providing the string.\n-- The disk can be saved in the TTS chest for easy retrieval. Could it be set up in a way to store and spawn several lists?\n\nfunction saveList()\n    print('Saving List')\n    savingList = true\n    validCheck()\nend\n\n-- print function to test the input\nfunction printInput()\n    print(lista)\n    lista = string.gsub(lista, 'v2', '')\n    print(lista)\nend\n\n-- Checks if the input is a valid string. If it is, call the list parser. If not, returns to the input list.\nfunction validCheck()\n    if lista == '' then\n        Dummy3()\n        inputList()\n    else\n        parseList()\n    end\nend\n\npilotsWithDash = {}\npilotsWithDash[\"g4r-gor v\"] = true\npilotsWithDash[\"g4r-g0r v\"] = true\n\nalternateSpelling = {}\nalternateSpelling[\"0-66\"] = 'O-66'\nalternateSpelling[\"g4r-gor v/m\"] = 'G4R-G0R V/M'\n\nobstacleNames = {\n    coreasteroid0 = \"Asteroid 6\",\n    coreasteroid1 = \"Asteroid 3\",\n    coreasteroid2 = \"Asteroid 5\",\n    coreasteroid3 = \"Asteroid 4\",\n    coreasteroid4 = \"Asteroid 2\",\n    coreasteroid5 = \"Asteroid 1\",\n    yt2400debris0 = \"Debrisfield 6\",\n    yt2400debris1 = \"Debrisfield 5\",\n    yt2400debris2 = \"Debrisfield 1\",\n    vt49decimatordebris0 = \"Debrisfield 4\",\n    vt49decimatordebris1 = \"Debrisfield 2\",\n    vt49decimatordebris2 = \"Debrisfield 3\",\n    core2asteroid0 = \"TFA Asteroid 4\",\n    core2asteroid1 = \"TFA Asteroid 5\",\n    core2asteroid2 = \"TFA Asteroid 6\",\n    core2asteroid3 = \"TFA Asteroid 3\",\n    core2asteroid4 = \"TFA Asteroid 1\",\n    core2asteroid5 = \"TFA Asteroid 2\",\n    gascloud1 = \"Gas Cloud 3\",\n    gascloud2 = \"Gas Cloud 2\",\n    gascloud3 = \"Gas Cloud 1\",\n    gascloud4 = \"Gas Cloud 6\",\n    gascloud5 = \"Gas Cloud 4\",\n    gascloud6 = \"Gas Cloud 5\",\n}\n\n-- Third Step: This function will decompose the input string and will propperly alocate each value on the propper position in the table.\n-- Then, it calls for the next function, either inquiring for ships and version of upgrades or calling the spawner.\nfunction parseList()\n    self.clearButtons()\n    self.clearInputs()\n    if lista ~= nil then\n        parsedList = {}\n        splitlist = mysplit(lista, '|', true)\n        ships = splitlist[1]\n        obstacles = splitlist[2]\n        finalList.Obstacles = {}\n        if obstacles ~= nil then\n            obstacleList = mysplit(obstacles, '/', true)\n            for i, obstacle in ipairs(obstacleList) do\n                if obstacleNames[obstacle] ~= nil then\n                    table.insert(finalList.Obstacles, obstacleNames[obstacle])\n                else\n                    printToAll(\"Unable to find obstacle: \" .. obstacle .. \" please check correct spelling\", {1,0,0})\n                end\n            end\n        end\n\n        pilotsList = mysplit(ships, '/', true)\n        local rest = \"\"\n        for i, pilot in ipairs(pilotsList) do\n            pilot = rest .. pilot\n            if pilotsWithDash[string.lower(pilot)] ~= nil then\n                rest = pilot .. \"/\"\n            else\n                table.insert(parsedList, mysplit(pilot,'+', true))\n                rest = \"\"\n            end\n        end\n        pilotIndex = 0\n        Aux = 0\n        for i, pilot in ipairs(parsedList) do\n            pilotIndex = pilotIndex + 1\n            for k, cardN in ipairs(pilot) do\n                cardN = string.gsub(cardN, 'Hardpoint: ', '')\n                if alternateSpelling[string.lower(cardN)] ~= nil then\n                    cardN = alternateSpelling[string.lower(cardN)]\n                end\n                if k == 1 then -- First card, the pilot\n                    finalList.Aux[pilotIndex] = {}\n                    finalList.AuxU[pilotIndex] = {}\n                    local found = false\n                    for id, pilot in pairs(masterPilotDB) do\n                        if string.lower(pilot.name) == string.lower(cardN) and pilot.Faction == finalList.Faction then\n                            Aux = Aux + 1\n                            finalList.Aux[pilotIndex][Aux] = id\n                            finalList.Upgrades[pilotIndex] = {}\n                            found = true\n                        end\n                    end\n                    if not found then\n                        printToAll(\"Unable to find pilot: \" .. cardN .. \" please check correct spelling\", {1,0,0})\n                        pilotIndex = pilotIndex - 1\n                        break\n                    end\n                    if Aux == 1 then\n                        finalList.Pilots[pilotIndex] = finalList.Aux[pilotIndex][1]\n                        finalList.Aux[pilotIndex] = nil\n                    end\n                    Aux = 0\n                else -- The remaining cards, the upgrades\n                    finalList.AuxU[pilotIndex][k] ={}\n                    local found = false\n                    local restricted = false\n                    for id, upg in pairs(masterUpgradesDB) do\n                        if string.lower(upg.name) == string.lower(cardN) then\n                            if (upg.restriction == nil) or (upg.restriction.Faction == nil) or (upg.restriction.Faction[finalList.Faction] == true) then\n                                Aux = Aux + 1\n                                finalList.AuxU[pilotIndex][k][Aux] = id\n                                found = true\n                            else\n                                restricted = true\n                            end\n                        end\n                    end\n                    if not found then\n                        if restricted then\n                            printToAll('Upgrade \"'.. cardN .. '\" is restricted to another faction', {1,0,0})\n                        else\n                            printToAll(\"Unable to find upgrade: \" .. cardN .. \" please check correct spelling\", {1,0,0})\n                        end\n                        goto continue\n                    end\n                    if Aux == 1 then\n                        finalList.Upgrades[pilotIndex][k-1] = finalList.AuxU[pilotIndex][k][Aux]\n                        finalList.AuxU[pilotIndex][k] = nil\n                    end\n                    Aux = 0\n                end -- if Pilot and upgrade\n                ::continue::\n            end -- for card\n        end\n        pChecker()\n    else\n        Dummy3()\n        initiate()\n    end\nend\n\n\n\n\n-- Fourth step: This function checks for pilots with the same name in the same\n-- faction and stores de data por future inquire. If no inquire is needed, it\n-- calls the newSpawner function and reset all buttons.\nfunction pChecker()\n    repPN=0\n    for i, pilot in pairs(finalList.Aux) do\n        currPIndex = i\n        repPL = {}\n        for k, v in pairs(pilot) do\n            repPL[k] = v\n            repPN=repPN+1\n        end\n        pilot = nil\n    end\n    if repPN ~= 0 then\n        pilotChoice(repPL)\n    else\n        uChecker()\n    end\nend\n\nfunction uChecker()\n    repUN=0\n    repUL = {}\n    for pilot, s in pairs(finalList.AuxU) do\n        repUL[pilot] = {}\n        for slot, up in pairs(s) do\n            currIndex = pilot\n            currSlot = slot\n            repUL[pilot][currSlot] = {}\n            for k,v in pairs(up) do\n                repUL[pilot][slot][k] = v\n                repUN=repUN+1\n            end\n        end\n    end\n    if repUN == 0 then\n        repUL = nil\n    end\n\n    if repUN ~= 0 then\n        upChoice(repUL)\n    else\n        idSpawner(finalList)\n    end\nend\n\n-- luke skywalker+sense\n-- luke skywalker + r2-d2\n-- lando calrissian+han solo\n-- sabine wren/luke skywalker + r2-d2\n-- sabine wren/norra wexley+r2-d2\n-- norra wexley+r2-d2/sabine wren\n-- luke skywalker + r2-d2/sabine wren\n\n-- Fifth Step: If pilots with several options of ships are present, for each pilot will create an inquire asking wich ship the pilot is in.\nfunction pilotChoice(options)\n    local name = (masterPilotDB[options[1]].name)\n    local title = ''\n    if masterPilotDB[options[1]].title ~= nil then\n        title = ' - ' .. masterPilotDB[options[1]].title\n    end\n    local button1 = name..title..' ('.. masterShipDB[masterPilotDB[options[1]].ship_type].name ..')'\n    title = ''\n    if masterPilotDB[options[2]].title ~= nil then\n        title = ' - ' .. masterPilotDB[options[2]].title\n    end\n    local button2 = name..title..' ('.. masterShipDB[masterPilotDB[options[2]].ship_type].name ..')'\n    self.clearButtons()\n    self.createButton({click_function = 'Dummy2', function_owner = self, label = 'Please choose a ship for the following pilot', position = {0,0.45,-0.4}, width = 3400, height = 380, font_size = 170, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'Dummy2', function_owner = self, label = name, position = {0,0.45,-0.1}, width = 1600, height = 380, font_size = 200, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'setShip1', function_owner = self, label = button1, position = {0,0.45,0.1}, width = 2500, height = 380, font_size = 160, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'setShip2', function_owner = self, label = button2, position = {0,0.45,0.3}, width = 2500, height = 380, font_size = 160, scale = {0.25,0.25,0.25}})\n    if #options == 3 then\n        title = ''\n        if masterPilotDB[options[3]].title ~= nil then\n            title = ' - ' .. masterPilotDB[options[3]].title\n        end\n        local button3 = name..title..' ('.. masterShipDB[masterPilotDB[options[3]].ship_type].name ..')'\n        self.createButton({click_function = 'setShip3', function_owner = self, label = button3, position = {0,0.45,0.5}, width = 2500, height = 380, font_size = 180, scale = {0.25,0.25,0.25}})\n    end\nend\n\n\n\n-- Stores the ship option for each pilot if needed. If there is no other inquire needed, will call upgrade inquire if need, if not, will call the newSpawner function.\nfunction setShip1()\n    finalList.Pilots[currPIndex] = repPL[1]\n    finalList.Aux[currPIndex] = nil\n    repPL = nil\n    repPN= 0\n    repUN= 0\n    currPIndex = nil\n    pChecker()\nend\n\nfunction setShip2()\n    finalList.Pilots[currPIndex] = repPL[2]\n    finalList.Aux[currPIndex] = nil\n    repPL = nil\n    repPN= 0\n    repUN= 0\n    currPIndex = nil\n    pChecker()\nend\n\nfunction setShip3()\n    finalList.Pilots[currPIndex] = repPL[3]\n    finalList.Aux[currPIndex] = nil\n    repPL = nil\n    repPN= 0\n    repUN= 0\n    currPIndex = nil\n    pChecker()\nend\n\nslotName = {}\nslotName[1] = 'Talent' -- EPT\nslotName[2] = 'Sensors' -- Sensor\nslotName[3] = 'Cannon' -- Cannon\nslotName[4] = 'Turret' -- Turret\nslotName[5] = 'Torpedo' -- Torpedo\nslotName[6] = 'Missile' -- Missile\nslotName[7] = '' --\nslotName[8] = 'Crew' -- Crew\nslotName[9] = ''\nslotName[10] = 'Astromech' --Astromech\nslotName[11] = ''\nslotName[12] = 'Device' -- Device\nslotName[13] = 'Illicit' -- Ilicit\nslotName[14] = 'Modification' -- Modification\nslotName[15] = 'Title' -- Title\nslotName[16] = 'Gunner' -- Gunner\nslotName[17] = 'Force Talent' -- Force Power\nslotName[18] = 'Configuration' -- Configuration\nslotName[19] = 'Tech' -- Tech\nslotName[20] = 'Relay' -- Relay\nslotName[21] = 'Command' -- Command\nslotName[22] = 'Cargo' -- Cargo\nslotName[23] = 'Team'  -- Team\nslotName[24] = 'Hardpoint'\nslotName[25] = 'Hyperdrive'\nslotName[99] = 'Weapon HardPoint' -- Hardpoint\n\n\n\n-- Sixth Step: If Upgrades with several options in the same faction are present, for each upgrade will create an inquire asking wich slot the upgrade is in.\nfunction upChoice(options)\n    local name = (masterUpgradesDB[options[currIndex][currSlot][1]].name)\n    local Up1 = slotName[masterUpgradesDB[options[currIndex][currSlot][1]].slot]\n    local Up2 = slotName[masterUpgradesDB[options[currIndex][currSlot][2]].slot]\n    self.clearButtons()\n    self.createButton({click_function = 'Dummy4', function_owner = self, label = 'Please choose a slot for the following upgrade', position = {0,0.45,-0.4}, width = 3400, height = 380, font_size = 170, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'Dummy4', function_owner = self, label = name, position = {0,0.45,-0.1}, width = 1600, height = 380, font_size = 200, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'setUp1', function_owner = self, label = Up1, position = {0,0.45,0.1}, width = 1200, height = 380, font_size = 180, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'setUp2', function_owner = self, label = Up2, position = {0,0.45,0.3}, width = 1200, height = 380, font_size = 180, scale = {0.25,0.25,0.25}})\n    if options == 3 then\n        local Up3 = slotName[masterUpgradesDB[options[currIndex][currSlot][3]].slot]\n        self.createButton({click_function = 'setUp3', function_owner = self, label = Up3, position = {0,0.45,0.8}, width = 1200, height = 380, font_size = 180, scale = {0.25,0.25,0.25}})\n    end\nend\n\nfunction setUp1()\n    finalList.Upgrades[currIndex][currSlot-1] = finalList.AuxU[currIndex][currSlot][1]\n    finalList.AuxU[currIndex][currSlot] = nil\n    repUL = nil\n    repUN= 0\n    currSlot = nil\n    currIndex = nil\n    uChecker()\nend\n\nfunction setUp2()\n    finalList.Upgrades[currIndex][currSlot-1] = finalList.AuxU[currIndex][currSlot][2]\n    finalList.AuxU[currIndex][currSlot] = nil\n    repUL = nil\n    repUN= 0\n    currSlot = nil\n    currIndex = nil\n    uChecker()\nend\n\nfunction setUp3()\n    finalList.Upgrades[currIndex][currSlot-1] = finalList.AuxU[currIndex][currSlot][3]\n    finalList.AuxU[currIndex][currSlot] = nil\n    repUL = nil\n    repUN= 0\n    currSlot = nil\n    currIndex = nil\n    uChecker()\nend\n\nvariableCostSizeDB={}\nvariableCostSizeDB['engine upgrade'] = {['Small'] = 3, ['Medium'] = 6,['Large'] = 9}\nvariableCostSizeDB['expert handling'] = {['Small'] = 2, ['Medium'] = 3,['Large'] = 4}\n\nvariableCostAgiDB={}\nvariableCostAgiDB['hull upgrade'] = {[0] = 3,[1] = 4,[2] = 6,[3] = 8}\nvariableCostAgiDB['shield upgrade'] = {[0] = 3,[1] = 4,[2] = 6,[3] = 8}\nvariableCostAgiDB['stealth device'] = {[0] = 3,[1] = 4,[2] = 6,[3] = 8}\n\n-- This function reads the list and informs the point cost of each ship, as well as the total point cost of the list, and offers the option either to cancel (and restorat) or to spawn the list.\nfunction spawnCaller(arg)\n    self.clearButtons()\n    local aux = 0\n    local auxB= 0\n    local index = 1\n    local cost = {}\n    totalCost=0\n    self.createButton({click_function = 'spawnProxy', function_owner = self, label = 'Spawn', position = {0,0.45,-0.4}, width = 1200, height = 380, font_size = 180, scale = {0.25,0.25,0.25}})\n    for i, pilot in ipairs(arg.Pilots) do\n        for k, pilots in pairs(shipPilotsDB[arg.Faction][arg.Ship[i]]) do\n            if string.lower(pilot) == string.lower(k) then\n                cost[i] = pilots.Cost\n            end\n        end\n        for k, ups in ipairs(arg.Upgrades[index]) do\n            for x, slot in pairs(UpDB[arg.Faction]) do\n                for z, up in pairs(UpDB[arg.Faction][x]) do\n                    if string.lower(z) == string.lower(ups) then\n                        cost[i] = cost[i]+up\n                    end\n                end\n            end\n            if variableCostSizeDB[string.lower(ups)] ~= nil then\n                local size = shipPilotsDB[arg.Faction][arg.Ship[index] ].Base\n                cost[i] = cost[i]+variableCostSizeDB[string.lower(ups)][size]\n            elseif variableCostAgiDB[string.lower(ups)] ~= nil then\n                local agi = shipPilotsDB[arg.Faction][arg.Ship[index] ].Agility\n                cost[i] = cost[i]+variableCostAgiDB[string.lower(ups)][agi]\n            else\n                for x, slot in pairs(UpDB.Neu) do\n                    for z, up in pairs(UpDB.Neu[x]) do\n                        if string.lower(z) == string.lower(ups) then\n                            cost[i] = cost[i]+up\n                        end\n                    end\n                end\n            end\n        end\n        self.createButton({click_function = 'Dummy', function_owner = self, label = arg.Pilots[i]..' ('..cost[i]..')', position = {-0.45+auxB*0.96,0.45,0.15*aux-0.2}, width = 1800, height = 250, font_size = 135, scale = {0.25,0.25,0.25}})\n        aux=aux+1\n        if aux>3 then\n            aux=0\n            auxB=1\n        end\n        index=index+1\n        totalCost=totalCost+cost[i]\n    end\n    self.createButton({click_function = 'Dummy', function_owner = self, label = 'Total Cost ('..totalCost..')', position = {0,0.45,0.6}, width = 1800, height = 250, font_size = 150, scale = {0.25,0.25,0.25}})\n    self.createButton({click_function = 'initiate', function_owner = self, label = 'Cancel', position = {0.5,0.45,0.75}, width = 1800, height = 250, font_size = 150, scale = {0.25,0.25,0.25}})\n\nend\n\nfunction spawnProxy()\n    spawnNow(finalList)\nend\n\n-- Calls the newSpawner, wich will set up a propper postition for the spawning ships (POSITION NEEDS TO BE REFERCENCED TO SELF, NOT GLOBAL)\nfunction spawnNow(arg)\n    storePos = self.getPosition()\n    pos = LocalPos(self, {3.5, 1, 4})\n    rot = self.getRotation()\n    self.setPosition(pos)\n    self.setRotation({0,rot.y,rot.z})\n    Global.call('newSpawner', arg)\n    self.setPosition(storePos)\n    self.setRotation(rot)\n    initiate()\nend\n\n\n-- String split function\nfunction mysplit(inputstr, sep, trim)\n    if inputstr ~= nil then\n        if sep == nil then\n          sep = \"%s\"\n        end\n        local t={}\n        for str in string.gmatch(inputstr, \"([^\"..sep..\"]+)\") do\n            if trim then\n                str = str:match'^%s*(.*%S)' or ''\n            end\n            if str ~= \"\" then\n                table.insert(t, str)\n            end\n        end\n        return t\n    end\nend\n\n-- Combine two execute option tables\nfunction combineExecuteOptions(tab1, tab2)\n    for k, newOptions in pairs(tab2) do\n        if tab1[k] ~= nil then\n            for i, opt in pairs(newOptions) do\n                if table.find(tab1[k],opt) == false then\n                    table.insert(tab1, opt)\n                end\n            end\n        else\n            tab1[k] = newOptions\n        end\n    end\nend\n\n\n-------\n-- Local Reference function, for spawning items relative to the quick build card\nfunction LocalPos(object, position)\n    local rot = object.getRotation()\n    local lPos = {position[1], position[2], position[3]}\n    -- Z-X-Y extrinsic\n    local zRot = RotMatrix('z', rot.z)\n    lPos = RotateVector(zRot, lPos)\n    local xRot = RotMatrix('x', rot.x)\n    lPos = RotateVector(xRot, lPos)\n    local yRot = RotMatrix('y', rot.y)\n    lPos = RotateVector(yRot, lPos)\n\n    return Vect_Sum(lPos, object.getPosition())\nend\n\n\n\nfunction RotMatrix(axis, angDeg)\n    local ang = math.rad(angDeg)\n    local cs = math.cos\n    local sn = math.sin\n\n    if axis == 'x' then\n        return {\n                    { 1,        0,             0 },\n                    { 0,   cs(ang),   -1*sn(ang) },\n                    { 0,   sn(ang),      cs(ang) }\n               }\n    elseif axis == 'y' then\n        return {\n                    {    cs(ang),   0,   sn(ang) },\n                    {          0,   1,         0 },\n                    { -1*sn(ang),   0,   cs(ang) }\n               }\n    elseif axis == 'z' then\n        return {\n                    { cs(ang),   -1*sn(ang),   0 },\n                    { sn(ang),      cs(ang),   0 },\n                    { 0,                  0,   1 }\n               }\n    end\nend\n\n-- Apply given rotation matrix on given vector\n-- (multiply matrix and column vector)\nfunction RotateVector(rotMat, vect)\n    local out = {0, 0, 0}\n    for i=1,3,1 do\n        for j=1,3,1 do\n            out[i] = out[i] + rotMat[i][j]*vect[j]\n        end\n    end\n    return out\nend\n\n-- Sum of two vectors (of any size)\nfunction Vect_Sum(vec1, vec2)\n    local out = {}\n    local k = 1\n    while vec1[k] ~= nil and vec2[k] ~= nil do\n        out[k] = vec1[k] + vec2[k]\n        k = k+1\n    end\n    return out\nend\n\n------",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "98b1bf",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 40.0,
          "posY": 0.97,
          "posZ": 1.5,
          "rotX": 1.10604662E-06,
          "rotY": 359.991516,
          "rotZ": 5.9028855E-07,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "4 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "eb30fa",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.9756279,
              "posY": 1.05277336,
              "posZ": -1.616134,
              "rotX": 1.15569992E-06,
              "rotY": 359.990662,
              "rotZ": -4.34849153E-06,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s4.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "b8caf9",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 46.24,
          "posY": -0.27,
          "posZ": 3.68,
          "rotX": 0.0,
          "rotY": 4.695755E-06,
          "rotZ": 0.0,
          "scaleX": 0.5,
          "scaleY": 1.9,
          "scaleZ": 0.5
        },
        "Nickname": "Debris Fields",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786353562013243297/24A3BC6F7CAC9448EEED4EFE2F9ED6082E312E71/",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/Debris1.png",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786353562013243297/24A3BC6F7CAC9448EEED4EFE2F9ED6082E312E71/",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "48db4f",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 46.3743,
              "posY": 1.09148538,
              "posZ": 4.16965246,
              "rotX": -5.802972E-05,
              "rotY": 359.973083,
              "rotZ": 179.9999,
              "scaleX": 1.0999999,
              "scaleY": 1.0,
              "scaleZ": 1.0999999
            },
            "Nickname": "Debrisfield 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "639a25",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -26.9427032,
                  "posY": 1.05155039,
                  "posZ": -4.751729,
                  "rotX": -1.30963951E-08,
                  "rotY": 179.9691,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "78bfc5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -21.643158,
                  "posY": 1.05615044,
                  "posZ": -4.3572,
                  "rotX": -5.394235E-07,
                  "rotY": 0.0109658688,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "8ff5e6",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -15.9913378,
                  "posY": 1.05615044,
                  "posZ": -4.43565655,
                  "rotX": 9.670697E-06,
                  "rotY": -0.00147130562,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "a9b16e",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -9.97973251,
                  "posY": 1.05615032,
                  "posZ": -4.54859638,
                  "rotX": 7.664992E-06,
                  "rotY": 359.9831,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "ab6e6b",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -5.19877958,
                  "posY": 1.05615044,
                  "posZ": -9.134313,
                  "rotX": 3.95330545E-07,
                  "rotY": 195.017075,
                  "rotZ": 180.0,
                  "scaleX": 1.1,
                  "scaleY": 1.0,
                  "scaleZ": 1.1
                },
                "Nickname": "Debrisfield 6",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "75be06",
        "Name": "Digital_Clock",
        "Transform": {
          "posX": 42.92398,
          "posY": 1.04546523,
          "posZ": 0.9541974,
          "rotX": 43.1740227,
          "rotY": 89.96812,
          "rotZ": -0.00146572816,
          "scaleX": 0.75,
          "scaleY": 0.75,
          "scaleZ": 0.13
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.585365832,
          "g": 0.585365832,
          "b": 0.585365832
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": false,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "Clock": {
          "Mode": 1,
          "SecondsPassed": 4500,
          "Paused": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "a4e041",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 41.0,
          "posY": 1.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 180.0,
          "scaleX": 0.63,
          "scaleY": 0.63,
          "scaleZ": 0.63
        },
        "Nickname": "Range 1-3 Rulers",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj",
          "Convex": false,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "93e119",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -41.9626961,
              "posY": 1.086376,
              "posZ": 0.2681499,
              "rotX": -6.194948E-07,
              "rotY": 359.990631,
              "rotZ": -2.865909E-06,
              "scaleX": 0.625,
              "scaleY": 0.625,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999999,
              "g": 0.9921603,
              "b": 0.9999999
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj",
              "Convex": false,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "7f035a",
        "Name": "BlockTriangle",
        "Transform": {
          "posX": 43.7683258,
          "posY": 1.20484412,
          "posZ": 0.9851344,
          "rotX": 0.00014971185,
          "rotY": 180.0195,
          "rotZ": 0.0341748968,
          "scaleX": 0.696301758,
          "scaleY": 1.13736629,
          "scaleZ": 2.4344573
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.585365832,
          "g": 0.585365832,
          "b": 0.585365832
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": false,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "bd3d1a",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 45.97,
          "posY": 0.97,
          "posZ": -0.02,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.38,
          "scaleY": 1.65,
          "scaleZ": 0.38
        },
        "Nickname": "TFA Set Asteroids",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/TFA1.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/TFA.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/TFA1.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "be2b20",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 46.0718079,
              "posY": 1.0662775,
              "posZ": -0.329483062,
              "rotX": 6.9361904E-06,
              "rotY": 120.013542,
              "rotZ": -1.45858814E-06,
              "scaleX": 1.0,
              "scaleY": 1.51633251,
              "scaleZ": 1.0
            },
            "Nickname": "TFA Asteroid 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "60fd4f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -27.4059429,
                  "posY": 0.987432659,
                  "posZ": -7.346376,
                  "rotX": 0.000116940959,
                  "rotY": 120.021355,
                  "rotZ": 8.72246237E-05,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "55d063",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -22.4731255,
                  "posY": 0.967106462,
                  "posZ": -2.01778388,
                  "rotX": 3.68944961E-06,
                  "rotY": 120.018761,
                  "rotZ": -3.40330757E-06,
                  "scaleX": 1.0,
                  "scaleY": 3.04350567,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "def865",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -19.6455288,
                  "posY": 0.9671069,
                  "posZ": 2.42062759,
                  "rotX": 3.32672025E-05,
                  "rotY": 120.048325,
                  "rotZ": 1.79558247E-05,
                  "scaleX": 1.0,
                  "scaleY": 2.3043952,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "60fe7a",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -14.6034632,
                  "posY": 0.9671029,
                  "posZ": 8.969603,
                  "rotX": 0.000124963539,
                  "rotY": 120.028839,
                  "rotZ": 7.387497E-06,
                  "scaleX": 1.0,
                  "scaleY": 3.59584236,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "b13038",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -8.437252,
                  "posY": 0.9671058,
                  "posZ": 11.3695221,
                  "rotX": -0.000981264,
                  "rotY": 120.021645,
                  "rotZ": 0.00173551624,
                  "scaleX": 1.0,
                  "scaleY": 3.020417,
                  "scaleZ": 1.0
                },
                "Nickname": "TFA Asteroid 6",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "51ebe0",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 40.0,
          "posY": 0.97,
          "posZ": -3.0,
          "rotX": 1.17171126E-07,
          "rotY": 359.991516,
          "rotZ": 2.52417044E-06,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "2 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "5ce817",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -40.254612,
              "posY": 1.05277681,
              "posZ": 3.045643,
              "rotX": 0.000140797565,
              "rotY": 359.994,
              "rotZ": 0.00086742593,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s2.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "00e7dc",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 40.75,
          "posY": 1.06,
          "posZ": -9.5,
          "rotX": 0.0,
          "rotY": 224.999985,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "3 Bank Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b20d16",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -40.29677,
              "posY": 1.14430749,
              "posZ": 8.338599,
              "rotX": 359.990051,
              "rotY": 359.990753,
              "rotZ": 359.975952,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b3.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "9ae5cb",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 39.0,
          "posY": 0.97,
          "posZ": 0.0,
          "rotX": 4.274726E-06,
          "rotY": 359.991516,
          "rotZ": 1.15259472E-05,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "5 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "6d0ff9",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.1263771,
              "posY": 1.05277336,
              "posZ": -0.4066172,
              "rotX": 1.53069777E-06,
              "rotY": 0.00228429935,
              "rotZ": -7.773976E-07,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s5.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "405ab7",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 40.12,
          "posY": 1.06,
          "posZ": -8.5,
          "rotX": 0.0,
          "rotY": 224.999985,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "2 Bank Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "765185",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.244278,
              "posY": 1.14336717,
              "posZ": 7.11606169,
              "rotX": 359.9928,
              "rotY": 359.975677,
              "rotZ": 359.985565,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b2.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "c19b69",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 46.1,
          "posY": 0.99,
          "posZ": -4.09,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.7,
          "scaleY": 0.53,
          "scaleZ": 0.7
        },
        "Nickname": "Core Set Asteroids",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-model.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/Core1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-model.obj",
          "Convex": false,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "95f5ae",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 46.44056,
              "posY": 1.03998,
              "posZ": -4.465268,
              "rotX": 0.000153707661,
              "rotY": 120.019936,
              "rotZ": -9.34389464E-05,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Asteroid 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "509d1f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 20.1297512,
                  "posY": 0.98437953,
                  "posZ": 8.094108,
                  "rotX": -1.16297888E-05,
                  "rotY": 120.019966,
                  "rotZ": -6.511638E-05,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "ce7293",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 24.6080589,
                  "posY": 0.987590969,
                  "posZ": 2.68505168,
                  "rotX": 8.7498E-06,
                  "rotY": 120.020096,
                  "rotZ": 9.667615E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "e10469",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 18.67132,
                  "posY": 0.9897437,
                  "posZ": -0.9682759,
                  "rotX": 5.337862E-06,
                  "rotY": 120.020279,
                  "rotZ": -2.670259E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "8c92c6",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 21.3030148,
                  "posY": 0.9903801,
                  "posZ": -7.52489042,
                  "rotX": 1.01695477E-05,
                  "rotY": 120.030388,
                  "rotZ": -3.15033117E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "71adbc",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 21.7009373,
                  "posY": 0.9846479,
                  "posZ": -13.2826948,
                  "rotX": -6.841603E-06,
                  "rotY": 120.030823,
                  "rotZ": -6.85577061E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Asteroid 6",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "26957c",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 39.5,
          "posY": 1.06,
          "posZ": -7.5,
          "rotX": 0.0,
          "rotY": 224.999985,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "1 Bank Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "e955bd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -38.36719,
              "posY": 1.14350629,
              "posZ": 6.29818869,
              "rotX": -0.00168857072,
              "rotY": 0.009002227,
              "rotZ": -0.00259488728,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/b1.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "4d5ffb",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 39.2,
          "posY": 0.96,
          "posZ": 7.5,
          "rotX": 2.08639631E-05,
          "rotY": 89.98765,
          "rotZ": 3.63031631E-06,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "1 Turn Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b65adf",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -38.5225754,
              "posY": 1.05539179,
              "posZ": -5.583962,
              "rotX": 0.200439274,
              "rotY": 0.0310121533,
              "rotZ": 0.2242837,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t1.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "7e4108",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 38.0,
          "posY": 0.97,
          "posZ": 2.25,
          "rotX": -1.29629807E-05,
          "rotY": 179.991516,
          "rotZ": 3.19686865E-06,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "1 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "df7062",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -37.75107,
              "posY": 1.14340711,
              "posZ": -2.427101,
              "rotX": 0.00230936683,
              "rotY": 0.0288666971,
              "rotZ": 180.010086,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s1.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "1dc80f",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 38.0,
          "posY": 0.97,
          "posZ": -0.8,
          "rotX": 4.28059639E-06,
          "rotY": 359.991516,
          "rotZ": -3.90299465E-06,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "3 Straight Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "0e84fa",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -37.76757,
              "posY": 1.052768,
              "posZ": 0.7183745,
              "rotX": 0.000238047171,
              "rotY": 0.0298677236,
              "rotZ": 0.00138858578,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/s3.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "2980ac",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 39.7,
          "posY": 0.98,
          "posZ": 8.5,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "2 Turn Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "a2c3ec",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -38.87699,
              "posY": 1.14914727,
              "posZ": -6.52490568,
              "rotX": 2.87643671,
              "rotY": 0.0818786249,
              "rotZ": 3.09425044,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t2.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "aa6531",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 40.2,
          "posY": 0.97,
          "posZ": 9.5,
          "rotX": 359.993683,
          "rotY": 89.9911041,
          "rotZ": -0.004856063,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "3 Turn Templates",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.obj",
          "Convex": false,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b36a45",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.1740456,
              "posY": 1.13898587,
              "posZ": -7.577747,
              "rotX": 2.02665019,
              "rotY": 0.124885358,
              "rotZ": 3.41825032,
              "scaleX": 3.625,
              "scaleY": 3.625,
              "scaleZ": 3.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/t3.obj",
              "Convex": false,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "bf91d5",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -42.0,
          "posY": 1.0,
          "posZ": -4.1,
          "rotX": 0.0,
          "rotY": 269.99,
          "rotZ": 0.0,
          "scaleX": 0.63,
          "scaleY": 0.63,
          "scaleZ": 0.63
        },
        "Nickname": "Range 1 Rulers",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range1.rawm",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range1.rawm",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "e38de9",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -41.86441,
              "posY": 1.08776987,
              "posZ": -3.72123575,
              "rotX": 0.0281211063,
              "rotY": -0.0005400441,
              "rotZ": -0.00187118608,
              "scaleX": 0.625000358,
              "scaleY": 0.625000358,
              "scaleZ": 0.625000358
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range1.rawm",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range1.rawm",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "0f08d4",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -42.0,
          "posY": 1.0,
          "posZ": 2.4,
          "rotX": 1.71016382E-06,
          "rotY": 270.0,
          "rotZ": 180.0,
          "scaleX": 0.63,
          "scaleY": 0.63,
          "scaleZ": 0.63
        },
        "Nickname": "Range 1-2 Rulers",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range12.rawm",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range12.rawm",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "48b935",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -41.9492073,
              "posY": 1.08783281,
              "posZ": 2.18891859,
              "rotX": 359.978943,
              "rotY": -0.0024488233,
              "rotZ": 0.0008021433,
              "scaleX": 0.625000358,
              "scaleY": 0.625000358,
              "scaleZ": 0.625000358
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range12.rawm",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range12.rawm",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "7e3b54",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 42.0,
          "posY": 1.0,
          "posZ": -2.4,
          "rotX": 0.0,
          "rotY": 270.01,
          "rotZ": 0.0,
          "scaleX": 0.63,
          "scaleY": 0.63,
          "scaleZ": 0.63
        },
        "Nickname": "Range 1-2 Rulers",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range12.rawm",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range12.rawm",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "48b935",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -41.9492073,
              "posY": 1.08783281,
              "posZ": 2.18891859,
              "rotX": 359.978943,
              "rotY": -0.0024488233,
              "rotZ": 0.0008021433,
              "scaleX": 0.625000358,
              "scaleY": 0.625000358,
              "scaleZ": 0.625000358
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range12.rawm",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range12.rawm",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "68df70",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 42.0,
          "posY": 1.0,
          "posZ": 4.1,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 180.0,
          "scaleX": 0.63,
          "scaleY": 0.63,
          "scaleZ": 0.63
        },
        "Nickname": "Range 1 Rulers",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range1.rawm",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range1.rawm",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "e38de9",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -41.86441,
              "posY": 1.08776987,
              "posZ": -3.72123575,
              "rotX": 0.0281211063,
              "rotY": -0.0005400441,
              "rotZ": -0.00187118608,
              "scaleX": 0.625000358,
              "scaleY": 0.625000358,
              "scaleZ": 0.625000358
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range1.rawm",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range1.rawm",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "a50db2",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 2.52000022,
          "posY": 1.09759939,
          "posZ": -15.59,
          "rotX": 9.573966E-06,
          "rotY": 269.999146,
          "rotZ": 180.0,
          "scaleX": 0.4,
          "scaleY": 0.86,
          "scaleZ": 0.4
        },
        "Nickname": "First Player",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": false,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/new/coin.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/new/purpleorange.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/new/coin.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 3,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "d43c5c",
        "Name": "Custom_Model",
        "Transform": {
          "posX": -40.0,
          "posY": 0.9,
          "posZ": 15.0,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 0.65,
          "scaleY": 0.65,
          "scaleZ": 0.65
        },
        "Nickname": "Deck Holder",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/787480069411278141/EBD7FA75F60A26C69C242ADD0329D276D1CA6E22/",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/965354426650280541/CD6FAC5CE2DFF456B23D8F4971627F33BFC38706/",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/787480069411278141/EBD7FA75F60A26C69C242ADD0329D276D1CA6E22/",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_xwing/src/DeckHolder\n__XW_LayoutHandlers = {\r\n    show = 'Enable',\r\n    hide = 'Disable'\r\n}\r\n\r\nstate = {\r\n    active = true,\r\n    deck = nil\r\n}\r\n\r\nfunction Enable()\r\n    state.active = true\r\n    function DelayedDrawCoroutine()\r\n        repeat\r\n            coroutine.yield(0)\r\n        until (not self.isSmoothMoving()) and self.resting\r\n        if state.deck then\r\n            SnapDeck(state.deck)\r\n        else\r\n            DrawDeck()\r\n        end\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, 'DelayedDrawCoroutine')\r\nend\r\n\r\nfunction Disable()\r\n    state.active = false\r\n    if state.deck then\r\n        state.deck.destruct()\r\n    end\r\n    state.deck = nil\r\n    self.clearButtons()\r\nend\r\n\r\nfunction DrawDeck()\r\n    local targetPos = self.getPosition()\r\n    targetPos.y = targetPos.y + 0.3\r\n    local targetRot = self.getRotation()\r\n    targetRot.x = targetRot.x + 180\r\n    local newDeck = deckSource.takeObject({\r\n        position = targetPos,\r\n        rotation = self.getRotation()\r\n    })\r\n    SnapDeck(newDeck)\r\nend\r\n\r\nfunction SnapDeck(deck)\r\n    local sPos = self.getPosition()\r\n    local sRot = self.getRotation()\r\n    deck.setPositionSmooth({sPos[1], sPos[2]+0.3, sPos[3]}, false, true)\r\n    deck.setRotationSmooth({sRot[1]+180, sRot[2], sRot[3]}, false, true)\r\n    state.deck = deck\r\n    deck.randomize()\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\r\n    if (not state.active) or (not state.deck) then return end\r\n    if state.deck == obj then\r\n        state.deck = nil\r\n    end\r\nend\r\n\r\nfunction onObjectDropped(_, obj)\r\n    if (not state.active) or state.deck then return end\r\n    if obj.tag ~= 'Deck' then return end\r\n    local dx, dy = self.getPosition()[1] - obj.getPosition()[1], self.getPosition()[3] - obj.getPosition()[3]\r\n    if math.abs(dx) < 1 and math.abs(dy) < 1 then\r\n        SnapDeck(obj)\r\n    end\r\nend\r\n\r\nfunction onLoad(saveState)\r\n    deckSource = getObjectFromGUID('b3ae5f') or error('Deck Holder: no deck source found!')\r\n    if saveState and saveState ~= nil then\r\n        local loadState = JSON.decode(saveState)\r\n        state.active = loadState.active\r\n        if loadState.deckGUID then\r\n            state.deck = getObjectFromGUID(loadState.deckGUID)\r\n            state.deck.randomize()\r\n        end\r\n    end\r\n    self.tooltip = false\r\nend\r\n\r\nfunction onSave()\r\n    local sState = {active = state.active}\r\n    if state.deck then\r\n        sState.deckGUID = state.deck.getGUID()\r\n    end\r\n    return JSON.encode(sState)\r\nend\r\n\n----#include TTS_xwing/src/DeckHolder",
        "LuaScriptState": "{\"active\":true,\"deckGUID\":\"0b0843\"}",
        "XmlUI": ""
      },
      {
        "GUID": "16e138",
        "Name": "Custom_Model",
        "Transform": {
          "posX": -40.0,
          "posY": 0.9,
          "posZ": -15.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.65,
          "scaleY": 0.65,
          "scaleZ": 0.65
        },
        "Nickname": "Deck Holder",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/787480069411278141/EBD7FA75F60A26C69C242ADD0329D276D1CA6E22/",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/965354426650277090/15310ABAF09CC541DD0A809016543F1711DE6F2E/",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/787480069411278141/EBD7FA75F60A26C69C242ADD0329D276D1CA6E22/",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_xwing/src/DeckHolder\n__XW_LayoutHandlers = {\r\n    show = 'Enable',\r\n    hide = 'Disable'\r\n}\r\n\r\nstate = {\r\n    active = true,\r\n    deck = nil\r\n}\r\n\r\nfunction Enable()\r\n    state.active = true\r\n    function DelayedDrawCoroutine()\r\n        repeat\r\n            coroutine.yield(0)\r\n        until (not self.isSmoothMoving()) and self.resting\r\n        if state.deck then\r\n            SnapDeck(state.deck)\r\n        else\r\n            DrawDeck()\r\n        end\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, 'DelayedDrawCoroutine')\r\nend\r\n\r\nfunction Disable()\r\n    state.active = false\r\n    if state.deck then\r\n        state.deck.destruct()\r\n    end\r\n    state.deck = nil\r\n    self.clearButtons()\r\nend\r\n\r\nfunction DrawDeck()\r\n    local targetPos = self.getPosition()\r\n    targetPos.y = targetPos.y + 0.3\r\n    local targetRot = self.getRotation()\r\n    targetRot.x = targetRot.x + 180\r\n    local newDeck = deckSource.takeObject({\r\n        position = targetPos,\r\n        rotation = self.getRotation()\r\n    })\r\n    SnapDeck(newDeck)\r\nend\r\n\r\nfunction SnapDeck(deck)\r\n    local sPos = self.getPosition()\r\n    local sRot = self.getRotation()\r\n    deck.setPositionSmooth({sPos[1], sPos[2]+0.3, sPos[3]}, false, true)\r\n    deck.setRotationSmooth({sRot[1]+180, sRot[2], sRot[3]}, false, true)\r\n    state.deck = deck\r\n    deck.randomize()\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\r\n    if (not state.active) or (not state.deck) then return end\r\n    if state.deck == obj then\r\n        state.deck = nil\r\n    end\r\nend\r\n\r\nfunction onObjectDropped(_, obj)\r\n    if (not state.active) or state.deck then return end\r\n    if obj.tag ~= 'Deck' then return end\r\n    local dx, dy = self.getPosition()[1] - obj.getPosition()[1], self.getPosition()[3] - obj.getPosition()[3]\r\n    if math.abs(dx) < 1 and math.abs(dy) < 1 then\r\n        SnapDeck(obj)\r\n    end\r\nend\r\n\r\nfunction onLoad(saveState)\r\n    deckSource = getObjectFromGUID('b3ae5f') or error('Deck Holder: no deck source found!')\r\n    if saveState and saveState ~= nil then\r\n        local loadState = JSON.decode(saveState)\r\n        state.active = loadState.active\r\n        if loadState.deckGUID then\r\n            state.deck = getObjectFromGUID(loadState.deckGUID)\r\n            state.deck.randomize()\r\n        end\r\n    end\r\n    self.tooltip = false\r\nend\r\n\r\nfunction onSave()\r\n    local sState = {active = state.active}\r\n    if state.deck then\r\n        sState.deckGUID = state.deck.getGUID()\r\n    end\r\n    return JSON.encode(sState)\r\nend\r\n\n----#include TTS_xwing/src/DeckHolder",
        "LuaScriptState": "{\"active\":true,\"deckGUID\":\"47b216\"}",
        "XmlUI": ""
      },
      {
        "GUID": "37932a",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 40.0,
          "posY": 0.9,
          "posZ": 15.0,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 0.65,
          "scaleY": 0.65,
          "scaleZ": 0.65
        },
        "Nickname": "Deck Holder",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/787480069411278141/EBD7FA75F60A26C69C242ADD0329D276D1CA6E22/",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/965354426650265506/B74D21841375FED634D89909946B60186F753BE7/",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/787480069411278141/EBD7FA75F60A26C69C242ADD0329D276D1CA6E22/",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_xwing/src/DeckHolder\n__XW_LayoutHandlers = {\r\n    show = 'Enable',\r\n    hide = 'Disable'\r\n}\r\n\r\nstate = {\r\n    active = true,\r\n    deck = nil\r\n}\r\n\r\nfunction Enable()\r\n    state.active = true\r\n    function DelayedDrawCoroutine()\r\n        repeat\r\n            coroutine.yield(0)\r\n        until (not self.isSmoothMoving()) and self.resting\r\n        if state.deck then\r\n            SnapDeck(state.deck)\r\n        else\r\n            DrawDeck()\r\n        end\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, 'DelayedDrawCoroutine')\r\nend\r\n\r\nfunction Disable()\r\n    state.active = false\r\n    if state.deck then\r\n        state.deck.destruct()\r\n    end\r\n    state.deck = nil\r\n    self.clearButtons()\r\nend\r\n\r\nfunction DrawDeck()\r\n    local targetPos = self.getPosition()\r\n    targetPos.y = targetPos.y + 0.3\r\n    local targetRot = self.getRotation()\r\n    targetRot.x = targetRot.x + 180\r\n    local newDeck = deckSource.takeObject({\r\n        position = targetPos,\r\n        rotation = self.getRotation()\r\n    })\r\n    SnapDeck(newDeck)\r\nend\r\n\r\nfunction SnapDeck(deck)\r\n    local sPos = self.getPosition()\r\n    local sRot = self.getRotation()\r\n    deck.setPositionSmooth({sPos[1], sPos[2]+0.3, sPos[3]}, false, true)\r\n    deck.setRotationSmooth({sRot[1]+180, sRot[2], sRot[3]}, false, true)\r\n    state.deck = deck\r\n    deck.randomize()\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\r\n    if (not state.active) or (not state.deck) then return end\r\n    if state.deck == obj then\r\n        state.deck = nil\r\n    end\r\nend\r\n\r\nfunction onObjectDropped(_, obj)\r\n    if (not state.active) or state.deck then return end\r\n    if obj.tag ~= 'Deck' then return end\r\n    local dx, dy = self.getPosition()[1] - obj.getPosition()[1], self.getPosition()[3] - obj.getPosition()[3]\r\n    if math.abs(dx) < 1 and math.abs(dy) < 1 then\r\n        SnapDeck(obj)\r\n    end\r\nend\r\n\r\nfunction onLoad(saveState)\r\n    deckSource = getObjectFromGUID('b3ae5f') or error('Deck Holder: no deck source found!')\r\n    if saveState and saveState ~= nil then\r\n        local loadState = JSON.decode(saveState)\r\n        state.active = loadState.active\r\n        if loadState.deckGUID then\r\n            state.deck = getObjectFromGUID(loadState.deckGUID)\r\n            state.deck.randomize()\r\n        end\r\n    end\r\n    self.tooltip = false\r\nend\r\n\r\nfunction onSave()\r\n    local sState = {active = state.active}\r\n    if state.deck then\r\n        sState.deckGUID = state.deck.getGUID()\r\n    end\r\n    return JSON.encode(sState)\r\nend\r\n\n----#include TTS_xwing/src/DeckHolder",
        "LuaScriptState": "{\"active\":true,\"deckGUID\":\"4782b4\"}",
        "XmlUI": ""
      },
      {
        "GUID": "252512",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 40.0,
          "posY": 0.9,
          "posZ": -15.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.65,
          "scaleY": 0.65,
          "scaleZ": 0.65
        },
        "Nickname": "Deck Holder",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/787480069411278141/EBD7FA75F60A26C69C242ADD0329D276D1CA6E22/",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/965354426650274392/81D92F20884EA58A5758B0391B49DE1C4A932258/",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/787480069411278141/EBD7FA75F60A26C69C242ADD0329D276D1CA6E22/",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "----#include TTS_xwing/src/DeckHolder\n__XW_LayoutHandlers = {\r\n    show = 'Enable',\r\n    hide = 'Disable'\r\n}\r\n\r\nstate = {\r\n    active = true,\r\n    deck = nil\r\n}\r\n\r\nfunction Enable()\r\n    state.active = true\r\n    function DelayedDrawCoroutine()\r\n        repeat\r\n            coroutine.yield(0)\r\n        until (not self.isSmoothMoving()) and self.resting\r\n        if state.deck then\r\n            SnapDeck(state.deck)\r\n        else\r\n            DrawDeck()\r\n        end\r\n        return 1\r\n    end\r\n    startLuaCoroutine(self, 'DelayedDrawCoroutine')\r\nend\r\n\r\nfunction Disable()\r\n    state.active = false\r\n    if state.deck then\r\n        state.deck.destruct()\r\n    end\r\n    state.deck = nil\r\n    self.clearButtons()\r\nend\r\n\r\nfunction DrawDeck()\r\n    local targetPos = self.getPosition()\r\n    targetPos.y = targetPos.y + 0.3\r\n    local targetRot = self.getRotation()\r\n    targetRot.x = targetRot.x + 180\r\n    local newDeck = deckSource.takeObject({\r\n        position = targetPos,\r\n        rotation = self.getRotation()\r\n    })\r\n    SnapDeck(newDeck)\r\nend\r\n\r\nfunction SnapDeck(deck)\r\n    local sPos = self.getPosition()\r\n    local sRot = self.getRotation()\r\n    deck.setPositionSmooth({sPos[1], sPos[2]+0.3, sPos[3]}, false, true)\r\n    deck.setRotationSmooth({sRot[1]+180, sRot[2], sRot[3]}, false, true)\r\n    state.deck = deck\r\n    deck.randomize()\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\r\n    if (not state.active) or (not state.deck) then return end\r\n    if state.deck == obj then\r\n        state.deck = nil\r\n    end\r\nend\r\n\r\nfunction onObjectDropped(_, obj)\r\n    if (not state.active) or state.deck then return end\r\n    if obj.tag ~= 'Deck' then return end\r\n    local dx, dy = self.getPosition()[1] - obj.getPosition()[1], self.getPosition()[3] - obj.getPosition()[3]\r\n    if math.abs(dx) < 1 and math.abs(dy) < 1 then\r\n        SnapDeck(obj)\r\n    end\r\nend\r\n\r\nfunction onLoad(saveState)\r\n    deckSource = getObjectFromGUID('b3ae5f') or error('Deck Holder: no deck source found!')\r\n    if saveState and saveState ~= nil then\r\n        local loadState = JSON.decode(saveState)\r\n        state.active = loadState.active\r\n        if loadState.deckGUID then\r\n            state.deck = getObjectFromGUID(loadState.deckGUID)\r\n            state.deck.randomize()\r\n        end\r\n    end\r\n    self.tooltip = false\r\nend\r\n\r\nfunction onSave()\r\n    local sState = {active = state.active}\r\n    if state.deck then\r\n        sState.deckGUID = state.deck.getGUID()\r\n    end\r\n    return JSON.encode(sState)\r\nend\r\n\n----#include TTS_xwing/src/DeckHolder",
        "LuaScriptState": "{\"active\":true,\"deckGUID\":\"9be6f5\"}",
        "XmlUI": ""
      },
      {
        "GUID": "64f4d8",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.02,
          "posY": 1.05,
          "posZ": 14.7,
          "rotX": -5.031321E-07,
          "rotY": 0.009673207,
          "rotZ": 1.510783E-06,
          "scaleX": 0.93,
          "scaleY": 1.19,
          "scaleZ": 0.93
        },
        "Nickname": "Bomb Dropper",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "d05464",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -0.129479438,
              "posY": 1.19274759,
              "posZ": 15.07045,
              "rotX": -1.63847635E-05,
              "rotY": 359.974274,
              "rotZ": -1.71922347E-05,
              "scaleX": 0.5750004,
              "scaleY": 0.5750004,
              "scaleZ": 0.5750004
            },
            "Nickname": "Bomb drop token (unassigned)",
            "Description": "be3:br3:s2:tr1:tr2:tr3:br2:br1:te1:te2:te3:se2:be1:be2:s3r:s5r:te1r:tr1r:s3:s1r:s2r:s4r",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/devices/Bombdropper.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Bomb drop gizmo token\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = false\r\n__XW_TokenType = 'helper:bombDrop'\r\n\r\n-- Ref to assigned ship if there is one\r\nassignedShip = nil\r\n\r\nnameUnassigned = 'Bomb drop token (unassigned)'\r\nnameAssigned = '\\'s bomb drop token'\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n        local state = {assignedShipGUID=assignedShip.getGUID()}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(save_state)\r\n    self.setName(nameUnassigned)\r\n    if save_state ~= '' and save_state ~= 'null' and save_state ~= nil then\r\n        local assignedShipGUID = JSON.decode(save_state).assignedShipGUID\r\n        if assignedShipGUID ~= nil and getObjectFromGUID(assignedShipGUID) ~= nil then\r\n            assignedShip = getObjectFromGUID(assignedShipGUID)\r\n            self.setName(assignedShip.getName() .. nameAssigned)\r\n            SpawnFirstButtons()\r\n        end\r\n    end\r\nend\r\n\r\n-- Spawn initial drop/unsassign buttons\r\nfunction SpawnFirstButtons()\r\n    self.clearButtons()\r\n    local decloakButton = {['function_owner'] = self, ['click_function'] = 'SpawnDropButtons', ['label'] = 'Drop bomb', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1500, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(decloakButton)\r\n    local deleteButton = {['function_owner'] = self , ['click_function'] = 'selfUnassign', ['label'] = 'Unassign', ['position'] = {0, 0.25, 1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1100, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(deleteButton)\r\nend\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped()\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.type== 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            printToAll('Bomb drop token assigned to ' .. nearest.getName(), {0.2, 0.2, 1})\r\n            SpawnFirstButtons()\r\n            assignedShip = nearest\r\n            self.setName(assignedShip.getName() .. nameAssigned)\r\n        end\r\n    end\r\nend\r\n\r\n-- Button spacing\r\nlocal sp = 0.7\r\n-- Base drop buttons positions\r\nlocal butPos = {}\r\nbutPos['s1'] = {0, 1*sp}\r\nbutPos['s2'] = {0, 2*sp}\r\nbutPos['s3'] = {0, 3*sp}\r\nbutPos['s4'] = {0, 4*sp}\r\nbutPos['s5'] = {0, 5*sp}\r\nbutPos['br1'] = {1*sp, 1*sp}\r\nbutPos['br2'] = {1*sp, 2*sp}\r\nbutPos['br3'] = {1*sp, 3*sp}\r\nbutPos['tr1'] = {2*sp, 1*sp}\r\nbutPos['tr2'] = {2*sp, 2*sp}\r\nbutPos['tr3'] = {2*sp, 3*sp}\r\n\r\n-- Get a drop buttons position (left/front variant included)\r\nfunction ButtonPos(butCode)\r\n    local rev = false\r\n    local left = false\r\n    if butCode:sub(-1, -1) == 'r' then\r\n        rev = true\r\n        butCode = butCode:sub(1, -2)\r\n    end\r\n    if butCode:sub(2, 2) == 'e' or butCode:sub(2, 2) == 'l' then\r\n        left = true\r\n        butCode = butCode:sub(1, 1) .. 'r' .. butCode:sub(3, -1)\r\n    end\r\n    local height = 0.3\r\n    local src = butPos[butCode]\r\n    if src == nil then return nil end\r\n    local pos = {src[1], height, src[2]}\r\n    if rev then pos[3] = -1*pos[3] end\r\n    if left then pos[1] = -1*pos[1] end\r\n    return pos\r\nend\r\n\r\n-- Spawn drop buttons based on self description\r\nfunction SpawnDropButtons()\r\n    self.clearButtons()\r\n    local drops = {{code='s1', pos=ButtonPos('s1')}}\r\n    for drop in string.gmatch(self.getDescription(), \"[^:]+\") do\r\n        if ButtonPos(drop) ~= nil then\r\n            table.insert(drops, {code=drop, pos=ButtonPos(drop)})\r\n        end\r\n    end\r\n    local labBut = {position={0, 0.3, 0}, width=1300, height=250, font_size=120, label='(choose drop template)', click_function = 'dummy'}\r\n    self.createButton(labBut)\r\n    local dBut = {width=350, height=350, function_owner=self, font_size=200}\r\n    for k, dTable in pairs(drops) do\r\n        dBut.position = dTable.pos\r\n        dBut.label = dTable.code\r\n        _G[dTable.code] = function() DropBomb(dTable.code) end\r\n        dBut.click_function = dTable.code\r\n        self.createButton(dBut)\r\n    end\r\nend\r\n\r\n-- Start a bomb drop on a ship\r\nfunction DropBomb(code)\r\n    assignedShip.setDescription('b:' .. code)\r\n    SpawnFirstButtons()\r\nend\r\n\r\n-- Unassign the ship\r\nfunction selfUnassign()\r\n    assignedShip = nil\r\n    self.clearButtons()\r\n    self.setName(nameUnassigned)\r\nend\r\n\r\nfunction dummy() return end",
            "LuaScriptState": "{\"assignedShipGUID\":\"9aac86\"}",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "8b1614",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -46.23375,
          "posY": 0.960309267,
          "posZ": 8.245125,
          "rotX": -2.606176E-06,
          "rotY": 0.06837616,
          "rotZ": 0.000112540023,
          "scaleX": 0.64,
          "scaleY": 1.14,
          "scaleZ": 0.64
        },
        "Nickname": "Gas Clouds",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/GCC1.obj",
          "DiffuseURL": "http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/GasCloudb.png",
          "NormalURL": "",
          "ColliderURL": "http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/GCC1.obj",
          "Convex": false,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CustomShader": {
            "SpecularColor": {
              "r": 0.8745098,
              "g": 0.8117647,
              "b": 0.745098054
            },
            "SpecularIntensity": 0.15,
            "SpecularSharpness": 3.0,
            "FresnelStrength": 0.1
          },
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "c2ca21",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.1568832,
              "posY": 1.12468231,
              "posZ": 8.152719,
              "rotX": -0.00091225683,
              "rotY": 164.908218,
              "rotZ": 179.99881,
              "scaleX": 0.975,
              "scaleY": 0.975,
              "scaleZ": 0.975
            },
            "Nickname": "Gas Cloud 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "aaf32d",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -29.5528831,
                  "posY": 1.04157519,
                  "posZ": -5.87699842,
                  "rotX": -4.60911025E-08,
                  "rotY": 164.978531,
                  "rotZ": 180.0,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "887a7a",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -25.9075832,
                  "posY": 1.04116368,
                  "posZ": -10.6166229,
                  "rotX": -7.415265E-07,
                  "rotY": 164.984116,
                  "rotZ": 180.0,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "34f189",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -22.5121384,
                  "posY": 1.04088938,
                  "posZ": -4.773049,
                  "rotX": -1.21172388E-05,
                  "rotY": 180.0,
                  "rotZ": -3.715227E-06,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "55377c",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -16.8762665,
                  "posY": 1.04393935,
                  "posZ": -7.556241,
                  "rotX": 1.84695949E-07,
                  "rotY": 164.980133,
                  "rotZ": 180.0,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "3ad4df",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -9.995456,
                  "posY": 1.04116368,
                  "posZ": -7.772477,
                  "rotX": 3.6634912E-08,
                  "rotY": 180.012344,
                  "rotZ": 180.0,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 6",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "688e04",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.36,
          "posY": 0.96,
          "posZ": 12.54,
          "rotX": -6.6693814E-05,
          "rotY": 90.00607,
          "rotZ": 2.82065685E-05,
          "scaleX": 0.3,
          "scaleY": 0.92,
          "scaleZ": 0.3
        },
        "Nickname": "All Mines",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9303135,
          "g": 0.9303135,
          "b": 0.9303135
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/960842745721175533/649EB088A347E5E9741937F083A936F9C6A3B44D/",
          "DiffuseURL": "https://i.imgur.com/CpG2Tq2.jpg",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/960842745721175533/649EB088A347E5E9741937F083A936F9C6A3B44D/",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "121ac6",
            "Name": "Custom_Token",
            "Transform": {
              "posX": 1.77690363,
              "posY": 1.19575,
              "posZ": 12.6690617,
              "rotX": 5.24224E-05,
              "rotY": 270.015656,
              "rotZ": -5.13457926E-05,
              "scaleX": 0.455393642,
              "scaleY": 1.0,
              "scaleZ": 0.455393642
            },
            "Nickname": "Cluster Mine (middle)",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomImage": {
              "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/bombs/clustermine.png",
              "ImageSecondaryURL": "",
              "ImageScalar": 1.0,
              "WidthScale": 0.0,
              "CustomToken": {
                "Thickness": 0.1,
                "MergeDistancePixels": 5.0,
                "StandUp": false,
                "Stackable": false
              }
            },
            "LuaScript": "function onDropped()\r\n    Global.call('API_BombTokenDrop', {token=self})\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "1aca5f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": 9.74877,
                  "posY": 0.9671074,
                  "posZ": 12.8914194,
                  "rotX": -1.2892895E-05,
                  "rotY": -0.005236567,
                  "rotZ": -1.36535336E-05,
                  "scaleX": 0.375,
                  "scaleY": 0.375,
                  "scaleZ": 0.375
                },
                "Nickname": "Proximity Mine",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992160261,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "http://cloud-3.steamusercontent.com/ugc/766109193840986263/649EB088A347E5E9741937F083A936F9C6A3B44D/",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/960842745721203136/F19D163CCC095A2A679FD35BFEB3E2F39F4C37D6/",
                  "NormalURL": "",
                  "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/777374655669797951/C928693C5618A094E8E1E20F2C5485096C2735FD/",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "function onDropped()\r\n    Global.call('API_BombTokenDrop', {token=self})\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "81f0a5",
                "Name": "Custom_Token",
                "Transform": {
                  "posX": 12.6080294,
                  "posY": 1.01710749,
                  "posZ": 12.8748693,
                  "rotX": 3.70916932E-05,
                  "rotY": 0.0208272729,
                  "rotZ": -0.000124500351,
                  "scaleX": 0.6428425,
                  "scaleY": 1.0,
                  "scaleZ": 0.6428425
                },
                "Nickname": "Connor Net",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "http://cloud-3.steamusercontent.com/ugc/960842745721217623/9888E673B8CCE50D8FFA98AFB4142C2D4713C6AE/",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomToken": {
                    "Thickness": 0.1,
                    "MergeDistancePixels": 5.0,
                    "StandUp": false,
                    "Stackable": false
                  }
                },
                "LuaScript": "function onDropped()\r\n    Global.call('API_BombTokenDrop', {token=self})\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "c70f83",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 46.23,
          "posY": 0.96,
          "posZ": 8.25,
          "rotX": -2.606176E-06,
          "rotY": 0.06837616,
          "rotZ": 0.000112539994,
          "scaleX": 0.64,
          "scaleY": 1.14,
          "scaleZ": 0.64
        },
        "Nickname": "Gas Clouds",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/GCC1.obj",
          "DiffuseURL": "http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/GasCloudb.png",
          "NormalURL": "",
          "ColliderURL": "http://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/asteroids/GCC1.obj",
          "Convex": false,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CustomShader": {
            "SpecularColor": {
              "r": 0.8745098,
              "g": 0.8117647,
              "b": 0.745098054
            },
            "SpecularIntensity": 0.15,
            "SpecularSharpness": 3.0,
            "FresnelStrength": 0.1
          },
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "c2ca21",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 46.09846,
              "posY": 1.12436485,
              "posZ": 8.680867,
              "rotX": -6.46954E-05,
              "rotY": 164.911118,
              "rotZ": 180.0,
              "scaleX": 0.975,
              "scaleY": 0.975,
              "scaleZ": 0.975
            },
            "Nickname": "Gas Cloud 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "aaf32d",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -29.5528831,
                  "posY": 1.04157519,
                  "posZ": -5.87699842,
                  "rotX": -4.60911025E-08,
                  "rotY": 164.978531,
                  "rotZ": 180.0,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "887a7a",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -25.9075832,
                  "posY": 1.04116368,
                  "posZ": -10.6166229,
                  "rotX": -7.415265E-07,
                  "rotY": 164.984116,
                  "rotZ": 180.0,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "34f189",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -22.5121384,
                  "posY": 1.04088938,
                  "posZ": -4.773049,
                  "rotX": -1.21172388E-05,
                  "rotY": 180.0,
                  "rotZ": -3.715227E-06,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "55377c",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -16.8762665,
                  "posY": 1.04393935,
                  "posZ": -7.556241,
                  "rotX": 1.84695949E-07,
                  "rotY": 164.980133,
                  "rotZ": 180.0,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "6": {
                "GUID": "3ad4df",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -9.995456,
                  "posY": 1.04116368,
                  "posZ": -7.772477,
                  "rotX": 3.6634912E-08,
                  "rotY": 180.012344,
                  "rotZ": 180.0,
                  "scaleX": 0.975,
                  "scaleY": 0.975,
                  "scaleZ": 0.975
                },
                "Nickname": "Gas Cloud 6",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-model.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-col.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "b75e09",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.45,
          "posY": 1.07,
          "posZ": 5.87,
          "rotX": 1.18292166E-06,
          "rotY": 179.9776,
          "rotZ": 4.64612867E-06,
          "scaleX": 1.08,
          "scaleY": 1.08,
          "scaleZ": 1.08
        },
        "Nickname": "Deplete",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/deplete.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "ee684c",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 1.43468571,
              "posY": 1.22193635,
              "posZ": 6.276622,
              "rotX": -1.03726882E-06,
              "rotY": 0.04005409,
              "rotZ": -2.52942664E-06,
              "scaleX": 0.350000024,
              "scaleY": 0.350000024,
              "scaleZ": 0.350000024
            },
            "Nickname": "Deplete",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/deplete.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'deplete'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "568727",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.31,
          "posY": 1.05,
          "posZ": -4.36,
          "rotX": 3.63114236E-06,
          "rotY": 90.01563,
          "rotZ": 4.13883345E-06,
          "scaleX": 0.93,
          "scaleY": 0.93,
          "scaleZ": 0.93
        },
        "Nickname": "Fuse",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/fuse.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon-collider.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "fc2873",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.17323327,
              "posY": 1.18472564,
              "posZ": -4.44804764,
              "rotX": 1.47722278E-06,
              "rotY": 359.971954,
              "rotZ": -5.11798726E-06,
              "scaleX": 0.375000447,
              "scaleY": 0.375000447,
              "scaleZ": 0.375000447
            },
            "Nickname": "Fuse",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/condition/tokens/fuse.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon-collider.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = false\r\n__XW_TokenType = 'fuse'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "2abb81",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.43,
          "posY": 1.07,
          "posZ": 10.16,
          "rotX": 1.74502063E-07,
          "rotY": 179.9776,
          "rotZ": -2.42269124E-07,
          "scaleX": 1.08,
          "scaleY": 1.08,
          "scaleZ": 1.08
        },
        "Nickname": "Strain",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Strain.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "4597b2",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 1.22565365,
              "posY": 1.2244364,
              "posZ": 10.5235739,
              "rotX": 4.357835E-06,
              "rotY": 330.0226,
              "rotZ": -3.95655263E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Strain",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Strain.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'strain'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "2d8850",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.36,
          "posY": 1.07,
          "posZ": -4.37,
          "rotX": 9.776262E-06,
          "rotY": 269.991455,
          "rotZ": -1.28075146E-06,
          "scaleX": 1.0,
          "scaleY": 1.0,
          "scaleZ": 1.0
        },
        "Nickname": "Cloak",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/cloak.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "f6c8b9",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 1.29955649,
              "posY": 1.21643639,
              "posZ": -4.3134284,
              "rotX": 1.97984673E-06,
              "rotY": 0.0158357918,
              "rotZ": 6.587263E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Cloak",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/cloak.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Token for easy barrel rolls with StarViper Mk.II title\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = false\r\n__XW_TokenType = 'cloak'\r\n\r\n-- Ref to assigned ship if there is one\r\nassignedShip = nil\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n        local state = {assignedShipGUID=assignedShip.getGUID()}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(save_state)\r\n    if save_state ~= '' and save_state ~= 'null' and save_state ~= nil then\r\n        local assignedShipGUID = JSON.decode(save_state).assignedShipGUID\r\n        if assignedShipGUID ~= nil and getObjectFromGUID(assignedShipGUID) ~= nil then\r\n            assignedShip = getObjectFromGUID(assignedShipGUID)\r\n            SpawnFirstButtons()\r\n        end\r\n    end\r\nend\r\n\r\n-- Spawn initial decloak/delete buttons\r\nfunction SpawnFirstButtons()\r\n    __XW_TokenIdle = true\r\n    self.clearButtons()\r\n    local decloakButton = {['function_owner'] = self, ['click_function'] = 'SpawnDecloakButtons', ['label'] = 'Decloak', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(decloakButton)\r\n    local deleteButton = {['function_owner'] = self , ['click_function'] = 'selfDestruct', ['label'] = 'Delete', ['position'] = {0, 0.25, 1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(deleteButton)\r\nend\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped()\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.type== 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            printToAll('Cloak token assigned to ' .. nearest.getName(), {0.2, 0.2, 1})\r\n            self.setRotation(nearest.getRotation())\r\n            SpawnFirstButtons()\r\n            assignedShip = nearest\r\n        end\r\n    end\r\nend\r\n\r\n-- Spawn undo/delete/slide buttons (after a move)\r\nfunction SpawnFinalButtons()\r\n    undoToBackCount = 1\r\n    self.clearButtons()\r\n    local undoButton = {['function_owner'] = self , ['click_function'] = 'performUndo', ['label'] = 'Undo', ['position'] = {0, 0.25, -1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(undoButton)\r\n    local deleteButton = {['function_owner'] = self , ['click_function'] = 'selfDestruct', ['label'] = 'Delete', ['position'] = {0, 0.25, 1.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1000, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(deleteButton)\r\nend\r\n\r\nfunction SpawnDecloakSetRF()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local decloakRF1_Button = {['function_owner'] = self,['click_function'] = 'dechocloakRF1', ['label'] = 'Forward', ['position'] = {0, 0.25, -1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakRF1_Button)\r\n    local decloakRF2_Button = {['function_owner'] = self,['click_function'] = 'dechocloakRF2', ['label'] = 'Middle', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakRF2_Button)\r\n    local decloakRF3_Button = {['function_owner'] = self,['click_function'] = 'dechocloakRF3', ['label'] = 'Backward', ['position'] = {0, 0.25, 1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakRF3_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\nfunction SpawnDecloakSetRB()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local decloakRB1_Button = {['function_owner'] = self,['click_function'] = 'dechocloakRB1', ['label'] = 'Forward', ['position'] = {0, 0.25, -1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakRB1_Button)\r\n    local decloakRB2_Button = {['function_owner'] = self,['click_function'] = 'dechocloakRB2', ['label'] = 'Middle', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakRB2_Button)\r\n    local decloakRB3_Button = {['function_owner'] = self,['click_function'] = 'dechocloakRB3', ['label'] = 'Backward', ['position'] = {0, 0.25, 1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakRB3_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\nfunction SpawnDecloakSetLF()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local decloakLF1_Button = {['function_owner'] = self,['click_function'] = 'dechocloakLF1', ['label'] = 'Forward', ['position'] = {0, 0.25, -1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakLF1_Button)\r\n    local decloakLF2_Button = {['function_owner'] = self,['click_function'] = 'dechocloakLF2', ['label'] = 'Middle', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakLF2_Button)\r\n    local decloakLF3_Button = {['function_owner'] = self,['click_function'] = 'dechocloakLF3', ['label'] = 'Backward', ['position'] = {0, 0.25, 1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakLF3_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\nfunction SpawnDecloakSetLB()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    local decloakLB1_Button = {['function_owner'] = self,['click_function'] = 'dechocloakLB1', ['label'] = 'Forward', ['position'] = {0, 0.25, -1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakLB1_Button)\r\n    local decloakLB2_Button = {['function_owner'] = self,['click_function'] = 'dechocloakLB2', ['label'] = 'Middle', ['position'] = {0, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakLB2_Button)\r\n    local decloakLB3_Button = {['function_owner'] = self,['click_function'] = 'dechocloakLB3', ['label'] = 'Backward', ['position'] = {0, 0.25, 1.1}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 520, ['font_size'] = 250}\r\n    self.createButton(decloakLB3_Button)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 2.5}, ['rotation'] =  {0, 0, 0}, ['width'] = 1200, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\n-- Spawn back/delete/moves buttons (regular or Echo)\r\nfunction SpawnDecloakButtons()\r\n    __XW_TokenIdle = false\r\n    self.clearButtons()\r\n    if assignedShip.getName():find('Echo') == nil then\r\n        local decloakStr_Button = {['function_owner'] = self,['click_function'] = 'decloakStraight', ['label'] = 'CS', ['position'] = {0, 0.25, -2}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakStr_Button)\r\n        local decloakLF_Button = {['function_owner'] = self,['click_function'] = 'decloakLF', ['label'] = 'CF', ['position'] = {-1.5, 0.25, -1}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakLF_Button)\r\n        local decloakL_Button = {['function_owner'] = self,['click_function'] = 'decloakL', ['label'] = 'CL', ['position'] = {-1.5, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakL_Button)\r\n        local decloakLB_Button = {['function_owner'] = self,['click_function'] = 'decloakLB', ['label'] = 'CB', ['position'] = {-1.5, 0.25, 1}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakLB_Button)\r\n        local decloakRF_Button = {['function_owner'] = self,['click_function'] = 'decloakRF', ['label'] = 'CF', ['position'] = {1.5, 0.25, -1}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakRF_Button)\r\n        local decloakR_Button = {['function_owner'] = self,['click_function'] = 'decloakR', ['label'] = 'CR', ['position'] = {1.5, 0.25, 0}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakR_Button)\r\n        local decloakRB_Button = {['function_owner'] = self,['click_function'] = 'decloakRB', ['label'] = 'CB', ['position'] = {1.5, 0.25, 1}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakRB_Button)\r\n    else\r\n        local decloakStrR_Button = {['function_owner'] = self,['click_function'] = 'dechocloakStraightR', ['label'] = 'CR', ['position'] = {0.5, 0.25, -2}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakStrR_Button)\r\n        local decloakStrL_Button = {['function_owner'] = self,['click_function'] = 'dechocloakStraightL', ['label'] = 'CL', ['position'] = {-0.5, 0.25, -2}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakStrL_Button)\r\n        local decloakLF_Button = {['function_owner'] = self,['click_function'] = 'SpawnDecloakSetLF', ['label'] = 'LF', ['position'] = {-1.5, 0.25, -0.6}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakLF_Button)\r\n        local decloakLB_Button = {['function_owner'] = self,['click_function'] = 'SpawnDecloakSetLB', ['label'] = 'LB', ['position'] = {-1.5, 0.25, 0.6}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakLB_Button)\r\n        local decloakRF_Button = {['function_owner'] = self,['click_function'] = 'SpawnDecloakSetRF', ['label'] = 'RF', ['position'] = {1.5, 0.25, -0.6}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakRF_Button)\r\n        local decloakRB_Button = {['function_owner'] = self,['click_function'] = 'SpawnDecloakSetRB', ['label'] = 'RB', ['position'] = {1.5, 0.25, 0.6}, ['rotation'] =  {0, 0, 0}, ['width'] = 365, ['height'] = 520, ['font_size'] = 250}\r\n        self.createButton(decloakRB_Button)\r\n    end\r\n    local deleteButton = {['function_owner'] = self , ['click_function'] = 'selfDestruct', ['label'] = 'Delete', ['position'] = {0, 0.25, 2}, ['rotation'] =  {0, 0, 0}, ['width'] = 750, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(deleteButton)\r\n    local backButton = {['function_owner'] = self , ['click_function'] = 'resetToFirst', ['label'] = 'Back', ['position'] = {0, 0.25, 1}, ['rotation'] =  {0, 0, 0}, ['width'] = 750, ['height'] = 500, ['font_size'] = 250}\r\n    self.createButton(backButton)\r\nend\r\n\r\n--------\r\n-- DECLOAK MOVES\r\nfunction decloakStraight()\r\n    if Global.call('API_PerformMove', {code='cs', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction decloakRF()\r\n    if Global.call('API_PerformMove', {code='cr1', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction decloakR()\r\n    if Global.call('API_PerformMove', {code='cr2', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction decloakRB()\r\n    if Global.call('API_PerformMove', {code='cr3', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction decloakLF()\r\n    if Global.call('API_PerformMove', {code='ce1', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction decloakL()\r\n    if Global.call('API_PerformMove', {code='ce2', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction decloakLB()\r\n    if Global.call('API_PerformMove', {code='ce3', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakStraightR()\r\n    if Global.call('API_PerformMove', {code='esr', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakStraightL()\r\n    if Global.call('API_PerformMove', {code='ese', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction dechocloakRF1()\r\n    if Global.call('API_PerformMove', {code='erf1', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakRF2()\r\n    if Global.call('API_PerformMove', {code='erf2', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakRF3()\r\n    if Global.call('API_PerformMove', {code='erf3', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n\r\nfunction dechocloakRB1()\r\n    if Global.call('API_PerformMove', {code='erb1', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakRB2()\r\n    if Global.call('API_PerformMove', {code='erb2', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakRB3()\r\n    if Global.call('API_PerformMove', {code='erb3', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n\r\nfunction dechocloakLF1()\r\n    if Global.call('API_PerformMove', {code='eef1', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakLF2()\r\n    if Global.call('API_PerformMove', {code='eef2', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakLF3()\r\n    if Global.call('API_PerformMove', {code='eef3', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n\r\nfunction dechocloakLB1()\r\n    if Global.call('API_PerformMove', {code='eeb1', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakLB2()\r\n    if Global.call('API_PerformMove', {code='eeb2', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\nfunction dechocloakLB3()\r\n    if Global.call('API_PerformMove', {code='eeb3', ship=assignedShip}) then\r\n        SpawnFinalButtons()\r\n    end\r\nend\r\n-- END DECLOAK MOVES\r\n--------\r\n\r\n-- Destroy self\r\nfunction selfDestruct()\r\n    self.destruct()\r\nend\r\n-- Back to first buttons\r\nfunction resetToFirst()\r\n    SpawnFirstButtons()\r\nend\r\n-- Undo move, if undid all back to decloak buttons\r\nfunction performUndo()\r\n    assignedShip.setDescription('q')\r\n    undoToBackCount = undoToBackCount - 1\r\n    if undoToBackCount <= 0 then\r\n        SpawnDecloakButtons()\r\n    end\r\nend\r\n-- Start slide\r\nfunction callSlide(obj, playerColor)\r\n    local started = Global.call('API_StartSlide', {obj=obj, playerColor=playerColor})\r\n    if started then\r\n        undoToBackCount = undoToBackCount + 1\r\n    end\r\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "9851b8",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.39,
          "posY": 1.07,
          "posZ": 10.2,
          "rotX": 2.84345532E-07,
          "rotY": 179.998718,
          "rotZ": -3.77361062E-07,
          "scaleX": 1.08,
          "scaleY": 1.08,
          "scaleZ": 1.08
        },
        "Nickname": "Stress",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/stress.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "a04d81",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.80971348,
              "posY": 1.22449017,
              "posZ": 10.1986189,
              "rotX": 4.578332E-06,
              "rotY": 0.00346273463,
              "rotZ": 1.522041E-06,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Stress",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/stress.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'stress'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "3d8a79",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.4,
          "posY": 1.07,
          "posZ": 8.12,
          "rotX": 4.56732856E-08,
          "rotY": 180.024963,
          "rotZ": -6.517495E-07,
          "scaleX": 1.08,
          "scaleY": 1.08,
          "scaleZ": 1.08
        },
        "Nickname": "Ion",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/ion.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "2e6667",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.72512472,
              "posY": 1.22587311,
              "posZ": 7.91365,
              "rotX": -3.546629E-07,
              "rotY": 14.9750538,
              "rotZ": 3.53728637E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Ion",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/RoundSquared.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/ion.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Target lock color and name script\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'ion'\r\n\r\n-- Was this lock tinted and named already?\r\nset = false\r\n\r\n-- Colors for tinting on pickup\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if set  then\r\n        local state = {set=set}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(save_state)\r\n    if save_state ~= '' and save_state ~= 'null' and save_state ~= nil then\r\n        set = JSON.decode(save_state).set\r\n        self.UI.hide(\"Move\")\r\n    end\r\nend\r\n\r\n-- Set function for external calls\r\nfunction manualSet(arg)\r\n    ship=arg.ref\r\n    set = true\r\n    self.setRotationSmooth(ship.getRotation())\r\nend\r\n\r\n-- Set name on drop near a ship\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ship.type== 'Figurine' and ship.name ~= '' then\r\n            local pos = ship.getPosition()\r\n            local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n            if dist < minDist then\r\n                nearest = ship\r\n                minDist = dist\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        ship = nearest\r\n        set = true\r\n        self.setRotation(nearest.getRotation())\r\n\r\n        printToAll(ship.getName()..\" takes an ion token\")\r\n    else\r\n        ship = nil\r\n        set = false\r\n    end\r\nend\r\n\r\nstat=false\r\n\r\nfunction onContextOpen(player_color)\r\n    if set then\r\n        showBtn()\r\n    end\r\nend\r\n\r\nfunction showBtn()\r\n    if stat==false and ship~=nil then\r\n        if self.is_face_down then\r\n            self.UI.setAttribute(\"Center\", \"rotation\", \"180 0 0\")\r\n            self.UI.setAttribute(\"Center\", \"position\", \"0 0 30\")\r\n        else\r\n            self.UI.setAttribute(\"Center\", \"rotation\", \"0 0 180\")\r\n            self.UI.setAttribute(\"Center\", \"position\", \"0 0 -30\")\r\n        end\r\n        self.UI.show(\"Center\")\r\n        stat=true\r\n    end\r\nend\r\n\r\nfunction hideBtn()\r\n    if stat==true then\r\n        self.UI.hide(\"Center\")\r\n        stat=false\r\n    end\r\nend\r\n\r\nfunction ionMove()\r\n    ship.setDescription('s1')\r\nend\r\n\r\nfunction Delete()\r\n    self.destruct()\r\nend\r\n",
            "LuaScriptState": "{\"set\":true}",
            "XmlUI": "<Defaults>\r\n    <Button class=\"DarkButton\" color=\"#222222\" outline=\"#BBBBBB\" outlineSize=\"2 2\" fontSize=\"22\" textColor=\"#FFFFFF\" fontStyle=\"Bold\"/>\r\n    <Button class=\"ManButton\" color=\"#555555\" outline=\"#BBBBBB\" outlineSize=\"2 2\" fontSize=\"22\" textColor=\"#FFFFFF\" fontStyle=\"Bold\"/>\r\n</Defaults>\r\n<Panel id=\"Center\"\r\n    width=\"400\"\r\n    height=\"400\"\r\n    position=\"0 0 -30\"\r\n    rotation=\"0 0 180\"\r\n    color=\"#aaffaa00\"\r\n    onMouseExit=\"hideBtn\"\r\n    showAnimation=\"Grow\"\r\n    hideAnimation=\"Shrink\"\r\n    active=\"false\">\r\n\r\n    <Button id=\"Move\" class=\"ManButton\" offsetXY=\"0 60\" width=\"120\" height=\"120\" active=\"true\" onClick=\"ionMove\">\r\n        <Image id=\"BlueIcon\" image=\"BlueStraight\" preserveAspect=\"true\"></Image>\r\n    </Button>\r\n    <Button id=\"Delbtn\" class=\"DarkButton\" offsetXY=\"0 -50\" width=\"120\" height=\"70\" active=\"true\" onClick=\"Delete\" fontSize='25'>DEL</Button>\r\n</Panel>",
            "CustomUIAssets": [
              {
                "Name": "BlueStraight",
                "URL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/dial/maneuvers/sb.png"
              }
            ]
          }
        ]
      },
      {
        "GUID": "f99d52",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -45.8158875,
          "posY": 1.06710517,
          "posZ": -10.4843273,
          "rotX": -1.77385061E-06,
          "rotY": 270.009064,
          "rotZ": 180.0,
          "scaleX": 5.380005,
          "scaleY": 5.380005,
          "scaleZ": 5.380005
        },
        "Nickname": "Victory counter",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/victorycounter.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/victorycounter-alt.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CustomShader": {
            "SpecularColor": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "d7531c",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -45.83927,
              "posY": 1.1777482,
              "posZ": -10.49137,
              "rotX": 0.149515316,
              "rotY": 0.00265816832,
              "rotZ": 359.9931,
              "scaleX": 4.28000069,
              "scaleY": 4.28000069,
              "scaleZ": 4.28000069
            },
            "Nickname": "Victory counter",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/victorycounter.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/victorycounter-alt.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "SpecularIntensity": 0.0,
                "SpecularSharpness": 2.0,
                "FresnelStrength": 0.0
              },
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "ae62df",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -39.9545021,
          "posY": 1.0053755,
          "posZ": -12.0416336,
          "rotX": -3.376707E-05,
          "rotY": 269.999542,
          "rotZ": 2.60663364E-05,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "Epic assets",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing4template-nubs.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing4template.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing4template-collider.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CustomShader": {
            "SpecularColor": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "25520c",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -39.9648438,
              "posY": 1.322296,
              "posZ": -11.6144085,
              "rotX": 359.99295,
              "rotY": 0.0221994445,
              "rotZ": 0.368546069,
              "scaleX": 3.63,
              "scaleY": 3.63,
              "scaleZ": 3.63
            },
            "Nickname": "Wing tool 4",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing4template-nubs.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing4template.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing4template-collider.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "SpecularIntensity": 0.0,
                "SpecularSharpness": 2.0,
                "FresnelStrength": 0.0
              },
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "1": {
                "GUID": "9bda95",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -28.8127766,
                  "posY": 1.01248062,
                  "posZ": -11.4547567,
                  "rotX": 3.64625066E-06,
                  "rotY": 269.999939,
                  "rotZ": 2.94304E-06,
                  "scaleX": 3.63,
                  "scaleY": 3.63,
                  "scaleZ": 3.63
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing6template-nubs.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing6template.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing6template-collider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "2": {
                "GUID": "d54c35",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -28.8127766,
                  "posY": 1.01248085,
                  "posZ": -11.4547567,
                  "rotX": 5.906325E-06,
                  "rotY": 269.999939,
                  "rotZ": 7.49982155E-06,
                  "scaleX": 3.63,
                  "scaleY": 3.63,
                  "scaleZ": 3.63
                },
                "Nickname": "Wing tool 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing2template-nubs.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing2template.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/wing2template-collider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "36ae82",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -45.9326248,
          "posY": 0.965941966,
          "posZ": -8.384444,
          "rotX": 1.4525541E-06,
          "rotY": 269.999176,
          "rotZ": -1.10102485E-06,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "Hyperspace marker",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn12.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CustomShader": {
            "SpecularColor": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "markers = nil\r\nfunction onLoad()\r\n    self.addContextMenuItem(\"Setup Aces High\", toggleAcesHighSetup , false)\r\nend\r\n\r\nfunction toggleAcesHighSetup()\r\n    if markers == nil then\r\n        markers = {}\r\n        self.takeObject({\r\n            position          = {-15.25, 0.97, -4.90},\r\n            rotation          = {0.00, 44.92, 0.00},\r\n            flip              = false,\r\n            smooth            = false,\r\n            callback_function = function(obj)\r\n                obj.setLock(true)\r\n                table.insert(markers, obj)\r\n            end\r\n        })\r\n        local mark2 = self.takeObject({\r\n            position          = {-32.36, 1.06, -11.83},\r\n            rotation          = {0.00, 314.99, 180.00},\r\n            flip              = false,\r\n            smooth            = false,\r\n            callback_function = function(obj)\r\n                obj.setLock(true)\r\n                table.insert(markers,obj)\r\n            end\r\n        })\r\n        local mark3 = self.takeObject({\r\n            position          = {-25.21, 0.97, 4.80},\r\n            rotation          = {0.00, 225.00, 0.00},\r\n            flip              = false,\r\n            smooth            = false,\r\n            callback_function = function(obj)\r\n                obj = obj.setState(2)\r\n                obj.setLock(true)\r\n                table.insert(markers, obj)\r\n\r\n            end\r\n        })\r\n        local mark4 = self.takeObject({\r\n            position          = {-8.73, 1.06, 11.79},\r\n            rotation          = {0.00, 134.98, 180.00},\r\n            flip              = false,\r\n            smooth            = false,\r\n            callback_function = function(obj)\r\n                obj = obj.setState(2)\r\n                obj.setLock(true)\r\n                table.insert(markers,obj)\r\n            end\r\n        })\r\n\r\n    else\r\n        for k, marker in pairs(markers) do\r\n            if marker != nil then\r\n                marker.destruct()\r\n            end\r\n        end\r\n        markers = nil\r\n    end\r\n\r\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "672057",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.33422,
              "posY": 1.05936956,
              "posZ": -8.524488,
              "rotX": -0.0007397067,
              "rotY": 0.0143912118,
              "rotZ": -0.0004931306,
              "scaleX": 3.63,
              "scaleY": 3.63,
              "scaleZ": 3.63
            },
            "Nickname": "Hyperspace 1/2",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn12.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "SpecularIntensity": 0.0,
                "SpecularSharpness": 2.0,
                "FresnelStrength": 0.0
              },
              "CastShadows": true
            },
            "LuaScript": "-- Save self state\r\nfunction onSave()\r\n    local state = {shipData=self.getTable(\"Data\")}\r\n    return JSON.encode(state)\r\nend\r\n-- Restore self state\r\nfunction onLoad(savedData)\r\n    if savedData ~= \"\" then\r\n        self.setTable(\"Data\", JSON.decode(savedData).shipData)\r\n    end\r\n    self.addContextMenuItem(\"Enable\", function(argument) setHyperspaceEnabled(true) end, false)\r\n    self.addContextMenuItem(\"Disable\", function(argument) setHyperspaceEnabled(false) end, false)\r\nend\r\n\r\nfunction setHyperspaceEnabled(isEnabled)\r\n    data = self.getTable(\"Data\") or {}\r\n    data.enabled = isEnabled\r\n    self.setTable(\"Data\", data)\r\nend\r\n\r\nfunction getHyperspaceEnabled()\r\n    data = self.getTable(\"Data\") or {}\r\n    return data.enabled or false\r\nend\r\n\r\n---\r\n\r\n-- constant data - no need to save/restore\r\n\r\nexit_point = {\r\n      eye   = {x =  3.0, y = 0, z =  0  , angle =    0, backangle = 180},\r\n      blank = {x = -1.5, y = 0, z =  2.6, angle =  120, backangle = 60},\r\n      hit   = {x = -1.5, y = 0, z = -2.6, angle = -120, backangle = -60}\r\n    }\r\n\r\n---\r\nfunction onCollisionEnter(collision_info)\r\n    if not self.getLock() or not getHyperspaceEnabled() then\r\n        return\r\n    end\r\n    obj = collision_info.collision_object\r\n    if obj.type~= 'Figurine' or obj.getLock() then\r\n        return\r\n    end\r\n    local size = obj.getTable(\"Data\").Size\r\n\r\n    hyperspace_exit = 'eye'\r\n    if #collision_info.contact_points > 0 then\r\n        contact = self.positionToLocal(collision_info.contact_points[1])\r\n        dists = {}\r\n        for k,v in pairs(exit_point) do\r\n            table.insert(dists, {name=k, dist=vectorDistSq(v, contact)})\r\n        end\r\n        table.sort(dists, function (a, b) return a.dist < b.dist end)\r\n        hyperspace_exit = dists[1].name\r\n    end\r\n    -- debugOutput('exit point',hyperspace_exit)\r\n    distance = 0.47\r\n    if size == \"medium\" then\r\n      distance = 0.575\r\n    elseif size == \"large\" then\r\n      distance = 0.67\r\n    end\r\n    angle = exit_point[hyperspace_exit].angle\r\n    -- debugOutput('dist',distance)\r\n    -- debugOutput('angle',angle)\r\n    pos = {distance*math.cos(angle * math.pi/180), 0, distance*math.sin(angle * math.pi/180)}\r\n    if self.is_face_down then\r\n      angle = exit_point[hyperspace_exit].backangle\r\n    end\r\n    rot = {0,self.getRotation().y - 90 - angle,0}\r\n\r\n    obj.setRotationSmooth(rot,false,true)\r\n    obj.setPositionSmooth(self.positionToWorld(pos),false, true)\r\n    obj.setLock(true)\r\nend\r\n\r\nfunction debugOutput(tag, obj)\r\n    success, msg = pcall(function (o) broadcastToAll(tag..': '..JSON.encode(obj)) end, obj)\r\n    if not success then broadcastToAll('Error: '..msg) end\r\nend\r\n\r\nfunction vectorDistSq(a, b)\r\n    x = a.x - b.x\r\n    y = a.y - b.y\r\n    z = a.z - b.z\r\n    return x*x + y*y + z*z\r\nend\r\n",
            "LuaScriptState": "{\"shipData\":{\"enabled\":false}}",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "27a530",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -29.7011623,
                  "posY": 0.9676033,
                  "posZ": -10.9185438,
                  "rotX": 2.12493014E-05,
                  "rotY": 269.999817,
                  "rotZ": 7.00571445E-06,
                  "scaleX": 3.63,
                  "scaleY": 3.63,
                  "scaleZ": 3.63
                },
                "Nickname": "Hyperspace 3/4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn34.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/hyperspacespawn.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "-- Save self state\r\nfunction onSave()\r\n    local state = {shipData=self.getTable(\"Data\")}\r\n    return JSON.encode(state)\r\nend\r\n-- Restore self state\r\nfunction onLoad(savedData)\r\n    if savedData ~= \"\" then\r\n        self.setTable(\"Data\", JSON.decode(savedData).shipData)\r\n    end\r\n    self.addContextMenuItem(\"Enable\", function(argument) setHyperspaceEnabled(true) end, false)\r\n    self.addContextMenuItem(\"Disable\", function(argument) setHyperspaceEnabled(false) end, false)\r\nend\r\n\r\nfunction setHyperspaceEnabled(isEnabled)\r\n    data = self.getTable(\"Data\") or {}\r\n    data.enabled = isEnabled\r\n    self.setTable(\"Data\", data)\r\nend\r\n\r\nfunction getHyperspaceEnabled()\r\n    data = self.getTable(\"Data\") or {}\r\n    return data.enabled or false\r\nend\r\n\r\n---\r\n\r\n-- constant data - no need to save/restore\r\n\r\nexit_point = {\r\n      eye   = {x =  3.0, y = 0, z =  0  , angle =    0, backangle = 180},\r\n      blank = {x = -1.5, y = 0, z =  2.6, angle =  120, backangle = 60},\r\n      hit   = {x = -1.5, y = 0, z = -2.6, angle = -120, backangle = -60}\r\n    }\r\n\r\n---\r\nfunction onCollisionEnter(collision_info)\r\n    if not self.getLock() or not getHyperspaceEnabled() then\r\n        return\r\n    end\r\n    obj = collision_info.collision_object\r\n    if obj.type~= 'Figurine' or obj.getLock() then\r\n        return\r\n    end\r\n    local size = obj.getTable(\"Data\").Size\r\n\r\n    hyperspace_exit = 'eye'\r\n    if #collision_info.contact_points > 0 then\r\n        contact = self.positionToLocal(collision_info.contact_points[1])\r\n        dists = {}\r\n        for k,v in pairs(exit_point) do\r\n            table.insert(dists, {name=k, dist=vectorDistSq(v, contact)})\r\n        end\r\n        table.sort(dists, function (a, b) return a.dist < b.dist end)\r\n        hyperspace_exit = dists[1].name\r\n    end\r\n    -- debugOutput('exit point',hyperspace_exit)\r\n    distance = 0.47\r\n    if size == \"medium\" then\r\n      distance = 0.575\r\n    elseif size == \"large\" then\r\n      distance = 0.67\r\n    end\r\n    angle = exit_point[hyperspace_exit].angle\r\n    -- debugOutput('dist',distance)\r\n    -- debugOutput('angle',angle)\r\n    pos = {distance*math.cos(angle * math.pi/180), 0, distance*math.sin(angle * math.pi/180)}\r\n    if self.is_face_down then\r\n      angle = exit_point[hyperspace_exit].backangle\r\n    end\r\n    rot = {0,self.getRotation().y - 90 - angle,0}\r\n\r\n    obj.setRotationSmooth(rot,false,true)\r\n    obj.setPositionSmooth(self.positionToWorld(pos),false, true)\r\n    obj.setLock(true)\r\nend\r\n\r\nfunction debugOutput(tag, obj)\r\n    success, msg = pcall(function (o) broadcastToAll(tag..': '..JSON.encode(obj)) end, obj)\r\n    if not success then broadcastToAll('Error: '..msg) end\r\nend\r\n\r\nfunction vectorDistSq(a, b)\r\n    x = a.x - b.x\r\n    y = a.y - b.y\r\n    z = a.z - b.z\r\n    return x*x + y*y + z*z\r\nend\r\n",
                "LuaScriptState": "{\"shipData\":{\"enabled\":false}}",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "f5a488",
        "Name": "Custom_Model",
        "Transform": {
          "posX": -2.52,
          "posY": 0.9599998,
          "posZ": -15.59,
          "rotX": -2.38900469E-07,
          "rotY": 90.00054,
          "rotZ": -1.23574246E-05,
          "scaleX": 0.4,
          "scaleY": 0.86,
          "scaleZ": 0.4
        },
        "Nickname": "First Player",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": false,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/new/coin.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/new/redblue.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/new/coin.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 3,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "900937",
        "Name": "Custom_Model",
        "Transform": {
          "posX": -0.04899711,
          "posY": -5.0,
          "posZ": -19.9914742,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 0.375,
          "scaleY": 0.375,
          "scaleZ": 0.375
        },
        "Nickname": "MoveLUT",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/focus.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "function onLoad(save_state)\r\n    local sPos = self.getPosition()\r\n    self.setPosition({sPos[1], -5, sPos[3]})\r\n    self.setRotation({0, 0, 0})\r\n    self.interactable = false\r\n    self.tooltip = false\r\n    self.lock()\r\nend\r\n\r\nfunction ParseLUT()\r\n    return MoveLUT\r\nend\r\n\r\n------------------------\r\n-- AUTO-GENERATED PART: - With manual addition of huge ships\r\n-- Source: https://github.com/tjakubo2/xwing_traj\r\n\r\nMoveLUT = {}\r\nMoveLUT.smallBase = {}\r\nMoveLUT.mediumBase = {}\r\nMoveLUT.largeBase = {}\r\nMoveLUT.hugeBase = {}\r\n\r\n\r\nMoveLUT.resolution = 1.000\r\n\r\nMoveLUT.smallBase.adjust = {}\r\n\r\nMoveLUT.smallBase.adjust[1] = {}\r\nMoveLUT.smallBase.adjust[1].dataNum = 3\r\nMoveLUT.smallBase.adjust[1].length = 60.000\r\nMoveLUT.smallBase.adjust[1].posXZ = {{0.000, 0.000}, {0.000, 20.000}, {0.000, 10.000}}\r\nMoveLUT.smallBase.adjust[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.smallBase.adjust[2] = {}\r\nMoveLUT.smallBase.adjust[2].dataNum = 3\r\nMoveLUT.smallBase.adjust[2].length = 60.000\r\nMoveLUT.smallBase.adjust[2].posXZ = {{0.000, 0.000}, {0.000, -20.000}, {0.000, -10.000}}\r\nMoveLUT.smallBase.adjust[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.mediumBase.adjust = {}\r\n\r\nMoveLUT.mediumBase.adjust[1] = {}\r\nMoveLUT.mediumBase.adjust[1].dataNum = 3\r\nMoveLUT.mediumBase.adjust[1].length = 60.000\r\nMoveLUT.mediumBase.adjust[1].posXZ = {{0.000, 0.000}, {0.000, 20.000}, {0.000, 20.000}}\r\nMoveLUT.mediumBase.adjust[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.mediumBase.adjust[2] = {}\r\nMoveLUT.mediumBase.adjust[2].dataNum = 3\r\nMoveLUT.mediumBase.adjust[2].length = 60.000\r\nMoveLUT.mediumBase.adjust[2].posXZ = {{0.000, 0.000}, {0.000, -20.000}, {0.000, -20.000}}\r\nMoveLUT.mediumBase.adjust[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.largeBase.adjust = {}\r\n\r\nMoveLUT.largeBase.adjust[1] = {}\r\nMoveLUT.largeBase.adjust[1].dataNum = 3\r\nMoveLUT.largeBase.adjust[1].length = 60.000\r\nMoveLUT.largeBase.adjust[1].posXZ = {{0.000, 0.000}, {0.000, 20.000}, {0.000, 20.000}}\r\nMoveLUT.largeBase.adjust[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.largeBase.adjust[2] = {}\r\nMoveLUT.largeBase.adjust[2].dataNum = 3\r\nMoveLUT.largeBase.adjust[2].length = 60.000\r\nMoveLUT.largeBase.adjust[2].posXZ = {{0.000, 0.000}, {0.000, -20.000}, {0.000, -20.000}}\r\nMoveLUT.largeBase.adjust[2].rotY = {0.000, 0.000, 0.000}\r\n\r\n\r\n\r\n\r\nMoveLUT.smallBase.roll = {}\r\n\r\nMoveLUT.smallBase.roll[1] = {}\r\nMoveLUT.smallBase.roll[1].dataNum = 3\r\nMoveLUT.smallBase.roll[1].length = 120.000\r\nMoveLUT.smallBase.roll[1].posXZ = {{0.000, 0.000}, {80.000, 10.000}, {80.000, 10.000}}\r\nMoveLUT.smallBase.roll[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.smallBase.roll[2] = {}\r\nMoveLUT.smallBase.roll[2].dataNum = 3\r\nMoveLUT.smallBase.roll[2].length = 120.000\r\nMoveLUT.smallBase.roll[2].posXZ = {{0.000, 0.000}, {80.000, 00.000}, {80.000, 00.000}}\r\nMoveLUT.smallBase.roll[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.smallBase.roll[3] = {}\r\nMoveLUT.smallBase.roll[3].dataNum = 3\r\nMoveLUT.smallBase.roll[3].length = 120.000\r\nMoveLUT.smallBase.roll[3].posXZ = {{0.000, 0.000}, {80.000, -10.000}, {80.000, -10.000}}\r\nMoveLUT.smallBase.roll[3].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.mediumBase.roll = {}\r\n\r\nMoveLUT.mediumBase.roll[1] = {}\r\nMoveLUT.mediumBase.roll[1].dataNum = 3\r\nMoveLUT.mediumBase.roll[1].length = 130.000\r\nMoveLUT.mediumBase.roll[1].posXZ = {{0.000, 0.000}, {80.000, 20.000}, {80.000, 20.000}}\r\nMoveLUT.mediumBase.roll[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.mediumBase.roll[2] = {}\r\nMoveLUT.mediumBase.roll[2].dataNum = 3\r\nMoveLUT.mediumBase.roll[2].length = 130.000\r\nMoveLUT.mediumBase.roll[2].posXZ = {{0.000, 0.000}, {80.000, 00.000}, {80.000, 00.000}}\r\nMoveLUT.mediumBase.roll[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.mediumBase.roll[3] = {}\r\nMoveLUT.mediumBase.roll[3].dataNum = 3\r\nMoveLUT.mediumBase.roll[3].length = 130.000\r\nMoveLUT.mediumBase.roll[3].posXZ = {{0.000, 0.000}, {80.000, -20.000}, {80.000, -20.000}}\r\nMoveLUT.mediumBase.roll[3].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.largeBase.roll = {}\r\n\r\nMoveLUT.largeBase.roll[1] = {}\r\nMoveLUT.largeBase.roll[1].dataNum = 3\r\nMoveLUT.largeBase.roll[1].length = 140.000\r\nMoveLUT.largeBase.roll[1].posXZ = {{0.000, 0.000}, {100.000, 20.000}, {100.000, 20.000}}\r\nMoveLUT.largeBase.roll[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.largeBase.roll[2] = {}\r\nMoveLUT.largeBase.roll[2].dataNum = 3\r\nMoveLUT.largeBase.roll[2].length = 140.000\r\nMoveLUT.largeBase.roll[2].posXZ = {{0.000, 0.000}, {100.000, 00.000}, {100.000, 00.000}}\r\nMoveLUT.largeBase.roll[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.largeBase.roll[3] = {}\r\nMoveLUT.largeBase.roll[3].dataNum = 3\r\nMoveLUT.largeBase.roll[3].length = 140.000\r\nMoveLUT.largeBase.roll[3].posXZ = {{0.000, 0.000}, {100.000, -20.000}, {100.000, -20.000}}\r\nMoveLUT.largeBase.roll[3].rotY = {0.000, 0.000, 0.000}\r\n\r\n\r\nMoveLUT.smallBase.viperF = {}\r\n\r\nMoveLUT.smallBase.viperF[1] = {}\r\nMoveLUT.smallBase.viperF[1].dataNum = 3\r\nMoveLUT.smallBase.viperF[1].length = 120.000\r\nMoveLUT.smallBase.viperF[1].posXZ = {{0.000, 0.000}, {83.640, 44.645}, {83.640, 44.645}}\r\nMoveLUT.smallBase.viperF[1].rotY = {0.000, 0.000, -45.000}\r\n\r\nMoveLUT.smallBase.viperF[2] = {}\r\nMoveLUT.smallBase.viperF[2].dataNum = 3\r\nMoveLUT.smallBase.viperF[2].length = 120.000\r\nMoveLUT.smallBase.viperF[2].posXZ = {{0.000, 0.000}, { 90.711, 37.574}, {90.711, 37.574}}\r\nMoveLUT.smallBase.viperF[2].rotY = {0.000, 0.000, -45.000}\r\n\r\nMoveLUT.smallBase.viperF[3] = {}\r\nMoveLUT.smallBase.viperF[3].dataNum = 3\r\nMoveLUT.smallBase.viperF[3].length = 120.000\r\nMoveLUT.smallBase.viperF[3].posXZ = {{0.000, 0.000}, {97.782, 30.503}, {97.782, 30.503}}\r\nMoveLUT.smallBase.viperF[3].rotY = {0.000, 0.000, -45.000}\r\n\r\n\r\nMoveLUT.smallBase.viperB = {}\r\n\r\nMoveLUT.smallBase.viperB[1] = {}\r\nMoveLUT.smallBase.viperB[1].dataNum = 3\r\nMoveLUT.smallBase.viperB[1].length = 120.000\r\nMoveLUT.smallBase.viperB[1].posXZ = {{0.000, 0.000}, {97.782, -30.503}, {97.782, -30.503}}\r\nMoveLUT.smallBase.viperB[1].rotY = {0.000, 0.000, 45.000}\r\n\r\nMoveLUT.smallBase.viperB[2] = {}\r\nMoveLUT.smallBase.viperB[2].dataNum = 3\r\nMoveLUT.smallBase.viperB[2].length = 120.000\r\nMoveLUT.smallBase.viperB[2].posXZ = {{0.000, 0.000}, {90.711, -37.574}, {90.711, -37.574}}\r\nMoveLUT.smallBase.viperB[2].rotY = {0.000, 0.000, 45.000}\r\n\r\nMoveLUT.smallBase.viperB[3] = {}\r\nMoveLUT.smallBase.viperB[3].dataNum = 3\r\nMoveLUT.smallBase.viperB[3].length = 120.000\r\nMoveLUT.smallBase.viperB[3].posXZ = {{0.000, 0.000}, {83.640, -44.645}, {83.640, -44.645}}\r\nMoveLUT.smallBase.viperB[3].rotY = {0.000, 0.000, 45.000}\r\n\r\n\r\nMoveLUT.smallBase.deCloak = {}\r\n\r\nMoveLUT.smallBase.deCloak[1] = {}\r\nMoveLUT.smallBase.deCloak[1].dataNum = 3\r\nMoveLUT.smallBase.deCloak[1].length = 120.000\r\nMoveLUT.smallBase.deCloak[1].posXZ = {{0.000, 0.000}, {120.000, 10.000}, {120.000, 10.000}}\r\nMoveLUT.smallBase.deCloak[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.smallBase.deCloak[2] = {}\r\nMoveLUT.smallBase.deCloak[2].dataNum = 3\r\nMoveLUT.smallBase.deCloak[2].length = 120.000\r\nMoveLUT.smallBase.deCloak[2].posXZ = {{0.000, 0.000}, {120.000, 00.000}, {120.000, 00.000}}\r\nMoveLUT.smallBase.deCloak[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.smallBase.deCloak[3] = {}\r\nMoveLUT.smallBase.deCloak[3].dataNum = 3\r\nMoveLUT.smallBase.deCloak[3].length = 120.000\r\nMoveLUT.smallBase.deCloak[3].posXZ = {{0.000, 0.000}, {120.000, -10.000}, {120.000, -10.000}}\r\nMoveLUT.smallBase.deCloak[3].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.mediumBase.deCloak = {}\r\n\r\nMoveLUT.mediumBase.deCloak[1] = {}\r\nMoveLUT.mediumBase.deCloak[1].dataNum = 3\r\nMoveLUT.mediumBase.deCloak[1].length = 80.000\r\nMoveLUT.mediumBase.deCloak[1].posXZ = {{0.000, 0.000}, {80.000, 20.000}, {80.000, 20.000}}\r\nMoveLUT.mediumBase.deCloak[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.mediumBase.deCloak[2] = {}\r\nMoveLUT.mediumBase.deCloak[2].dataNum = 3\r\nMoveLUT.mediumBase.deCloak[2].length = 80.000\r\nMoveLUT.mediumBase.deCloak[2].posXZ = {{0.000, 0.000}, {80.000, 00.000}, {80.000, 00.000}}\r\nMoveLUT.mediumBase.deCloak[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.mediumBase.deCloak[3] = {}\r\nMoveLUT.mediumBase.deCloak[3].dataNum = 3\r\nMoveLUT.mediumBase.deCloak[3].length = 80.000\r\nMoveLUT.mediumBase.deCloak[3].posXZ = {{0.000, 0.000}, {80.000, -20.000}, {80.000, -20.000}}\r\nMoveLUT.mediumBase.deCloak[3].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.largeBase.deCloak = {}\r\n\r\nMoveLUT.largeBase.deCloak[1] = {}\r\nMoveLUT.largeBase.deCloak[1].dataNum = 3\r\nMoveLUT.largeBase.deCloak[1].length = 100.000\r\nMoveLUT.largeBase.deCloak[1].posXZ = {{0.000, 0.000}, {100.000, 20.000}, {100.000, 20.000}}\r\nMoveLUT.largeBase.deCloak[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.largeBase.deCloak[2] = {}\r\nMoveLUT.largeBase.deCloak[2].dataNum = 3\r\nMoveLUT.largeBase.deCloak[2].length = 100.000\r\nMoveLUT.largeBase.deCloak[2].posXZ = {{0.000, 0.000}, {100.000, 00.000}, {100.000, 00.000}}\r\nMoveLUT.largeBase.deCloak[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.largeBase.deCloak[3] = {}\r\nMoveLUT.largeBase.deCloak[3].dataNum = 3\r\nMoveLUT.largeBase.deCloak[3].length = 100.000\r\nMoveLUT.largeBase.deCloak[3].posXZ = {{0.000, 0.000}, {100.000, -20.000}, {100.000, -20.000}}\r\nMoveLUT.largeBase.deCloak[3].rotY = {0.000, 0.000, 0.000}\r\n\r\n\r\nMoveLUT.smallBase.echoF = {}\r\n\r\nMoveLUT.smallBase.echoF[1] = {}\r\nMoveLUT.smallBase.echoF[1].dataNum = 3\r\nMoveLUT.smallBase.echoF[1].length = 166.000\r\nMoveLUT.smallBase.echoF[1].posXZ = {{0.000, 0.000}, {118.995, 59.289}, {118.995, 59.289}}\r\nMoveLUT.smallBase.echoF[1].rotY = {0.000, -45.000, -45.000}\r\n\r\nMoveLUT.smallBase.echoF[2] = {}\r\nMoveLUT.smallBase.echoF[2].dataNum = 3\r\nMoveLUT.smallBase.echoF[2].length = 166.000\r\nMoveLUT.smallBase.echoF[2].posXZ = {{0.000, 0.000}, {126.066, 52.218}, {126.066, 52.218}}\r\nMoveLUT.smallBase.echoF[2].rotY = {0.000, -45.000, -45.000}\r\n\r\nMoveLUT.smallBase.echoF[3] = {}\r\nMoveLUT.smallBase.echoF[3].dataNum = 3\r\nMoveLUT.smallBase.echoF[3].length = 166.000\r\nMoveLUT.smallBase.echoF[3].posXZ = {{0.000, 0.000}, {133.137, 45.147}, {133.137, 45.147}}\r\nMoveLUT.smallBase.echoF[3].rotY = {0.000, -45.000, -45.000}\r\n\r\nMoveLUT.smallBase.echoB = {}\r\n\r\nMoveLUT.smallBase.echoB[1] = {}\r\nMoveLUT.smallBase.echoB[1].dataNum = 3\r\nMoveLUT.smallBase.echoB[1].length = 166.000\r\nMoveLUT.smallBase.echoB[1].posXZ = {{0.000, 0.000}, {133.137, -45.147}, {133.137, -45.147}}\r\nMoveLUT.smallBase.echoB[1].rotY = {0.000, 45.000, 45.000}\r\n\r\nMoveLUT.smallBase.echoB[2] = {}\r\nMoveLUT.smallBase.echoB[2].dataNum = 3\r\nMoveLUT.smallBase.echoB[2].length = 166.000\r\nMoveLUT.smallBase.echoB[2].posXZ = {{0.000, 0.000}, {126.066, -52.218}, {126.066, -52.218}}\r\nMoveLUT.smallBase.echoB[2].rotY = {0.000, 45.000, 45.000}\r\n\r\nMoveLUT.smallBase.echoB[3] = {}\r\nMoveLUT.smallBase.echoB[3].dataNum = 3\r\nMoveLUT.smallBase.echoB[3].length = 166.000\r\nMoveLUT.smallBase.echoB[3].posXZ = {{0.000, 0.000}, {118.995, -59.289}, {118.995, -59.289}}\r\nMoveLUT.smallBase.echoB[3].rotY = {0.000, 45.000, 45.000}\r\n\r\n\r\n\r\nMoveLUT.smallBase.straight = {}\r\n\r\nMoveLUT.smallBase.straight[1] = {}\r\nMoveLUT.smallBase.straight[1].dataNum = 82\r\nMoveLUT.smallBase.straight[1].length = 120.000\r\nMoveLUT.smallBase.straight[1].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 80.000}, }\r\nMoveLUT.smallBase.straight[1].rotY = {}\r\nMoveLUT.smallBase.straight[2] = {}\r\nMoveLUT.smallBase.straight[2].dataNum = 122\r\nMoveLUT.smallBase.straight[2].length = 160.000\r\nMoveLUT.smallBase.straight[2].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 120.000}, }\r\nMoveLUT.smallBase.straight[2].rotY = {}\r\nMoveLUT.smallBase.straight[3] = {}\r\nMoveLUT.smallBase.straight[3].dataNum = 162\r\nMoveLUT.smallBase.straight[3].length = 200.000\r\nMoveLUT.smallBase.straight[3].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 160.000}, }\r\nMoveLUT.smallBase.straight[3].rotY = {}\r\nMoveLUT.smallBase.straight[4] = {}\r\nMoveLUT.smallBase.straight[4].dataNum = 202\r\nMoveLUT.smallBase.straight[4].length = 240.000\r\nMoveLUT.smallBase.straight[4].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 161.000}, {0.000, 162.000}, {0.000, 163.000}, {0.000, 164.000}, {0.000, 165.000}, {0.000, 166.000}, {0.000, 167.000}, {0.000, 168.000}, {0.000, 169.000}, {0.000, 170.000}, {0.000, 171.000}, {0.000, 172.000}, {0.000, 173.000}, {0.000, 174.000}, {0.000, 175.000}, {0.000, 176.000}, {0.000, 177.000}, {0.000, 178.000}, {0.000, 179.000}, {0.000, 180.000}, {0.000, 181.000}, {0.000, 182.000}, {0.000, 183.000}, {0.000, 184.000}, {0.000, 185.000}, {0.000, 186.000}, {0.000, 187.000}, {0.000, 188.000}, {0.000, 189.000}, {0.000, 190.000}, {0.000, 191.000}, {0.000, 192.000}, {0.000, 193.000}, {0.000, 194.000}, {0.000, 195.000}, {0.000, 196.000}, {0.000, 197.000}, {0.000, 198.000}, {0.000, 199.000}, {0.000, 200.000}, {0.000, 200.000}, }\r\nMoveLUT.smallBase.straight[4].rotY = {}\r\nMoveLUT.smallBase.straight[5] = {}\r\nMoveLUT.smallBase.straight[5].dataNum = 242\r\nMoveLUT.smallBase.straight[5].length = 280.000\r\nMoveLUT.smallBase.straight[5].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 161.000}, {0.000, 162.000}, {0.000, 163.000}, {0.000, 164.000}, {0.000, 165.000}, {0.000, 166.000}, {0.000, 167.000}, {0.000, 168.000}, {0.000, 169.000}, {0.000, 170.000}, {0.000, 171.000}, {0.000, 172.000}, {0.000, 173.000}, {0.000, 174.000}, {0.000, 175.000}, {0.000, 176.000}, {0.000, 177.000}, {0.000, 178.000}, {0.000, 179.000}, {0.000, 180.000}, {0.000, 181.000}, {0.000, 182.000}, {0.000, 183.000}, {0.000, 184.000}, {0.000, 185.000}, {0.000, 186.000}, {0.000, 187.000}, {0.000, 188.000}, {0.000, 189.000}, {0.000, 190.000}, {0.000, 191.000}, {0.000, 192.000}, {0.000, 193.000}, {0.000, 194.000}, {0.000, 195.000}, {0.000, 196.000}, {0.000, 197.000}, {0.000, 198.000}, {0.000, 199.000}, {0.000, 200.000}, {0.000, 201.000}, {0.000, 202.000}, {0.000, 203.000}, {0.000, 204.000}, {0.000, 205.000}, {0.000, 206.000}, {0.000, 207.000}, {0.000, 208.000}, {0.000, 209.000}, {0.000, 210.000}, {0.000, 211.000}, {0.000, 212.000}, {0.000, 213.000}, {0.000, 214.000}, {0.000, 215.000}, {0.000, 216.000}, {0.000, 217.000}, {0.000, 218.000}, {0.000, 219.000}, {0.000, 220.000}, {0.000, 221.000}, {0.000, 222.000}, {0.000, 223.000}, {0.000, 224.000}, {0.000, 225.000}, {0.000, 226.000}, {0.000, 227.000}, {0.000, 228.000}, {0.000, 229.000}, {0.000, 230.000}, {0.000, 231.000}, {0.000, 232.000}, {0.000, 233.000}, {0.000, 234.000}, {0.000, 235.000}, {0.000, 236.000}, {0.000, 237.000}, {0.000, 238.000}, {0.000, 239.000}, {0.000, 240.000}, {0.000, 240.000}, }\r\nMoveLUT.smallBase.straight[5].rotY = {}\r\n\r\n-- Maneuver data for medium base Straights\r\n\r\nMoveLUT.mediumBase.straight = {}\r\nMoveLUT.mediumBase.straight[1] = {}\r\nMoveLUT.mediumBase.straight[1].dataNum = 102\r\nMoveLUT.mediumBase.straight[1].length = 160.000\r\nMoveLUT.mediumBase.straight[1].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 100.000}, }\r\nMoveLUT.mediumBase.straight[1].rotY = {}\r\n\r\nMoveLUT.mediumBase.straight[2] = {}\r\nMoveLUT.mediumBase.straight[2].dataNum = 142\r\nMoveLUT.mediumBase.straight[2].length = 200.000\r\nMoveLUT.mediumBase.straight[2].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 140.000} }\r\nMoveLUT.mediumBase.straight[2].rotY = {}\r\n\r\nMoveLUT.mediumBase.straight[3] = {}\r\nMoveLUT.mediumBase.straight[3].dataNum = 182\r\nMoveLUT.mediumBase.straight[3].length = 240.000\r\nMoveLUT.mediumBase.straight[3].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 160.000}, {0.000, 161.000}, {0.000, 162.000}, {0.000, 163.000}, {0.000, 164.000}, {0.000, 165.000}, {0.000, 166.000}, {0.000, 167.000}, {0.000, 168.000}, {0.000, 169.000}, {0.000, 170.000}, {0.000, 171.000}, {0.000, 172.000}, {0.000, 173.000}, {0.000, 174.000}, {0.000, 175.000}, {0.000, 176.000}, {0.000, 177.000}, {0.000, 178.000}, {0.000, 179.000}, {0.000, 180.000}, {0.000, 180.000} }\r\nMoveLUT.mediumBase.straight[3].rotY = {}\r\n\r\nMoveLUT.mediumBase.straight[4] = {}\r\nMoveLUT.mediumBase.straight[4].dataNum = 222\r\nMoveLUT.mediumBase.straight[4].length = 280.000\r\nMoveLUT.mediumBase.straight[4].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 161.000}, {0.000, 162.000}, {0.000, 163.000}, {0.000, 164.000}, {0.000, 165.000}, {0.000, 166.000}, {0.000, 167.000}, {0.000, 168.000}, {0.000, 169.000}, {0.000, 170.000}, {0.000, 171.000}, {0.000, 172.000}, {0.000, 173.000}, {0.000, 174.000}, {0.000, 175.000}, {0.000, 176.000}, {0.000, 177.000}, {0.000, 178.000}, {0.000, 179.000}, {0.000, 180.000}, {0.000, 181.000}, {0.000, 182.000}, {0.000, 183.000}, {0.000, 184.000}, {0.000, 185.000}, {0.000, 186.000}, {0.000, 187.000}, {0.000, 188.000}, {0.000, 189.000}, {0.000, 190.000}, {0.000, 191.000}, {0.000, 192.000}, {0.000, 193.000}, {0.000, 194.000}, {0.000, 195.000}, {0.000, 196.000}, {0.000, 197.000}, {0.000, 198.000}, {0.000, 199.000}, {0.000, 200.000}, {0.000, 200.000}, {0.000, 201.000}, {0.000, 202.000}, {0.000, 203.000}, {0.000, 204.000}, {0.000, 205.000}, {0.000, 206.000}, {0.000, 207.000}, {0.000, 208.000}, {0.000, 209.000}, {0.000, 210.000}, {0.000, 211.000}, {0.000, 212.000}, {0.000, 213.000}, {0.000, 214.000}, {0.000, 215.000}, {0.000, 216.000}, {0.000, 217.000}, {0.000, 218.000}, {0.000, 219.000}, {0.000, 220.000}, {0.000, 220.000} }\r\nMoveLUT.mediumBase.straight[4].rotY = {}\r\n\r\nMoveLUT.mediumBase.straight[5] = {}\r\nMoveLUT.mediumBase.straight[5].dataNum = 262\r\nMoveLUT.mediumBase.straight[5].length = 320.000\r\nMoveLUT.mediumBase.straight[5].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 161.000}, {0.000, 162.000}, {0.000, 163.000}, {0.000, 164.000}, {0.000, 165.000}, {0.000, 166.000}, {0.000, 167.000}, {0.000, 168.000}, {0.000, 169.000}, {0.000, 170.000}, {0.000, 171.000}, {0.000, 172.000}, {0.000, 173.000}, {0.000, 174.000}, {0.000, 175.000}, {0.000, 176.000}, {0.000, 177.000}, {0.000, 178.000}, {0.000, 179.000}, {0.000, 180.000}, {0.000, 181.000}, {0.000, 182.000}, {0.000, 183.000}, {0.000, 184.000}, {0.000, 185.000}, {0.000, 186.000}, {0.000, 187.000}, {0.000, 188.000}, {0.000, 189.000}, {0.000, 190.000}, {0.000, 191.000}, {0.000, 192.000}, {0.000, 193.000}, {0.000, 194.000}, {0.000, 195.000}, {0.000, 196.000}, {0.000, 197.000}, {0.000, 198.000}, {0.000, 199.000}, {0.000, 200.000}, {0.000, 201.000}, {0.000, 202.000}, {0.000, 203.000}, {0.000, 204.000}, {0.000, 205.000}, {0.000, 206.000}, {0.000, 207.000}, {0.000, 208.000}, {0.000, 209.000}, {0.000, 210.000}, {0.000, 211.000}, {0.000, 212.000}, {0.000, 213.000}, {0.000, 214.000}, {0.000, 215.000}, {0.000, 216.000}, {0.000, 217.000}, {0.000, 218.000}, {0.000, 219.000}, {0.000, 220.000}, {0.000, 221.000}, {0.000, 222.000}, {0.000, 223.000}, {0.000, 224.000}, {0.000, 225.000}, {0.000, 226.000}, {0.000, 227.000}, {0.000, 228.000}, {0.000, 229.000}, {0.000, 230.000}, {0.000, 231.000}, {0.000, 232.000}, {0.000, 233.000}, {0.000, 234.000}, {0.000, 235.000}, {0.000, 236.000}, {0.000, 237.000}, {0.000, 238.000}, {0.000, 239.000}, {0.000, 240.000}, {0.000, 240.000}, {0.000, 241.000}, {0.000, 242.000}, {0.000, 243.000}, {0.000, 244.000}, {0.000, 245.000}, {0.000, 246.000}, {0.000, 247.000}, {0.000, 248.000}, {0.000, 249.000}, {0.000, 250.000}, {0.000, 251.000}, {0.000, 252.000}, {0.000, 253.000}, {0.000, 254.000}, {0.000, 255.000}, {0.000, 256.000}, {0.000, 257.000}, {0.000, 258.000}, {0.000, 259.000}, {0.000, 260.000}, {0.000, 260.000} }\r\nMoveLUT.mediumBase.straight[5].rotY = {}\r\n\r\n\r\nMoveLUT.largeBase.straight = {}\r\nMoveLUT.largeBase.straight[1] = {}\r\nMoveLUT.largeBase.straight[1].dataNum = 122\r\nMoveLUT.largeBase.straight[1].length = 200.000\r\nMoveLUT.largeBase.straight[1].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 120.000}, }\r\nMoveLUT.largeBase.straight[1].rotY = {}\r\n\r\nMoveLUT.largeBase.straight[2] = {}\r\nMoveLUT.largeBase.straight[2].dataNum = 162\r\nMoveLUT.largeBase.straight[2].length = 240.000\r\nMoveLUT.largeBase.straight[2].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 160.000}, }\r\nMoveLUT.largeBase.straight[2].rotY = {0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, }\r\n\r\nMoveLUT.largeBase.straight[3] = {}\r\nMoveLUT.largeBase.straight[3].dataNum = 202\r\nMoveLUT.largeBase.straight[3].length = 280.000\r\nMoveLUT.largeBase.straight[3].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 161.000}, {0.000, 162.000}, {0.000, 163.000}, {0.000, 164.000}, {0.000, 165.000}, {0.000, 166.000}, {0.000, 167.000}, {0.000, 168.000}, {0.000, 169.000}, {0.000, 170.000}, {0.000, 171.000}, {0.000, 172.000}, {0.000, 173.000}, {0.000, 174.000}, {0.000, 175.000}, {0.000, 176.000}, {0.000, 177.000}, {0.000, 178.000}, {0.000, 179.000}, {0.000, 180.000}, {0.000, 181.000}, {0.000, 182.000}, {0.000, 183.000}, {0.000, 184.000}, {0.000, 185.000}, {0.000, 186.000}, {0.000, 187.000}, {0.000, 188.000}, {0.000, 189.000}, {0.000, 190.000}, {0.000, 191.000}, {0.000, 192.000}, {0.000, 193.000}, {0.000, 194.000}, {0.000, 195.000}, {0.000, 196.000}, {0.000, 197.000}, {0.000, 198.000}, {0.000, 199.000}, {0.000, 200.000}, {0.000, 200.000}, }\r\nMoveLUT.largeBase.straight[3].rotY = {}\r\n\r\nMoveLUT.largeBase.straight[4] = {}\r\nMoveLUT.largeBase.straight[4].dataNum = 242\r\nMoveLUT.largeBase.straight[4].length = 320.000\r\nMoveLUT.largeBase.straight[4].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 161.000}, {0.000, 162.000}, {0.000, 163.000}, {0.000, 164.000}, {0.000, 165.000}, {0.000, 166.000}, {0.000, 167.000}, {0.000, 168.000}, {0.000, 169.000}, {0.000, 170.000}, {0.000, 171.000}, {0.000, 172.000}, {0.000, 173.000}, {0.000, 174.000}, {0.000, 175.000}, {0.000, 176.000}, {0.000, 177.000}, {0.000, 178.000}, {0.000, 179.000}, {0.000, 180.000}, {0.000, 181.000}, {0.000, 182.000}, {0.000, 183.000}, {0.000, 184.000}, {0.000, 185.000}, {0.000, 186.000}, {0.000, 187.000}, {0.000, 188.000}, {0.000, 189.000}, {0.000, 190.000}, {0.000, 191.000}, {0.000, 192.000}, {0.000, 193.000}, {0.000, 194.000}, {0.000, 195.000}, {0.000, 196.000}, {0.000, 197.000}, {0.000, 198.000}, {0.000, 199.000}, {0.000, 200.000}, {0.000, 201.000}, {0.000, 202.000}, {0.000, 203.000}, {0.000, 204.000}, {0.000, 205.000}, {0.000, 206.000}, {0.000, 207.000}, {0.000, 208.000}, {0.000, 209.000}, {0.000, 210.000}, {0.000, 211.000}, {0.000, 212.000}, {0.000, 213.000}, {0.000, 214.000}, {0.000, 215.000}, {0.000, 216.000}, {0.000, 217.000}, {0.000, 218.000}, {0.000, 219.000}, {0.000, 220.000}, {0.000, 221.000}, {0.000, 222.000}, {0.000, 223.000}, {0.000, 224.000}, {0.000, 225.000}, {0.000, 226.000}, {0.000, 227.000}, {0.000, 228.000}, {0.000, 229.000}, {0.000, 230.000}, {0.000, 231.000}, {0.000, 232.000}, {0.000, 233.000}, {0.000, 234.000}, {0.000, 235.000}, {0.000, 236.000}, {0.000, 237.000}, {0.000, 238.000}, {0.000, 239.000}, {0.000, 240.000}, {0.000, 240.000}, }\r\nMoveLUT.largeBase.straight[4].rotY = {}\r\n\r\nMoveLUT.largeBase.straight[5] = {}\r\nMoveLUT.largeBase.straight[5].dataNum = 282\r\nMoveLUT.largeBase.straight[5].length = 360.000\r\nMoveLUT.largeBase.straight[5].posXZ = {{0.000, 0.000}, {0.000, 1.000}, {0.000, 2.000}, {0.000, 3.000}, {0.000, 4.000}, {0.000, 5.000}, {0.000, 6.000}, {0.000, 7.000}, {0.000, 8.000}, {0.000, 9.000}, {0.000, 10.000}, {0.000, 11.000}, {0.000, 12.000}, {0.000, 13.000}, {0.000, 14.000}, {0.000, 15.000}, {0.000, 16.000}, {0.000, 17.000}, {0.000, 18.000}, {0.000, 19.000}, {0.000, 20.000}, {0.000, 21.000}, {0.000, 22.000}, {0.000, 23.000}, {0.000, 24.000}, {0.000, 25.000}, {0.000, 26.000}, {0.000, 27.000}, {0.000, 28.000}, {0.000, 29.000}, {0.000, 30.000}, {0.000, 31.000}, {0.000, 32.000}, {0.000, 33.000}, {0.000, 34.000}, {0.000, 35.000}, {0.000, 36.000}, {0.000, 37.000}, {0.000, 38.000}, {0.000, 39.000}, {0.000, 40.000}, {0.000, 41.000}, {0.000, 42.000}, {0.000, 43.000}, {0.000, 44.000}, {0.000, 45.000}, {0.000, 46.000}, {0.000, 47.000}, {0.000, 48.000}, {0.000, 49.000}, {0.000, 50.000}, {0.000, 51.000}, {0.000, 52.000}, {0.000, 53.000}, {0.000, 54.000}, {0.000, 55.000}, {0.000, 56.000}, {0.000, 57.000}, {0.000, 58.000}, {0.000, 59.000}, {0.000, 60.000}, {0.000, 61.000}, {0.000, 62.000}, {0.000, 63.000}, {0.000, 64.000}, {0.000, 65.000}, {0.000, 66.000}, {0.000, 67.000}, {0.000, 68.000}, {0.000, 69.000}, {0.000, 70.000}, {0.000, 71.000}, {0.000, 72.000}, {0.000, 73.000}, {0.000, 74.000}, {0.000, 75.000}, {0.000, 76.000}, {0.000, 77.000}, {0.000, 78.000}, {0.000, 79.000}, {0.000, 80.000}, {0.000, 81.000}, {0.000, 82.000}, {0.000, 83.000}, {0.000, 84.000}, {0.000, 85.000}, {0.000, 86.000}, {0.000, 87.000}, {0.000, 88.000}, {0.000, 89.000}, {0.000, 90.000}, {0.000, 91.000}, {0.000, 92.000}, {0.000, 93.000}, {0.000, 94.000}, {0.000, 95.000}, {0.000, 96.000}, {0.000, 97.000}, {0.000, 98.000}, {0.000, 99.000}, {0.000, 100.000}, {0.000, 101.000}, {0.000, 102.000}, {0.000, 103.000}, {0.000, 104.000}, {0.000, 105.000}, {0.000, 106.000}, {0.000, 107.000}, {0.000, 108.000}, {0.000, 109.000}, {0.000, 110.000}, {0.000, 111.000}, {0.000, 112.000}, {0.000, 113.000}, {0.000, 114.000}, {0.000, 115.000}, {0.000, 116.000}, {0.000, 117.000}, {0.000, 118.000}, {0.000, 119.000}, {0.000, 120.000}, {0.000, 121.000}, {0.000, 122.000}, {0.000, 123.000}, {0.000, 124.000}, {0.000, 125.000}, {0.000, 126.000}, {0.000, 127.000}, {0.000, 128.000}, {0.000, 129.000}, {0.000, 130.000}, {0.000, 131.000}, {0.000, 132.000}, {0.000, 133.000}, {0.000, 134.000}, {0.000, 135.000}, {0.000, 136.000}, {0.000, 137.000}, {0.000, 138.000}, {0.000, 139.000}, {0.000, 140.000}, {0.000, 141.000}, {0.000, 142.000}, {0.000, 143.000}, {0.000, 144.000}, {0.000, 145.000}, {0.000, 146.000}, {0.000, 147.000}, {0.000, 148.000}, {0.000, 149.000}, {0.000, 150.000}, {0.000, 151.000}, {0.000, 152.000}, {0.000, 153.000}, {0.000, 154.000}, {0.000, 155.000}, {0.000, 156.000}, {0.000, 157.000}, {0.000, 158.000}, {0.000, 159.000}, {0.000, 160.000}, {0.000, 161.000}, {0.000, 162.000}, {0.000, 163.000}, {0.000, 164.000}, {0.000, 165.000}, {0.000, 166.000}, {0.000, 167.000}, {0.000, 168.000}, {0.000, 169.000}, {0.000, 170.000}, {0.000, 171.000}, {0.000, 172.000}, {0.000, 173.000}, {0.000, 174.000}, {0.000, 175.000}, {0.000, 176.000}, {0.000, 177.000}, {0.000, 178.000}, {0.000, 179.000}, {0.000, 180.000}, {0.000, 181.000}, {0.000, 182.000}, {0.000, 183.000}, {0.000, 184.000}, {0.000, 185.000}, {0.000, 186.000}, {0.000, 187.000}, {0.000, 188.000}, {0.000, 189.000}, {0.000, 190.000}, {0.000, 191.000}, {0.000, 192.000}, {0.000, 193.000}, {0.000, 194.000}, {0.000, 195.000}, {0.000, 196.000}, {0.000, 197.000}, {0.000, 198.000}, {0.000, 199.000}, {0.000, 200.000}, {0.000, 201.000}, {0.000, 202.000}, {0.000, 203.000}, {0.000, 204.000}, {0.000, 205.000}, {0.000, 206.000}, {0.000, 207.000}, {0.000, 208.000}, {0.000, 209.000}, {0.000, 210.000}, {0.000, 211.000}, {0.000, 212.000}, {0.000, 213.000}, {0.000, 214.000}, {0.000, 215.000}, {0.000, 216.000}, {0.000, 217.000}, {0.000, 218.000}, {0.000, 219.000}, {0.000, 220.000}, {0.000, 221.000}, {0.000, 222.000}, {0.000, 223.000}, {0.000, 224.000}, {0.000, 225.000}, {0.000, 226.000}, {0.000, 227.000}, {0.000, 228.000}, {0.000, 229.000}, {0.000, 230.000}, {0.000, 231.000}, {0.000, 232.000}, {0.000, 233.000}, {0.000, 234.000}, {0.000, 235.000}, {0.000, 236.000}, {0.000, 237.000}, {0.000, 238.000}, {0.000, 239.000}, {0.000, 240.000}, {0.000, 241.000}, {0.000, 242.000}, {0.000, 243.000}, {0.000, 244.000}, {0.000, 245.000}, {0.000, 246.000}, {0.000, 247.000}, {0.000, 248.000}, {0.000, 249.000}, {0.000, 250.000}, {0.000, 251.000}, {0.000, 252.000}, {0.000, 253.000}, {0.000, 254.000}, {0.000, 255.000}, {0.000, 256.000}, {0.000, 257.000}, {0.000, 258.000}, {0.000, 259.000}, {0.000, 260.000}, {0.000, 261.000}, {0.000, 262.000}, {0.000, 263.000}, {0.000, 264.000}, {0.000, 265.000}, {0.000, 266.000}, {0.000, 267.000}, {0.000, 268.000}, {0.000, 269.000}, {0.000, 270.000}, {0.000, 271.000}, {0.000, 272.000}, {0.000, 273.000}, {0.000, 274.000}, {0.000, 275.000}, {0.000, 276.000}, {0.000, 277.000}, {0.000, 278.000}, {0.000, 279.000}, {0.000, 280.000}, {0.000, 280.000}, }\r\nMoveLUT.largeBase.straight[5].rotY = {}\r\n\r\nMoveLUT.hugeBase.straight = {}\r\nMoveLUT.hugeBase.straight[1] = {}\r\nMoveLUT.hugeBase.straight[1].dataNum = 3\r\nMoveLUT.hugeBase.straight[1].posXZ = {{0.000, 0.000}, {0.000, 40.000}, {0.000, 40.000}}\r\nMoveLUT.hugeBase.straight[1].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.hugeBase.straight[2] = {}\r\nMoveLUT.hugeBase.straight[2].dataNum = 3\r\nMoveLUT.hugeBase.straight[2].posXZ = {{0.000, 0.000}, {0.000, 80.000}, {0.000, 80.000}}\r\nMoveLUT.hugeBase.straight[2].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.hugeBase.straight[3] = {}\r\nMoveLUT.hugeBase.straight[3].dataNum = 3\r\nMoveLUT.hugeBase.straight[3].posXZ = {{0.000, 0.000}, {0.000, 120.000}, {0.000, 120.000}}\r\nMoveLUT.hugeBase.straight[3].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.hugeBase.straight[4] = {}\r\nMoveLUT.hugeBase.straight[4].dataNum = 3\r\nMoveLUT.hugeBase.straight[4].posXZ = {{0.000, 0.000}, {0.000, 160.000}, {0.000, 160.000}}\r\nMoveLUT.hugeBase.straight[4].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.hugeBase.straight[5] = {}\r\nMoveLUT.hugeBase.straight[5].dataNum = 3\r\nMoveLUT.hugeBase.straight[5].posXZ = {{0.000, 0.000}, {0.000, 200.000}, {0.000, 200.000}}\r\nMoveLUT.hugeBase.straight[5].rotY = {0.000, 0.000, 0.000}\r\n\r\nMoveLUT.smallBase.bank = {}\r\nMoveLUT.smallBase.bank[1] = {}\r\nMoveLUT.smallBase.bank[1].dataNum = 105\r\nMoveLUT.smallBase.bank[1].length = 102.832\r\nMoveLUT.smallBase.bank[1].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.013, 2.000}, {0.028, 3.000}, {0.050, 4.000}, {0.078, 5.000}, {0.113, 6.000}, {0.153, 6.999}, {0.201, 7.999}, {0.254, 8.998}, {0.314, 9.998}, {0.380, 10.996}, {0.452, 11.995}, {0.531, 12.993}, {0.616, 13.991}, {0.707, 14.987}, {0.805, 15.984}, {0.909, 16.979}, {1.020, 17.974}, {1.137, 18.968}, {1.260, 19.960}, {1.390, 20.952}, {1.526, 21.942}, {1.669, 22.930}, {1.817, 23.917}, {1.972, 24.903}, {2.133, 25.886}, {2.300, 26.867}, {2.474, 27.846}, {2.653, 28.823}, {2.839, 29.798}, {3.030, 30.769}, {3.227, 31.738}, {3.430, 32.704}, {3.638, 33.666}, {3.852, 34.625}, {4.072, 35.581}, {4.296, 36.533}, {4.526, 37.481}, {4.761, 38.425}, {5.001, 39.365}, {5.248, 40.298}, {5.507, 41.228}, {5.777, 42.155}, {6.059, 43.079}, {6.353, 43.999}, {6.658, 44.915}, {6.974, 45.828}, {7.302, 46.736}, {7.641, 47.640}, {7.991, 48.540}, {8.352, 49.436}, {8.725, 50.326}, {9.108, 51.213}, {9.503, 52.094}, {9.908, 52.970}, {10.325, 53.842}, {10.752, 54.708}, {11.190, 55.568}, {11.639, 56.423}, {12.098, 57.273}, {12.568, 58.116}, {13.049, 58.954}, {13.538, 59.786}, {14.034, 60.615}, {14.534, 61.441}, {15.040, 62.265}, {15.550, 63.085}, {16.066, 63.903}, {16.587, 64.719}, {17.114, 65.531}, {17.646, 66.341}, {18.183, 67.148}, {18.726, 67.953}, {19.275, 68.755}, {19.829, 69.554}, {20.388, 70.351}, {20.953, 71.145}, {21.524, 71.936}, {22.100, 72.724}, {22.682, 73.510}, {23.270, 74.293}, {23.863, 75.073}, {24.462, 75.850}, {25.067, 76.625}, {25.677, 77.396}, {26.293, 78.164}, {26.914, 78.930}, {27.541, 79.692}, {28.174, 80.451}, {28.812, 81.207}, {29.455, 81.960}, {30.104, 82.710}, {30.757, 83.456}, {31.417, 84.198}, {32.081, 84.937}, {32.751, 85.672}, {33.425, 86.404}, {34.105, 87.132}, {34.789, 87.856}, {35.478, 88.576}, {36.172, 89.292}, {36.871, 90.003}, {37.574, 90.711}, {37.574, 90.711}, }\r\nMoveLUT.smallBase.bank[1].rotY = {0.000, 0.009, 0.036, 0.081, 0.143, 0.224, 0.323, 0.440, 0.574, 0.727, 0.898, 1.088, 1.295, 1.521, 1.765, 2.027, 2.307, 2.606, 2.924, 3.259, 3.613, 3.986, 4.376, 4.786, 5.213, 5.659, 6.123, 6.605, 7.105, 7.623, 8.159, 8.713, 9.285, 9.875, 10.481, 11.105, 11.747, 12.405, 13.080, 13.772, 14.480, 15.194, 15.908, 16.623, 17.337, 18.051, 18.766, 19.480, 20.194, 20.908, 21.623, 22.337, 23.051, 23.766, 24.480, 25.194, 25.908, 26.623, 27.337, 28.051, 28.766, 29.480, 30.194, 30.903, 31.599, 32.276, 32.935, 33.576, 34.200, 34.806, 35.394, 35.964, 36.518, 37.053, 37.572, 38.072, 38.556, 39.022, 39.471, 39.902, 40.316, 40.713, 41.092, 41.454, 41.799, 42.126, 42.435, 42.727, 43.002, 43.259, 43.498, 43.720, 43.924, 44.111, 44.279, 44.431, 44.564, 44.680, 44.777, 44.858, 44.920, 44.964, 44.991, 45.000, 45.000, }\r\n\r\nMoveLUT.smallBase.bank[2] = {}\r\nMoveLUT.smallBase.bank[2].dataNum = 144\r\nMoveLUT.smallBase.bank[2].length = 142.102\r\nMoveLUT.smallBase.bank[2].posXZ = {{0.000, 0.000}, {0.002, 1.000}, {0.008, 2.000}, {0.017, 3.000}, {0.031, 4.000}, {0.048, 5.000}, {0.069, 6.000}, {0.094, 7.000}, {0.123, 8.000}, {0.156, 8.999}, {0.193, 9.999}, {0.233, 10.999}, {0.278, 11.998}, {0.326, 12.997}, {0.378, 13.996}, {0.434, 14.995}, {0.494, 15.994}, {0.557, 16.992}, {0.625, 17.990}, {0.697, 18.988}, {0.772, 19.985}, {0.851, 20.982}, {0.934, 21.978}, {1.021, 22.974}, {1.112, 23.969}, {1.207, 24.964}, {1.305, 25.957}, {1.407, 26.950}, {1.513, 27.943}, {1.623, 28.934}, {1.737, 29.924}, {1.854, 30.914}, {1.976, 31.902}, {2.101, 32.889}, {2.229, 33.875}, {2.362, 34.860}, {2.498, 35.843}, {2.637, 36.825}, {2.780, 37.806}, {2.927, 38.785}, {3.077, 39.762}, {3.232, 40.729}, {3.394, 41.695}, {3.563, 42.660}, {3.739, 43.623}, {3.923, 44.585}, {4.114, 45.546}, {4.312, 46.505}, {4.518, 47.463}, {4.731, 48.419}, {4.952, 49.373}, {5.179, 50.326}, {5.414, 51.277}, {5.656, 52.226}, {5.906, 53.173}, {6.162, 54.118}, {6.426, 55.062}, {6.697, 56.003}, {6.975, 56.942}, {7.260, 57.879}, {7.553, 58.814}, {7.852, 59.746}, {8.159, 60.677}, {8.472, 61.604}, {8.793, 62.530}, {9.121, 63.453}, {9.456, 64.373}, {9.798, 65.291}, {10.147, 66.206}, {10.502, 67.119}, {10.865, 68.029}, {11.235, 68.936}, {11.611, 69.840}, {11.995, 70.741}, {12.385, 71.640}, {12.782, 72.535}, {13.186, 73.427}, {13.597, 74.316}, {14.015, 75.202}, {14.439, 76.085}, {14.870, 76.965}, {15.308, 77.841}, {15.752, 78.714}, {16.203, 79.583}, {16.661, 80.449}, {17.125, 81.312}, {17.596, 82.171}, {18.073, 83.026}, {18.557, 83.878}, {19.047, 84.726}, {19.544, 85.570}, {20.047, 86.410}, {20.557, 87.246}, {21.073, 88.079}, {21.595, 88.908}, {22.124, 89.732}, {22.659, 90.553}, {23.200, 91.369}, {23.747, 92.182}, {24.300, 92.990}, {24.860, 93.793}, {25.426, 94.593}, {25.998, 95.388}, {26.575, 96.180}, {27.156, 96.968}, {27.739, 97.755}, {28.326, 98.540}, {28.916, 99.322}, {29.509, 100.102}, {30.105, 100.880}, {30.704, 101.657}, {31.306, 102.431}, {31.911, 103.203}, {32.520, 103.973}, {33.131, 104.740}, {33.746, 105.506}, {34.364, 106.270}, {34.985, 107.032}, {35.609, 107.791}, {36.236, 108.549}, {36.867, 109.304}, {37.500, 110.058}, {38.137, 110.809}, {38.777, 111.558}, {39.420, 112.305}, {40.067, 113.050}, {40.716, 113.792}, {41.369, 114.533}, {42.024, 115.271}, {42.683, 116.007}, {43.345, 116.741}, {44.010, 117.473}, {44.678, 118.202}, {45.349, 118.929}, {46.023, 119.654}, {46.699, 120.376}, {47.379, 121.096}, {48.062, 121.814}, {48.748, 122.529}, {49.436, 123.241}, {50.128, 123.951}, {50.822, 124.659}, {51.519, 125.364}, {52.218, 126.066}, }\r\nMoveLUT.smallBase.bank[2].rotY = {0.000, 0.006, 0.022, 0.050, 0.088, 0.138, 0.199, 0.270, 0.353, 0.447, 0.552, 0.668, 0.795, 0.933, 1.083, 1.243, 1.414, 1.597, 1.791, 1.996, 2.212, 2.439, 2.677, 2.926, 3.187, 3.459, 3.741, 4.035, 4.340, 4.656, 4.982, 5.320, 5.669, 6.029, 6.400, 6.781, 7.174, 7.577, 7.991, 8.416, 8.851, 9.288, 9.725, 10.162, 10.599, 11.036, 11.473, 11.910, 12.346, 12.783, 13.220, 13.657, 14.094, 14.531, 14.968, 15.405, 15.842, 16.278, 16.715, 17.152, 17.589, 18.026, 18.463, 18.900, 19.337, 19.774, 20.210, 20.647, 21.084, 21.521, 21.958, 22.395, 22.832, 23.269, 23.706, 24.143, 24.579, 25.016, 25.453, 25.890, 26.327, 26.764, 27.201, 27.638, 28.075, 28.511, 28.948, 29.385, 29.822, 30.259, 30.696, 31.133, 31.570, 32.007, 32.443, 32.880, 33.317, 33.754, 34.191, 34.628, 35.065, 35.502, 35.939, 36.373, 36.799, 37.213, 37.617, 38.011, 38.393, 38.765, 39.125, 39.475, 39.815, 40.143, 40.461, 40.768, 41.064, 41.350, 41.625, 41.889, 42.142, 42.385, 42.617, 42.838, 43.049, 43.248, 43.437, 43.616, 43.783, 43.940, 44.086, 44.221, 44.345, 44.459, 44.562, 44.654, 44.735, 44.805, 44.865, 44.913, 44.951, 44.978, 44.995, 45.000, }\r\n\r\nMoveLUT.smallBase.bank[3] = {}\r\nMoveLUT.smallBase.bank[3].dataNum = 184\r\nMoveLUT.smallBase.bank[3].length = 181.372\r\nMoveLUT.smallBase.bank[3].posXZ = {{0.000, 0.000}, {0.001, 1.000}, {0.006, 2.000}, {0.013, 3.000}, {0.022, 4.000}, {0.035, 5.000}, {0.050, 6.000}, {0.068, 7.000}, {0.089, 8.000}, {0.113, 9.000}, {0.139, 10.000}, {0.168, 10.999}, {0.200, 11.999}, {0.235, 12.999}, {0.273, 13.998}, {0.313, 14.998}, {0.356, 15.997}, {0.402, 16.996}, {0.451, 17.995}, {0.502, 18.994}, {0.557, 19.992}, {0.614, 20.991}, {0.674, 21.989}, {0.736, 22.986}, {0.802, 23.984}, {0.870, 24.981}, {0.941, 25.978}, {1.015, 26.974}, {1.091, 27.970}, {1.170, 28.966}, {1.252, 29.961}, {1.337, 30.955}, {1.425, 31.949}, {1.515, 32.943}, {1.608, 33.935}, {1.704, 34.927}, {1.802, 35.919}, {1.903, 36.909}, {2.007, 37.899}, {2.113, 38.888}, {2.222, 39.876}, {2.335, 40.859}, {2.453, 41.841}, {2.577, 42.823}, {2.706, 43.804}, {2.840, 44.784}, {2.980, 45.764}, {3.125, 46.742}, {3.276, 47.720}, {3.432, 48.697}, {3.593, 49.674}, {3.760, 50.649}, {3.932, 51.623}, {4.110, 52.596}, {4.293, 53.569}, {4.481, 54.540}, {4.675, 55.510}, {4.874, 56.480}, {5.078, 57.448}, {5.288, 58.414}, {5.503, 59.380}, {5.724, 60.345}, {5.950, 61.308}, {6.181, 62.270}, {6.417, 63.231}, {6.659, 64.190}, {6.906, 65.148}, {7.158, 66.105}, {7.416, 67.060}, {7.679, 68.014}, {7.947, 68.966}, {8.221, 69.917}, {8.499, 70.867}, {8.783, 71.814}, {9.072, 72.761}, {9.367, 73.705}, {9.667, 74.648}, {9.971, 75.589}, {10.281, 76.529}, {10.597, 77.467}, {10.917, 78.403}, {11.243, 79.337}, {11.574, 80.270}, {11.909, 81.200}, {12.251, 82.129}, {12.597, 83.056}, {12.948, 83.981}, {13.304, 84.904}, {13.666, 85.825}, {14.033, 86.744}, {14.404, 87.661}, {14.781, 88.576}, {15.163, 89.488}, {15.550, 90.399}, {15.942, 91.308}, {16.339, 92.214}, {16.740, 93.118}, {17.147, 94.020}, {17.559, 94.919}, {17.976, 95.817}, {18.398, 96.712}, {18.825, 97.604}, {19.256, 98.495}, {19.693, 99.382}, {20.135, 100.268}, {20.581, 101.151}, {21.032, 102.031}, {21.488, 102.909}, {21.949, 103.785}, {22.415, 104.658}, {22.886, 105.528}, {23.361, 106.396}, {23.842, 107.261}, {24.327, 108.123}, {24.816, 108.983}, {25.311, 109.840}, {25.810, 110.694}, {26.314, 111.545}, {26.823, 112.394}, {27.336, 113.240}, {27.854, 114.083}, {28.377, 114.923}, {28.904, 115.760}, {29.436, 116.594}, {29.973, 117.425}, {30.514, 118.254}, {31.060, 119.079}, {31.610, 119.901}, {32.165, 120.721}, {32.724, 121.537}, {33.288, 122.350}, {33.856, 123.160}, {34.429, 123.966}, {35.006, 124.770}, {35.588, 125.570}, {36.174, 126.367}, {36.765, 127.161}, {37.359, 127.952}, {37.959, 128.739}, {38.562, 129.523}, {39.170, 130.304}, {39.783, 131.081}, {40.399, 131.855}, {41.018, 132.627}, {41.639, 133.397}, {42.263, 134.165}, {42.888, 134.932}, {43.516, 135.697}, {44.146, 136.460}, {44.778, 137.222}, {45.412, 137.982}, {46.049, 138.741}, {46.687, 139.498}, {47.328, 140.253}, {47.971, 141.007}, {48.617, 141.758}, {49.264, 142.509}, {49.914, 143.257}, {50.566, 144.005}, {51.220, 144.750}, {51.876, 145.494}, {52.535, 146.236}, {53.196, 146.976}, {53.859, 147.715}, {54.524, 148.452}, {55.191, 149.187}, {55.861, 149.921}, {56.533, 150.653}, {57.206, 151.384}, {57.883, 152.112}, {58.561, 152.839}, {59.241, 153.564}, {59.924, 154.288}, {60.608, 155.009}, {61.295, 155.729}, {61.984, 156.447}, {62.675, 157.163}, {63.368, 157.878}, {64.063, 158.590}, {64.760, 159.301}, {65.459, 160.010}, {66.160, 160.716}, {66.863, 161.421}, {66.863, 161.421}, }\r\nMoveLUT.smallBase.bank[3].rotY = {0.000, 0.004, 0.016, 0.036, 0.064, 0.100, 0.143, 0.195, 0.255, 0.323, 0.398, 0.482, 0.574, 0.673, 0.781, 0.897, 1.020, 1.152, 1.291, 1.439, 1.595, 1.758, 1.930, 2.109, 2.297, 2.493, 2.696, 2.908, 3.127, 3.355, 3.590, 3.834, 4.085, 4.344, 4.611, 4.887, 5.170, 5.460, 5.759, 6.066, 6.380, 6.697, 7.014, 7.331, 7.648, 7.965, 8.282, 8.598, 8.915, 9.232, 9.549, 9.866, 10.183, 10.500, 10.817, 11.134, 11.451, 11.767, 12.084, 12.401, 12.718, 13.035, 13.352, 13.669, 13.986, 14.303, 14.620, 14.936, 15.253, 15.570, 15.887, 16.204, 16.521, 16.838, 17.155, 17.472, 17.789, 18.105, 18.422, 18.739, 19.056, 19.373, 19.690, 20.007, 20.324, 20.641, 20.958, 21.275, 21.591, 21.908, 22.225, 22.542, 22.859, 23.176, 23.493, 23.810, 24.127, 24.444, 24.760, 25.077, 25.394, 25.711, 26.028, 26.345, 26.662, 26.979, 27.296, 27.613, 27.929, 28.246, 28.563, 28.880, 29.197, 29.514, 29.831, 30.148, 30.465, 30.782, 31.098, 31.415, 31.732, 32.049, 32.366, 32.683, 33.000, 33.317, 33.634, 33.951, 34.267, 34.584, 34.901, 35.218, 35.535, 35.852, 36.169, 36.486, 36.803, 37.120, 37.436, 37.753, 38.070, 38.387, 38.703, 39.014, 39.317, 39.612, 39.899, 40.178, 40.450, 40.713, 40.969, 41.217, 41.457, 41.689, 41.913, 42.129, 42.338, 42.538, 42.731, 42.916, 43.093, 43.262, 43.424, 43.577, 43.723, 43.861, 43.991, 44.113, 44.227, 44.334, 44.432, 44.523, 44.606, 44.681, 44.748, 44.807, 44.858, 44.901, 44.937, 44.965, 44.984, 44.996, 45.000, 45.000, }\r\n\r\nMoveLUT.smallBase.bankSlip = {}\r\n\r\nMoveLUT.smallBase.bankSlip[1] = {}\r\nMoveLUT.smallBase.bankSlip[1].dataNum = 105\r\nMoveLUT.smallBase.bankSlip[1].length = 102.832\r\nMoveLUT.smallBase.bankSlip[1].posXZ = {{0.0, 0.0}, {1.0, 0.003}, {2.0, 0.013}, {3.0, 0.028}, {4.0, 0.05}, {5.0, 0.078}, {6.0, 0.113}, {6.999, 0.153}, {7.999, 0.201}, {8.998, 0.254}, {9.998, 0.314}, {10.996, 0.38}, {11.995, 0.452}, {12.993, 0.531}, {13.991, 0.616}, {14.987, 0.707}, {15.984, 0.805}, {16.979, 0.909}, {17.974, 1.02}, {18.968, 1.137}, {19.96, 1.26}, {20.952, 1.39}, {21.942, 1.526}, {22.93, 1.669}, {23.917, 1.817}, {24.903, 1.972}, {25.886, 2.133}, {26.867, 2.3}, {27.846, 2.474}, {28.823, 2.653}, {29.798, 2.839}, {30.769, 3.03}, {31.738, 3.227}, {32.704, 3.43}, {33.666, 3.638}, {34.625, 3.852}, {35.581, 4.072}, {36.533, 4.296}, {37.481, 4.526}, {38.425, 4.761}, {39.365, 5.001}, {40.298, 5.248}, {41.228, 5.507}, {42.155, 5.777}, {43.079, 6.059}, {43.999, 6.353}, {44.915, 6.658}, {45.828, 6.974}, {46.736, 7.302}, {47.64, 7.641}, {48.54, 7.991}, {49.436, 8.352}, {50.326, 8.725}, {51.213, 9.108}, {52.094, 9.503}, {52.97, 9.908}, {53.842, 10.325}, {54.708, 10.752}, {55.568, 11.19}, {56.423, 11.639}, {57.273, 12.098}, {58.116, 12.568}, {58.954, 13.049}, {59.786, 13.538}, {60.615, 14.034}, {61.441, 14.534}, {62.265, 15.04}, {63.085, 15.55}, {63.903, 16.066}, {64.719, 16.587}, {65.531, 17.114}, {66.341, 17.646}, {67.148, 18.183}, {67.953, 18.726}, {68.755, 19.275}, {69.554, 19.829}, {70.351, 20.388}, {71.145, 20.953}, {71.936, 21.524}, {72.724, 22.1}, {73.51, 22.682}, {74.293, 23.27}, {75.073, 23.863}, {75.85, 24.462}, {76.625, 25.067}, {77.396, 25.677}, {78.164, 26.293}, {78.93, 26.914}, {79.692, 27.541}, {80.451, 28.174}, {81.207, 28.812}, {81.96, 29.455}, {82.71, 30.104}, {83.456, 30.757}, {84.198, 31.417}, {84.937, 32.081}, {85.672, 32.751}, {86.404, 33.425}, {87.132, 34.105}, {87.856, 34.789}, {88.576, 35.478}, {89.292, 36.172}, {90.003, 36.871}, {90.711, 37.574}, {90.711, 37.574}}\r\nMoveLUT.smallBase.bankSlip[1].rotY = {0.000, -0.009, -0.036, -0.081, -0.143, -0.224, -0.323, -0.440, -0.574, -0.727, -0.898, -1.088, -1.295, -1.521, -1.765, -2.027, -2.307, -2.606, -2.924, -3.259, -3.613, -3.986, -4.376, -4.786, -5.213, -5.659, -6.123, -6.605, -7.105, -7.623, -8.159, -8.713, -9.285, -9.875, -10.481, -11.105, -11.747, -12.405, -13.080, -13.772, -14.480, -15.194, -15.908, -16.623, -17.337, -18.051, -18.766, -19.480, -20.194, -20.908, -21.623, -22.337, -23.051, -23.766, -24.480, -25.194, -25.908, -26.623, -27.337, -28.051, -28.766, -29.480, -30.194, -30.903, -31.599, -32.276, -32.935, -33.576, -34.200, -34.806, -35.394, -35.964, -36.518, -37.053, -37.572, -38.072, -38.556, -39.022, -39.471, -39.902, -40.316, -40.713, -41.092, -41.454, -41.799, -42.126, -42.435, -42.727, -43.002, -43.259, -43.498, -43.720, -43.924, -44.111, -44.279, -44.431, -44.564, -44.680, -44.777, -44.858, -44.920, -44.964, -44.991, -45.000, -45.000}\r\n\r\nMoveLUT.smallBase.bankSlip[2] = {}\r\nMoveLUT.smallBase.bankSlip[2].dataNum = 144\r\nMoveLUT.smallBase.bankSlip[2].length = 142.102\r\nMoveLUT.smallBase.bankSlip[2].posXZ = {{0.0, 0.0}, {1.0, 0.002}, {2.0, 0.008}, {3.0, 0.017}, {4.0, 0.031}, {5.0, 0.048}, {6.0, 0.069}, {7.0, 0.094}, {8.0, 0.123}, {8.999, 0.156}, {9.999, 0.193}, {10.999, 0.233}, {11.998, 0.278}, {12.997, 0.326}, {13.996, 0.378}, {14.995, 0.434}, {15.994, 0.494}, {16.992, 0.557}, {17.99, 0.625}, {18.988, 0.697}, {19.985, 0.772}, {20.982, 0.851}, {21.978, 0.934}, {22.974, 1.021}, {23.969, 1.112}, {24.964, 1.207}, {25.957, 1.305}, {26.95, 1.407}, {27.943, 1.513}, {28.934, 1.623}, {29.924, 1.737}, {30.914, 1.854}, {31.902, 1.976}, {32.889, 2.101}, {33.875, 2.229}, {34.86, 2.362}, {35.843, 2.498}, {36.825, 2.637}, {37.806, 2.78}, {38.785, 2.927}, {39.762, 3.077}, {40.729, 3.232}, {41.695, 3.394}, {42.66, 3.563}, {43.623, 3.739}, {44.585, 3.923}, {45.546, 4.114}, {46.505, 4.312}, {47.463, 4.518}, {48.419, 4.731}, {49.373, 4.952}, {50.326, 5.179}, {51.277, 5.414}, {52.226, 5.656}, {53.173, 5.906}, {54.118, 6.162}, {55.062, 6.426}, {56.003, 6.697}, {56.942, 6.975}, {57.879, 7.26}, {58.814, 7.553}, {59.746, 7.852}, {60.677, 8.159}, {61.604, 8.472}, {62.53, 8.793}, {63.453, 9.121}, {64.373, 9.456}, {65.291, 9.798}, {66.206, 10.147}, {67.119, 10.502}, {68.029, 10.865}, {68.936, 11.235}, {69.84, 11.611}, {70.741, 11.995}, {71.64, 12.385}, {72.535, 12.782}, {73.427, 13.186}, {74.316, 13.597}, {75.202, 14.015}, {76.085, 14.439}, {76.965, 14.87}, {77.841, 15.308}, {78.714, 15.752}, {79.583, 16.203}, {80.449, 16.661}, {81.312, 17.125}, {82.171, 17.596}, {83.026, 18.073}, {83.878, 18.557}, {84.726, 19.047}, {85.57, 19.544}, {86.41, 20.047}, {87.246, 20.557}, {88.079, 21.073}, {88.908, 21.595}, {89.732, 22.124}, {90.553, 22.659}, {91.369, 23.2}, {92.182, 23.747}, {92.99, 24.3}, {93.793, 24.86}, {94.593, 25.426}, {95.388, 25.998}, {96.18, 26.575}, {96.968, 27.156}, {97.755, 27.739}, {98.54, 28.326}, {99.322, 28.916}, {100.102, 29.509}, {100.88, 30.105}, {101.657, 30.704}, {102.431, 31.306}, {103.203, 31.911}, {103.973, 32.52}, {104.74, 33.131}, {105.506, 33.746}, {106.27, 34.364}, {107.032, 34.985}, {107.791, 35.609}, {108.549, 36.236}, {109.304, 36.867}, {110.058, 37.5}, {110.809, 38.137}, {111.558, 38.777}, {112.305, 39.42}, {113.05, 40.067}, {113.792, 40.716}, {114.533, 41.369}, {115.271, 42.024}, {116.007, 42.683}, {116.741, 43.345}, {117.473, 44.01}, {118.202, 44.678}, {118.929, 45.349}, {119.654, 46.023}, {120.376, 46.699}, {121.096, 47.379}, {121.814, 48.062}, {122.529, 48.748}, {123.241, 49.436}, {123.951, 50.128}, {124.659, 50.822}, {125.364, 51.519}, {126.066, 52.218}}\r\nMoveLUT.smallBase.bankSlip[2].rotY = {0.000, -0.006, -0.022, -0.050, -0.088, -0.138, -0.199, -0.270, -0.353, -0.447, -0.552, -0.668, -0.795, -0.933, -1.083, -1.243, -1.414, -1.597, -1.791, -1.996, -2.212, -2.439, -2.677, -2.926, -3.187, -3.459, -3.741, -4.035, -4.340, -4.656, -4.982, -5.320, -5.669, -6.029, -6.400, -6.781, -7.174, -7.577, -7.991, -8.416, -8.851, -9.288, -9.725, -10.162, -10.599, -11.036, -11.473, -11.910, -12.346, -12.783, -13.220, -13.657, -14.094, -14.531, -14.968, -15.405, -15.842, -16.278, -16.715, -17.152, -17.589, -18.026, -18.463, -18.900, -19.337, -19.774, -20.210, -20.647, -21.084, -21.521, -21.958, -22.395, -22.832, -23.269, -23.706, -24.143, -24.579, -25.016, -25.453, -25.890, -26.327, -26.764, -27.201, -27.638, -28.075, -28.511, -28.948, -29.385, -29.822, -30.259, -30.696, -31.133, -31.570, -32.007, -32.443, -32.880, -33.317, -33.754, -34.191, -34.628, -35.065, -35.502, -35.939, -36.373, -36.799, -37.213, -37.617, -38.011, -38.393, -38.765, -39.125, -39.475, -39.815, -40.143, -40.461, -40.768, -41.064, -41.350, -41.625, -41.889, -42.142, -42.385, -42.617, -42.838, -43.049, -43.248, -43.437, -43.616, -43.783, -43.940, -44.086, -44.221, -44.345, -44.459, -44.562, -44.654, -44.735, -44.805, -44.865, -44.913, -44.951, -44.978, -44.995, -45.000}\r\n\r\nMoveLUT.smallBase.bankSlip[3] = {}\r\nMoveLUT.smallBase.bankSlip[3].dataNum = 184\r\nMoveLUT.smallBase.bankSlip[3].length = 181.372\r\nMoveLUT.smallBase.bankSlip[3].posXZ = {{0.0, 0.0}, {1.0, 0.001}, {2.0, 0.006}, {3.0, 0.013}, {4.0, 0.022}, {5.0, 0.035}, {6.0, 0.05}, {7.0, 0.068}, {8.0, 0.089}, {9.0, 0.113}, {10.0, 0.139}, {10.999, 0.168}, {11.999, 0.2}, {12.999, 0.235}, {13.998, 0.273}, {14.998, 0.313}, {15.997, 0.356}, {16.996, 0.402}, {17.995, 0.451}, {18.994, 0.502}, {19.992, 0.557}, {20.991, 0.614}, {21.989, 0.674}, {22.986, 0.736}, {23.984, 0.802}, {24.981, 0.87}, {25.978, 0.941}, {26.974, 1.015}, {27.97, 1.091}, {28.966, 1.17}, {29.961, 1.252}, {30.955, 1.337}, {31.949, 1.425}, {32.943, 1.515}, {33.935, 1.608}, {34.927, 1.704}, {35.919, 1.802}, {36.909, 1.903}, {37.899, 2.007}, {38.888, 2.113}, {39.876, 2.222}, {40.859, 2.335}, {41.841, 2.453}, {42.823, 2.577}, {43.804, 2.706}, {44.784, 2.84}, {45.764, 2.98}, {46.742, 3.125}, {47.72, 3.276}, {48.697, 3.432}, {49.674, 3.593}, {50.649, 3.76}, {51.623, 3.932}, {52.596, 4.11}, {53.569, 4.293}, {54.54, 4.481}, {55.51, 4.675}, {56.48, 4.874}, {57.448, 5.078}, {58.414, 5.288}, {59.38, 5.503}, {60.345, 5.724}, {61.308, 5.95}, {62.27, 6.181}, {63.231, 6.417}, {64.19, 6.659}, {65.148, 6.906}, {66.105, 7.158}, {67.06, 7.416}, {68.014, 7.679}, {68.966, 7.947}, {69.917, 8.221}, {70.867, 8.499}, {71.814, 8.783}, {72.761, 9.072}, {73.705, 9.367}, {74.648, 9.667}, {75.589, 9.971}, {76.529, 10.281}, {77.467, 10.597}, {78.403, 10.917}, {79.337, 11.243}, {80.27, 11.574}, {81.2, 11.909}, {82.129, 12.251}, {83.056, 12.597}, {83.981, 12.948}, {84.904, 13.304}, {85.825, 13.666}, {86.744, 14.033}, {87.661, 14.404}, {88.576, 14.781}, {89.488, 15.163}, {90.399, 15.55}, {91.308, 15.942}, {92.214, 16.339}, {93.118, 16.74}, {94.02, 17.147}, {94.919, 17.559}, {95.817, 17.976}, {96.712, 18.398}, {97.604, 18.825}, {98.495, 19.256}, {99.382, 19.693}, {100.268, 20.135}, {101.151, 20.581}, {102.031, 21.032}, {102.909, 21.488}, {103.785, 21.949}, {104.658, 22.415}, {105.528, 22.886}, {106.396, 23.361}, {107.261, 23.842}, {108.123, 24.327}, {108.983, 24.816}, {109.84, 25.311}, {110.694, 25.81}, {111.545, 26.314}, {112.394, 26.823}, {113.24, 27.336}, {114.083, 27.854}, {114.923, 28.377}, {115.76, 28.904}, {116.594, 29.436}, {117.425, 29.973}, {118.254, 30.514}, {119.079, 31.06}, {119.901, 31.61}, {120.721, 32.165}, {121.537, 32.724}, {122.35, 33.288}, {123.16, 33.856}, {123.966, 34.429}, {124.77, 35.006}, {125.57, 35.588}, {126.367, 36.174}, {127.161, 36.765}, {127.952, 37.359}, {128.739, 37.959}, {129.523, 38.562}, {130.304, 39.17}, {131.081, 39.783}, {131.855, 40.399}, {132.627, 41.018}, {133.397, 41.639}, {134.165, 42.263}, {134.932, 42.888}, {135.697, 43.516}, {136.46, 44.146}, {137.222, 44.778}, {137.982, 45.412}, {138.741, 46.049}, {139.498, 46.687}, {140.253, 47.328}, {141.007, 47.971}, {141.758, 48.617}, {142.509, 49.264}, {143.257, 49.914}, {144.005, 50.566}, {144.75, 51.22}, {145.494, 51.876}, {146.236, 52.535}, {146.976, 53.196}, {147.715, 53.859}, {148.452, 54.524}, {149.187, 55.191}, {149.921, 55.861}, {150.653, 56.533}, {151.384, 57.206}, {152.112, 57.883}, {152.839, 58.561}, {153.564, 59.241}, {154.288, 59.924}, {155.009, 60.608}, {155.729, 61.295}, {156.447, 61.984}, {157.163, 62.675}, {157.878, 63.368}, {158.59, 64.063}, {159.301, 64.76}, {160.01, 65.459}, {160.716, 66.16}, {161.421, 66.863}, {161.421, 66.863}}\r\nMoveLUT.smallBase.bankSlip[3].rotY = {0.000, -0.004, -0.016, -0.036, -0.064, -0.100, -0.143, -0.195, -0.255, -0.323, -0.398, -0.482, -0.574, -0.673, -0.781, -0.897, -1.020, -1.152, -1.291, -1.439, -1.595, -1.758, -1.930, -2.109, -2.297, -2.493, -2.696, -2.908, -3.127, -3.355, -3.590, -3.834, -4.085, -4.344, -4.611, -4.887, -5.170, -5.460, -5.759, -6.066, -6.380, -6.697, -7.014, -7.331, -7.648, -7.965, -8.282, -8.598, -8.915, -9.232, -9.549, -9.866, -10.183, -10.500, -10.817, -11.134, -11.451, -11.767, -12.084, -12.401, -12.718, -13.035, -13.352, -13.669, -13.986, -14.303, -14.620, -14.936, -15.253, -15.570, -15.887, -16.204, -16.521, -16.838, -17.155, -17.472, -17.789, -18.105, -18.422, -18.739, -19.056, -19.373, -19.690, -20.007, -20.324, -20.641, -20.958, -21.275, -21.591, -21.908, -22.225, -22.542, -22.859, -23.176, -23.493, -23.810, -24.127, -24.444, -24.760, -25.077, -25.394, -25.711, -26.028, -26.345, -26.662, -26.979, -27.296, -27.613, -27.929, -28.246, -28.563, -28.880, -29.197, -29.514, -29.831, -30.148, -30.465, -30.782, -31.098, -31.415, -31.732, -32.049, -32.366, -32.683, -33.000, -33.317, -33.634, -33.951, -34.267, -34.584, -34.901, -35.218, -35.535, -35.852, -36.169, -36.486, -36.803, -37.120, -37.436, -37.753, -38.070, -38.387, -38.703, -39.014, -39.317, -39.612, -39.899, -40.178, -40.450, -40.713, -40.969, -41.217, -41.457, -41.689, -41.913, -42.129, -42.338, -42.538, -42.731, -42.916, -43.093, -43.262, -43.424, -43.577, -43.723, -43.861, -43.991, -44.113, -44.227, -44.334, -44.432, -44.523, -44.606, -44.681, -44.748, -44.807, -44.858, -44.901, -44.937, -44.965, -44.984, -44.996, -45.000, -45.000}\r\n\r\n\r\n--maneuver data for medium base banks JC\r\nMoveLUT.mediumBase.bank = {}\r\nMoveLUT.mediumBase.bank[1] = {}\r\nMoveLUT.mediumBase.bank[1].dataNum = 125\r\nMoveLUT.mediumBase.bank[1].length = 122.832\r\nMoveLUT.mediumBase.bank[1].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.013, 2.000}, {0.028, 3.000}, {0.050, 4.000}, {0.078, 5.000}, {0.113, 6.000}, {0.153, 7.000}, {0.201, 7.999}, {0.254, 8.999}, {0.314, 9.998}, {0.380, 10.998}, {0.452, 11.997}, {0.531, 12.995}, {0.616, 13.994}, {0.708, 14.992}, {0.806, 15.989}, {0.911, 16.986}, {1.022, 17.983}, {1.140, 18.978}, {1.264, 19.973}, {1.394, 20.968}, {1.532, 21.961}, {1.675, 22.953}, {1.826, 23.944}, {1.983, 24.934}, {2.146, 25.923}, {2.316, 26.910}, {2.492, 27.896}, {2.675, 28.880}, {2.865, 29.863}, {3.061, 30.843}, {3.263, 31.822}, {3.472, 32.798}, {3.687, 33.773}, {3.909, 34.744}, {4.136, 35.713}, {4.371, 36.680}, {4.611, 37.644}, {4.857, 38.604}, {5.110, 39.562}, {5.368, 40.516}, {5.633, 41.466}, {5.903, 42.413}, {6.179, 43.357}, {6.461, 44.296}, {6.748, 45.231}, {7.040, 46.162}, {7.337, 47.089}, {7.640, 48.011}, {7.947, 48.928}, {8.259, 49.841}, {8.576, 50.748}, {8.897, 51.650}, {9.222, 52.547}, {9.551, 53.439}, {9.884, 54.325}, {10.221, 55.205}, {10.561, 56.080}, {10.904, 56.948}, {11.251, 57.810}, {11.603, 58.665}, {11.963, 59.517}, {12.330, 60.366}, {12.700, 61.213}, {13.076, 62.058}, {13.456, 62.902}, {13.842, 63.744}, {14.232, 64.585}, {14.628, 65.424}, {15.029, 66.261}, {15.436, 67.097}, {15.847, 67.931}, {16.265, 68.763}, {16.687, 69.594}, {17.116, 70.424}, {17.550, 71.252}, {17.990, 72.078}, {18.436, 72.902}, {18.888, 73.726}, {19.345, 74.547}, {19.809, 75.367}, {20.278, 76.185}, {20.753, 77.002}, {21.235, 77.817}, {21.722, 78.630}, {22.216, 79.441}, {22.716, 80.251}, {23.222, 81.059}, {23.734, 81.865}, {24.252, 82.669}, {24.776, 83.471}, {25.306, 84.271}, {25.843, 85.069}, {26.385, 85.866}, {26.934, 86.660}, {27.489, 87.452}, {28.050, 88.241}, {28.617, 89.029}, {29.190, 89.814}, {29.769, 90.597}, {30.354, 91.377}, {30.946, 92.155}, {31.543, 92.930}, {32.145, 93.703}, {32.754, 94.473}, {33.369, 95.240}, {33.989, 96.005}, {34.615, 96.766}, {35.247, 97.525}, {35.884, 98.280}, {36.527, 99.032}, {37.175, 99.781}, {37.829, 100.527}, {38.488, 101.269}, {39.152, 102.008}, {39.822, 102.744}, {40.496, 103.475}, {41.176, 104.203}, {41.860, 104.927}, {42.549, 105.647}, {43.243, 106.363}, {43.942, 107.074}, {44.645, 107.782}, {44.645, 107.782},}\r\nMoveLUT.mediumBase.bank[1].rotY = {0.000, 0.006, 0.024, 0.054, 0.096, 0.149, 0.215, 0.293, 0.383, 0.485, 0.599, 0.725, 0.864, 1.014, 1.177, 1.353, 1.540, 1.740, 1.952, 2.177, 2.414, 2.664, 2.927, 3.201, 3.489, 3.789, 4.102, 4.427, 4.765, 5.116, 5.479, 5.856, 6.244, 6.646, 7.060, 7.486, 7.925, 8.377, 8.841, 9.318, 9.806, 10.308, 10.822, 11.348, 11.886, 12.436, 12.998, 13.572, 14.157, 14.754, 15.361, 15.981, 16.611, 17.251, 17.903, 18.565, 19.237, 19.920, 20.612, 21.314, 22.026, 22.740, 23.450, 24.149, 24.836, 25.511, 26.173, 26.824, 27.462, 28.089, 28.703, 29.307, 29.898, 30.478, 31.047, 31.604, 32.150, 32.684, 33.208, 33.720, 34.220, 34.710, 35.188, 35.655, 36.111, 36.556, 36.990, 37.412, 37.824, 38.224, 38.613, 38.990, 39.357, 39.712, 40.055, 40.388, 40.709, 41.019, 41.317, 41.604, 41.880, 42.144, 42.396, 42.637, 42.866, 43.084, 43.291, 43.485, 43.668, 43.839, 43.999, 44.147, 44.283, 44.407, 44.520, 44.620, 44.709, 44.786, 44.852, 44.905, 44.947, 44.976, 44.994, 45.000, 45.000  }\r\n\r\nMoveLUT.mediumBase.bank[2] = {}\r\nMoveLUT.mediumBase.bank[2].dataNum = 164\r\nMoveLUT.mediumBase.bank[2].length = 162.102\r\nMoveLUT.mediumBase.bank[2].posXZ = {{0.000, 0.000}, {0.002, 1.000}, {0.008, 2.000}, {0.017, 3.000}, {0.031, 4.000}, {0.048, 5.000}, {0.069, 6.000}, {0.094, 7.000}, {0.123, 8.000}, {0.156, 9.000}, {0.193, 9.999}, {0.233, 10.999}, {0.278, 11.999}, {0.326, 12.998}, {0.378, 13.998}, {0.434, 14.997}, {0.494, 15.996}, {0.558, 16.995}, {0.625, 17.993}, {0.697, 18.992}, {0.773, 19.990}, {0.852, 20.988}, {0.935, 21.985}, {1.023, 22.983}, {1.114, 23.979}, {1.209, 24.976}, {1.308, 25.971}, {1.411, 26.967}, {1.518, 27.962}, {1.628, 28.956}, {1.743, 29.949}, {1.861, 30.942}, {1.984, 31.934}, {2.110, 32.926}, {2.240, 33.916}, {2.374, 34.906}, {2.512, 35.895}, {2.654, 36.882}, {2.800, 37.869}, {2.949, 38.855}, {3.102, 39.839}, {3.259, 40.822}, {3.420, 41.804}, {3.584, 42.785}, {3.752, 43.764}, {3.924, 44.742}, {4.100, 45.719}, {4.279, 46.693}, {4.462, 47.666}, {4.648, 48.638}, {4.838, 49.607}, {5.031, 50.575}, {5.228, 51.541}, {5.429, 52.505}, {5.632, 53.467}, {5.839, 54.426}, {6.050, 55.384}, {6.263, 56.339}, {6.480, 57.292}, {6.700, 58.242}, {6.923, 59.190}, {7.149, 60.128}, {7.383, 61.064}, {7.623, 61.998}, {7.871, 62.930}, {8.125, 63.860}, {8.387, 64.789}, {8.656, 65.715}, {8.932, 66.639}, {9.215, 67.561}, {9.505, 68.481}, {9.801, 69.399}, {10.105, 70.314}, {10.416, 71.227}, {10.734, 72.138}, {11.059, 73.046}, {11.391, 73.952}, {11.729, 74.855}, {12.075, 75.755}, {12.427, 76.653}, {12.786, 77.549}, {13.152, 78.441}, {13.525, 79.330}, {13.904, 80.217}, {14.291, 81.101}, {14.684, 81.982}, {15.083, 82.860}, {15.490, 83.734}, {15.903, 84.606}, {16.323, 85.474}, {16.749, 86.340}, {17.182, 87.201}, {17.621, 88.060}, {18.067, 88.915}, {18.520, 89.767}, {18.979, 90.615}, {19.444, 91.460}, {19.916, 92.301}, {20.394, 93.139}, {20.879, 93.973}, {21.370, 94.803}, {21.867, 95.630}, {22.371, 96.452}, {22.878, 97.272}, {23.389, 98.090}, {23.903, 98.907}, {24.420, 99.721}, {24.940, 100.534}, {25.464, 101.345}, {25.990, 102.154}, {26.519, 102.962}, {27.052, 103.768}, {27.588, 104.572}, {28.127, 105.374}, {28.670, 106.175}, {29.215, 106.974}, {29.764, 107.771}, {30.316, 108.567}, {30.872, 109.361}, {31.431, 110.153}, {31.993, 110.943}, {32.558, 111.732}, {33.127, 112.519}, {33.699, 113.304}, {34.275, 114.088}, {34.854, 114.870}, {35.436, 115.650}, {36.022, 116.428}, {36.611, 117.205}, {37.204, 117.979}, {37.800, 118.752}, {38.399, 119.524}, {39.002, 120.293}, {39.608, 121.061}, {40.217, 121.826}, {40.830, 122.590}, {41.446, 123.352}, {42.065, 124.112}, {42.688, 124.871}, {43.314, 125.627}, {43.944, 126.381}, {44.576, 127.134}, {45.212, 127.884}, {45.852, 128.632}, {46.494, 129.379}, {47.140, 130.123}, {47.789, 130.865}, {48.441, 131.605}, {49.096, 132.343}, {49.755, 133.079}, {50.416, 133.813}, {51.081, 134.544}, {51.749, 135.274}, {52.420, 136.000}, {53.094, 136.725}, {53.771, 137.447}, {54.450, 138.167}, {55.133, 138.885}, {55.819, 139.600}, {56.507, 140.312}, {57.199, 141.022}, {57.893, 141.730}, {58.590, 142.435}, {59.289, 143.137}, }\r\nMoveLUT.mediumBase.bank[2].rotY = {0.000, 0.004, 0.015, 0.033, 0.059, 0.092, 0.132, 0.180, 0.236, 0.298, 0.368, 0.445, 0.530, 0.622, 0.722, 0.829, 0.943, 1.065, 1.195, 1.332, 1.476, 1.628, 1.787, 1.954, 2.128, 2.309, 2.499, 2.695, 2.900, 3.111, 3.331, 3.557, 3.792, 4.033, 4.283, 4.539, 4.804, 5.075, 5.354, 5.641, 5.935, 6.237, 6.545, 6.862, 7.185, 7.516, 7.855, 8.200, 8.553, 8.913, 9.281, 9.655, 10.037, 10.425, 10.821, 11.224, 11.634, 12.051, 12.475, 12.905, 13.343, 13.780, 14.216, 14.653, 15.090, 15.527, 15.964, 16.401, 16.838, 17.275, 17.712, 18.148, 18.585, 19.022, 19.459, 19.896, 20.333, 20.770, 21.207, 21.644, 22.080, 22.517, 22.954, 23.391, 23.828, 24.265, 24.702, 25.139, 25.576, 26.013, 26.449, 26.886, 27.323, 27.760, 28.197, 28.634, 29.071, 29.508, 29.945, 30.381, 30.818, 31.255, 31.692, 32.124, 32.550, 32.968, 33.378, 33.781, 34.178, 34.566, 34.948, 35.322, 35.690, 36.050, 36.403, 36.749, 37.088, 37.419, 37.744, 38.061, 38.372, 38.675, 38.971, 39.261, 39.543, 39.818, 40.086, 40.347, 40.601, 40.848, 41.087, 41.320, 41.546, 41.764, 41.976, 42.180, 42.377, 42.568, 42.751, 42.927, 43.095, 43.257, 43.412, 43.559, 43.699, 43.832, 43.958, 44.077, 44.189, 44.293, 44.391, 44.481, 44.564, 44.639, 44.708, 44.769, 44.823, 44.870, 44.910, 44.942, 44.968, 44.986, 44.996, 45.000, }\r\n\r\nMoveLUT.mediumBase.bank[3] = {}\r\nMoveLUT.mediumBase.bank[3].dataNum = 204\r\nMoveLUT.mediumBase.bank[3].length = 201.372\r\nMoveLUT.mediumBase.bank[3].posXZ = {{0.000, 0.000}, {0.001, 1.000}, {0.006, 2.000}, {0.013, 3.000}, {0.022, 4.000}, {0.035, 5.000}, {0.050, 6.000}, {0.068, 7.000}, {0.089, 8.000}, {0.113, 9.000}, {0.139, 10.000}, {0.168, 11.000}, {0.200, 11.999}, {0.235, 12.999}, {0.273, 13.999}, {0.313, 14.998}, {0.356, 15.998}, {0.402, 16.997}, {0.451, 17.997}, {0.502, 18.996}, {0.557, 19.995}, {0.614, 20.994}, {0.674, 21.992}, {0.737, 22.991}, {0.802, 23.989}, {0.871, 24.987}, {0.942, 25.985}, {1.016, 26.983}, {1.093, 27.980}, {1.172, 28.977}, {1.255, 29.974}, {1.340, 30.970}, {1.428, 31.966}, {1.519, 32.962}, {1.612, 33.957}, {1.708, 34.951}, {1.808, 35.945}, {1.909, 36.939}, {2.014, 37.932}, {2.122, 38.925}, {2.232, 39.917}, {2.345, 40.908}, {2.460, 41.899}, {2.579, 42.889}, {2.700, 43.878}, {2.824, 44.867}, {2.951, 45.855}, {3.080, 46.841}, {3.212, 47.828}, {3.347, 48.813}, {3.484, 49.797}, {3.624, 50.780}, {3.766, 51.763}, {3.912, 52.744}, {4.060, 53.724}, {4.210, 54.703}, {4.363, 55.681}, {4.519, 56.658}, {4.677, 57.633}, {4.837, 58.607}, {5.000, 59.580}, {5.167, 60.548}, {5.338, 61.514}, {5.515, 62.480}, {5.698, 63.444}, {5.885, 64.408}, {6.078, 65.370}, {6.276, 66.332}, {6.480, 67.292}, {6.689, 68.251}, {6.903, 69.209}, {7.123, 70.166}, {7.348, 71.122}, {7.578, 72.076}, {7.813, 73.029}, {8.054, 73.981}, {8.299, 74.931}, {8.551, 75.880}, {8.807, 76.828}, {9.069, 77.774}, {9.335, 78.718}, {9.608, 79.662}, {9.885, 80.603}, {10.167, 81.543}, {10.455, 82.482}, {10.748, 83.419}, {11.046, 84.354}, {11.349, 85.288}, {11.657, 86.220}, {11.971, 87.150}, {12.290, 88.079}, {12.613, 89.005}, {12.942, 89.930}, {13.276, 90.853}, {13.616, 91.774}, {13.960, 92.694}, {14.309, 93.611}, {14.663, 94.527}, {15.023, 95.440}, {15.387, 96.352}, {15.757, 97.261}, {16.131, 98.168}, {16.511, 99.074}, {16.895, 99.977}, {17.285, 100.878}, {17.679, 101.777}, {18.079, 102.674}, {18.483, 103.568}, {18.893, 104.460}, {19.307, 105.350}, {19.726, 106.238}, {20.150, 107.123}, {20.579, 108.006}, {21.013, 108.887}, {21.452, 109.765}, {21.896, 110.640}, {22.344, 111.514}, {22.797, 112.384}, {23.255, 113.253}, {23.718, 114.118}, {24.186, 114.981}, {24.658, 115.842}, {25.135, 116.700}, {25.617, 117.555}, {26.104, 118.408}, {26.595, 119.257}, {27.091, 120.104}, {27.592, 120.949}, {28.097, 121.790}, {28.607, 122.629}, {29.122, 123.465}, {29.641, 124.298}, {30.165, 125.128}, {30.694, 125.956}, {31.227, 126.780}, {31.764, 127.601}, {32.306, 128.420}, {32.853, 129.235}, {33.404, 130.047}, {33.960, 130.857}, {34.520, 131.663}, {35.084, 132.466}, {35.653, 133.266}, {36.224, 134.065}, {36.797, 134.862}, {37.372, 135.657}, {37.950, 136.451}, {38.529, 137.244}, {39.111, 138.035}, {39.696, 138.824}, {40.282, 139.612}, {40.871, 140.399}, {41.462, 141.184}, {42.055, 141.968}, {42.651, 142.750}, {43.249, 143.531}, {43.849, 144.310}, {44.451, 145.088}, {45.056, 145.864}, {45.663, 146.639}, {46.273, 147.412}, {46.884, 148.184}, {47.498, 148.955}, {48.115, 149.724}, {48.734, 150.491}, {49.355, 151.257}, {49.978, 152.022}, {50.604, 152.785}, {51.232, 153.546}, {51.862, 154.306}, {52.495, 155.065}, {53.130, 155.822}, {53.767, 156.578}, {54.407, 157.332}, {55.049, 158.084}, {55.694, 158.835}, {56.340, 159.585}, {56.989, 160.333}, {57.641, 161.079}, {58.294, 161.824}, {58.950, 162.567}, {59.608, 163.309}, {60.269, 164.049}, {60.931, 164.787}, {61.596, 165.524}, {62.263, 166.259}, {62.933, 166.993}, {63.604, 167.725}, {64.278, 168.455}, {64.954, 169.184}, {65.632, 169.910}, {66.312, 170.635}, {66.995, 171.359}, {67.679, 172.080}, {68.366, 172.800}, {69.055, 173.518}, {69.746, 174.234}, {70.439, 174.949}, {71.134, 175.661}, {71.831, 176.372}, {72.530, 177.081}, {73.231, 177.787}, {73.934, 178.492}, {73.934, 178.492}, }\r\nMoveLUT.mediumBase.bank[3].rotY = {0.000, 0.003, 0.011, 0.024, 0.042, 0.066, 0.096, 0.130, 0.170, 0.215, 0.266, 0.321, 0.382, 0.449, 0.521, 0.598, 0.680, 0.768, 0.861, 0.960, 1.064, 1.173, 1.287, 1.407, 1.533, 1.663, 1.799, 1.941, 2.087, 2.239, 2.397, 2.560, 2.728, 2.901, 3.080, 3.265, 3.454, 3.649, 3.850, 4.055, 4.266, 4.483, 4.704, 4.931, 5.164, 5.401, 5.644, 5.892, 6.146, 6.405, 6.669, 6.938, 7.212, 7.492, 7.777, 8.067, 8.362, 8.663, 8.968, 9.279, 9.595, 9.912, 10.229, 10.545, 10.862, 11.179, 11.496, 11.813, 12.130, 12.447, 12.764, 13.081, 13.398, 13.714, 14.031, 14.348, 14.665, 14.982, 15.299, 15.616, 15.933, 16.250, 16.567, 16.883, 17.200, 17.517, 17.834, 18.151, 18.468, 18.785, 19.102, 19.419, 19.736, 20.052, 20.369, 20.686, 21.003, 21.320, 21.637, 21.954, 22.271, 22.588, 22.905, 23.221, 23.538, 23.855, 24.172, 24.489, 24.806, 25.123, 25.440, 25.757, 26.074, 26.391, 26.707, 27.024, 27.341, 27.658, 27.975, 28.292, 28.609, 28.926, 29.243, 29.560, 29.876, 30.193, 30.510, 30.827, 31.144, 31.461, 31.778, 32.095, 32.412, 32.729, 33.045, 33.362, 33.679, 33.996, 34.313, 34.630, 34.947, 35.264, 35.579, 35.890, 36.196, 36.497, 36.793, 37.083, 37.368, 37.647, 37.922, 38.191, 38.455, 38.713, 38.967, 39.215, 39.458, 39.696, 39.928, 40.156, 40.378, 40.595, 40.807, 41.013, 41.215, 41.411, 41.602, 41.788, 41.968, 42.144, 42.314, 42.479, 42.639, 42.793, 42.942, 43.087, 43.225, 43.359, 43.488, 43.611, 43.729, 43.842, 43.949, 44.052, 44.149, 44.241, 44.327, 44.409, 44.485, 44.556, 44.622, 44.682, 44.737, 44.787, 44.832, 44.871, 44.905, 44.934, 44.958, 44.976, 44.989, 44.997, 45.000, 45.000, }\r\n\r\n\r\nMoveLUT.largeBase.bank = {}\r\nMoveLUT.largeBase.bank[1] = {}\r\nMoveLUT.largeBase.bank[1].dataNum = 145\r\nMoveLUT.largeBase.bank[1].length = 142.832\r\nMoveLUT.largeBase.bank[1].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.013, 2.000}, {0.028, 3.000}, {0.050, 4.000}, {0.078, 5.000}, {0.113, 6.000}, {0.153, 7.000}, {0.201, 7.999}, {0.254, 8.999}, {0.314, 9.999}, {0.380, 10.998}, {0.452, 11.997}, {0.531, 12.996}, {0.617, 13.995}, {0.709, 14.994}, {0.807, 15.992}, {0.912, 16.990}, {1.023, 17.987}, {1.141, 18.984}, {1.266, 19.980}, {1.397, 20.976}, {1.534, 21.971}, {1.679, 22.965}, {1.830, 23.958}, {1.988, 24.951}, {2.152, 25.942}, {2.324, 26.932}, {2.502, 27.922}, {2.686, 28.910}, {2.878, 29.896}, {3.076, 30.882}, {3.282, 31.865}, {3.493, 32.847}, {3.712, 33.827}, {3.938, 34.806}, {4.170, 35.782}, {4.409, 36.756}, {4.655, 37.728}, {4.908, 38.698}, {5.168, 39.665}, {5.435, 40.629}, {5.708, 41.591}, {5.987, 42.549}, {6.274, 43.505}, {6.566, 44.457}, {6.865, 45.406}, {7.171, 46.352}, {7.483, 47.294}, {7.801, 48.232}, {8.125, 49.166}, {8.456, 50.096}, {8.793, 51.022}, {9.136, 51.943}, {9.484, 52.859}, {9.838, 53.771}, {10.197, 54.678}, {10.562, 55.580}, {10.932, 56.477}, {11.307, 57.369}, {11.687, 58.255}, {12.068, 59.136}, {12.446, 60.014}, {12.821, 60.890}, {13.193, 61.762}, {13.562, 62.631}, {13.928, 63.497}, {14.291, 64.360}, {14.652, 65.220}, {15.009, 66.077}, {15.363, 66.932}, {15.715, 67.784}, {16.064, 68.633}, {16.410, 69.479}, {16.754, 70.322}, {17.095, 71.163}, {17.433, 72.001}, {17.768, 72.837}, {18.101, 73.670}, {18.432, 74.500}, {18.760, 75.328}, {19.088, 76.152}, {19.423, 76.976}, {19.763, 77.800}, {20.110, 78.623}, {20.463, 79.445}, {20.821, 80.267}, {21.186, 81.089}, {21.558, 81.910}, {21.935, 82.731}, {22.319, 83.551}, {22.709, 84.370}, {23.106, 85.189}, {23.509, 86.007}, {23.918, 86.825}, {24.334, 87.642}, {24.756, 88.458}, {25.185, 89.273}, {25.621, 90.087}, {26.062, 90.900}, {26.511, 91.713}, {26.966, 92.524}, {27.427, 93.335}, {27.896, 94.144}, {28.370, 94.952}, {28.851, 95.759}, {29.339, 96.564}, {29.834, 97.369}, {30.334, 98.171}, {30.842, 98.973}, {31.356, 99.773}, {31.876, 100.571}, {32.403, 101.368}, {32.936, 102.163}, {33.476, 102.956}, {34.022, 103.748}, {34.575, 104.538}, {35.134, 105.325}, {35.699, 106.111}, {36.271, 106.894}, {36.848, 107.676}, {37.432, 108.455}, {38.022, 109.232}, {38.618, 110.006}, {39.220, 110.778}, {39.828, 111.547}, {40.442, 112.314}, {41.062, 113.078}, {41.688, 113.839}, {42.319, 114.597}, {42.956, 115.352}, {43.599, 116.104}, {44.247, 116.853}, {44.900, 117.599}, {45.559, 118.341}, {46.224, 119.080}, {46.893, 119.815}, {47.567, 120.546}, {48.247, 121.274}, {48.931, 121.998}, {49.620, 122.718}, {50.314, 123.434}, {51.013, 124.145}, {51.716, 124.853}, {51.716, 124.853}, }\r\nMoveLUT.largeBase.bank[1].rotY = {0.000, 0.004, 0.018, 0.040, 0.072, 0.112, 0.161, 0.220, 0.287, 0.364, 0.449, 0.544, 0.648, 0.761, 0.883, 1.015, 1.156, 1.306, 1.466, 1.635, 1.813, 2.001, 2.199, 2.406, 2.622, 2.849, 3.085, 3.330, 3.586, 3.851, 4.126, 4.411, 4.706, 5.010, 5.325, 5.650, 5.984, 6.329, 6.684, 7.049, 7.424, 7.809, 8.204, 8.609, 9.023, 9.448, 9.883, 10.327, 10.782, 11.246, 11.720, 12.205, 12.699, 13.202, 13.715, 14.238, 14.770, 15.310, 15.861, 16.420, 16.988, 17.559, 18.128, 18.695, 19.258, 19.819, 20.378, 20.933, 21.487, 22.038, 22.587, 23.134, 23.678, 24.221, 24.762, 25.300, 25.837, 26.373, 26.906, 27.438, 27.969, 28.493, 29.009, 29.517, 30.017, 30.510, 30.994, 31.470, 31.938, 32.399, 32.851, 33.295, 33.732, 34.160, 34.581, 34.993, 35.398, 35.795, 36.183, 36.564, 36.936, 37.301, 37.657, 38.005, 38.345, 38.677, 39.001, 39.317, 39.624, 39.923, 40.214, 40.496, 40.770, 41.036, 41.294, 41.543, 41.783, 42.015, 42.239, 42.454, 42.660, 42.858, 43.047, 43.228, 43.400, 43.563, 43.718, 43.864, 44.001, 44.130, 44.249, 44.360, 44.462, 44.555, 44.640, 44.715, 44.782, 44.840, 44.889, 44.929, 44.960, 44.982, 44.996, 45.000, 45.000, }\r\n\r\nMoveLUT.largeBase.bank[2] = {}\r\nMoveLUT.largeBase.bank[2].dataNum = 185\r\nMoveLUT.largeBase.bank[2].length = 182.102\r\nMoveLUT.largeBase.bank[2].posXZ = {{0.000, 0.000}, {0.002, 1.000}, {0.008, 2.000}, {0.017, 3.000}, {0.031, 4.000}, {0.048, 5.000}, {0.069, 6.000}, {0.094, 7.000}, {0.123, 8.000}, {0.156, 9.000}, {0.193, 10.000}, {0.233, 10.999}, {0.278, 11.999}, {0.326, 12.999}, {0.378, 13.998}, {0.434, 14.998}, {0.494, 15.997}, {0.558, 16.996}, {0.626, 17.995}, {0.697, 18.994}, {0.773, 19.993}, {0.853, 20.991}, {0.936, 21.989}, {1.023, 22.987}, {1.115, 23.984}, {1.210, 24.982}, {1.309, 25.979}, {1.413, 26.975}, {1.520, 27.971}, {1.631, 28.967}, {1.746, 29.962}, {1.865, 30.957}, {1.988, 31.951}, {2.115, 32.944}, {2.246, 33.937}, {2.381, 34.929}, {2.520, 35.921}, {2.662, 36.911}, {2.809, 37.901}, {2.960, 38.890}, {3.115, 39.879}, {3.273, 40.866}, {3.436, 41.852}, {3.602, 42.837}, {3.773, 43.822}, {3.947, 44.805}, {4.125, 45.787}, {4.307, 46.767}, {4.493, 47.747}, {4.683, 48.725}, {4.877, 49.702}, {5.074, 50.677}, {5.276, 51.651}, {5.481, 52.623}, {5.689, 53.593}, {5.902, 54.562}, {6.118, 55.529}, {6.338, 56.495}, {6.561, 57.458}, {6.788, 58.420}, {7.019, 59.379}, {7.253, 60.337}, {7.491, 61.292}, {7.732, 62.246}, {7.976, 63.197}, {8.224, 64.145}, {8.475, 65.092}, {8.729, 66.036}, {8.987, 66.977}, {9.248, 67.916}, {9.512, 68.853}, {9.778, 69.786}, {10.048, 70.717}, {10.321, 71.645}, {10.597, 72.571}, {10.875, 73.493}, {11.157, 74.413}, {11.440, 75.329}, {11.727, 76.242}, {12.016, 77.152}, {12.308, 78.059}, {12.601, 78.956}, {12.902, 79.850}, {13.209, 80.742}, {13.523, 81.631}, {13.844, 82.518}, {14.172, 83.402}, {14.506, 84.284}, {14.847, 85.164}, {15.195, 86.040}, {15.549, 86.914}, {15.910, 87.786}, {16.278, 88.654}, {16.652, 89.520}, {17.033, 90.383}, {17.420, 91.243}, {17.814, 92.100}, {18.215, 92.954}, {18.622, 93.805}, {19.036, 94.652}, {19.455, 95.497}, {19.882, 96.338}, {20.313, 97.177}, {20.747, 98.015}, {21.183, 98.851}, {21.623, 99.686}, {22.066, 100.519}, {22.512, 101.351}, {22.961, 102.181}, {23.413, 103.011}, {23.868, 103.838}, {24.326, 104.665}, {24.788, 105.490}, {25.253, 106.314}, {25.721, 107.136}, {26.192, 107.957}, {26.667, 108.777}, {27.145, 109.596}, {27.627, 110.413}, {28.112, 111.229}, {28.600, 112.043}, {29.091, 112.856}, {29.587, 113.668}, {30.085, 114.479}, {30.587, 115.288}, {31.093, 116.096}, {31.602, 116.903}, {32.114, 117.708}, {32.630, 118.512}, {33.150, 119.314}, {33.673, 120.115}, {34.199, 120.915}, {34.730, 121.714}, {35.263, 122.511}, {35.801, 123.306}, {36.342, 124.100}, {36.886, 124.893}, {37.434, 125.685}, {37.986, 126.475}, {38.541, 127.263}, {39.100, 128.050}, {39.662, 128.836}, {40.228, 129.620}, {40.797, 130.402}, {41.370, 131.183}, {41.947, 131.963}, {42.527, 132.740}, {43.111, 133.517}, {43.698, 134.291}, {44.289, 135.065}, {44.883, 135.836}, {45.481, 136.606}, {46.082, 137.374}, {46.687, 138.140}, {47.295, 138.905}, {47.907, 139.668}, {48.522, 140.429}, {49.141, 141.188}, {49.763, 141.946}, {50.389, 142.701}, {51.018, 143.455}, {51.650, 144.207}, {52.285, 144.957}, {52.924, 145.705}, {53.566, 146.451}, {54.212, 147.195}, {54.861, 147.937}, {55.513, 148.677}, {56.168, 149.415}, {56.826, 150.151}, {57.488, 150.884}, {58.152, 151.616}, {58.820, 152.345}, {59.491, 153.072}, {60.165, 153.796}, {60.842, 154.518}, {61.522, 155.238}, {62.204, 155.956}, {62.890, 156.671}, {63.578, 157.383}, {64.270, 158.093}, {64.964, 158.801}, {65.661, 159.506}, {66.360, 160.208}, {66.360, 160.208}, }\r\nMoveLUT.largeBase.bank[2].rotY = {0.000, 0.003, 0.011, 0.025, 0.044, 0.069, 0.099, 0.135, 0.177, 0.224, 0.276, 0.334, 0.398, 0.467, 0.542, 0.622, 0.708, 0.799, 0.896, 0.999, 1.107, 1.221, 1.341, 1.466, 1.597, 1.734, 1.876, 2.024, 2.177, 2.337, 2.502, 2.672, 2.849, 3.031, 3.219, 3.412, 3.612, 3.817, 4.027, 4.244, 4.466, 4.694, 4.927, 5.167, 5.412, 5.663, 5.919, 6.181, 6.450, 6.723, 7.003, 7.288, 7.579, 7.875, 8.177, 8.485, 8.798, 9.117, 9.441, 9.771, 10.106, 10.447, 10.793, 11.145, 11.502, 11.865, 12.232, 12.605, 12.984, 13.367, 13.756, 14.150, 14.549, 14.953, 15.362, 15.776, 16.195, 16.619, 17.048, 17.482, 17.920, 18.357, 18.794, 19.231, 19.668, 20.105, 20.542, 20.979, 21.415, 21.852, 22.289, 22.726, 23.163, 23.600, 24.037, 24.474, 24.911, 25.347, 25.784, 26.221, 26.658, 27.095, 27.529, 27.957, 28.380, 28.797, 29.208, 29.614, 30.015, 30.410, 30.799, 31.184, 31.562, 31.936, 32.304, 32.667, 33.024, 33.377, 33.723, 34.065, 34.402, 34.733, 35.059, 35.379, 35.695, 36.005, 36.310, 36.610, 36.904, 37.194, 37.478, 37.757, 38.031, 38.299, 38.563, 38.821, 39.074, 39.322, 39.564, 39.802, 40.034, 40.261, 40.482, 40.699, 40.910, 41.116, 41.316, 41.512, 41.702, 41.887, 42.067, 42.241, 42.410, 42.574, 42.732, 42.885, 43.033, 43.176, 43.313, 43.445, 43.572, 43.693, 43.809, 43.919, 44.025, 44.124, 44.219, 44.308, 44.392, 44.470, 44.543, 44.610, 44.673, 44.729, 44.781, 44.827, 44.867, 44.903, 44.932, 44.957, 44.976, 44.989, 44.997, 45.000, 45.000, }\r\n\r\nMoveLUT.largeBase.bank[3] = {}\r\nMoveLUT.largeBase.bank[3].dataNum = 224\r\nMoveLUT.largeBase.bank[3].length = 221.372\r\nMoveLUT.largeBase.bank[3].posXZ = {{0.000, 0.000}, {0.001, 1.000}, {0.006, 2.000}, {0.013, 3.000}, {0.022, 4.000}, {0.035, 5.000}, {0.050, 6.000}, {0.068, 7.000}, {0.089, 8.000}, {0.113, 9.000}, {0.139, 10.000}, {0.168, 11.000}, {0.200, 11.999}, {0.235, 12.999}, {0.273, 13.999}, {0.313, 14.999}, {0.356, 15.998}, {0.402, 16.998}, {0.451, 17.997}, {0.503, 18.997}, {0.557, 19.996}, {0.614, 20.995}, {0.674, 21.994}, {0.737, 22.993}, {0.803, 23.992}, {0.871, 24.991}, {0.942, 25.989}, {1.017, 26.987}, {1.093, 27.985}, {1.173, 28.983}, {1.256, 29.980}, {1.341, 30.978}, {1.429, 31.974}, {1.520, 32.971}, {1.614, 33.967}, {1.711, 34.963}, {1.810, 35.959}, {1.913, 36.954}, {2.018, 37.949}, {2.126, 38.943}, {2.236, 39.937}, {2.350, 40.931}, {2.466, 41.924}, {2.586, 42.916}, {2.708, 43.908}, {2.832, 44.900}, {2.960, 45.890}, {3.090, 46.880}, {3.223, 47.870}, {3.359, 48.859}, {3.498, 49.847}, {3.640, 50.834}, {3.784, 51.821}, {3.931, 52.806}, {4.080, 53.791}, {4.233, 54.775}, {4.388, 55.759}, {4.546, 56.741}, {4.706, 57.722}, {4.870, 58.702}, {5.036, 59.682}, {5.204, 60.660}, {5.375, 61.637}, {5.549, 62.613}, {5.726, 63.588}, {5.905, 64.562}, {6.086, 65.534}, {6.271, 66.505}, {6.457, 67.475}, {6.647, 68.444}, {6.838, 69.411}, {7.033, 70.377}, {7.229, 71.341}, {7.428, 72.304}, {7.630, 73.266}, {7.834, 74.225}, {8.040, 75.184}, {8.249, 76.140}, {8.460, 77.095}, {8.673, 78.048}, {8.889, 79.000}, {9.107, 79.946}, {9.331, 80.890}, {9.560, 81.834}, {9.794, 82.776}, {10.033, 83.716}, {10.277, 84.656}, {10.527, 85.594}, {10.782, 86.530}, {11.041, 87.466}, {11.307, 88.399}, {11.577, 89.332}, {11.852, 90.263}, {12.133, 91.192}, {12.419, 92.119}, {12.709, 93.046}, {13.005, 93.970}, {13.306, 94.893}, {13.613, 95.814}, {13.924, 96.733}, {14.240, 97.651}, {14.562, 98.567}, {14.888, 99.481}, {15.220, 100.393}, {15.556, 101.304}, {15.898, 102.213}, {16.244, 103.119}, {16.596, 104.024}, {16.952, 104.927}, {17.314, 105.828}, {17.681, 106.726}, {18.052, 107.623}, {18.429, 108.518}, {18.810, 109.410}, {19.196, 110.301}, {19.588, 111.189}, {19.984, 112.075}, {20.385, 112.959}, {20.791, 113.841}, {21.202, 114.720}, {21.618, 115.598}, {22.038, 116.472}, {22.464, 117.345}, {22.894, 118.215}, {23.329, 119.083}, {23.769, 119.948}, {24.213, 120.811}, {24.662, 121.671}, {25.117, 122.529}, {25.575, 123.385}, {26.039, 124.238}, {26.507, 125.088}, {26.980, 125.936}, {27.458, 126.781}, {27.940, 127.623}, {28.427, 128.463}, {28.919, 129.300}, {29.415, 130.134}, {29.916, 130.965}, {30.421, 131.794}, {30.931, 132.620}, {31.446, 133.443}, {31.964, 134.264}, {32.484, 135.084}, {33.006, 135.902}, {33.530, 136.719}, {34.057, 137.535}, {34.586, 138.349}, {35.117, 139.162}, {35.650, 139.974}, {36.186, 140.784}, {36.724, 141.594}, {37.264, 142.401}, {37.807, 143.208}, {38.351, 144.013}, {38.899, 144.817}, {39.448, 145.620}, {40.000, 146.422}, {40.555, 147.222}, {41.111, 148.021}, {41.670, 148.818}, {42.232, 149.615}, {42.796, 150.410}, {43.362, 151.203}, {43.931, 151.996}, {44.502, 152.787}, {45.075, 153.577}, {45.651, 154.366}, {46.230, 155.153}, {46.811, 155.939}, {47.394, 156.724}, {47.979, 157.508}, {48.568, 158.290}, {49.158, 159.071}, {49.751, 159.850}, {50.347, 160.629}, {50.945, 161.406}, {51.545, 162.181}, {52.148, 162.956}, {52.753, 163.729}, {53.361, 164.501}, {53.971, 165.271}, {54.584, 166.040}, {55.199, 166.807}, {55.816, 167.574}, {56.436, 168.339}, {57.058, 169.102}, {57.683, 169.864}, {58.310, 170.625}, {58.940, 171.384}, {59.572, 172.142}, {60.206, 172.898}, {60.843, 173.653}, {61.482, 174.407}, {62.124, 175.159}, {62.768, 175.909}, {63.414, 176.659}, {64.063, 177.406}, {64.713, 178.152}, {65.367, 178.897}, {66.022, 179.640}, {66.680, 180.381}, {67.340, 181.121}, {68.003, 181.859}, {68.668, 182.596}, {69.335, 183.331}, {70.004, 184.064}, {70.676, 184.796}, {71.349, 185.526}, {72.025, 186.255}, {72.703, 186.981}, {73.384, 187.707}, {74.066, 188.430}, {74.751, 189.151}, {75.437, 189.871}, {76.126, 190.589}, {76.817, 191.305}, {77.510, 192.020}, {78.205, 192.732}, {78.902, 193.443}, {79.601, 194.152}, {80.302, 194.859}, {81.005, 195.563}, {81.005, 195.563}, }\r\nMoveLUT.largeBase.bank[3].rotY = {0.000, 0.002, 0.008, 0.018, 0.032, 0.050, 0.072, 0.098, 0.127, 0.161, 0.199, 0.241, 0.287, 0.337, 0.391, 0.448, 0.510, 0.576, 0.646, 0.720, 0.798, 0.880, 0.966, 1.056, 1.150, 1.248, 1.350, 1.456, 1.566, 1.681, 1.799, 1.921, 2.048, 2.178, 2.313, 2.451, 2.594, 2.741, 2.891, 3.046, 3.205, 3.368, 3.535, 3.706, 3.881, 4.060, 4.244, 4.431, 4.622, 4.818, 5.017, 5.221, 5.428, 5.639, 5.855, 6.075, 6.298, 6.526, 6.757, 6.993, 7.232, 7.476, 7.723, 7.974, 8.230, 8.489, 8.752, 9.019, 9.290, 9.565, 9.844, 10.126, 10.412, 10.703, 10.997, 11.294, 11.596, 11.901, 12.210, 12.523, 12.840, 13.157, 13.473, 13.790, 14.107, 14.424, 14.741, 15.058, 15.375, 15.692, 16.009, 16.326, 16.642, 16.959, 17.276, 17.593, 17.910, 18.227, 18.544, 18.861, 19.178, 19.495, 19.811, 20.128, 20.445, 20.762, 21.079, 21.396, 21.713, 22.030, 22.347, 22.664, 22.980, 23.297, 23.614, 23.931, 24.248, 24.565, 24.882, 25.199, 25.516, 25.833, 26.150, 26.466, 26.783, 27.100, 27.417, 27.734, 28.051, 28.368, 28.685, 29.002, 29.319, 29.635, 29.952, 30.269, 30.586, 30.903, 31.220, 31.537, 31.854, 32.171, 32.485, 32.796, 33.103, 33.405, 33.704, 33.999, 34.290, 34.576, 34.859, 35.138, 35.413, 35.684, 35.951, 36.215, 36.474, 36.730, 36.981, 37.229, 37.472, 37.712, 37.948, 38.181, 38.409, 38.633, 38.854, 39.070, 39.283, 39.492, 39.697, 39.898, 40.096, 40.289, 40.479, 40.664, 40.846, 41.024, 41.198, 41.369, 41.535, 41.698, 41.856, 42.011, 42.162, 42.309, 42.452, 42.591, 42.727, 42.858, 42.986, 43.109, 43.229, 43.345, 43.457, 43.565, 43.669, 43.769, 43.866, 43.958, 44.047, 44.131, 44.212, 44.289, 44.362, 44.431, 44.496, 44.557, 44.614, 44.667, 44.716, 44.761, 44.803, 44.840, 44.874, 44.903, 44.929, 44.951, 44.968, 44.982, 44.992, 44.998, 45.000, 45.000, }\r\n\r\n--[[\r\nlocal hugeBankOffset = { 40.0, 40.0}\r\nlocal cos45 = math.cos(math.pi/4)\r\nlocal sin45 = math.sin(-math.pi/4)\r\n]]\r\nMoveLUT.hugeBase.bank = {}\r\nMoveLUT.hugeBase.bank[0] = {}\r\nMoveLUT.hugeBase.bank[0].dataNum = 3\r\n--local xy0 = {hugeBankOffset[1] - hugeBankOffset[1] * cos45 + hugeBankOffset[2] * sin45, hugeBankOffset[2] - hugeBankOffset[1] * sin45 - hugeBankOffset[2] * cos45}\r\nMoveLUT.hugeBase.bank[0].posXZ = {{0.000, 0.000}, {-16.5685, 40}, {-16.5685, 40}}\r\nMoveLUT.hugeBase.bank[0].rotY = {0.000, 45.000, 45.000}\r\n--print(\"x: \" .. tostring(xy0[1]) .. \" y: \" .. tostring(xy0[2]))\r\n\r\nMoveLUT.hugeBase.bank[1] = {}\r\nMoveLUT.hugeBase.bank[1].dataNum = 3\r\n--local xy1 = {xy0[1] -  33 * sin45, xy0[2] + 33 * cos45}\r\nMoveLUT.hugeBase.bank[1].posXZ = {{0.000, 0.000}, {6.766, 63.335}, {6.766, 63.335}}\r\nMoveLUT.hugeBase.bank[1].rotY = {0.000, 45.000, 45.000}\r\n--print(\"x: \" .. tostring(xy1[1]) .. \" y: \" .. tostring(xy1[2]))\r\n\r\nMoveLUT.hugeBase.bank[2] = {}\r\nMoveLUT.hugeBase.bank[2].dataNum = 3\r\n--local xy2 = {xy1[1] - 10 * cos45 -  40 * sin45, xy1[2] - 10* sin45 + 40 * cos45}\r\nMoveLUT.hugeBase.bank[2].posXZ = {{0.000, 0.000}, {27.979, 98.69}, {27.979, 98.69}}\r\nMoveLUT.hugeBase.bank[2].rotY = {0.000, 45.000, 45.000}\r\n--print(\"x: \" .. tostring(xy2[1]) .. \" y: \" .. tostring(xy2[2]))\r\n\r\nMoveLUT.hugeBase.bank[3] = {}\r\nMoveLUT.hugeBase.bank[3].dataNum = 3\r\n--local xy3 = {xy2[1] - 10 * cos45 -  40 * sin45, xy2[2] - 10* sin45 + 40 * cos45}\r\nMoveLUT.hugeBase.bank[3].posXZ = {{0.000, 0.000}, {49.192, 134.045}, {49.192, 134.045}}\r\nMoveLUT.hugeBase.bank[3].rotY = {0.000, 45.000, 45.000}\r\n--print(\"x: \" .. tostring(xy3[1]) .. \" y: \" .. tostring(xy3[2]))\r\n\r\n\r\nMoveLUT.smallBase.turn = {}\r\nMoveLUT.smallBase.turn[0] = {}\r\nMoveLUT.smallBase.turn[0].dataNum = 3\r\nMoveLUT.smallBase.turn[0].length = 0\r\nMoveLUT.smallBase.turn[0].posXZ = {{0.000, 0.000}, {0.000, 0.000}, {0.000, 0.000}}\r\nMoveLUT.smallBase.turn[0].rotY = {0.000, 90.000, 90.000}\r\n\r\nMoveLUT.smallBase.turn[1] = {}\r\nMoveLUT.smallBase.turn[1].dataNum = 97\r\nMoveLUT.smallBase.turn[1].length = 94.978\r\nMoveLUT.smallBase.turn[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 4.999}, {0.259, 5.998}, {0.353, 6.997}, {0.462, 7.995}, {0.587, 8.991}, {0.726, 9.987}, {0.881, 10.981}, {1.052, 11.972}, {1.238, 12.962}, {1.440, 13.948}, {1.658, 14.931}, {1.892, 15.910}, {2.142, 16.885}, {2.407, 17.855}, {2.689, 18.818}, {2.987, 19.776}, {3.300, 20.726}, {3.628, 21.668}, {3.973, 22.602}, {4.332, 23.525}, {4.706, 24.438}, {5.094, 25.340}, {5.495, 26.230}, {5.908, 27.108}, {6.332, 27.971}, {6.766, 28.821}, {7.210, 29.655}, {7.664, 30.473}, {8.125, 31.275}, {8.591, 32.061}, {9.062, 32.829}, {9.535, 33.581}, {10.011, 34.314}, {10.486, 35.031}, {10.959, 35.730}, {11.430, 36.412}, {11.909, 37.078}, {12.406, 37.731}, {12.921, 38.369}, {13.455, 38.992}, {14.006, 39.599}, {14.574, 40.191}, {15.159, 40.766}, {15.760, 41.324}, {16.377, 41.865}, {17.009, 42.387}, {17.655, 42.892}, {18.316, 43.378}, {18.988, 43.849}, {19.665, 44.312}, {20.348, 44.770}, {21.037, 45.221}, {21.734, 45.667}, {22.437, 46.105}, {23.149, 46.537}, {23.869, 46.961}, {24.599, 47.378}, {25.338, 47.786}, {26.087, 48.186}, {26.846, 48.578}, {27.615, 48.960}, {28.394, 49.333}, {29.184, 49.696}, {29.985, 50.050}, {30.796, 50.393}, {31.618, 50.726}, {32.450, 51.047}, {33.293, 51.358}, {34.146, 51.658}, {35.010, 51.946}, {35.884, 52.222}, {36.767, 52.486}, {37.661, 52.738}, {38.564, 52.978}, {39.477, 53.204}, {40.398, 53.419}, {41.328, 53.620}, {42.266, 53.808}, {43.212, 53.982}, {44.166, 54.143}, {45.127, 54.291}, {46.094, 54.425}, {47.067, 54.545}, {48.046, 54.651}, {49.030, 54.744}, {50.018, 54.822}, {51.010, 54.886}, {52.005, 54.936}, {53.002, 54.971}, {54.001, 54.993}, {55.000, 55.000}, {55.000, 55.000}, }\r\nMoveLUT.smallBase.turn[1].rotY = {0.000, 0.020, 0.082, 0.185, 0.329, 0.514, 0.742, 1.012, 1.325, 1.681, 2.081, 2.526, 3.015, 3.549, 4.129, 4.755, 5.428, 6.147, 6.914, 7.727, 8.588, 9.496, 10.452, 11.457, 12.511, 13.611, 14.756, 15.946, 17.180, 18.457, 19.774, 21.131, 22.532, 23.968, 25.439, 26.942, 28.475, 30.035, 31.620, 33.228, 34.856, 36.492, 38.129, 39.765, 41.401, 43.038, 44.674, 46.310, 47.947, 49.583, 51.220, 52.856, 54.492, 56.114, 57.698, 59.235, 60.730, 62.182, 63.594, 64.966, 66.301, 67.597, 68.858, 70.082, 71.270, 72.422, 73.540, 74.622, 75.670, 76.682, 77.660, 78.602, 79.509, 80.380, 81.216, 82.016, 82.779, 83.506, 84.196, 84.849, 85.465, 86.042, 86.582, 87.083, 87.546, 87.969, 88.353, 88.697, 89.001, 89.266, 89.490, 89.673, 89.816, 89.918, 89.980, 90.000, 90.000, }\r\n\r\nMoveLUT.smallBase.turn[2] = {}\r\nMoveLUT.smallBase.turn[2].dataNum = 141\r\nMoveLUT.smallBase.turn[2].length = 138.175\r\nMoveLUT.smallBase.turn[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 5.999}, {0.197, 6.999}, {0.257, 7.998}, {0.326, 8.997}, {0.402, 9.996}, {0.487, 10.994}, {0.580, 11.992}, {0.682, 12.988}, {0.791, 13.984}, {0.909, 14.979}, {1.035, 15.973}, {1.169, 16.966}, {1.312, 17.957}, {1.463, 18.946}, {1.622, 19.934}, {1.789, 20.920}, {1.965, 21.903}, {2.148, 22.884}, {2.340, 23.863}, {2.540, 24.838}, {2.747, 25.810}, {2.963, 26.779}, {3.186, 27.745}, {3.416, 28.706}, {3.655, 29.663}, {3.900, 30.616}, {4.152, 31.564}, {4.412, 32.507}, {4.678, 33.445}, {4.950, 34.378}, {5.229, 35.304}, {5.513, 36.225}, {5.804, 37.139}, {6.099, 38.047}, {6.400, 38.948}, {6.708, 39.836}, {7.030, 40.719}, {7.365, 41.596}, {7.715, 42.468}, {8.078, 43.335}, {8.455, 44.195}, {8.846, 45.050}, {9.250, 45.898}, {9.668, 46.739}, {10.099, 47.574}, {10.543, 48.402}, {11.000, 49.223}, {11.470, 50.036}, {11.953, 50.842}, {12.449, 51.640}, {12.957, 52.430}, {13.478, 53.212}, {14.011, 53.986}, {14.556, 54.751}, {15.114, 55.507}, {15.683, 56.255}, {16.264, 56.993}, {16.857, 57.722}, {17.461, 58.441}, {18.077, 59.151}, {18.703, 59.851}, {19.341, 60.541}, {19.990, 61.220}, {20.649, 61.890}, {21.319, 62.548}, {21.999, 63.196}, {22.690, 63.833}, {23.390, 64.460}, {24.101, 65.074}, {24.821, 65.678}, {25.550, 66.270}, {26.289, 66.851}, {27.037, 67.419}, {27.794, 67.976}, {28.559, 68.520}, {29.333, 69.053}, {30.116, 69.573}, {30.906, 70.081}, {31.705, 70.575}, {32.511, 71.058}, {33.325, 71.527}, {34.146, 71.983}, {34.974, 72.427}, {35.810, 72.857}, {36.652, 73.274}, {37.500, 73.677}, {38.355, 74.067}, {39.216, 74.443}, {40.083, 74.806}, {40.955, 75.155}, {41.833, 75.490}, {42.716, 75.810}, {43.604, 76.118}, {44.495, 76.415}, {45.389, 76.705}, {46.285, 76.990}, {47.183, 77.268}, {48.085, 77.539}, {48.989, 77.804}, {49.897, 78.062}, {50.807, 78.313}, {51.720, 78.558}, {52.637, 78.795}, {53.557, 79.026}, {54.480, 79.250}, {55.406, 79.466}, {56.336, 79.676}, {57.269, 79.878}, {58.206, 80.074}, {59.145, 80.261}, {60.088, 80.442}, {61.035, 80.615}, {61.984, 80.781}, {62.937, 80.940}, {63.893, 81.091}, {64.852, 81.234}, {65.813, 81.370}, {66.778, 81.498}, {67.746, 81.619}, {68.716, 81.732}, {69.689, 81.838}, {70.664, 81.935}, {71.641, 82.025}, {72.621, 82.107}, {73.603, 82.182}, {74.586, 82.249}, {75.572, 82.307}, {76.558, 82.358}, {77.547, 82.402}, {78.536, 82.437}, {79.526, 82.465}, {80.517, 82.484}, {81.508, 82.496}, {82.500, 82.500}, {82.500, 82.500}, }\r\nMoveLUT.smallBase.turn[2].rotY = {0.000, 0.012, 0.046, 0.103, 0.184, 0.287, 0.414, 0.564, 0.737, 0.933, 1.153, 1.396, 1.663, 1.953, 2.267, 2.605, 2.967, 3.352, 3.761, 4.195, 4.652, 5.133, 5.638, 6.167, 6.719, 7.296, 7.896, 8.519, 9.166, 9.836, 10.529, 11.244, 11.982, 12.743, 13.525, 14.329, 15.155, 16.001, 16.869, 17.756, 18.664, 19.573, 20.482, 21.391, 22.300, 23.209, 24.118, 25.027, 25.936, 26.845, 27.754, 28.664, 29.573, 30.482, 31.391, 32.300, 33.209, 34.118, 35.027, 35.936, 36.845, 37.754, 38.664, 39.573, 40.482, 41.391, 42.300, 43.209, 44.118, 45.027, 45.936, 46.845, 47.754, 48.664, 49.573, 50.482, 51.391, 52.300, 53.209, 54.118, 55.027, 55.936, 56.845, 57.754, 58.664, 59.573, 60.482, 61.391, 62.300, 63.209, 64.118, 65.027, 65.936, 66.845, 67.754, 68.664, 69.573, 70.482, 71.390, 72.286, 73.159, 74.008, 74.834, 75.638, 76.420, 77.179, 77.917, 78.632, 79.326, 79.997, 80.647, 81.276, 81.883, 82.468, 83.032, 83.574, 84.094, 84.593, 85.070, 85.526, 85.959, 86.371, 86.761, 87.129, 87.476, 87.800, 88.102, 88.382, 88.640, 88.875, 89.089, 89.280, 89.448, 89.595, 89.718, 89.820, 89.899, 89.955, 89.989, 90.000, 90.000}\r\n\r\nMoveLUT.smallBase.turn[3] = {}\r\nMoveLUT.smallBase.turn[3].dataNum = 184\r\nMoveLUT.smallBase.turn[3].length = 181.372\r\nMoveLUT.smallBase.turn[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 7.999}, {0.226, 8.999}, {0.279, 9.998}, {0.337, 10.997}, {0.401, 11.996}, {0.471, 12.994}, {0.547, 13.993}, {0.628, 14.990}, {0.715, 15.987}, {0.807, 16.984}, {0.905, 17.979}, {1.009, 18.975}, {1.118, 19.969}, {1.233, 20.962}, {1.354, 21.954}, {1.480, 22.945}, {1.612, 23.935}, {1.749, 24.923}, {1.892, 25.910}, {2.041, 26.896}, {2.195, 27.879}, {2.354, 28.861}, {2.518, 29.841}, {2.688, 30.819}, {2.863, 31.794}, {3.044, 32.767}, {3.229, 33.738}, {3.420, 34.705}, {3.615, 35.671}, {3.816, 36.633}, {4.021, 37.592}, {4.231, 38.547}, {4.445, 39.500}, {4.666, 40.445}, {4.897, 41.388}, {5.139, 42.328}, {5.391, 43.265}, {5.654, 44.200}, {5.927, 45.131}, {6.210, 46.060}, {6.503, 46.985}, {6.807, 47.907}, {7.121, 48.825}, {7.445, 49.740}, {7.779, 50.652}, {8.123, 51.559}, {8.477, 52.463}, {8.841, 53.363}, {9.215, 54.259}, {9.599, 55.150}, {9.993, 56.037}, {10.396, 56.920}, {10.809, 57.799}, {11.232, 58.672}, {11.665, 59.541}, {12.107, 60.405}, {12.559, 61.264}, {13.020, 62.118}, {13.491, 62.967}, {13.971, 63.811}, {14.460, 64.649}, {14.958, 65.482}, {15.466, 66.310}, {15.983, 67.131}, {16.509, 67.947}, {17.044, 68.757}, {17.588, 69.561}, {18.140, 70.359}, {18.702, 71.151}, {19.272, 71.937}, {19.851, 72.716}, {20.438, 73.488}, {21.034, 74.255}, {21.638, 75.014}, {22.251, 75.767}, {22.872, 76.513}, {23.501, 77.252}, {24.139, 77.984}, {24.784, 78.709}, {25.438, 79.427}, {26.099, 80.138}, {26.768, 80.841}, {27.445, 81.537}, {28.129, 82.225}, {28.822, 82.905}, {29.521, 83.578}, {30.228, 84.243}, {30.942, 84.901}, {31.664, 85.550}, {32.393, 86.191}, {33.128, 86.824}, {33.871, 87.449}, {34.621, 88.066}, {35.377, 88.675}, {36.140, 89.275}, {36.909, 89.866}, {37.686, 90.449}, {38.468, 91.023}, {39.257, 91.589}, {40.052, 92.146}, {40.853, 92.694}, {41.660, 93.233}, {42.473, 93.764}, {43.292, 94.285}, {44.117, 94.797}, {44.947, 95.300}, {45.782, 95.794}, {46.624, 96.278}, {47.470, 96.753}, {48.322, 97.219}, {49.178, 97.675}, {50.040, 98.122}, {50.907, 98.559}, {51.778, 98.987}, {52.654, 99.405}, {53.535, 99.813}, {54.420, 100.212}, {55.309, 100.600}, {56.203, 100.979}, {57.101, 101.348}, {58.003, 101.707}, {58.909, 102.056}, {59.818, 102.395}, {60.731, 102.724}, {61.648, 103.042}, {62.569, 103.351}, {63.492, 103.649}, {64.419, 103.937}, {65.349, 104.215}, {66.282, 104.483}, {67.218, 104.740}, {68.157, 104.987}, {69.098, 105.223}, {70.042, 105.449}, {70.989, 105.666}, {71.936, 105.877}, {72.885, 106.083}, {73.835, 106.283}, {74.787, 106.479}, {75.740, 106.669}, {76.694, 106.855}, {77.650, 107.035}, {78.607, 107.210}, {79.566, 107.380}, {80.527, 107.545}, {81.489, 107.704}, {82.453, 107.859}, {83.418, 108.008}, {84.385, 108.152}, {85.353, 108.290}, {86.324, 108.423}, {87.295, 108.551}, {88.269, 108.674}, {89.244, 108.791}, {90.220, 108.903}, {91.199, 109.010}, {92.178, 109.111}, {93.159, 109.207}, {94.141, 109.297}, {95.125, 109.382}, {96.110, 109.461}, {97.097, 109.536}, {98.084, 109.604}, {99.073, 109.667}, {100.063, 109.725}, {101.053, 109.777}, {102.045, 109.824}, {103.037, 109.865}, {104.031, 109.901}, {105.025, 109.931}, {106.019, 109.956}, {107.014, 109.975}, {108.009, 109.989}, {109.004, 109.997}, {110.000, 110.000}, {110.000, 110.000}, }\r\nMoveLUT.smallBase.turn[3].rotY = {0.000, 0.008, 0.032, 0.072, 0.128, 0.199, 0.287, 0.391, 0.510, 0.646, 0.798, 0.966, 1.150, 1.350, 1.567, 1.799, 2.048, 2.313, 2.595, 2.892, 3.206, 3.536, 3.882, 4.245, 4.623, 5.018, 5.429, 5.856, 6.299, 6.759, 7.234, 7.725, 8.231, 8.754, 9.292, 9.845, 10.414, 10.999, 11.598, 12.212, 12.842, 13.475, 14.109, 14.743, 15.377, 16.011, 16.644, 17.278, 17.912, 18.546, 19.180, 19.813, 20.447, 21.081, 21.715, 22.349, 22.982, 23.616, 24.250, 24.884, 25.518, 26.151, 26.785, 27.419, 28.053, 28.687, 29.320, 29.954, 30.588, 31.222, 31.856, 32.489, 33.123, 33.757, 34.391, 35.025, 35.659, 36.292, 36.926, 37.560, 38.194, 38.828, 39.461, 40.095, 40.729, 41.363, 41.997, 42.630, 43.264, 43.898, 44.532, 45.166, 45.799, 46.433, 47.067, 47.701, 48.335, 48.968, 49.602, 50.236, 50.870, 51.504, 52.137, 52.771, 53.405, 54.039, 54.673, 55.306, 55.940, 56.574, 57.208, 57.842, 58.475, 59.109, 59.743, 60.377, 61.011, 61.644, 62.278, 62.912, 63.546, 64.180, 64.813, 65.447, 66.081, 66.715, 67.349, 67.982, 68.616, 69.250, 69.884, 70.518, 71.151, 71.785, 72.419, 73.053, 73.687, 74.320, 74.954, 75.588, 76.222, 76.856, 77.485, 78.103, 78.704, 79.290, 79.859, 80.413, 80.951, 81.474, 81.981, 82.472, 82.948, 83.409, 83.854, 84.283, 84.697, 85.096, 85.479, 85.846, 86.198, 86.535, 86.856, 87.162, 87.452, 87.727, 87.986, 88.229, 88.457, 88.669, 88.866, 89.047, 89.212, 89.362, 89.496, 89.614, 89.716, 89.803, 89.874, 89.929, 89.968, 89.992, 90.000, 90.000, }\r\n\r\nMoveLUT.smallBase.turnSlip = {}\r\n\r\nMoveLUT.smallBase.turnSlip[1] = {}\r\nMoveLUT.smallBase.turnSlip[1].dataNum = 97\r\nMoveLUT.smallBase.turnSlip[1].length = 94.978\r\nMoveLUT.smallBase.turnSlip[1].posXZ = {{0.0, 0.0}, {1.0, 0.007}, {2.0, 0.029}, {3.0, 0.064}, {4.0, 0.115}, {4.999, 0.18}, {5.998, 0.259}, {6.997, 0.353}, {7.995, 0.462}, {8.991, 0.587}, {9.987, 0.726}, {10.981, 0.881}, {11.972, 1.052}, {12.962, 1.238}, {13.948, 1.44}, {14.931, 1.658}, {15.91, 1.892}, {16.885, 2.142}, {17.855, 2.407}, {18.818, 2.689}, {19.776, 2.987}, {20.726, 3.3}, {21.668, 3.628}, {22.602, 3.973}, {23.525, 4.332}, {24.438, 4.706}, {25.34, 5.094}, {26.23, 5.495}, {27.108, 5.908}, {27.971, 6.332}, {28.821, 6.766}, {29.655, 7.21}, {30.473, 7.664}, {31.275, 8.125}, {32.061, 8.591}, {32.829, 9.062}, {33.581, 9.535}, {34.314, 10.011}, {35.031, 10.486}, {35.73, 10.959}, {36.412, 11.43}, {37.078, 11.909}, {37.731, 12.406}, {38.369, 12.921}, {38.992, 13.455}, {39.599, 14.006}, {40.191, 14.574}, {40.766, 15.159}, {41.324, 15.76}, {41.865, 16.377}, {42.387, 17.009}, {42.892, 17.655}, {43.378, 18.316}, {43.849, 18.988}, {44.312, 19.665}, {44.77, 20.348}, {45.221, 21.037}, {45.667, 21.734}, {46.105, 22.437}, {46.537, 23.149}, {46.961, 23.869}, {47.378, 24.599}, {47.786, 25.338}, {48.186, 26.087}, {48.578, 26.846}, {48.96, 27.615}, {49.333, 28.394}, {49.696, 29.184}, {50.05, 29.985}, {50.393, 30.796}, {50.726, 31.618}, {51.047, 32.45}, {51.358, 33.293}, {51.658, 34.146}, {51.946, 35.01}, {52.222, 35.884}, {52.486, 36.767}, {52.738, 37.661}, {52.978, 38.564}, {53.204, 39.477}, {53.419, 40.398}, {53.62, 41.328}, {53.808, 42.266}, {53.982, 43.212}, {54.143, 44.166}, {54.291, 45.127}, {54.425, 46.094}, {54.545, 47.067}, {54.651, 48.046}, {54.744, 49.03}, {54.822, 50.018}, {54.886, 51.01}, {54.936, 52.005}, {54.971, 53.002}, {54.993, 54.001}, {55.0, 55.0}, {55.0, 55.0}}\r\nMoveLUT.smallBase.turnSlip[1].rotY = {0.000, -0.020, -0.082, -0.185, -0.329, -0.514, -0.742, -1.012, -1.325, -1.681, -2.081, -2.526, -3.015, -3.549, -4.129, -4.755, -5.428, -6.147, -6.914, -7.727, -8.588, -9.496, -10.452, -11.457, -12.511, -13.611, -14.756, -15.946, -17.180, -18.457, -19.774, -21.131, -22.532, -23.968, -25.439, -26.942, -28.475, -30.035, -31.620, -33.228, -34.856, -36.492, -38.129, -39.765, -41.401, -43.038, -44.674, -46.310, -47.947, -49.583, -51.220, -52.856, -54.492, -56.114, -57.698, -59.235, -60.730, -62.182, -63.594, -64.966, -66.301, -67.597, -68.858, -70.082, -71.270, -72.422, -73.540, -74.622, -75.670, -76.682, -77.660, -78.602, -79.509, -80.380, -81.216, -82.016, -82.779, -83.506, -84.196, -84.849, -85.465, -86.042, -86.582, -87.083, -87.546, -87.969, -88.353, -88.697, -89.001, -89.266, -89.490, -89.673, -89.816, -89.918, -89.980, -90.000, -90.000}\r\n\r\n\r\nMoveLUT.smallBase.turnSlip[2] = {}\r\nMoveLUT.smallBase.turnSlip[2].dataNum = 141\r\nMoveLUT.smallBase.turnSlip[2].length = 138.175\r\nMoveLUT.smallBase.turnSlip[2].posXZ = {{0.0, 0.0}, {1.0, 0.004}, {2.0, 0.016}, {3.0, 0.036}, {4.0, 0.064}, {5.0, 0.1}, {5.999, 0.145}, {6.999, 0.197}, {7.998, 0.257}, {8.997, 0.326}, {9.996, 0.402}, {10.994, 0.487}, {11.992, 0.58}, {12.988, 0.682}, {13.984, 0.791}, {14.979, 0.909}, {15.973, 1.035}, {16.966, 1.169}, {17.957, 1.312}, {18.946, 1.463}, {19.934, 1.622}, {20.92, 1.789}, {21.903, 1.965}, {22.884, 2.148}, {23.863, 2.34}, {24.838, 2.54}, {25.81, 2.747}, {26.779, 2.963}, {27.745, 3.186}, {28.706, 3.416}, {29.663, 3.655}, {30.616, 3.9}, {31.564, 4.152}, {32.507, 4.412}, {33.445, 4.678}, {34.378, 4.95}, {35.304, 5.229}, {36.225, 5.513}, {37.139, 5.804}, {38.047, 6.099}, {38.948, 6.4}, {39.836, 6.708}, {40.719, 7.03}, {41.596, 7.365}, {42.468, 7.715}, {43.335, 8.078}, {44.195, 8.455}, {45.05, 8.846}, {45.898, 9.25}, {46.739, 9.668}, {47.574, 10.099}, {48.402, 10.543}, {49.223, 11.0}, {50.036, 11.47}, {50.842, 11.953}, {51.64, 12.449}, {52.43, 12.957}, {53.212, 13.478}, {53.986, 14.011}, {54.751, 14.556}, {55.507, 15.114}, {56.255, 15.683}, {56.993, 16.264}, {57.722, 16.857}, {58.441, 17.461}, {59.151, 18.077}, {59.851, 18.703}, {60.541, 19.341}, {61.22, 19.99}, {61.89, 20.649}, {62.548, 21.319}, {63.196, 21.999}, {63.833, 22.69}, {64.46, 23.39}, {65.074, 24.101}, {65.678, 24.821}, {66.27, 25.55}, {66.851, 26.289}, {67.419, 27.037}, {67.976, 27.794}, {68.52, 28.559}, {69.053, 29.333}, {69.573, 30.116}, {70.081, 30.906}, {70.575, 31.705}, {71.058, 32.511}, {71.527, 33.325}, {71.983, 34.146}, {72.427, 34.974}, {72.857, 35.81}, {73.274, 36.652}, {73.677, 37.5}, {74.067, 38.355}, {74.443, 39.216}, {74.806, 40.083}, {75.155, 40.955}, {75.49, 41.833}, {75.81, 42.716}, {76.118, 43.604}, {76.415, 44.495}, {76.705, 45.389}, {76.99, 46.285}, {77.268, 47.183}, {77.539, 48.085}, {77.804, 48.989}, {78.062, 49.897}, {78.313, 50.807}, {78.558, 51.72}, {78.795, 52.637}, {79.026, 53.557}, {79.25, 54.48}, {79.466, 55.406}, {79.676, 56.336}, {79.878, 57.269}, {80.074, 58.206}, {80.261, 59.145}, {80.442, 60.088}, {80.615, 61.035}, {80.781, 61.984}, {80.94, 62.937}, {81.091, 63.893}, {81.234, 64.852}, {81.37, 65.813}, {81.498, 66.778}, {81.619, 67.746}, {81.732, 68.716}, {81.838, 69.689}, {81.935, 70.664}, {82.025, 71.641}, {82.107, 72.621}, {82.182, 73.603}, {82.249, 74.586}, {82.307, 75.572}, {82.358, 76.558}, {82.402, 77.547}, {82.437, 78.536}, {82.465, 79.526}, {82.484, 80.517}, {82.496, 81.508}, {82.5, 82.5}, {82.5, 82.5}}\r\nMoveLUT.smallBase.turnSlip[2].rotY = {0.000, -0.012, -0.046, -0.103, -0.184, -0.287, -0.414, -0.564, -0.737, -0.933, -1.153, -1.396, -1.663, -1.953, -2.267, -2.605, -2.967, -3.352, -3.761, -4.195, -4.652, -5.133, -5.638, -6.167, -6.719, -7.296, -7.896, -8.519, -9.166, -9.836, -10.529, -11.244, -11.982, -12.743, -13.525, -14.329, -15.155, -16.001, -16.869, -17.756, -18.664, -19.573, -20.482, -21.391, -22.300, -23.209, -24.118, -25.027, -25.936, -26.845, -27.754, -28.664, -29.573, -30.482, -31.391, -32.300, -33.209, -34.118, -35.027, -35.936, -36.845, -37.754, -38.664, -39.573, -40.482, -41.391, -42.300, -43.209, -44.118, -45.027, -45.936, -46.845, -47.754, -48.664, -49.573, -50.482, -51.391, -52.300, -53.209, -54.118, -55.027, -55.936, -56.845, -57.754, -58.664, -59.573, -60.482, -61.391, -62.300, -63.209, -64.118, -65.027, -65.936, -66.845, -67.754, -68.664, -69.573, -70.482, -71.390, -72.286, -73.159, -74.008, -74.834, -75.638, -76.420, -77.179, -77.917, -78.632, -79.326, -79.997, -80.647, -81.276, -81.883, -82.468, -83.032, -83.574, -84.094, -84.593, -85.070, -85.526, -85.959, -86.371, -86.761, -87.129, -87.476, -87.800, -88.102, -88.382, -88.640, -88.875, -89.089, -89.280, -89.448, -89.595, -89.718, -89.820, -89.899, -89.955, -89.989, -90.000, -90.000}\r\n\r\nMoveLUT.smallBase.turnSlip[3] = {}\r\nMoveLUT.smallBase.turnSlip[3].dataNum = 184\r\nMoveLUT.smallBase.turnSlip[3].length = 181.372\r\nMoveLUT.smallBase.turnSlip[3].posXZ = {{0.0, 0.0}, {1.0, 0.003}, {2.0, 0.011}, {3.0, 0.025}, {4.0, 0.045}, {5.0, 0.07}, {6.0, 0.1}, {7.0, 0.136}, {7.999, 0.178}, {8.999, 0.226}, {9.998, 0.279}, {10.997, 0.337}, {11.996, 0.401}, {12.994, 0.471}, {13.993, 0.547}, {14.99, 0.628}, {15.987, 0.715}, {16.984, 0.807}, {17.979, 0.905}, {18.975, 1.009}, {19.969, 1.118}, {20.962, 1.233}, {21.954, 1.354}, {22.945, 1.48}, {23.935, 1.612}, {24.923, 1.749}, {25.91, 1.892}, {26.896, 2.041}, {27.879, 2.195}, {28.861, 2.354}, {29.841, 2.518}, {30.819, 2.688}, {31.794, 2.863}, {32.767, 3.044}, {33.738, 3.229}, {34.705, 3.42}, {35.671, 3.615}, {36.633, 3.816}, {37.592, 4.021}, {38.547, 4.231}, {39.5, 4.445}, {40.445, 4.666}, {41.388, 4.897}, {42.328, 5.139}, {43.265, 5.391}, {44.2, 5.654}, {45.131, 5.927}, {46.06, 6.21}, {46.985, 6.503}, {47.907, 6.807}, {48.825, 7.121}, {49.74, 7.445}, {50.652, 7.779}, {51.559, 8.123}, {52.463, 8.477}, {53.363, 8.841}, {54.259, 9.215}, {55.15, 9.599}, {56.037, 9.993}, {56.92, 10.396}, {57.799, 10.809}, {58.672, 11.232}, {59.541, 11.665}, {60.405, 12.107}, {61.264, 12.559}, {62.118, 13.02}, {62.967, 13.491}, {63.811, 13.971}, {64.649, 14.46}, {65.482, 14.958}, {66.31, 15.466}, {67.131, 15.983}, {67.947, 16.509}, {68.757, 17.044}, {69.561, 17.588}, {70.359, 18.14}, {71.151, 18.702}, {71.937, 19.272}, {72.716, 19.851}, {73.488, 20.438}, {74.255, 21.034}, {75.014, 21.638}, {75.767, 22.251}, {76.513, 22.872}, {77.252, 23.501}, {77.984, 24.139}, {78.709, 24.784}, {79.427, 25.438}, {80.138, 26.099}, {80.841, 26.768}, {81.537, 27.445}, {82.225, 28.129}, {82.905, 28.822}, {83.578, 29.521}, {84.243, 30.228}, {84.901, 30.942}, {85.55, 31.664}, {86.191, 32.393}, {86.824, 33.128}, {87.449, 33.871}, {88.066, 34.621}, {88.675, 35.377}, {89.275, 36.14}, {89.866, 36.909}, {90.449, 37.686}, {91.023, 38.468}, {91.589, 39.257}, {92.146, 40.052}, {92.694, 40.853}, {93.233, 41.66}, {93.764, 42.473}, {94.285, 43.292}, {94.797, 44.117}, {95.3, 44.947}, {95.794, 45.782}, {96.278, 46.624}, {96.753, 47.47}, {97.219, 48.322}, {97.675, 49.178}, {98.122, 50.04}, {98.559, 50.907}, {98.987, 51.778}, {99.405, 52.654}, {99.813, 53.535}, {100.212, 54.42}, {100.6, 55.309}, {100.979, 56.203}, {101.348, 57.101}, {101.707, 58.003}, {102.056, 58.909}, {102.395, 59.818}, {102.724, 60.731}, {103.042, 61.648}, {103.351, 62.569}, {103.649, 63.492}, {103.937, 64.419}, {104.215, 65.349}, {104.483, 66.282}, {104.74, 67.218}, {104.987, 68.157}, {105.223, 69.098}, {105.449, 70.042}, {105.666, 70.989}, {105.877, 71.936}, {106.083, 72.885}, {106.283, 73.835}, {106.479, 74.787}, {106.669, 75.74}, {106.855, 76.694}, {107.035, 77.65}, {107.21, 78.607}, {107.38, 79.566}, {107.545, 80.527}, {107.704, 81.489}, {107.859, 82.453}, {108.008, 83.418}, {108.152, 84.385}, {108.29, 85.353}, {108.423, 86.324}, {108.551, 87.295}, {108.674, 88.269}, {108.791, 89.244}, {108.903, 90.22}, {109.01, 91.199}, {109.111, 92.178}, {109.207, 93.159}, {109.297, 94.141}, {109.382, 95.125}, {109.461, 96.11}, {109.536, 97.097}, {109.604, 98.084}, {109.667, 99.073}, {109.725, 100.063}, {109.777, 101.053}, {109.824, 102.045}, {109.865, 103.037}, {109.901, 104.031}, {109.931, 105.025}, {109.956, 106.019}, {109.975, 107.014}, {109.989, 108.009}, {109.997, 109.004}, {110.0, 110.0}, {110.0, 110.0}}\r\nMoveLUT.smallBase.turnSlip[3].rotY = {0.000, -0.008, -0.032, -0.072, -0.128, -0.199, -0.287, -0.391, -0.510, -0.646, -0.798, -0.966, -1.150, -1.350, -1.567, -1.799, -2.048, -2.313, -2.595, -2.892, -3.206, -3.536, -3.882, -4.245, -4.623, -5.018, -5.429, -5.856, -6.299, -6.759, -7.234, -7.725, -8.231, -8.754, -9.292, -9.845, -10.414, -10.999, -11.598, -12.212, -12.842, -13.475, -14.109, -14.743, -15.377, -16.011, -16.644, -17.278, -17.912, -18.546, -19.180, -19.813, -20.447, -21.081, -21.715, -22.349, -22.982, -23.616, -24.250, -24.884, -25.518, -26.151, -26.785, -27.419, -28.053, -28.687, -29.320, -29.954, -30.588, -31.222, -31.856, -32.489, -33.123, -33.757, -34.391, -35.025, -35.659, -36.292, -36.926, -37.560, -38.194, -38.828, -39.461, -40.095, -40.729, -41.363, -41.997, -42.630, -43.264, -43.898, -44.532, -45.166, -45.799, -46.433, -47.067, -47.701, -48.335, -48.968, -49.602, -50.236, -50.870, -51.504, -52.137, -52.771, -53.405, -54.039, -54.673, -55.306, -55.940, -56.574, -57.208, -57.842, -58.475, -59.109, -59.743, -60.377, -61.011, -61.644, -62.278, -62.912, -63.546, -64.180, -64.813, -65.447, -66.081, -66.715, -67.349, -67.982, -68.616, -69.250, -69.884, -70.518, -71.151, -71.785, -72.419, -73.053, -73.687, -74.320, -74.954, -75.588, -76.222, -76.856, -77.485, -78.103, -78.704, -79.290, -79.859, -80.413, -80.951, -81.474, -81.981, -82.472, -82.948, -83.409, -83.854, -84.283, -84.697, -85.096, -85.479, -85.846, -86.198, -86.535, -86.856, -87.162, -87.452, -87.727, -87.986, -88.229, -88.457, -88.669, -88.866, -89.047, -89.212, -89.362, -89.496, -89.614, -89.716, -89.803, -89.874, -89.929, -89.968, -89.992, -90.000, -90.000}\r\n\r\n\r\n\r\nMoveLUT.smallBase.turn[4] = {}\r\nMoveLUT.smallBase.turn[4].dataNum = 3\r\nMoveLUT.smallBase.turn[4].length = 0\r\nMoveLUT.smallBase.turn[4].posXZ = {{0.000, 0.000}, {0.000, 0.000}, {0.000, 0.000}}\r\nMoveLUT.smallBase.turn[4].rotY = {0.000, 90.000, 90.000}\r\n\r\n\r\n--maneuver data for medium base turns JC\r\nMoveLUT.mediumBase.turn = {}\r\n\r\nMoveLUT.mediumBase.turn[0] = {}\r\nMoveLUT.mediumBase.turn[0].dataNum = 3\r\nMoveLUT.mediumBase.turn[0].length = 0\r\nMoveLUT.mediumBase.turn[0].posXZ = {{0.000, 0.000}, {0.000, 0.000}, {0.000, 0.000}}\r\nMoveLUT.mediumBase.turn[0].rotY = {0.000, 90.000, 90.000}\r\n\r\nMoveLUT.mediumBase.turn[1] = {}\r\nMoveLUT.mediumBase.turn[1].dataNum = 117\r\nMoveLUT.mediumBase.turn[1].length = 114.978\r\nMoveLUT.mediumBase.turn[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 4.999}, {0.259, 5.999}, {0.353, 6.998}, {0.463, 7.996}, {0.588, 8.994}, {0.728, 9.991}, {0.883, 10.987}, {1.055, 11.981}, {1.243, 12.974}, {1.448, 13.965}, {1.669, 14.954}, {1.907, 15.939}, {2.162, 16.922}, {2.435, 17.901}, {2.725, 18.876}, {3.033, 19.846}, {3.361, 20.811}, {3.708, 21.770}, {4.074, 22.722}, {4.459, 23.667}, {4.862, 24.603}, {5.285, 25.531}, {5.729, 26.448}, {6.192, 27.354}, {6.675, 28.248}, {7.176, 29.129}, {7.698, 29.996}, {8.239, 30.847}, {8.797, 31.681}, {9.373, 32.498}, {9.970, 33.295}, {10.580, 34.072}, {11.206, 34.828}, {11.849, 35.561}, {12.503, 36.270}, {13.170, 36.955}, {13.848, 37.613}, {14.531, 38.246}, {15.225, 38.850}, {15.920, 39.428}, {16.618, 39.976}, {17.317, 40.497}, {18.000, 41.000}, {18.648, 41.500}, {19.261, 42.000}, {19.843, 42.500}, {20.396, 43.000}, {20.922, 43.500}, {21.424, 44.000}, {21.903, 44.500}, {22.361, 45.000}, {22.798, 45.500}, {23.216, 46.000}, {23.617, 46.500}, {24.000, 47.000}, {24.367, 47.500}, {24.733, 48.000}, {25.111, 48.499}, {25.504, 48.998}, {25.911, 49.495}, {26.332, 49.991}, {26.767, 50.484}, {27.217, 50.975}, {27.682, 51.464}, {28.162, 51.949}, {28.657, 52.430}, {29.168, 52.908}, {29.694, 53.381}, {30.235, 53.849}, {30.792, 54.312}, {31.365, 54.770}, {31.953, 55.221}, {32.556, 55.667}, {33.175, 56.105}, {33.809, 56.537}, {34.459, 56.961}, {35.124, 57.378}, {35.804, 57.786}, {36.499, 58.186}, {37.210, 58.578}, {37.934, 58.960}, {38.674, 59.333}, {39.428, 59.696}, {40.196, 60.050}, {40.978, 60.393}, {41.774, 60.726}, {42.583, 61.047}, {43.405, 61.358}, {44.241, 61.658}, {45.089, 61.946}, {45.949, 62.222}, {46.821, 62.486}, {47.704, 62.738}, {48.598, 62.978}, {49.503, 63.204}, {50.419, 63.419}, {51.344, 63.620}, {52.278, 63.808}, {53.221, 63.982}, {54.172, 64.143}, {55.131, 64.291}, {56.097, 64.425}, {57.069, 64.545}, {58.047, 64.651}, {59.031, 64.744}, {60.018, 64.822}, {61.010, 64.886}, {62.005, 64.936}, {63.002, 64.971}, {64.001, 64.993}, {65.000, 65.000}, {65.000, 65.000}, }\r\nMoveLUT.mediumBase.turn[1].rotY = {0.000, 0.014, 0.055, 0.123, 0.219, 0.343, 0.495, 0.675, 0.884, 1.122, 1.390, 1.688, 2.016, 2.375, 2.766, 3.188, 3.644, 4.132, 4.655, 5.212, 5.803, 6.432, 7.100, 7.805, 8.547, 9.327, 10.146, 11.008, 11.912, 12.856, 13.838, 14.867, 15.940, 17.052, 18.207, 19.410, 20.651, 21.935, 23.265, 24.630, 26.040, 27.489, 28.971, 30.497, 32.050, 33.638, 35.256, 36.870, 38.433, 39.945, 41.410, 42.833, 44.220, 45.573, 46.895, 48.190, 49.458, 50.704, 51.927, 53.130, 54.315, 55.481, 56.631, 57.764, 58.880, 59.979, 61.062, 62.129, 63.179, 64.212, 65.229, 66.230, 67.213, 68.180, 69.129, 70.062, 70.977, 71.874, 72.753, 73.614, 74.457, 75.281, 76.086, 76.872, 77.639, 78.385, 79.112, 79.817, 80.502, 81.166, 81.809, 82.429, 83.028, 83.604, 84.157, 84.687, 85.193, 85.676, 86.135, 86.569, 86.978, 87.363, 87.722, 88.056, 88.364, 88.646, 88.902, 89.131, 89.334, 89.510, 89.660, 89.782, 89.877, 89.945, 89.986, 90.000, 90.000, }\r\n\r\n\r\nMoveLUT.mediumBase.turn[2] = {}\r\nMoveLUT.mediumBase.turn[2].dataNum = 161\r\nMoveLUT.mediumBase.turn[2].length = 158.175\r\nMoveLUT.mediumBase.turn[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 6.000}, {0.197, 6.999}, {0.257, 7.999}, {0.326, 8.998}, {0.403, 9.997}, {0.488, 10.996}, {0.581, 11.994}, {0.682, 12.992}, {0.792, 13.990}, {0.911, 14.986}, {1.037, 15.982}, {1.173, 16.977}, {1.316, 17.971}, {1.469, 18.964}, {1.629, 19.956}, {1.799, 20.946}, {1.977, 21.935}, {2.163, 22.922}, {2.358, 23.907}, {2.562, 24.890}, {2.775, 25.871}, {2.996, 26.850}, {3.225, 27.826}, {3.464, 28.799}, {3.711, 29.770}, {3.967, 30.737}, {4.231, 31.700}, {4.504, 32.660}, {4.785, 33.616}, {5.074, 34.568}, {5.371, 35.515}, {5.676, 36.458}, {5.989, 37.396}, {6.310, 38.329}, {6.639, 39.256}, {6.974, 40.178}, {7.317, 41.094}, {7.667, 42.004}, {8.024, 42.907}, {8.388, 43.804}, {8.758, 44.693}, {9.133, 45.576}, {9.514, 46.451}, {9.901, 47.319}, {10.292, 48.179}, {10.688, 49.031}, {11.089, 49.876}, {11.493, 50.711}, {11.901, 51.539}, {12.312, 52.357}, {12.725, 53.167}, {13.142, 53.968}, {13.560, 54.761}, {13.980, 55.544}, {14.400, 56.318}, {14.824, 57.078}, {15.260, 57.831}, {15.707, 58.577}, {16.166, 59.316}, {16.637, 60.047}, {17.120, 60.771}, {17.614, 61.487}, {18.119, 62.195}, {18.635, 62.895}, {19.163, 63.587}, {19.701, 64.270}, {20.250, 64.945}, {20.810, 65.611}, {21.380, 66.268}, {21.961, 66.916}, {22.552, 67.554}, {23.153, 68.184}, {23.763, 68.803}, {24.384, 69.413}, {25.014, 70.013}, {25.654, 70.602}, {26.302, 71.182}, {26.960, 71.751}, {27.627, 72.309}, {28.303, 72.857}, {28.987, 73.395}, {29.680, 73.921}, {30.381, 74.436}, {31.090, 74.940}, {31.807, 75.433}, {32.532, 75.914}, {33.264, 76.384}, {34.003, 76.842}, {34.750, 77.288}, {35.504, 77.722}, {36.264, 78.145}, {37.029, 78.560}, {37.796, 78.971}, {38.566, 79.377}, {39.340, 79.778}, {40.116, 80.175}, {40.896, 80.567}, {41.680, 80.955}, {42.468, 81.337}, {43.260, 81.714}, {44.056, 82.087}, {44.856, 82.453}, {45.660, 82.815}, {46.469, 83.171}, {47.283, 83.522}, {48.101, 83.867}, {48.924, 84.206}, {49.752, 84.540}, {50.584, 84.867}, {51.421, 85.189}, {52.263, 85.505}, {53.111, 85.814}, {53.963, 86.118}, {54.820, 86.415}, {55.682, 86.705}, {56.548, 86.990}, {57.420, 87.268}, {58.297, 87.539}, {59.179, 87.804}, {60.065, 88.062}, {60.956, 88.313}, {61.853, 88.558}, {62.753, 88.795}, {63.659, 89.026}, {64.569, 89.250}, {65.484, 89.466}, {66.403, 89.676}, {67.327, 89.878}, {68.255, 90.074}, {69.187, 90.261}, {70.124, 90.442}, {71.064, 90.615}, {72.009, 90.781}, {72.957, 90.940}, {73.909, 91.091}, {74.865, 91.234}, {75.824, 91.370}, {76.787, 91.498}, {77.752, 91.619}, {78.721, 91.732}, {79.692, 91.838}, {80.666, 91.935}, {81.643, 92.025}, {82.622, 92.107}, {83.604, 92.182}, {84.587, 92.249}, {85.572, 92.307}, {86.559, 92.358}, {87.547, 92.402}, {88.536, 92.437}, {89.526, 92.465}, {90.517, 92.484}, {91.508, 92.496}, {92.500, 92.500}, {92.500, 92.500}, }\r\nMoveLUT.mediumBase.turn[2].rotY = {0.000, 0.008, 0.031, 0.069, 0.123, 0.192, 0.276, 0.376, 0.491, 0.622, 0.769, 0.931, 1.109, 1.303, 1.513, 1.740, 1.982, 2.240, 2.515, 2.806, 3.113, 3.437, 3.778, 4.135, 4.509, 4.899, 5.307, 5.731, 6.172, 6.630, 7.105, 7.598, 8.107, 8.634, 9.177, 9.737, 10.314, 10.907, 11.516, 12.142, 12.784, 13.443, 14.117, 14.808, 15.514, 16.236, 16.973, 17.724, 18.490, 19.270, 20.064, 20.872, 21.692, 22.525, 23.371, 24.229, 25.099, 25.980, 26.872, 27.774, 28.686, 29.595, 30.504, 31.414, 32.323, 33.232, 34.141, 35.050, 35.959, 36.868, 37.777, 38.686, 39.595, 40.504, 41.414, 42.323, 43.232, 44.141, 45.050, 45.959, 46.868, 47.777, 48.686, 49.595, 50.504, 51.414, 52.323, 53.232, 54.141, 55.050, 55.959, 56.868, 57.777, 58.686, 59.595, 60.504, 61.413, 62.311, 63.193, 64.059, 64.909, 65.743, 66.562, 67.366, 68.155, 68.929, 69.689, 70.434, 71.166, 71.883, 72.586, 73.275, 73.951, 74.612, 75.260, 75.895, 76.516, 77.123, 77.717, 78.297, 78.863, 79.416, 79.956, 80.482, 80.994, 81.493, 81.978, 82.449, 82.907, 83.350, 83.780, 84.196, 84.599, 84.987, 85.361, 85.721, 86.067, 86.398, 86.716, 87.019, 87.307, 87.582, 87.841, 88.087, 88.317, 88.533, 88.735, 88.921, 89.093, 89.250, 89.393, 89.520, 89.632, 89.730, 89.812, 89.880, 89.932, 89.970, 89.992, 90.000, 90.000, }\r\n\r\nMoveLUT.mediumBase.turn[3] = {}\r\nMoveLUT.mediumBase.turn[3].dataNum = 204\r\nMoveLUT.mediumBase.turn[3].length = 201.372\r\nMoveLUT.mediumBase.turn[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 7.999}, {0.226, 8.999}, {0.279, 9.999}, {0.337, 10.998}, {0.402, 11.997}, {0.472, 12.996}, {0.547, 13.995}, {0.629, 14.993}, {0.716, 15.991}, {0.808, 16.989}, {0.907, 17.986}, {1.011, 18.983}, {1.121, 19.979}, {1.237, 20.975}, {1.358, 21.969}, {1.485, 22.963}, {1.618, 23.956}, {1.757, 24.949}, {1.901, 25.940}, {2.051, 26.930}, {2.207, 27.919}, {2.369, 28.906}, {2.536, 29.893}, {2.710, 30.877}, {2.888, 31.861}, {3.073, 32.842}, {3.263, 33.822}, {3.459, 34.800}, {3.660, 35.776}, {3.867, 36.750}, {4.080, 37.721}, {4.298, 38.691}, {4.521, 39.657}, {4.750, 40.622}, {4.984, 41.583}, {5.223, 42.542}, {5.467, 43.498}, {5.717, 44.450}, {5.971, 45.400}, {6.231, 46.346}, {6.495, 47.288}, {6.764, 48.227}, {7.038, 49.163}, {7.316, 50.094}, {7.599, 51.022}, {7.885, 51.945}, {8.176, 52.864}, {8.471, 53.779}, {8.770, 54.689}, {9.072, 55.595}, {9.379, 56.496}, {9.688, 57.393}, {10.001, 58.284}, {10.318, 59.167}, {10.646, 60.047}, {10.983, 60.923}, {11.330, 61.795}, {11.687, 62.663}, {12.053, 63.528}, {12.428, 64.388}, {12.813, 65.244}, {13.208, 66.095}, {13.612, 66.943}, {14.025, 67.785}, {14.448, 68.623}, {14.880, 69.457}, {15.321, 70.285}, {15.771, 71.109}, {16.230, 71.928}, {16.699, 72.741}, {17.176, 73.549}, {17.662, 74.352}, {18.157, 75.150}, {18.661, 75.942}, {19.174, 76.728}, {19.695, 77.508}, {20.225, 78.283}, {20.763, 79.052}, {21.310, 79.815}, {21.865, 80.572}, {22.429, 81.322}, {23.000, 82.067}, {23.581, 82.805}, {24.169, 83.536}, {24.765, 84.261}, {25.369, 84.979}, {25.981, 85.691}, {26.601, 86.396}, {27.229, 87.094}, {27.864, 87.784}, {28.507, 88.468}, {29.158, 89.145}, {29.816, 89.814}, {30.481, 90.476}, {31.154, 91.131}, {31.834, 91.778}, {32.520, 92.418}, {33.214, 93.050}, {33.915, 93.674}, {34.623, 94.291}, {35.338, 94.899}, {36.059, 95.500}, {36.787, 96.093}, {37.521, 96.677}, {38.262, 97.254}, {39.009, 97.822}, {39.762, 98.382}, {40.522, 98.933}, {41.287, 99.476}, {42.059, 100.011}, {42.836, 100.537}, {43.619, 101.054}, {44.408, 101.563}, {45.203, 102.063}, {46.003, 102.554}, {46.808, 103.036}, {47.618, 103.510}, {48.434, 103.974}, {49.255, 104.429}, {50.081, 104.875}, {50.911, 105.312}, {51.747, 105.740}, {52.587, 106.159}, {53.432, 106.568}, {54.281, 106.968}, {55.135, 107.358}, {55.992, 107.739}, {56.854, 108.110}, {57.720, 108.472}, {58.590, 108.825}, {59.464, 109.167}, {60.342, 109.500}, {61.223, 109.823}, {62.107, 110.138}, {62.994, 110.447}, {63.882, 110.751}, {64.772, 111.051}, {65.663, 111.347}, {66.557, 111.638}, {67.452, 111.925}, {68.350, 112.207}, {69.249, 112.485}, {70.151, 112.758}, {71.055, 113.027}, {71.961, 113.291}, {72.869, 113.550}, {73.780, 113.804}, {74.693, 114.054}, {75.608, 114.299}, {76.525, 114.539}, {77.445, 114.774}, {78.368, 115.005}, {79.292, 115.230}, {80.220, 115.451}, {81.149, 115.666}, {82.081, 115.877}, {83.016, 116.083}, {83.952, 116.283}, {84.892, 116.479}, {85.833, 116.669}, {86.778, 116.855}, {87.724, 117.035}, {88.673, 117.210}, {89.624, 117.380}, {90.577, 117.545}, {91.533, 117.704}, {92.491, 117.859}, {93.451, 118.008}, {94.413, 118.152}, {95.378, 118.290}, {96.344, 118.423}, {97.313, 118.551}, {98.284, 118.674}, {99.256, 118.791}, {100.230, 118.903}, {101.207, 119.010}, {102.185, 119.111}, {103.164, 119.207}, {104.146, 119.297}, {105.128, 119.382}, {106.113, 119.461}, {107.098, 119.536}, {108.086, 119.604}, {109.074, 119.667}, {110.063, 119.725}, {111.054, 119.777}, {112.045, 119.824}, {113.038, 119.865}, {114.031, 119.901}, {115.025, 119.931}, {116.019, 119.956}, {117.014, 119.975}, {118.009, 119.989}, {119.004, 119.997}, {120.000, 120.000}, {120.000, 120.000}, }\r\nMoveLUT.mediumBase.turn[3].rotY = {0.000, 0.005, 0.021, 0.048, 0.085, 0.133, 0.191, 0.260, 0.340, 0.431, 0.532, 0.644, 0.767, 0.901, 1.045, 1.201, 1.367, 1.544, 1.732, 1.931, 2.141, 2.362, 2.594, 2.838, 3.092, 3.357, 3.633, 3.921, 4.220, 4.529, 4.850, 5.182, 5.525, 5.879, 6.245, 6.621, 7.008, 7.407, 7.816, 8.236, 8.667, 9.109, 9.562, 10.026, 10.500, 10.985, 11.481, 11.987, 12.504, 13.031, 13.568, 14.115, 14.672, 15.239, 15.816, 16.402, 16.998, 17.603, 18.217, 18.840, 19.473, 20.106, 20.740, 21.374, 22.008, 22.642, 23.275, 23.909, 24.543, 25.177, 25.811, 26.444, 27.078, 27.712, 28.346, 28.980, 29.613, 30.247, 30.881, 31.515, 32.149, 32.782, 33.416, 34.050, 34.684, 35.318, 35.951, 36.585, 37.219, 37.853, 38.487, 39.120, 39.754, 40.388, 41.022, 41.656, 42.289, 42.923, 43.557, 44.191, 44.825, 45.459, 46.092, 46.726, 47.360, 47.994, 48.628, 49.261, 49.895, 50.529, 51.163, 51.797, 52.430, 53.064, 53.698, 54.332, 54.966, 55.599, 56.233, 56.867, 57.501, 58.135, 58.768, 59.402, 60.036, 60.670, 61.304, 61.937, 62.571, 63.205, 63.839, 64.473, 65.106, 65.740, 66.374, 67.008, 67.642, 68.275, 68.909, 69.543, 70.177, 70.808, 71.432, 72.044, 72.645, 73.236, 73.816, 74.386, 74.945, 75.493, 76.031, 76.559, 77.077, 77.584, 78.081, 78.568, 79.045, 79.511, 79.968, 80.415, 80.851, 81.278, 81.694, 82.100, 82.497, 82.883, 83.259, 83.625, 83.982, 84.328, 84.664, 84.990, 85.306, 85.611, 85.907, 86.192, 86.468, 86.733, 86.988, 87.232, 87.467, 87.691, 87.905, 88.108, 88.302, 88.485, 88.657, 88.820, 88.971, 89.113, 89.244, 89.365, 89.475, 89.574, 89.664, 89.742, 89.811, 89.869, 89.916, 89.953, 89.979, 89.995, 90.000, 90.000, }\r\n\r\nMoveLUT.mediumBase.turn[4] = {}\r\nMoveLUT.mediumBase.turn[4].dataNum = 3\r\nMoveLUT.mediumBase.turn[4].length = 0\r\nMoveLUT.mediumBase.turn[4].posXZ = {{0.000, 0.000}, {0.000, 0.000}, {0.000, 0.000}}\r\nMoveLUT.mediumBase.turn[4].rotY = {0.000, 90.000, 90.000}\r\n\r\n\r\n\r\nMoveLUT.largeBase.turn = {}\r\nMoveLUT.largeBase.turn[0] = {}\r\nMoveLUT.largeBase.turn[0].dataNum = 3\r\nMoveLUT.largeBase.turn[0].length = 0\r\nMoveLUT.largeBase.turn[0].posXZ = {{0.000, 0.000}, {0.000, 0.000}, {0.000, 0.000}}\r\nMoveLUT.largeBase.turn[0].rotY = {0.000, 90.000, 90.000}\r\n\r\nMoveLUT.largeBase.turn[1] = {}\r\nMoveLUT.largeBase.turn[1].dataNum = 137\r\nMoveLUT.largeBase.turn[1].length = 134.978\r\nMoveLUT.largeBase.turn[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 5.000}, {0.259, 5.999}, {0.354, 6.998}, {0.463, 7.997}, {0.588, 8.996}, {0.728, 9.993}, {0.885, 10.990}, {1.057, 11.986}, {1.246, 12.981}, {1.451, 13.974}, {1.674, 14.965}, {1.914, 15.954}, {2.172, 16.941}, {2.449, 17.925}, {2.744, 18.906}, {3.058, 19.883}, {3.394, 20.856}, {3.751, 21.824}, {4.128, 22.786}, {4.527, 23.743}, {4.947, 24.693}, {5.393, 25.635}, {5.863, 26.568}, {6.356, 27.492}, {6.876, 28.405}, {7.423, 29.305}, {7.995, 30.193}, {8.598, 31.065}, {9.229, 31.921}, {9.891, 32.758}, {10.584, 33.574}, {11.311, 34.367}, {12.069, 35.136}, {12.867, 35.874}, {13.700, 36.581}, {14.570, 37.252}, {15.481, 37.883}, {16.437, 38.467}, {17.437, 38.999}, {18.432, 39.500}, {19.365, 40.000}, {20.242, 40.500}, {21.071, 41.000}, {21.857, 41.500}, {22.605, 42.000}, {23.318, 42.500}, {24.000, 43.000}, {24.653, 43.500}, {25.278, 44.000}, {25.880, 44.500}, {26.458, 45.000}, {27.014, 45.500}, {27.550, 46.000}, {28.067, 46.500}, {28.566, 47.000}, {29.047, 47.500}, {29.513, 48.000}, {29.962, 48.500}, {30.397, 49.000}, {30.818, 49.500}, {31.225, 50.000}, {31.619, 50.500}, {32.000, 51.000}, {32.369, 51.500}, {32.726, 52.000}, {33.072, 52.500}, {33.407, 53.000}, {33.731, 53.500}, {34.044, 54.000}, {34.347, 54.500}, {34.641, 55.000}, {34.925, 55.500}, {35.199, 56.000}, {35.465, 56.500}, {35.721, 57.000}, {35.969, 57.500}, {36.222, 58.000}, {36.495, 58.499}, {36.788, 58.998}, {37.101, 59.495}, {37.433, 59.991}, {37.786, 60.484}, {38.158, 60.975}, {38.550, 61.464}, {38.961, 61.949}, {39.391, 62.430}, {39.841, 62.908}, {40.311, 63.381}, {40.799, 63.849}, {41.306, 64.312}, {41.833, 64.770}, {42.377, 65.221}, {42.941, 65.667}, {43.522, 66.105}, {44.122, 66.537}, {44.740, 66.961}, {45.376, 67.378}, {46.029, 67.786}, {46.699, 68.186}, {47.386, 68.578}, {48.090, 68.960}, {48.811, 69.333}, {49.547, 69.696}, {50.300, 70.050}, {51.068, 70.393}, {51.851, 70.726}, {52.649, 71.047}, {53.461, 71.358}, {54.288, 71.658}, {55.128, 71.946}, {55.981, 72.222}, {56.847, 72.486}, {57.725, 72.738}, {58.615, 72.978}, {59.517, 73.204}, {60.429, 73.419}, {61.352, 73.620}, {62.284, 73.808}, {63.225, 73.982}, {64.175, 74.143}, {65.133, 74.291}, {66.098, 74.425}, {67.070, 74.545}, {68.048, 74.651}, {69.031, 74.744}, {70.019, 74.822}, {71.010, 74.886}, {72.005, 74.936}, {73.002, 74.971}, {74.001, 74.993}, {75.000, 75.000}, {75.000, 75.000}, }\r\nMoveLUT.largeBase.turn[1].rotY = {0.000, 0.010, 0.041, 0.092, 0.164, 0.257, 0.371, 0.506, 0.663, 0.842, 1.043, 1.267, 1.514, 1.785, 2.079, 2.398, 2.743, 3.113, 3.509, 3.933, 4.384, 4.868, 5.381, 5.924, 6.498, 7.104, 7.749, 8.429, 9.143, 9.898, 10.694, 11.530, 12.413, 13.340, 14.316, 15.344, 16.426, 17.562, 18.765, 20.029, 21.361, 22.769, 24.263, 25.845, 27.439, 28.955, 30.402, 31.788, 33.123, 34.412, 35.659, 36.870, 38.048, 39.195, 40.315, 41.410, 42.481, 43.531, 44.561, 45.573, 46.567, 47.546, 48.509, 49.458, 50.394, 51.318, 52.230, 53.130, 54.020, 54.900, 55.771, 56.633, 57.486, 58.332, 59.170, 60.000, 60.824, 61.641, 62.451, 63.256, 64.056, 64.849, 65.637, 66.418, 67.193, 67.961, 68.722, 69.475, 70.220, 70.957, 71.685, 72.404, 73.113, 73.813, 74.503, 75.182, 75.850, 76.507, 77.152, 77.785, 78.406, 79.015, 79.610, 80.192, 80.761, 81.315, 81.855, 82.381, 82.891, 83.386, 83.866, 84.329, 84.776, 85.207, 85.621, 86.018, 86.397, 86.758, 87.102, 87.427, 87.734, 88.022, 88.292, 88.542, 88.773, 88.985, 89.176, 89.349, 89.501, 89.633, 89.745, 89.837, 89.908, 89.959, 89.990, 90.000, 90.000, }\r\n\r\nMoveLUT.largeBase.turn[2] = {}\r\nMoveLUT.largeBase.turn[2].dataNum = 181\r\nMoveLUT.largeBase.turn[2].length = 178.175\r\nMoveLUT.largeBase.turn[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 6.000}, {0.197, 7.000}, {0.257, 7.999}, {0.326, 8.999}, {0.403, 9.998}, {0.488, 10.997}, {0.581, 11.996}, {0.683, 12.994}, {0.793, 13.992}, {0.912, 14.990}, {1.039, 15.987}, {1.174, 16.983}, {1.318, 17.978}, {1.471, 18.973}, {1.633, 19.967}, {1.803, 20.959}, {1.983, 21.951}, {2.171, 22.941}, {2.368, 23.930}, {2.574, 24.917}, {2.789, 25.903}, {3.013, 26.886}, {3.246, 27.868}, {3.489, 28.848}, {3.741, 29.825}, {4.002, 30.799}, {4.273, 31.771}, {4.552, 32.740}, {4.841, 33.706}, {5.140, 34.668}, {5.447, 35.627}, {5.764, 36.583}, {6.089, 37.534}, {6.425, 38.481}, {6.770, 39.423}, {7.124, 40.360}, {7.487, 41.293}, {7.858, 42.220}, {8.239, 43.142}, {8.627, 44.059}, {9.026, 44.968}, {9.432, 45.872}, {9.847, 46.769}, {10.270, 47.659}, {10.700, 48.542}, {11.138, 49.418}, {11.584, 50.286}, {12.038, 51.146}, {12.498, 51.997}, {12.965, 52.841}, {13.437, 53.675}, {13.916, 54.501}, {14.400, 55.318}, {14.891, 56.125}, {15.386, 56.923}, {15.885, 57.711}, {16.388, 58.489}, {16.894, 59.257}, {17.404, 60.015}, {17.918, 60.763}, {18.433, 61.500}, {18.950, 62.226}, {19.468, 62.943}, {19.987, 63.649}, {20.505, 64.344}, {21.024, 65.029}, {21.542, 65.704}, {22.059, 66.367}, {22.575, 67.021}, {23.088, 67.664}, {23.598, 68.298}, {24.105, 68.921}, {24.608, 69.535}, {25.107, 70.139}, {25.601, 70.734}, {26.093, 71.316}, {26.595, 71.889}, {27.105, 72.455}, {27.625, 73.013}, {28.153, 73.562}, {28.690, 74.102}, {29.235, 74.635}, {29.789, 75.158}, {30.350, 75.673}, {30.921, 76.178}, {31.498, 76.675}, {32.083, 77.164}, {32.670, 77.650}, {33.258, 78.135}, {33.850, 78.617}, {34.443, 79.098}, {35.040, 79.577}, {35.640, 80.054}, {36.244, 80.529}, {36.852, 81.001}, {37.464, 81.471}, {38.080, 81.938}, {38.700, 82.403}, {39.326, 82.864}, {39.956, 83.323}, {40.592, 83.779}, {41.233, 84.232}, {41.879, 84.681}, {42.531, 85.127}, {43.188, 85.570}, {43.851, 86.008}, {44.520, 86.444}, {45.195, 86.875}, {45.876, 87.302}, {46.564, 87.726}, {47.257, 88.145}, {47.957, 88.560}, {48.663, 88.971}, {49.375, 89.377}, {50.094, 89.778}, {50.819, 90.175}, {51.550, 90.567}, {52.288, 90.955}, {53.033, 91.337}, {53.784, 91.714}, {54.542, 92.087}, {55.306, 92.453}, {56.076, 92.815}, {56.854, 93.171}, {57.637, 93.522}, {58.427, 93.867}, {59.224, 94.206}, {60.027, 94.540}, {60.836, 94.867}, {61.652, 95.189}, {62.474, 95.505}, {63.302, 95.814}, {64.137, 96.118}, {64.978, 96.415}, {65.825, 96.705}, {66.677, 96.990}, {67.536, 97.268}, {68.401, 97.539}, {69.272, 97.804}, {70.148, 98.062}, {71.030, 98.313}, {71.918, 98.558}, {72.811, 98.795}, {73.710, 99.026}, {74.614, 99.250}, {75.523, 99.466}, {76.437, 99.676}, {77.356, 99.878}, {78.280, 100.074}, {79.208, 100.261}, {80.142, 100.442}, {81.079, 100.615}, {82.021, 100.781}, {82.967, 100.940}, {83.918, 101.091}, {84.872, 101.234}, {85.829, 101.370}, {86.791, 101.498}, {87.755, 101.619}, {88.723, 101.732}, {89.694, 101.838}, {90.668, 101.935}, {91.644, 102.025}, {92.623, 102.107}, {93.604, 102.182}, {94.587, 102.249}, {95.572, 102.307}, {96.559, 102.358}, {97.547, 102.402}, {98.536, 102.437}, {99.526, 102.465}, {100.517, 102.484}, {101.508, 102.496}, {102.500, 102.500}, {102.500, 102.500}, }\r\nMoveLUT.largeBase.turn[2].rotY = {0.000, 0.006, 0.023, 0.052, 0.092, 0.144, 0.207, 0.282, 0.369, 0.467, 0.577, 0.699, 0.832, 0.978, 1.136, 1.306, 1.488, 1.682, 1.889, 2.108, 2.340, 2.584, 2.841, 3.111, 3.393, 3.689, 3.998, 4.319, 4.654, 5.003, 5.366, 5.742, 6.132, 6.535, 6.952, 7.382, 7.827, 8.285, 8.756, 9.243, 9.744, 10.259, 10.788, 11.330, 11.886, 12.456, 13.041, 13.639, 14.252, 14.877, 15.516, 16.168, 16.834, 17.514, 18.207, 18.912, 19.629, 20.358, 21.101, 21.856, 22.622, 23.398, 24.186, 24.984, 25.792, 26.612, 27.440, 28.278, 29.124, 29.978, 30.839, 31.708, 32.585, 33.469, 34.359, 35.253, 36.153, 37.058, 37.966, 38.878, 39.794, 40.703, 41.612, 42.521, 43.430, 44.339, 45.248, 46.157, 47.066, 47.975, 48.885, 49.794, 50.699, 51.593, 52.473, 53.340, 54.194, 55.036, 55.865, 56.682, 57.488, 58.283, 59.066, 59.839, 60.601, 61.353, 62.094, 62.825, 63.546, 64.258, 64.959, 65.651, 66.334, 67.007, 67.670, 68.324, 68.969, 69.604, 70.231, 70.848, 71.456, 72.054, 72.644, 73.224, 73.795, 74.357, 74.910, 75.454, 75.988, 76.513, 77.029, 77.536, 78.033, 78.521, 78.999, 79.468, 79.928, 80.378, 80.819, 81.249, 81.671, 82.082, 82.484, 82.876, 83.258, 83.630, 83.992, 84.344, 84.686, 85.018, 85.339, 85.651, 85.952, 86.242, 86.522, 86.792, 87.051, 87.300, 87.537, 87.764, 87.981, 88.187, 88.381, 88.565, 88.738, 88.900, 89.051, 89.191, 89.320, 89.438, 89.544, 89.640, 89.724, 89.797, 89.859, 89.910, 89.949, 89.977, 89.994, 90.000, 90.000, }\r\n\r\nMoveLUT.largeBase.turn[3] = {}\r\nMoveLUT.largeBase.turn[3].dataNum = 224\r\nMoveLUT.largeBase.turn[3].length = 221.372\r\nMoveLUT.largeBase.turn[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 8.000}, {0.226, 8.999}, {0.279, 9.999}, {0.337, 10.999}, {0.402, 11.998}, {0.472, 12.997}, {0.547, 13.996}, {0.629, 14.995}, {0.716, 15.994}, {0.809, 16.992}, {0.908, 17.990}, {1.012, 18.987}, {1.122, 19.984}, {1.238, 20.981}, {1.360, 21.977}, {1.488, 22.972}, {1.621, 23.967}, {1.760, 24.961}, {1.906, 25.955}, {2.057, 26.947}, {2.214, 27.939}, {2.377, 28.929}, {2.546, 29.919}, {2.721, 30.907}, {2.901, 31.895}, {3.088, 32.881}, {3.281, 33.865}, {3.479, 34.848}, {3.683, 35.830}, {3.894, 36.810}, {4.110, 37.788}, {4.332, 38.765}, {4.560, 39.739}, {4.795, 40.712}, {5.035, 41.682}, {5.281, 42.650}, {5.532, 43.616}, {5.789, 44.579}, {6.052, 45.539}, {6.321, 46.497}, {6.595, 47.453}, {6.875, 48.405}, {7.160, 49.354}, {7.451, 50.300}, {7.747, 51.243}, {8.048, 52.182}, {8.355, 53.118}, {8.667, 54.050}, {8.984, 54.978}, {9.306, 55.902}, {9.633, 56.823}, {9.964, 57.739}, {10.300, 58.651}, {10.641, 59.559}, {10.986, 60.462}, {11.335, 61.360}, {11.689, 62.254}, {12.046, 63.143}, {12.407, 64.027}, {12.772, 64.906}, {13.141, 65.780}, {13.513, 66.649}, {13.888, 67.512}, {14.266, 68.370}, {14.647, 69.222}, {15.031, 70.068}, {15.418, 70.909}, {15.806, 71.745}, {16.197, 72.574}, {16.590, 73.397}, {16.985, 74.215}, {17.381, 75.026}, {17.778, 75.832}, {18.179, 76.629}, {18.589, 77.421}, {19.007, 78.209}, {19.434, 78.992}, {19.870, 79.770}, {20.314, 80.543}, {20.767, 81.311}, {21.228, 82.075}, {21.697, 82.833}, {22.175, 83.586}, {22.662, 84.333}, {23.156, 85.076}, {23.659, 85.812}, {24.170, 86.543}, {24.689, 87.269}, {25.215, 87.988}, {25.750, 88.702}, {26.293, 89.410}, {26.843, 90.111}, {27.402, 90.807}, {27.967, 91.496}, {28.541, 92.179}, {29.122, 92.856}, {29.710, 93.526}, {30.306, 94.190}, {30.909, 94.847}, {31.519, 95.497}, {32.137, 96.140}, {32.761, 96.777}, {33.393, 97.407}, {34.031, 98.029}, {34.677, 98.645}, {35.329, 99.253}, {35.988, 99.855}, {36.653, 100.448}, {37.325, 101.035}, {38.003, 101.614}, {38.688, 102.185}, {39.379, 102.749}, {40.076, 103.305}, {40.780, 103.853}, {41.489, 104.394}, {42.204, 104.927}, {42.925, 105.451}, {43.652, 105.968}, {44.385, 106.477}, {45.123, 106.977}, {45.867, 107.470}, {46.616, 107.954}, {47.370, 108.429}, {48.129, 108.897}, {48.894, 109.356}, {49.664, 109.806}, {50.438, 110.248}, {51.218, 110.681}, {52.002, 111.106}, {52.791, 111.522}, {53.585, 111.929}, {54.382, 112.328}, {55.182, 112.722}, {55.984, 113.113}, {56.788, 113.500}, {57.594, 113.883}, {58.402, 114.263}, {59.213, 114.639}, {60.025, 115.012}, {60.841, 115.381}, {61.658, 115.747}, {62.478, 116.108}, {63.301, 116.466}, {64.127, 116.820}, {64.955, 117.170}, {65.786, 117.516}, {66.620, 117.858}, {67.456, 118.196}, {68.296, 118.530}, {69.139, 118.860}, {69.984, 119.186}, {70.833, 119.508}, {71.685, 119.825}, {72.540, 120.138}, {73.398, 120.447}, {74.259, 120.751}, {75.124, 121.051}, {75.991, 121.347}, {76.862, 121.638}, {77.736, 121.925}, {78.613, 122.207}, {79.494, 122.485}, {80.377, 122.758}, {81.264, 123.027}, {82.154, 123.291}, {83.047, 123.550}, {83.944, 123.804}, {84.843, 124.054}, {85.746, 124.299}, {86.652, 124.539}, {87.561, 124.774}, {88.473, 125.005}, {89.389, 125.230}, {90.307, 125.451}, {91.228, 125.666}, {92.153, 125.877}, {93.080, 126.083}, {94.011, 126.283}, {94.944, 126.479}, {95.880, 126.669}, {96.819, 126.855}, {97.761, 127.035}, {98.705, 127.210}, {99.653, 127.380}, {100.603, 127.545}, {101.555, 127.704}, {102.510, 127.859}, {103.468, 128.008}, {104.428, 128.152}, {105.390, 128.290}, {106.355, 128.423}, {107.322, 128.551}, {108.291, 128.674}, {109.262, 128.791}, {110.235, 128.903}, {111.211, 129.010}, {112.188, 129.111}, {113.167, 129.207}, {114.148, 129.297}, {115.130, 129.382}, {116.114, 129.461}, {117.099, 129.536}, {118.086, 129.604}, {119.074, 129.667}, {120.064, 129.725}, {121.054, 129.777}, {122.045, 129.824}, {123.038, 129.865}, {124.031, 129.901}, {125.025, 129.931}, {126.019, 129.956}, {127.014, 129.975}, {128.009, 129.989}, {129.004, 129.997}, {130.000, 130.000}, {130.000, 130.000}, }\r\nMoveLUT.largeBase.turn[3].rotY = {0.000, 0.004, 0.016, 0.036, 0.064, 0.100, 0.144, 0.195, 0.255, 0.323, 0.399, 0.483, 0.575, 0.676, 0.784, 0.901, 1.026, 1.159, 1.300, 1.450, 1.607, 1.774, 1.948, 2.131, 2.323, 2.522, 2.731, 2.948, 3.173, 3.407, 3.649, 3.900, 4.159, 4.428, 4.704, 4.990, 5.284, 5.586, 5.898, 6.218, 6.547, 6.884, 7.231, 7.586, 7.950, 8.322, 8.703, 9.092, 9.490, 9.897, 10.312, 10.736, 11.168, 11.608, 12.056, 12.514, 12.979, 13.453, 13.935, 14.425, 14.922, 15.428, 15.941, 16.462, 16.991, 17.527, 18.070, 18.621, 19.179, 19.744, 20.316, 20.894, 21.480, 22.072, 22.671, 23.276, 23.887, 24.504, 25.126, 25.755, 26.389, 27.022, 27.656, 28.290, 28.924, 29.558, 30.191, 30.825, 31.459, 32.093, 32.727, 33.360, 33.994, 34.628, 35.262, 35.896, 36.530, 37.163, 37.797, 38.431, 39.065, 39.699, 40.332, 40.966, 41.600, 42.234, 42.868, 43.501, 44.135, 44.769, 45.403, 46.037, 46.670, 47.304, 47.938, 48.572, 49.206, 49.839, 50.473, 51.107, 51.741, 52.375, 53.008, 53.642, 54.276, 54.910, 55.544, 56.177, 56.811, 57.445, 58.079, 58.713, 59.346, 59.980, 60.614, 61.248, 61.882, 62.515, 63.149, 63.782, 64.409, 65.027, 65.637, 66.239, 66.832, 67.417, 67.994, 68.563, 69.125, 69.678, 70.223, 70.761, 71.291, 71.814, 72.329, 72.837, 73.337, 73.829, 74.315, 74.793, 75.263, 75.727, 76.183, 76.631, 77.073, 77.507, 77.934, 78.354, 78.766, 79.171, 79.569, 79.960, 80.344, 80.720, 81.089, 81.451, 81.806, 82.153, 82.493, 82.826, 83.151, 83.469, 83.780, 84.084, 84.380, 84.668, 84.950, 85.223, 85.490, 85.749, 86.000, 86.244, 86.481, 86.710, 86.931, 87.145, 87.351, 87.550, 87.741, 87.925, 88.100, 88.268, 88.429, 88.581, 88.726, 88.864, 88.993, 89.115, 89.229, 89.335, 89.433, 89.523, 89.606, 89.681, 89.748, 89.807, 89.858, 89.901, 89.937, 89.965, 89.984, 89.996, 90.000, 90.000, }\r\n\r\nMoveLUT.largeBase.turn[4] = {}\r\nMoveLUT.largeBase.turn[4].dataNum = 3\r\nMoveLUT.largeBase.turn[4].length = 0\r\nMoveLUT.largeBase.turn[4].posXZ = {{0.000, 0.000}, {0.000, 0.000}, {0.000, 0.000}}\r\nMoveLUT.largeBase.turn[4].rotY = {0.000, 90.000, 90.000}\r\n\r\n\r\n\r\n\r\nMoveLUT.smallBase.talon = {}\r\nMoveLUT.smallBase.talon[1] = {}\r\nMoveLUT.smallBase.talon[1].dataNum = 97\r\nMoveLUT.smallBase.talon[1].length = 94.978\r\nMoveLUT.smallBase.talon[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 4.999}, {0.259, 5.998}, {0.353, 6.997}, {0.462, 7.995}, {0.587, 8.991}, {0.726, 9.987}, {0.881, 10.981}, {1.052, 11.972}, {1.238, 12.962}, {1.440, 13.948}, {1.658, 14.931}, {1.892, 15.910}, {2.142, 16.885}, {2.407, 17.855}, {2.689, 18.818}, {2.987, 19.776}, {3.300, 20.726}, {3.628, 21.668}, {3.973, 22.602}, {4.332, 23.525}, {4.706, 24.438}, {5.094, 25.340}, {5.495, 26.230}, {5.908, 27.108}, {6.332, 27.971}, {6.766, 28.821}, {7.210, 29.655}, {7.664, 30.473}, {8.125, 31.275}, {8.591, 32.061}, {9.062, 32.829}, {9.535, 33.581}, {10.011, 34.314}, {10.486, 35.031}, {10.959, 35.730}, {11.430, 36.412}, {11.909, 37.078}, {12.406, 37.731}, {12.921, 38.369}, {13.455, 38.992}, {14.006, 39.599}, {14.574, 40.191}, {15.159, 40.766}, {15.760, 41.324}, {16.377, 41.865}, {17.009, 42.387}, {17.655, 42.892}, {18.316, 43.378}, {18.988, 43.849}, {19.665, 44.312}, {20.348, 44.770}, {21.037, 45.221}, {21.734, 45.667}, {22.437, 46.105}, {23.149, 46.537}, {23.869, 46.961}, {24.599, 47.378}, {25.338, 47.786}, {26.087, 48.186}, {26.846, 48.578}, {27.615, 48.960}, {28.394, 49.333}, {29.184, 49.696}, {29.985, 50.050}, {30.796, 50.393}, {31.618, 50.726}, {32.450, 51.047}, {33.293, 51.358}, {34.146, 51.658}, {35.010, 51.946}, {35.884, 52.222}, {36.767, 52.486}, {37.661, 52.738}, {38.564, 52.978}, {39.477, 53.204}, {40.398, 53.419}, {41.328, 53.620}, {42.266, 53.808}, {43.212, 53.982}, {44.166, 54.143}, {45.127, 54.291}, {46.094, 54.425}, {47.067, 54.545}, {48.046, 54.651}, {49.030, 54.744}, {50.018, 54.822}, {51.010, 54.886}, {52.005, 54.936}, {53.002, 54.971}, {54.001, 54.993}, {55.000, 55.000}, {55.000, 55.000}, }\r\nMoveLUT.smallBase.talon[1].rotY = {0.000, 0.020, 0.082, 0.185, 0.329, 0.514, 0.742, 1.012, 1.325, 1.681, 2.081, 2.526, 3.015, 3.549, 4.129, 4.755, 5.428, 6.147, 6.914, 7.727, 8.588, 9.496, 10.452, 11.457, 12.511, 13.611, 14.756, 15.946, 17.180, 18.457, 19.774, 21.131, 22.532, 23.968, 25.439, 26.942, 28.475, 30.035, 31.620, 33.228, 34.856, 36.492, 38.129, 39.765, 41.401, 43.038, 44.674, 46.310, 47.947, 49.583, 51.220, 52.856, 54.492, 56.114, 57.698, 59.235, 60.730, 62.182, 63.594, 64.966, 66.301, 67.597, 68.858, 70.082, 71.270, 72.422, 73.540, 74.622, 75.670, 76.682, 77.660, 78.602, 79.509, 80.380, 81.216, 82.016, 82.779, 83.506, 84.196, 84.849, 85.465, 86.042, 86.582, 87.083, 87.546, 87.969, 88.353, 88.697, 89.001, 89.266, 89.490, 89.673, 89.816, 89.918, 89.980, 90.000, 180.000, }\r\n\r\nMoveLUT.smallBase.talon[2] = {}\r\nMoveLUT.smallBase.talon[2].dataNum = 141\r\nMoveLUT.smallBase.talon[2].length = 138.175\r\nMoveLUT.smallBase.talon[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 5.999}, {0.197, 6.999}, {0.257, 7.998}, {0.326, 8.997}, {0.402, 9.996}, {0.487, 10.994}, {0.580, 11.992}, {0.682, 12.988}, {0.791, 13.984}, {0.909, 14.979}, {1.035, 15.973}, {1.169, 16.966}, {1.312, 17.957}, {1.463, 18.946}, {1.622, 19.934}, {1.789, 20.920}, {1.965, 21.903}, {2.148, 22.884}, {2.340, 23.863}, {2.540, 24.838}, {2.747, 25.810}, {2.963, 26.779}, {3.186, 27.745}, {3.416, 28.706}, {3.655, 29.663}, {3.900, 30.616}, {4.152, 31.564}, {4.412, 32.507}, {4.678, 33.445}, {4.950, 34.378}, {5.229, 35.304}, {5.513, 36.225}, {5.804, 37.139}, {6.099, 38.047}, {6.400, 38.948}, {6.708, 39.836}, {7.030, 40.719}, {7.365, 41.596}, {7.715, 42.468}, {8.078, 43.335}, {8.455, 44.195}, {8.846, 45.050}, {9.250, 45.898}, {9.668, 46.739}, {10.099, 47.574}, {10.543, 48.402}, {11.000, 49.223}, {11.470, 50.036}, {11.953, 50.842}, {12.449, 51.640}, {12.957, 52.430}, {13.478, 53.212}, {14.011, 53.986}, {14.556, 54.751}, {15.114, 55.507}, {15.683, 56.255}, {16.264, 56.993}, {16.857, 57.722}, {17.461, 58.441}, {18.077, 59.151}, {18.703, 59.851}, {19.341, 60.541}, {19.990, 61.220}, {20.649, 61.890}, {21.319, 62.548}, {21.999, 63.196}, {22.690, 63.833}, {23.390, 64.460}, {24.101, 65.074}, {24.821, 65.678}, {25.550, 66.270}, {26.289, 66.851}, {27.037, 67.419}, {27.794, 67.976}, {28.559, 68.520}, {29.333, 69.053}, {30.116, 69.573}, {30.906, 70.081}, {31.705, 70.575}, {32.511, 71.058}, {33.325, 71.527}, {34.146, 71.983}, {34.974, 72.427}, {35.810, 72.857}, {36.652, 73.274}, {37.500, 73.677}, {38.355, 74.067}, {39.216, 74.443}, {40.083, 74.806}, {40.955, 75.155}, {41.833, 75.490}, {42.716, 75.810}, {43.604, 76.118}, {44.495, 76.415}, {45.389, 76.705}, {46.285, 76.990}, {47.183, 77.268}, {48.085, 77.539}, {48.989, 77.804}, {49.897, 78.062}, {50.807, 78.313}, {51.720, 78.558}, {52.637, 78.795}, {53.557, 79.026}, {54.480, 79.250}, {55.406, 79.466}, {56.336, 79.676}, {57.269, 79.878}, {58.206, 80.074}, {59.145, 80.261}, {60.088, 80.442}, {61.035, 80.615}, {61.984, 80.781}, {62.937, 80.940}, {63.893, 81.091}, {64.852, 81.234}, {65.813, 81.370}, {66.778, 81.498}, {67.746, 81.619}, {68.716, 81.732}, {69.689, 81.838}, {70.664, 81.935}, {71.641, 82.025}, {72.621, 82.107}, {73.603, 82.182}, {74.586, 82.249}, {75.572, 82.307}, {76.558, 82.358}, {77.547, 82.402}, {78.536, 82.437}, {79.526, 82.465}, {80.517, 82.484}, {81.508, 82.496}, {82.500, 82.500}, {82.500, 82.500}, }\r\nMoveLUT.smallBase.talon[2].rotY = {0.000, 0.012, 0.046, 0.103, 0.184, 0.287, 0.414, 0.564, 0.737, 0.933, 1.153, 1.396, 1.663, 1.953, 2.267, 2.605, 2.967, 3.352, 3.761, 4.195, 4.652, 5.133, 5.638, 6.167, 6.719, 7.296, 7.896, 8.519, 9.166, 9.836, 10.529, 11.244, 11.982, 12.743, 13.525, 14.329, 15.155, 16.001, 16.869, 17.756, 18.664, 19.573, 20.482, 21.391, 22.300, 23.209, 24.118, 25.027, 25.936, 26.845, 27.754, 28.664, 29.573, 30.482, 31.391, 32.300, 33.209, 34.118, 35.027, 35.936, 36.845, 37.754, 38.664, 39.573, 40.482, 41.391, 42.300, 43.209, 44.118, 45.027, 45.936, 46.845, 47.754, 48.664, 49.573, 50.482, 51.391, 52.300, 53.209, 54.118, 55.027, 55.936, 56.845, 57.754, 58.664, 59.573, 60.482, 61.391, 62.300, 63.209, 64.118, 65.027, 65.936, 66.845, 67.754, 68.664, 69.573, 70.482, 71.390, 72.286, 73.159, 74.008, 74.834, 75.638, 76.420, 77.179, 77.917, 78.632, 79.326, 79.997, 80.647, 81.276, 81.883, 82.468, 83.032, 83.574, 84.094, 84.593, 85.070, 85.526, 85.959, 86.371, 86.761, 87.129, 87.476, 87.800, 88.102, 88.382, 88.640, 88.875, 89.089, 89.280, 89.448, 89.595, 89.718, 89.820, 89.899, 89.955, 89.989, 90.000, 180.000, }\r\n\r\nMoveLUT.smallBase.talon[3] = {}\r\nMoveLUT.smallBase.talon[3].dataNum = 184\r\nMoveLUT.smallBase.talon[3].length = 181.372\r\nMoveLUT.smallBase.talon[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 7.999}, {0.226, 8.999}, {0.279, 9.998}, {0.337, 10.997}, {0.401, 11.996}, {0.471, 12.994}, {0.547, 13.993}, {0.628, 14.990}, {0.715, 15.987}, {0.807, 16.984}, {0.905, 17.979}, {1.009, 18.975}, {1.118, 19.969}, {1.233, 20.962}, {1.354, 21.954}, {1.480, 22.945}, {1.612, 23.935}, {1.749, 24.923}, {1.892, 25.910}, {2.041, 26.896}, {2.195, 27.879}, {2.354, 28.861}, {2.518, 29.841}, {2.688, 30.819}, {2.863, 31.794}, {3.044, 32.767}, {3.229, 33.738}, {3.420, 34.705}, {3.615, 35.671}, {3.816, 36.633}, {4.021, 37.592}, {4.231, 38.547}, {4.445, 39.500}, {4.666, 40.445}, {4.897, 41.388}, {5.139, 42.328}, {5.391, 43.265}, {5.654, 44.200}, {5.927, 45.131}, {6.210, 46.060}, {6.503, 46.985}, {6.807, 47.907}, {7.121, 48.825}, {7.445, 49.740}, {7.779, 50.652}, {8.123, 51.559}, {8.477, 52.463}, {8.841, 53.363}, {9.215, 54.259}, {9.599, 55.150}, {9.993, 56.037}, {10.396, 56.920}, {10.809, 57.799}, {11.232, 58.672}, {11.665, 59.541}, {12.107, 60.405}, {12.559, 61.264}, {13.020, 62.118}, {13.491, 62.967}, {13.971, 63.811}, {14.460, 64.649}, {14.958, 65.482}, {15.466, 66.310}, {15.983, 67.131}, {16.509, 67.947}, {17.044, 68.757}, {17.588, 69.561}, {18.140, 70.359}, {18.702, 71.151}, {19.272, 71.937}, {19.851, 72.716}, {20.438, 73.488}, {21.034, 74.255}, {21.638, 75.014}, {22.251, 75.767}, {22.872, 76.513}, {23.501, 77.252}, {24.139, 77.984}, {24.784, 78.709}, {25.438, 79.427}, {26.099, 80.138}, {26.768, 80.841}, {27.445, 81.537}, {28.129, 82.225}, {28.822, 82.905}, {29.521, 83.578}, {30.228, 84.243}, {30.942, 84.901}, {31.664, 85.550}, {32.393, 86.191}, {33.128, 86.824}, {33.871, 87.449}, {34.621, 88.066}, {35.377, 88.675}, {36.140, 89.275}, {36.909, 89.866}, {37.686, 90.449}, {38.468, 91.023}, {39.257, 91.589}, {40.052, 92.146}, {40.853, 92.694}, {41.660, 93.233}, {42.473, 93.764}, {43.292, 94.285}, {44.117, 94.797}, {44.947, 95.300}, {45.782, 95.794}, {46.624, 96.278}, {47.470, 96.753}, {48.322, 97.219}, {49.178, 97.675}, {50.040, 98.122}, {50.907, 98.559}, {51.778, 98.987}, {52.654, 99.405}, {53.535, 99.813}, {54.420, 100.212}, {55.309, 100.600}, {56.203, 100.979}, {57.101, 101.348}, {58.003, 101.707}, {58.909, 102.056}, {59.818, 102.395}, {60.731, 102.724}, {61.648, 103.042}, {62.569, 103.351}, {63.492, 103.649}, {64.419, 103.937}, {65.349, 104.215}, {66.282, 104.483}, {67.218, 104.740}, {68.157, 104.987}, {69.098, 105.223}, {70.042, 105.449}, {70.989, 105.666}, {71.936, 105.877}, {72.885, 106.083}, {73.835, 106.283}, {74.787, 106.479}, {75.740, 106.669}, {76.694, 106.855}, {77.650, 107.035}, {78.607, 107.210}, {79.566, 107.380}, {80.527, 107.545}, {81.489, 107.704}, {82.453, 107.859}, {83.418, 108.008}, {84.385, 108.152}, {85.353, 108.290}, {86.324, 108.423}, {87.295, 108.551}, {88.269, 108.674}, {89.244, 108.791}, {90.220, 108.903}, {91.199, 109.010}, {92.178, 109.111}, {93.159, 109.207}, {94.141, 109.297}, {95.125, 109.382}, {96.110, 109.461}, {97.097, 109.536}, {98.084, 109.604}, {99.073, 109.667}, {100.063, 109.725}, {101.053, 109.777}, {102.045, 109.824}, {103.037, 109.865}, {104.031, 109.901}, {105.025, 109.931}, {106.019, 109.956}, {107.014, 109.975}, {108.009, 109.989}, {109.004, 109.997}, {110.000, 110.000}, {110.000, 110.000},  }\r\nMoveLUT.smallBase.talon[3].rotY = {0.000, 0.008, 0.032, 0.072, 0.128, 0.199, 0.287, 0.391, 0.510, 0.646, 0.798, 0.966, 1.150, 1.350, 1.567, 1.799, 2.048, 2.313, 2.595, 2.892, 3.206, 3.536, 3.882, 4.245, 4.623, 5.018, 5.429, 5.856, 6.299, 6.759, 7.234, 7.725, 8.231, 8.754, 9.292, 9.845, 10.414, 10.999, 11.598, 12.212, 12.842, 13.475, 14.109, 14.743, 15.377, 16.011, 16.644, 17.278, 17.912, 18.546, 19.180, 19.813, 20.447, 21.081, 21.715, 22.349, 22.982, 23.616, 24.250, 24.884, 25.518, 26.151, 26.785, 27.419, 28.053, 28.687, 29.320, 29.954, 30.588, 31.222, 31.856, 32.489, 33.123, 33.757, 34.391, 35.025, 35.659, 36.292, 36.926, 37.560, 38.194, 38.828, 39.461, 40.095, 40.729, 41.363, 41.997, 42.630, 43.264, 43.898, 44.532, 45.166, 45.799, 46.433, 47.067, 47.701, 48.335, 48.968, 49.602, 50.236, 50.870, 51.504, 52.137, 52.771, 53.405, 54.039, 54.673, 55.306, 55.940, 56.574, 57.208, 57.842, 58.475, 59.109, 59.743, 60.377, 61.011, 61.644, 62.278, 62.912, 63.546, 64.180, 64.813, 65.447, 66.081, 66.715, 67.349, 67.982, 68.616, 69.250, 69.884, 70.518, 71.151, 71.785, 72.419, 73.053, 73.687, 74.320, 74.954, 75.588, 76.222, 76.856, 77.485, 78.103, 78.704, 79.290, 79.859, 80.413, 80.951, 81.474, 81.981, 82.472, 82.948, 83.409, 83.854, 84.283, 84.697, 85.096, 85.479, 85.846, 86.198, 86.535, 86.856, 87.162, 87.452, 87.727, 87.986, 88.229, 88.457, 88.669, 88.866, 89.047, 89.212, 89.362, 89.496, 89.614, 89.716, 89.803, 89.874, 89.929, 89.968, 89.992, 90.000, 180.000, }\r\n\r\nMoveLUT.smallBase.talonF = {}\r\nMoveLUT.smallBase.talonF[1] = {}\r\nMoveLUT.smallBase.talonF[1].dataNum = 97\r\nMoveLUT.smallBase.talonF[1].length = 94.978\r\nMoveLUT.smallBase.talonF[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 4.999}, {0.259, 5.998}, {0.353, 6.997}, {0.462, 7.995}, {0.587, 8.991}, {0.726, 9.987}, {0.881, 10.981}, {1.052, 11.972}, {1.238, 12.962}, {1.440, 13.948}, {1.658, 14.931}, {1.892, 15.910}, {2.142, 16.885}, {2.407, 17.855}, {2.689, 18.818}, {2.987, 19.776}, {3.300, 20.726}, {3.628, 21.668}, {3.973, 22.602}, {4.332, 23.525}, {4.706, 24.438}, {5.094, 25.340}, {5.495, 26.230}, {5.908, 27.108}, {6.332, 27.971}, {6.766, 28.821}, {7.210, 29.655}, {7.664, 30.473}, {8.125, 31.275}, {8.591, 32.061}, {9.062, 32.829}, {9.535, 33.581}, {10.011, 34.314}, {10.486, 35.031}, {10.959, 35.730}, {11.430, 36.412}, {11.909, 37.078}, {12.406, 37.731}, {12.921, 38.369}, {13.455, 38.992}, {14.006, 39.599}, {14.574, 40.191}, {15.159, 40.766}, {15.760, 41.324}, {16.377, 41.865}, {17.009, 42.387}, {17.655, 42.892}, {18.316, 43.378}, {18.988, 43.849}, {19.665, 44.312}, {20.348, 44.770}, {21.037, 45.221}, {21.734, 45.667}, {22.437, 46.105}, {23.149, 46.537}, {23.869, 46.961}, {24.599, 47.378}, {25.338, 47.786}, {26.087, 48.186}, {26.846, 48.578}, {27.615, 48.960}, {28.394, 49.333}, {29.184, 49.696}, {29.985, 50.050}, {30.796, 50.393}, {31.618, 50.726}, {32.450, 51.047}, {33.293, 51.358}, {34.146, 51.658}, {35.010, 51.946}, {35.884, 52.222}, {36.767, 52.486}, {37.661, 52.738}, {38.564, 52.978}, {39.477, 53.204}, {40.398, 53.419}, {41.328, 53.620}, {42.266, 53.808}, {43.212, 53.982}, {44.166, 54.143}, {45.127, 54.291}, {46.094, 54.425}, {47.067, 54.545}, {48.046, 54.651}, {49.030, 54.744}, {50.018, 54.822}, {51.010, 54.886}, {52.005, 54.936}, {53.002, 54.971}, {54.001, 54.993}, {55.000, 55.000}, {55.000, 45.000}, }\r\nMoveLUT.smallBase.talonF[1].rotY = {0.000, 0.020, 0.082, 0.185, 0.329, 0.514, 0.742, 1.012, 1.325, 1.681, 2.081, 2.526, 3.015, 3.549, 4.129, 4.755, 5.428, 6.147, 6.914, 7.727, 8.588, 9.496, 10.452, 11.457, 12.511, 13.611, 14.756, 15.946, 17.180, 18.457, 19.774, 21.131, 22.532, 23.968, 25.439, 26.942, 28.475, 30.035, 31.620, 33.228, 34.856, 36.492, 38.129, 39.765, 41.401, 43.038, 44.674, 46.310, 47.947, 49.583, 51.220, 52.856, 54.492, 56.114, 57.698, 59.235, 60.730, 62.182, 63.594, 64.966, 66.301, 67.597, 68.858, 70.082, 71.270, 72.422, 73.540, 74.622, 75.670, 76.682, 77.660, 78.602, 79.509, 80.380, 81.216, 82.016, 82.779, 83.506, 84.196, 84.849, 85.465, 86.042, 86.582, 87.083, 87.546, 87.969, 88.353, 88.697, 89.001, 89.266, 89.490, 89.673, 89.816, 89.918, 89.980, 90.000, 180.000, }\r\n\r\nMoveLUT.smallBase.talonF[2] = {}\r\nMoveLUT.smallBase.talonF[2].dataNum = 141\r\nMoveLUT.smallBase.talonF[2].length = 138.175\r\nMoveLUT.smallBase.talonF[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 5.999}, {0.197, 6.999}, {0.257, 7.998}, {0.326, 8.997}, {0.402, 9.996}, {0.487, 10.994}, {0.580, 11.992}, {0.682, 12.988}, {0.791, 13.984}, {0.909, 14.979}, {1.035, 15.973}, {1.169, 16.966}, {1.312, 17.957}, {1.463, 18.946}, {1.622, 19.934}, {1.789, 20.920}, {1.965, 21.903}, {2.148, 22.884}, {2.340, 23.863}, {2.540, 24.838}, {2.747, 25.810}, {2.963, 26.779}, {3.186, 27.745}, {3.416, 28.706}, {3.655, 29.663}, {3.900, 30.616}, {4.152, 31.564}, {4.412, 32.507}, {4.678, 33.445}, {4.950, 34.378}, {5.229, 35.304}, {5.513, 36.225}, {5.804, 37.139}, {6.099, 38.047}, {6.400, 38.948}, {6.708, 39.836}, {7.030, 40.719}, {7.365, 41.596}, {7.715, 42.468}, {8.078, 43.335}, {8.455, 44.195}, {8.846, 45.050}, {9.250, 45.898}, {9.668, 46.739}, {10.099, 47.574}, {10.543, 48.402}, {11.000, 49.223}, {11.470, 50.036}, {11.953, 50.842}, {12.449, 51.640}, {12.957, 52.430}, {13.478, 53.212}, {14.011, 53.986}, {14.556, 54.751}, {15.114, 55.507}, {15.683, 56.255}, {16.264, 56.993}, {16.857, 57.722}, {17.461, 58.441}, {18.077, 59.151}, {18.703, 59.851}, {19.341, 60.541}, {19.990, 61.220}, {20.649, 61.890}, {21.319, 62.548}, {21.999, 63.196}, {22.690, 63.833}, {23.390, 64.460}, {24.101, 65.074}, {24.821, 65.678}, {25.550, 66.270}, {26.289, 66.851}, {27.037, 67.419}, {27.794, 67.976}, {28.559, 68.520}, {29.333, 69.053}, {30.116, 69.573}, {30.906, 70.081}, {31.705, 70.575}, {32.511, 71.058}, {33.325, 71.527}, {34.146, 71.983}, {34.974, 72.427}, {35.810, 72.857}, {36.652, 73.274}, {37.500, 73.677}, {38.355, 74.067}, {39.216, 74.443}, {40.083, 74.806}, {40.955, 75.155}, {41.833, 75.490}, {42.716, 75.810}, {43.604, 76.118}, {44.495, 76.415}, {45.389, 76.705}, {46.285, 76.990}, {47.183, 77.268}, {48.085, 77.539}, {48.989, 77.804}, {49.897, 78.062}, {50.807, 78.313}, {51.720, 78.558}, {52.637, 78.795}, {53.557, 79.026}, {54.480, 79.250}, {55.406, 79.466}, {56.336, 79.676}, {57.269, 79.878}, {58.206, 80.074}, {59.145, 80.261}, {60.088, 80.442}, {61.035, 80.615}, {61.984, 80.781}, {62.937, 80.940}, {63.893, 81.091}, {64.852, 81.234}, {65.813, 81.370}, {66.778, 81.498}, {67.746, 81.619}, {68.716, 81.732}, {69.689, 81.838}, {70.664, 81.935}, {71.641, 82.025}, {72.621, 82.107}, {73.603, 82.182}, {74.586, 82.249}, {75.572, 82.307}, {76.558, 82.358}, {77.547, 82.402}, {78.536, 82.437}, {79.526, 82.465}, {80.517, 82.484}, {81.508, 82.496}, {82.500, 82.500}, {82.500, 72.500}, }\r\nMoveLUT.smallBase.talonF[2].rotY = {0.000, 0.012, 0.046, 0.103, 0.184, 0.287, 0.414, 0.564, 0.737, 0.933, 1.153, 1.396, 1.663, 1.953, 2.267, 2.605, 2.967, 3.352, 3.761, 4.195, 4.652, 5.133, 5.638, 6.167, 6.719, 7.296, 7.896, 8.519, 9.166, 9.836, 10.529, 11.244, 11.982, 12.743, 13.525, 14.329, 15.155, 16.001, 16.869, 17.756, 18.664, 19.573, 20.482, 21.391, 22.300, 23.209, 24.118, 25.027, 25.936, 26.845, 27.754, 28.664, 29.573, 30.482, 31.391, 32.300, 33.209, 34.118, 35.027, 35.936, 36.845, 37.754, 38.664, 39.573, 40.482, 41.391, 42.300, 43.209, 44.118, 45.027, 45.936, 46.845, 47.754, 48.664, 49.573, 50.482, 51.391, 52.300, 53.209, 54.118, 55.027, 55.936, 56.845, 57.754, 58.664, 59.573, 60.482, 61.391, 62.300, 63.209, 64.118, 65.027, 65.936, 66.845, 67.754, 68.664, 69.573, 70.482, 71.390, 72.286, 73.159, 74.008, 74.834, 75.638, 76.420, 77.179, 77.917, 78.632, 79.326, 79.997, 80.647, 81.276, 81.883, 82.468, 83.032, 83.574, 84.094, 84.593, 85.070, 85.526, 85.959, 86.371, 86.761, 87.129, 87.476, 87.800, 88.102, 88.382, 88.640, 88.875, 89.089, 89.280, 89.448, 89.595, 89.718, 89.820, 89.899, 89.955, 89.989, 90.000, 180.000, }\r\n\r\nMoveLUT.smallBase.talonF[3] = {}\r\nMoveLUT.smallBase.talonF[3].dataNum = 184\r\nMoveLUT.smallBase.talonF[3].length = 181.372\r\nMoveLUT.smallBase.talonF[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 7.999}, {0.226, 8.999}, {0.279, 9.998}, {0.337, 10.997}, {0.401, 11.996}, {0.471, 12.994}, {0.547, 13.993}, {0.628, 14.990}, {0.715, 15.987}, {0.807, 16.984}, {0.905, 17.979}, {1.009, 18.975}, {1.118, 19.969}, {1.233, 20.962}, {1.354, 21.954}, {1.480, 22.945}, {1.612, 23.935}, {1.749, 24.923}, {1.892, 25.910}, {2.041, 26.896}, {2.195, 27.879}, {2.354, 28.861}, {2.518, 29.841}, {2.688, 30.819}, {2.863, 31.794}, {3.044, 32.767}, {3.229, 33.738}, {3.420, 34.705}, {3.615, 35.671}, {3.816, 36.633}, {4.021, 37.592}, {4.231, 38.547}, {4.445, 39.500}, {4.666, 40.445}, {4.897, 41.388}, {5.139, 42.328}, {5.391, 43.265}, {5.654, 44.200}, {5.927, 45.131}, {6.210, 46.060}, {6.503, 46.985}, {6.807, 47.907}, {7.121, 48.825}, {7.445, 49.740}, {7.779, 50.652}, {8.123, 51.559}, {8.477, 52.463}, {8.841, 53.363}, {9.215, 54.259}, {9.599, 55.150}, {9.993, 56.037}, {10.396, 56.920}, {10.809, 57.799}, {11.232, 58.672}, {11.665, 59.541}, {12.107, 60.405}, {12.559, 61.264}, {13.020, 62.118}, {13.491, 62.967}, {13.971, 63.811}, {14.460, 64.649}, {14.958, 65.482}, {15.466, 66.310}, {15.983, 67.131}, {16.509, 67.947}, {17.044, 68.757}, {17.588, 69.561}, {18.140, 70.359}, {18.702, 71.151}, {19.272, 71.937}, {19.851, 72.716}, {20.438, 73.488}, {21.034, 74.255}, {21.638, 75.014}, {22.251, 75.767}, {22.872, 76.513}, {23.501, 77.252}, {24.139, 77.984}, {24.784, 78.709}, {25.438, 79.427}, {26.099, 80.138}, {26.768, 80.841}, {27.445, 81.537}, {28.129, 82.225}, {28.822, 82.905}, {29.521, 83.578}, {30.228, 84.243}, {30.942, 84.901}, {31.664, 85.550}, {32.393, 86.191}, {33.128, 86.824}, {33.871, 87.449}, {34.621, 88.066}, {35.377, 88.675}, {36.140, 89.275}, {36.909, 89.866}, {37.686, 90.449}, {38.468, 91.023}, {39.257, 91.589}, {40.052, 92.146}, {40.853, 92.694}, {41.660, 93.233}, {42.473, 93.764}, {43.292, 94.285}, {44.117, 94.797}, {44.947, 95.300}, {45.782, 95.794}, {46.624, 96.278}, {47.470, 96.753}, {48.322, 97.219}, {49.178, 97.675}, {50.040, 98.122}, {50.907, 98.559}, {51.778, 98.987}, {52.654, 99.405}, {53.535, 99.813}, {54.420, 100.212}, {55.309, 100.600}, {56.203, 100.979}, {57.101, 101.348}, {58.003, 101.707}, {58.909, 102.056}, {59.818, 102.395}, {60.731, 102.724}, {61.648, 103.042}, {62.569, 103.351}, {63.492, 103.649}, {64.419, 103.937}, {65.349, 104.215}, {66.282, 104.483}, {67.218, 104.740}, {68.157, 104.987}, {69.098, 105.223}, {70.042, 105.449}, {70.989, 105.666}, {71.936, 105.877}, {72.885, 106.083}, {73.835, 106.283}, {74.787, 106.479}, {75.740, 106.669}, {76.694, 106.855}, {77.650, 107.035}, {78.607, 107.210}, {79.566, 107.380}, {80.527, 107.545}, {81.489, 107.704}, {82.453, 107.859}, {83.418, 108.008}, {84.385, 108.152}, {85.353, 108.290}, {86.324, 108.423}, {87.295, 108.551}, {88.269, 108.674}, {89.244, 108.791}, {90.220, 108.903}, {91.199, 109.010}, {92.178, 109.111}, {93.159, 109.207}, {94.141, 109.297}, {95.125, 109.382}, {96.110, 109.461}, {97.097, 109.536}, {98.084, 109.604}, {99.073, 109.667}, {100.063, 109.725}, {101.053, 109.777}, {102.045, 109.824}, {103.037, 109.865}, {104.031, 109.901}, {105.025, 109.931}, {106.019, 109.956}, {107.014, 109.975}, {108.009, 109.989}, {109.004, 109.997}, {110.000, 110.000}, {110.000, 100.000},  }\r\nMoveLUT.smallBase.talonF[3].rotY = {0.000, 0.008, 0.032, 0.072, 0.128, 0.199, 0.287, 0.391, 0.510, 0.646, 0.798, 0.966, 1.150, 1.350, 1.567, 1.799, 2.048, 2.313, 2.595, 2.892, 3.206, 3.536, 3.882, 4.245, 4.623, 5.018, 5.429, 5.856, 6.299, 6.759, 7.234, 7.725, 8.231, 8.754, 9.292, 9.845, 10.414, 10.999, 11.598, 12.212, 12.842, 13.475, 14.109, 14.743, 15.377, 16.011, 16.644, 17.278, 17.912, 18.546, 19.180, 19.813, 20.447, 21.081, 21.715, 22.349, 22.982, 23.616, 24.250, 24.884, 25.518, 26.151, 26.785, 27.419, 28.053, 28.687, 29.320, 29.954, 30.588, 31.222, 31.856, 32.489, 33.123, 33.757, 34.391, 35.025, 35.659, 36.292, 36.926, 37.560, 38.194, 38.828, 39.461, 40.095, 40.729, 41.363, 41.997, 42.630, 43.264, 43.898, 44.532, 45.166, 45.799, 46.433, 47.067, 47.701, 48.335, 48.968, 49.602, 50.236, 50.870, 51.504, 52.137, 52.771, 53.405, 54.039, 54.673, 55.306, 55.940, 56.574, 57.208, 57.842, 58.475, 59.109, 59.743, 60.377, 61.011, 61.644, 62.278, 62.912, 63.546, 64.180, 64.813, 65.447, 66.081, 66.715, 67.349, 67.982, 68.616, 69.250, 69.884, 70.518, 71.151, 71.785, 72.419, 73.053, 73.687, 74.320, 74.954, 75.588, 76.222, 76.856, 77.485, 78.103, 78.704, 79.290, 79.859, 80.413, 80.951, 81.474, 81.981, 82.472, 82.948, 83.409, 83.854, 84.283, 84.697, 85.096, 85.479, 85.846, 86.198, 86.535, 86.856, 87.162, 87.452, 87.727, 87.986, 88.229, 88.457, 88.669, 88.866, 89.047, 89.212, 89.362, 89.496, 89.614, 89.716, 89.803, 89.874, 89.929, 89.968, 89.992, 90.000, 180.000, }\r\n\r\n\r\nMoveLUT.smallBase.talonB = {}\r\nMoveLUT.smallBase.talonB[1] = {}\r\nMoveLUT.smallBase.talonB[1].dataNum = 97\r\nMoveLUT.smallBase.talonB[1].length = 94.978\r\nMoveLUT.smallBase.talonB[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 4.999}, {0.259, 5.998}, {0.353, 6.997}, {0.462, 7.995}, {0.587, 8.991}, {0.726, 9.987}, {0.881, 10.981}, {1.052, 11.972}, {1.238, 12.962}, {1.440, 13.948}, {1.658, 14.931}, {1.892, 15.910}, {2.142, 16.885}, {2.407, 17.855}, {2.689, 18.818}, {2.987, 19.776}, {3.300, 20.726}, {3.628, 21.668}, {3.973, 22.602}, {4.332, 23.525}, {4.706, 24.438}, {5.094, 25.340}, {5.495, 26.230}, {5.908, 27.108}, {6.332, 27.971}, {6.766, 28.821}, {7.210, 29.655}, {7.664, 30.473}, {8.125, 31.275}, {8.591, 32.061}, {9.062, 32.829}, {9.535, 33.581}, {10.011, 34.314}, {10.486, 35.031}, {10.959, 35.730}, {11.430, 36.412}, {11.909, 37.078}, {12.406, 37.731}, {12.921, 38.369}, {13.455, 38.992}, {14.006, 39.599}, {14.574, 40.191}, {15.159, 40.766}, {15.760, 41.324}, {16.377, 41.865}, {17.009, 42.387}, {17.655, 42.892}, {18.316, 43.378}, {18.988, 43.849}, {19.665, 44.312}, {20.348, 44.770}, {21.037, 45.221}, {21.734, 45.667}, {22.437, 46.105}, {23.149, 46.537}, {23.869, 46.961}, {24.599, 47.378}, {25.338, 47.786}, {26.087, 48.186}, {26.846, 48.578}, {27.615, 48.960}, {28.394, 49.333}, {29.184, 49.696}, {29.985, 50.050}, {30.796, 50.393}, {31.618, 50.726}, {32.450, 51.047}, {33.293, 51.358}, {34.146, 51.658}, {35.010, 51.946}, {35.884, 52.222}, {36.767, 52.486}, {37.661, 52.738}, {38.564, 52.978}, {39.477, 53.204}, {40.398, 53.419}, {41.328, 53.620}, {42.266, 53.808}, {43.212, 53.982}, {44.166, 54.143}, {45.127, 54.291}, {46.094, 54.425}, {47.067, 54.545}, {48.046, 54.651}, {49.030, 54.744}, {50.018, 54.822}, {51.010, 54.886}, {52.005, 54.936}, {53.002, 54.971}, {54.001, 54.993}, {55.000, 55.000}, {55.000, 65.000}, }\r\nMoveLUT.smallBase.talonB[1].rotY = {0.000, 0.020, 0.082, 0.185, 0.329, 0.514, 0.742, 1.012, 1.325, 1.681, 2.081, 2.526, 3.015, 3.549, 4.129, 4.755, 5.428, 6.147, 6.914, 7.727, 8.588, 9.496, 10.452, 11.457, 12.511, 13.611, 14.756, 15.946, 17.180, 18.457, 19.774, 21.131, 22.532, 23.968, 25.439, 26.942, 28.475, 30.035, 31.620, 33.228, 34.856, 36.492, 38.129, 39.765, 41.401, 43.038, 44.674, 46.310, 47.947, 49.583, 51.220, 52.856, 54.492, 56.114, 57.698, 59.235, 60.730, 62.182, 63.594, 64.966, 66.301, 67.597, 68.858, 70.082, 71.270, 72.422, 73.540, 74.622, 75.670, 76.682, 77.660, 78.602, 79.509, 80.380, 81.216, 82.016, 82.779, 83.506, 84.196, 84.849, 85.465, 86.042, 86.582, 87.083, 87.546, 87.969, 88.353, 88.697, 89.001, 89.266, 89.490, 89.673, 89.816, 89.918, 89.980, 90.000, 180.000, }\r\n\r\nMoveLUT.smallBase.talonB[2] = {}\r\nMoveLUT.smallBase.talonB[2].dataNum = 141\r\nMoveLUT.smallBase.talonB[2].length = 138.175\r\nMoveLUT.smallBase.talonB[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 5.999}, {0.197, 6.999}, {0.257, 7.998}, {0.326, 8.997}, {0.402, 9.996}, {0.487, 10.994}, {0.580, 11.992}, {0.682, 12.988}, {0.791, 13.984}, {0.909, 14.979}, {1.035, 15.973}, {1.169, 16.966}, {1.312, 17.957}, {1.463, 18.946}, {1.622, 19.934}, {1.789, 20.920}, {1.965, 21.903}, {2.148, 22.884}, {2.340, 23.863}, {2.540, 24.838}, {2.747, 25.810}, {2.963, 26.779}, {3.186, 27.745}, {3.416, 28.706}, {3.655, 29.663}, {3.900, 30.616}, {4.152, 31.564}, {4.412, 32.507}, {4.678, 33.445}, {4.950, 34.378}, {5.229, 35.304}, {5.513, 36.225}, {5.804, 37.139}, {6.099, 38.047}, {6.400, 38.948}, {6.708, 39.836}, {7.030, 40.719}, {7.365, 41.596}, {7.715, 42.468}, {8.078, 43.335}, {8.455, 44.195}, {8.846, 45.050}, {9.250, 45.898}, {9.668, 46.739}, {10.099, 47.574}, {10.543, 48.402}, {11.000, 49.223}, {11.470, 50.036}, {11.953, 50.842}, {12.449, 51.640}, {12.957, 52.430}, {13.478, 53.212}, {14.011, 53.986}, {14.556, 54.751}, {15.114, 55.507}, {15.683, 56.255}, {16.264, 56.993}, {16.857, 57.722}, {17.461, 58.441}, {18.077, 59.151}, {18.703, 59.851}, {19.341, 60.541}, {19.990, 61.220}, {20.649, 61.890}, {21.319, 62.548}, {21.999, 63.196}, {22.690, 63.833}, {23.390, 64.460}, {24.101, 65.074}, {24.821, 65.678}, {25.550, 66.270}, {26.289, 66.851}, {27.037, 67.419}, {27.794, 67.976}, {28.559, 68.520}, {29.333, 69.053}, {30.116, 69.573}, {30.906, 70.081}, {31.705, 70.575}, {32.511, 71.058}, {33.325, 71.527}, {34.146, 71.983}, {34.974, 72.427}, {35.810, 72.857}, {36.652, 73.274}, {37.500, 73.677}, {38.355, 74.067}, {39.216, 74.443}, {40.083, 74.806}, {40.955, 75.155}, {41.833, 75.490}, {42.716, 75.810}, {43.604, 76.118}, {44.495, 76.415}, {45.389, 76.705}, {46.285, 76.990}, {47.183, 77.268}, {48.085, 77.539}, {48.989, 77.804}, {49.897, 78.062}, {50.807, 78.313}, {51.720, 78.558}, {52.637, 78.795}, {53.557, 79.026}, {54.480, 79.250}, {55.406, 79.466}, {56.336, 79.676}, {57.269, 79.878}, {58.206, 80.074}, {59.145, 80.261}, {60.088, 80.442}, {61.035, 80.615}, {61.984, 80.781}, {62.937, 80.940}, {63.893, 81.091}, {64.852, 81.234}, {65.813, 81.370}, {66.778, 81.498}, {67.746, 81.619}, {68.716, 81.732}, {69.689, 81.838}, {70.664, 81.935}, {71.641, 82.025}, {72.621, 82.107}, {73.603, 82.182}, {74.586, 82.249}, {75.572, 82.307}, {76.558, 82.358}, {77.547, 82.402}, {78.536, 82.437}, {79.526, 82.465}, {80.517, 82.484}, {81.508, 82.496}, {82.500, 82.500}, {82.500, 92.500}, }\r\nMoveLUT.smallBase.talonB[2].rotY = {0.000, 0.012, 0.046, 0.103, 0.184, 0.287, 0.414, 0.564, 0.737, 0.933, 1.153, 1.396, 1.663, 1.953, 2.267, 2.605, 2.967, 3.352, 3.761, 4.195, 4.652, 5.133, 5.638, 6.167, 6.719, 7.296, 7.896, 8.519, 9.166, 9.836, 10.529, 11.244, 11.982, 12.743, 13.525, 14.329, 15.155, 16.001, 16.869, 17.756, 18.664, 19.573, 20.482, 21.391, 22.300, 23.209, 24.118, 25.027, 25.936, 26.845, 27.754, 28.664, 29.573, 30.482, 31.391, 32.300, 33.209, 34.118, 35.027, 35.936, 36.845, 37.754, 38.664, 39.573, 40.482, 41.391, 42.300, 43.209, 44.118, 45.027, 45.936, 46.845, 47.754, 48.664, 49.573, 50.482, 51.391, 52.300, 53.209, 54.118, 55.027, 55.936, 56.845, 57.754, 58.664, 59.573, 60.482, 61.391, 62.300, 63.209, 64.118, 65.027, 65.936, 66.845, 67.754, 68.664, 69.573, 70.482, 71.390, 72.286, 73.159, 74.008, 74.834, 75.638, 76.420, 77.179, 77.917, 78.632, 79.326, 79.997, 80.647, 81.276, 81.883, 82.468, 83.032, 83.574, 84.094, 84.593, 85.070, 85.526, 85.959, 86.371, 86.761, 87.129, 87.476, 87.800, 88.102, 88.382, 88.640, 88.875, 89.089, 89.280, 89.448, 89.595, 89.718, 89.820, 89.899, 89.955, 89.989, 90.000, 180.000, }\r\n\r\nMoveLUT.smallBase.talonB[3] = {}\r\nMoveLUT.smallBase.talonB[3].dataNum = 184\r\nMoveLUT.smallBase.talonB[3].length = 181.372\r\nMoveLUT.smallBase.talonB[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 7.999}, {0.226, 8.999}, {0.279, 9.998}, {0.337, 10.997}, {0.401, 11.996}, {0.471, 12.994}, {0.547, 13.993}, {0.628, 14.990}, {0.715, 15.987}, {0.807, 16.984}, {0.905, 17.979}, {1.009, 18.975}, {1.118, 19.969}, {1.233, 20.962}, {1.354, 21.954}, {1.480, 22.945}, {1.612, 23.935}, {1.749, 24.923}, {1.892, 25.910}, {2.041, 26.896}, {2.195, 27.879}, {2.354, 28.861}, {2.518, 29.841}, {2.688, 30.819}, {2.863, 31.794}, {3.044, 32.767}, {3.229, 33.738}, {3.420, 34.705}, {3.615, 35.671}, {3.816, 36.633}, {4.021, 37.592}, {4.231, 38.547}, {4.445, 39.500}, {4.666, 40.445}, {4.897, 41.388}, {5.139, 42.328}, {5.391, 43.265}, {5.654, 44.200}, {5.927, 45.131}, {6.210, 46.060}, {6.503, 46.985}, {6.807, 47.907}, {7.121, 48.825}, {7.445, 49.740}, {7.779, 50.652}, {8.123, 51.559}, {8.477, 52.463}, {8.841, 53.363}, {9.215, 54.259}, {9.599, 55.150}, {9.993, 56.037}, {10.396, 56.920}, {10.809, 57.799}, {11.232, 58.672}, {11.665, 59.541}, {12.107, 60.405}, {12.559, 61.264}, {13.020, 62.118}, {13.491, 62.967}, {13.971, 63.811}, {14.460, 64.649}, {14.958, 65.482}, {15.466, 66.310}, {15.983, 67.131}, {16.509, 67.947}, {17.044, 68.757}, {17.588, 69.561}, {18.140, 70.359}, {18.702, 71.151}, {19.272, 71.937}, {19.851, 72.716}, {20.438, 73.488}, {21.034, 74.255}, {21.638, 75.014}, {22.251, 75.767}, {22.872, 76.513}, {23.501, 77.252}, {24.139, 77.984}, {24.784, 78.709}, {25.438, 79.427}, {26.099, 80.138}, {26.768, 80.841}, {27.445, 81.537}, {28.129, 82.225}, {28.822, 82.905}, {29.521, 83.578}, {30.228, 84.243}, {30.942, 84.901}, {31.664, 85.550}, {32.393, 86.191}, {33.128, 86.824}, {33.871, 87.449}, {34.621, 88.066}, {35.377, 88.675}, {36.140, 89.275}, {36.909, 89.866}, {37.686, 90.449}, {38.468, 91.023}, {39.257, 91.589}, {40.052, 92.146}, {40.853, 92.694}, {41.660, 93.233}, {42.473, 93.764}, {43.292, 94.285}, {44.117, 94.797}, {44.947, 95.300}, {45.782, 95.794}, {46.624, 96.278}, {47.470, 96.753}, {48.322, 97.219}, {49.178, 97.675}, {50.040, 98.122}, {50.907, 98.559}, {51.778, 98.987}, {52.654, 99.405}, {53.535, 99.813}, {54.420, 100.212}, {55.309, 100.600}, {56.203, 100.979}, {57.101, 101.348}, {58.003, 101.707}, {58.909, 102.056}, {59.818, 102.395}, {60.731, 102.724}, {61.648, 103.042}, {62.569, 103.351}, {63.492, 103.649}, {64.419, 103.937}, {65.349, 104.215}, {66.282, 104.483}, {67.218, 104.740}, {68.157, 104.987}, {69.098, 105.223}, {70.042, 105.449}, {70.989, 105.666}, {71.936, 105.877}, {72.885, 106.083}, {73.835, 106.283}, {74.787, 106.479}, {75.740, 106.669}, {76.694, 106.855}, {77.650, 107.035}, {78.607, 107.210}, {79.566, 107.380}, {80.527, 107.545}, {81.489, 107.704}, {82.453, 107.859}, {83.418, 108.008}, {84.385, 108.152}, {85.353, 108.290}, {86.324, 108.423}, {87.295, 108.551}, {88.269, 108.674}, {89.244, 108.791}, {90.220, 108.903}, {91.199, 109.010}, {92.178, 109.111}, {93.159, 109.207}, {94.141, 109.297}, {95.125, 109.382}, {96.110, 109.461}, {97.097, 109.536}, {98.084, 109.604}, {99.073, 109.667}, {100.063, 109.725}, {101.053, 109.777}, {102.045, 109.824}, {103.037, 109.865}, {104.031, 109.901}, {105.025, 109.931}, {106.019, 109.956}, {107.014, 109.975}, {108.009, 109.989}, {109.004, 109.997}, {110.000, 110.000}, {110.000, 120.000},  }\r\nMoveLUT.smallBase.talonB[3].rotY = {0.000, 0.008, 0.032, 0.072, 0.128, 0.199, 0.287, 0.391, 0.510, 0.646, 0.798, 0.966, 1.150, 1.350, 1.567, 1.799, 2.048, 2.313, 2.595, 2.892, 3.206, 3.536, 3.882, 4.245, 4.623, 5.018, 5.429, 5.856, 6.299, 6.759, 7.234, 7.725, 8.231, 8.754, 9.292, 9.845, 10.414, 10.999, 11.598, 12.212, 12.842, 13.475, 14.109, 14.743, 15.377, 16.011, 16.644, 17.278, 17.912, 18.546, 19.180, 19.813, 20.447, 21.081, 21.715, 22.349, 22.982, 23.616, 24.250, 24.884, 25.518, 26.151, 26.785, 27.419, 28.053, 28.687, 29.320, 29.954, 30.588, 31.222, 31.856, 32.489, 33.123, 33.757, 34.391, 35.025, 35.659, 36.292, 36.926, 37.560, 38.194, 38.828, 39.461, 40.095, 40.729, 41.363, 41.997, 42.630, 43.264, 43.898, 44.532, 45.166, 45.799, 46.433, 47.067, 47.701, 48.335, 48.968, 49.602, 50.236, 50.870, 51.504, 52.137, 52.771, 53.405, 54.039, 54.673, 55.306, 55.940, 56.574, 57.208, 57.842, 58.475, 59.109, 59.743, 60.377, 61.011, 61.644, 62.278, 62.912, 63.546, 64.180, 64.813, 65.447, 66.081, 66.715, 67.349, 67.982, 68.616, 69.250, 69.884, 70.518, 71.151, 71.785, 72.419, 73.053, 73.687, 74.320, 74.954, 75.588, 76.222, 76.856, 77.485, 78.103, 78.704, 79.290, 79.859, 80.413, 80.951, 81.474, 81.981, 82.472, 82.948, 83.409, 83.854, 84.283, 84.697, 85.096, 85.479, 85.846, 86.198, 86.535, 86.856, 87.162, 87.452, 87.727, 87.986, 88.229, 88.457, 88.669, 88.866, 89.047, 89.212, 89.362, 89.496, 89.614, 89.716, 89.803, 89.874, 89.929, 89.968, 89.992, 90.000, 180.000, }\r\n\r\nMoveLUT.mediumBase.talon = {}\r\nMoveLUT.mediumBase.talon[1] = {}\r\nMoveLUT.mediumBase.talon[1].dataNum = 117\r\nMoveLUT.mediumBase.talon[1].length = 114.978\r\nMoveLUT.mediumBase.talon[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 4.999}, {0.259, 5.999}, {0.353, 6.998}, {0.463, 7.996}, {0.588, 8.994}, {0.728, 9.991}, {0.883, 10.987}, {1.055, 11.981}, {1.243, 12.974}, {1.448, 13.965}, {1.669, 14.954}, {1.907, 15.939}, {2.162, 16.922}, {2.435, 17.901}, {2.725, 18.876}, {3.033, 19.846}, {3.361, 20.811}, {3.708, 21.770}, {4.074, 22.722}, {4.459, 23.667}, {4.862, 24.603}, {5.285, 25.531}, {5.729, 26.448}, {6.192, 27.354}, {6.675, 28.248}, {7.176, 29.129}, {7.698, 29.996}, {8.239, 30.847}, {8.797, 31.681}, {9.373, 32.498}, {9.970, 33.295}, {10.580, 34.072}, {11.206, 34.828}, {11.849, 35.561}, {12.503, 36.270}, {13.170, 36.955}, {13.848, 37.613}, {14.531, 38.246}, {15.225, 38.850}, {15.920, 39.428}, {16.618, 39.976}, {17.317, 40.497}, {18.000, 41.000}, {18.648, 41.500}, {19.261, 42.000}, {19.843, 42.500}, {20.396, 43.000}, {20.922, 43.500}, {21.424, 44.000}, {21.903, 44.500}, {22.361, 45.000}, {22.798, 45.500}, {23.216, 46.000}, {23.617, 46.500}, {24.000, 47.000}, {24.367, 47.500}, {24.733, 48.000}, {25.111, 48.499}, {25.504, 48.998}, {25.911, 49.495}, {26.332, 49.991}, {26.767, 50.484}, {27.217, 50.975}, {27.682, 51.464}, {28.162, 51.949}, {28.657, 52.430}, {29.168, 52.908}, {29.694, 53.381}, {30.235, 53.849}, {30.792, 54.312}, {31.365, 54.770}, {31.953, 55.221}, {32.556, 55.667}, {33.175, 56.105}, {33.809, 56.537}, {34.459, 56.961}, {35.124, 57.378}, {35.804, 57.786}, {36.499, 58.186}, {37.210, 58.578}, {37.934, 58.960}, {38.674, 59.333}, {39.428, 59.696}, {40.196, 60.050}, {40.978, 60.393}, {41.774, 60.726}, {42.583, 61.047}, {43.405, 61.358}, {44.241, 61.658}, {45.089, 61.946}, {45.949, 62.222}, {46.821, 62.486}, {47.704, 62.738}, {48.598, 62.978}, {49.503, 63.204}, {50.419, 63.419}, {51.344, 63.620}, {52.278, 63.808}, {53.221, 63.982}, {54.172, 64.143}, {55.131, 64.291}, {56.097, 64.425}, {57.069, 64.545}, {58.047, 64.651}, {59.031, 64.744}, {60.018, 64.822}, {61.010, 64.886}, {62.005, 64.936}, {63.002, 64.971}, {64.001, 64.993}, {65.000, 65.000}, {65.000, 65.000}, }\r\nMoveLUT.mediumBase.talon[1].rotY = {0.000, 0.014, 0.055, 0.123, 0.219, 0.343, 0.495, 0.675, 0.884, 1.122, 1.390, 1.688, 2.016, 2.375, 2.766, 3.188, 3.644, 4.132, 4.655, 5.212, 5.803, 6.432, 7.100, 7.805, 8.547, 9.327, 10.146, 11.008, 11.912, 12.856, 13.838, 14.867, 15.940, 17.052, 18.207, 19.410, 20.651, 21.935, 23.265, 24.630, 26.040, 27.489, 28.971, 30.497, 32.050, 33.638, 35.256, 36.870, 38.433, 39.945, 41.410, 42.833, 44.220, 45.573, 46.895, 48.190, 49.458, 50.704, 51.927, 53.130, 54.315, 55.481, 56.631, 57.764, 58.880, 59.979, 61.062, 62.129, 63.179, 64.212, 65.229, 66.230, 67.213, 68.180, 69.129, 70.062, 70.977, 71.874, 72.753, 73.614, 74.457, 75.281, 76.086, 76.872, 77.639, 78.385, 79.112, 79.817, 80.502, 81.166, 81.809, 82.429, 83.028, 83.604, 84.157, 84.687, 85.193, 85.676, 86.135, 86.569, 86.978, 87.363, 87.722, 88.056, 88.364, 88.646, 88.902, 89.131, 89.334, 89.510, 89.660, 89.782, 89.877, 89.945, 89.986, 90.000, 180.000, }\r\n\r\n\r\nMoveLUT.mediumBase.talon[2] = {}\r\nMoveLUT.mediumBase.talon[2].dataNum = 161\r\nMoveLUT.mediumBase.talon[2].length = 158.175\r\nMoveLUT.mediumBase.talon[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 6.000}, {0.197, 6.999}, {0.257, 7.999}, {0.326, 8.998}, {0.403, 9.997}, {0.488, 10.996}, {0.581, 11.994}, {0.682, 12.992}, {0.792, 13.990}, {0.911, 14.986}, {1.037, 15.982}, {1.173, 16.977}, {1.316, 17.971}, {1.469, 18.964}, {1.629, 19.956}, {1.799, 20.946}, {1.977, 21.935}, {2.163, 22.922}, {2.358, 23.907}, {2.562, 24.890}, {2.775, 25.871}, {2.996, 26.850}, {3.225, 27.826}, {3.464, 28.799}, {3.711, 29.770}, {3.967, 30.737}, {4.231, 31.700}, {4.504, 32.660}, {4.785, 33.616}, {5.074, 34.568}, {5.371, 35.515}, {5.676, 36.458}, {5.989, 37.396}, {6.310, 38.329}, {6.639, 39.256}, {6.974, 40.178}, {7.317, 41.094}, {7.667, 42.004}, {8.024, 42.907}, {8.388, 43.804}, {8.758, 44.693}, {9.133, 45.576}, {9.514, 46.451}, {9.901, 47.319}, {10.292, 48.179}, {10.688, 49.031}, {11.089, 49.876}, {11.493, 50.711}, {11.901, 51.539}, {12.312, 52.357}, {12.725, 53.167}, {13.142, 53.968}, {13.560, 54.761}, {13.980, 55.544}, {14.400, 56.318}, {14.824, 57.078}, {15.260, 57.831}, {15.707, 58.577}, {16.166, 59.316}, {16.637, 60.047}, {17.120, 60.771}, {17.614, 61.487}, {18.119, 62.195}, {18.635, 62.895}, {19.163, 63.587}, {19.701, 64.270}, {20.250, 64.945}, {20.810, 65.611}, {21.380, 66.268}, {21.961, 66.916}, {22.552, 67.554}, {23.153, 68.184}, {23.763, 68.803}, {24.384, 69.413}, {25.014, 70.013}, {25.654, 70.602}, {26.302, 71.182}, {26.960, 71.751}, {27.627, 72.309}, {28.303, 72.857}, {28.987, 73.395}, {29.680, 73.921}, {30.381, 74.436}, {31.090, 74.940}, {31.807, 75.433}, {32.532, 75.914}, {33.264, 76.384}, {34.003, 76.842}, {34.750, 77.288}, {35.504, 77.722}, {36.264, 78.145}, {37.029, 78.560}, {37.796, 78.971}, {38.566, 79.377}, {39.340, 79.778}, {40.116, 80.175}, {40.896, 80.567}, {41.680, 80.955}, {42.468, 81.337}, {43.260, 81.714}, {44.056, 82.087}, {44.856, 82.453}, {45.660, 82.815}, {46.469, 83.171}, {47.283, 83.522}, {48.101, 83.867}, {48.924, 84.206}, {49.752, 84.540}, {50.584, 84.867}, {51.421, 85.189}, {52.263, 85.505}, {53.111, 85.814}, {53.963, 86.118}, {54.820, 86.415}, {55.682, 86.705}, {56.548, 86.990}, {57.420, 87.268}, {58.297, 87.539}, {59.179, 87.804}, {60.065, 88.062}, {60.956, 88.313}, {61.853, 88.558}, {62.753, 88.795}, {63.659, 89.026}, {64.569, 89.250}, {65.484, 89.466}, {66.403, 89.676}, {67.327, 89.878}, {68.255, 90.074}, {69.187, 90.261}, {70.124, 90.442}, {71.064, 90.615}, {72.009, 90.781}, {72.957, 90.940}, {73.909, 91.091}, {74.865, 91.234}, {75.824, 91.370}, {76.787, 91.498}, {77.752, 91.619}, {78.721, 91.732}, {79.692, 91.838}, {80.666, 91.935}, {81.643, 92.025}, {82.622, 92.107}, {83.604, 92.182}, {84.587, 92.249}, {85.572, 92.307}, {86.559, 92.358}, {87.547, 92.402}, {88.536, 92.437}, {89.526, 92.465}, {90.517, 92.484}, {91.508, 92.496}, {92.500, 92.500}, {92.500, 92.500}, }\r\nMoveLUT.mediumBase.talon[2].rotY = {0.000, 0.008, 0.031, 0.069, 0.123, 0.192, 0.276, 0.376, 0.491, 0.622, 0.769, 0.931, 1.109, 1.303, 1.513, 1.740, 1.982, 2.240, 2.515, 2.806, 3.113, 3.437, 3.778, 4.135, 4.509, 4.899, 5.307, 5.731, 6.172, 6.630, 7.105, 7.598, 8.107, 8.634, 9.177, 9.737, 10.314, 10.907, 11.516, 12.142, 12.784, 13.443, 14.117, 14.808, 15.514, 16.236, 16.973, 17.724, 18.490, 19.270, 20.064, 20.872, 21.692, 22.525, 23.371, 24.229, 25.099, 25.980, 26.872, 27.774, 28.686, 29.595, 30.504, 31.414, 32.323, 33.232, 34.141, 35.050, 35.959, 36.868, 37.777, 38.686, 39.595, 40.504, 41.414, 42.323, 43.232, 44.141, 45.050, 45.959, 46.868, 47.777, 48.686, 49.595, 50.504, 51.414, 52.323, 53.232, 54.141, 55.050, 55.959, 56.868, 57.777, 58.686, 59.595, 60.504, 61.413, 62.311, 63.193, 64.059, 64.909, 65.743, 66.562, 67.366, 68.155, 68.929, 69.689, 70.434, 71.166, 71.883, 72.586, 73.275, 73.951, 74.612, 75.260, 75.895, 76.516, 77.123, 77.717, 78.297, 78.863, 79.416, 79.956, 80.482, 80.994, 81.493, 81.978, 82.449, 82.907, 83.350, 83.780, 84.196, 84.599, 84.987, 85.361, 85.721, 86.067, 86.398, 86.716, 87.019, 87.307, 87.582, 87.841, 88.087, 88.317, 88.533, 88.735, 88.921, 89.093, 89.250, 89.393, 89.520, 89.632, 89.730, 89.812, 89.880, 89.932, 89.970, 89.992, 90.000, 180.000, }\r\n\r\nMoveLUT.mediumBase.talon[3] = {}\r\nMoveLUT.mediumBase.talon[3].dataNum = 204\r\nMoveLUT.mediumBase.talon[3].length = 201.372\r\nMoveLUT.mediumBase.talon[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 7.999}, {0.226, 8.999}, {0.279, 9.999}, {0.337, 10.998}, {0.402, 11.997}, {0.472, 12.996}, {0.547, 13.995}, {0.629, 14.993}, {0.716, 15.991}, {0.808, 16.989}, {0.907, 17.986}, {1.011, 18.983}, {1.121, 19.979}, {1.237, 20.975}, {1.358, 21.969}, {1.485, 22.963}, {1.618, 23.956}, {1.757, 24.949}, {1.901, 25.940}, {2.051, 26.930}, {2.207, 27.919}, {2.369, 28.906}, {2.536, 29.893}, {2.710, 30.877}, {2.888, 31.861}, {3.073, 32.842}, {3.263, 33.822}, {3.459, 34.800}, {3.660, 35.776}, {3.867, 36.750}, {4.080, 37.721}, {4.298, 38.691}, {4.521, 39.657}, {4.750, 40.622}, {4.984, 41.583}, {5.223, 42.542}, {5.467, 43.498}, {5.717, 44.450}, {5.971, 45.400}, {6.231, 46.346}, {6.495, 47.288}, {6.764, 48.227}, {7.038, 49.163}, {7.316, 50.094}, {7.599, 51.022}, {7.885, 51.945}, {8.176, 52.864}, {8.471, 53.779}, {8.770, 54.689}, {9.072, 55.595}, {9.379, 56.496}, {9.688, 57.393}, {10.001, 58.284}, {10.318, 59.167}, {10.646, 60.047}, {10.983, 60.923}, {11.330, 61.795}, {11.687, 62.663}, {12.053, 63.528}, {12.428, 64.388}, {12.813, 65.244}, {13.208, 66.095}, {13.612, 66.943}, {14.025, 67.785}, {14.448, 68.623}, {14.880, 69.457}, {15.321, 70.285}, {15.771, 71.109}, {16.230, 71.928}, {16.699, 72.741}, {17.176, 73.549}, {17.662, 74.352}, {18.157, 75.150}, {18.661, 75.942}, {19.174, 76.728}, {19.695, 77.508}, {20.225, 78.283}, {20.763, 79.052}, {21.310, 79.815}, {21.865, 80.572}, {22.429, 81.322}, {23.000, 82.067}, {23.581, 82.805}, {24.169, 83.536}, {24.765, 84.261}, {25.369, 84.979}, {25.981, 85.691}, {26.601, 86.396}, {27.229, 87.094}, {27.864, 87.784}, {28.507, 88.468}, {29.158, 89.145}, {29.816, 89.814}, {30.481, 90.476}, {31.154, 91.131}, {31.834, 91.778}, {32.520, 92.418}, {33.214, 93.050}, {33.915, 93.674}, {34.623, 94.291}, {35.338, 94.899}, {36.059, 95.500}, {36.787, 96.093}, {37.521, 96.677}, {38.262, 97.254}, {39.009, 97.822}, {39.762, 98.382}, {40.522, 98.933}, {41.287, 99.476}, {42.059, 100.011}, {42.836, 100.537}, {43.619, 101.054}, {44.408, 101.563}, {45.203, 102.063}, {46.003, 102.554}, {46.808, 103.036}, {47.618, 103.510}, {48.434, 103.974}, {49.255, 104.429}, {50.081, 104.875}, {50.911, 105.312}, {51.747, 105.740}, {52.587, 106.159}, {53.432, 106.568}, {54.281, 106.968}, {55.135, 107.358}, {55.992, 107.739}, {56.854, 108.110}, {57.720, 108.472}, {58.590, 108.825}, {59.464, 109.167}, {60.342, 109.500}, {61.223, 109.823}, {62.107, 110.138}, {62.994, 110.447}, {63.882, 110.751}, {64.772, 111.051}, {65.663, 111.347}, {66.557, 111.638}, {67.452, 111.925}, {68.350, 112.207}, {69.249, 112.485}, {70.151, 112.758}, {71.055, 113.027}, {71.961, 113.291}, {72.869, 113.550}, {73.780, 113.804}, {74.693, 114.054}, {75.608, 114.299}, {76.525, 114.539}, {77.445, 114.774}, {78.368, 115.005}, {79.292, 115.230}, {80.220, 115.451}, {81.149, 115.666}, {82.081, 115.877}, {83.016, 116.083}, {83.952, 116.283}, {84.892, 116.479}, {85.833, 116.669}, {86.778, 116.855}, {87.724, 117.035}, {88.673, 117.210}, {89.624, 117.380}, {90.577, 117.545}, {91.533, 117.704}, {92.491, 117.859}, {93.451, 118.008}, {94.413, 118.152}, {95.378, 118.290}, {96.344, 118.423}, {97.313, 118.551}, {98.284, 118.674}, {99.256, 118.791}, {100.230, 118.903}, {101.207, 119.010}, {102.185, 119.111}, {103.164, 119.207}, {104.146, 119.297}, {105.128, 119.382}, {106.113, 119.461}, {107.098, 119.536}, {108.086, 119.604}, {109.074, 119.667}, {110.063, 119.725}, {111.054, 119.777}, {112.045, 119.824}, {113.038, 119.865}, {114.031, 119.901}, {115.025, 119.931}, {116.019, 119.956}, {117.014, 119.975}, {118.009, 119.989}, {119.004, 119.997}, {120.000, 120.000}, {120.000, 120.000}, }\r\nMoveLUT.mediumBase.talon[3].rotY = {0.000, 0.005, 0.021, 0.048, 0.085, 0.133, 0.191, 0.260, 0.340, 0.431, 0.532, 0.644, 0.767, 0.901, 1.045, 1.201, 1.367, 1.544, 1.732, 1.931, 2.141, 2.362, 2.594, 2.838, 3.092, 3.357, 3.633, 3.921, 4.220, 4.529, 4.850, 5.182, 5.525, 5.879, 6.245, 6.621, 7.008, 7.407, 7.816, 8.236, 8.667, 9.109, 9.562, 10.026, 10.500, 10.985, 11.481, 11.987, 12.504, 13.031, 13.568, 14.115, 14.672, 15.239, 15.816, 16.402, 16.998, 17.603, 18.217, 18.840, 19.473, 20.106, 20.740, 21.374, 22.008, 22.642, 23.275, 23.909, 24.543, 25.177, 25.811, 26.444, 27.078, 27.712, 28.346, 28.980, 29.613, 30.247, 30.881, 31.515, 32.149, 32.782, 33.416, 34.050, 34.684, 35.318, 35.951, 36.585, 37.219, 37.853, 38.487, 39.120, 39.754, 40.388, 41.022, 41.656, 42.289, 42.923, 43.557, 44.191, 44.825, 45.459, 46.092, 46.726, 47.360, 47.994, 48.628, 49.261, 49.895, 50.529, 51.163, 51.797, 52.430, 53.064, 53.698, 54.332, 54.966, 55.599, 56.233, 56.867, 57.501, 58.135, 58.768, 59.402, 60.036, 60.670, 61.304, 61.937, 62.571, 63.205, 63.839, 64.473, 65.106, 65.740, 66.374, 67.008, 67.642, 68.275, 68.909, 69.543, 70.177, 70.808, 71.432, 72.044, 72.645, 73.236, 73.816, 74.386, 74.945, 75.493, 76.031, 76.559, 77.077, 77.584, 78.081, 78.568, 79.045, 79.511, 79.968, 80.415, 80.851, 81.278, 81.694, 82.100, 82.497, 82.883, 83.259, 83.625, 83.982, 84.328, 84.664, 84.990, 85.306, 85.611, 85.907, 86.192, 86.468, 86.733, 86.988, 87.232, 87.467, 87.691, 87.905, 88.108, 88.302, 88.485, 88.657, 88.820, 88.971, 89.113, 89.244, 89.365, 89.475, 89.574, 89.664, 89.742, 89.811, 89.869, 89.916, 89.953, 89.979, 89.995, 90.000, 180.000, }\r\n\r\nMoveLUT.mediumBase.talonF = {}\r\nMoveLUT.mediumBase.talonF[1] = {}\r\nMoveLUT.mediumBase.talonF[1].dataNum = 117\r\nMoveLUT.mediumBase.talonF[1].length = 114.978\r\nMoveLUT.mediumBase.talonF[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 4.999}, {0.259, 5.999}, {0.353, 6.998}, {0.463, 7.996}, {0.588, 8.994}, {0.728, 9.991}, {0.883, 10.987}, {1.055, 11.981}, {1.243, 12.974}, {1.448, 13.965}, {1.669, 14.954}, {1.907, 15.939}, {2.162, 16.922}, {2.435, 17.901}, {2.725, 18.876}, {3.033, 19.846}, {3.361, 20.811}, {3.708, 21.770}, {4.074, 22.722}, {4.459, 23.667}, {4.862, 24.603}, {5.285, 25.531}, {5.729, 26.448}, {6.192, 27.354}, {6.675, 28.248}, {7.176, 29.129}, {7.698, 29.996}, {8.239, 30.847}, {8.797, 31.681}, {9.373, 32.498}, {9.970, 33.295}, {10.580, 34.072}, {11.206, 34.828}, {11.849, 35.561}, {12.503, 36.270}, {13.170, 36.955}, {13.848, 37.613}, {14.531, 38.246}, {15.225, 38.850}, {15.920, 39.428}, {16.618, 39.976}, {17.317, 40.497}, {18.000, 41.000}, {18.648, 41.500}, {19.261, 42.000}, {19.843, 42.500}, {20.396, 43.000}, {20.922, 43.500}, {21.424, 44.000}, {21.903, 44.500}, {22.361, 45.000}, {22.798, 45.500}, {23.216, 46.000}, {23.617, 46.500}, {24.000, 47.000}, {24.367, 47.500}, {24.733, 48.000}, {25.111, 48.499}, {25.504, 48.998}, {25.911, 49.495}, {26.332, 49.991}, {26.767, 50.484}, {27.217, 50.975}, {27.682, 51.464}, {28.162, 51.949}, {28.657, 52.430}, {29.168, 52.908}, {29.694, 53.381}, {30.235, 53.849}, {30.792, 54.312}, {31.365, 54.770}, {31.953, 55.221}, {32.556, 55.667}, {33.175, 56.105}, {33.809, 56.537}, {34.459, 56.961}, {35.124, 57.378}, {35.804, 57.786}, {36.499, 58.186}, {37.210, 58.578}, {37.934, 58.960}, {38.674, 59.333}, {39.428, 59.696}, {40.196, 60.050}, {40.978, 60.393}, {41.774, 60.726}, {42.583, 61.047}, {43.405, 61.358}, {44.241, 61.658}, {45.089, 61.946}, {45.949, 62.222}, {46.821, 62.486}, {47.704, 62.738}, {48.598, 62.978}, {49.503, 63.204}, {50.419, 63.419}, {51.344, 63.620}, {52.278, 63.808}, {53.221, 63.982}, {54.172, 64.143}, {55.131, 64.291}, {56.097, 64.425}, {57.069, 64.545}, {58.047, 64.651}, {59.031, 64.744}, {60.018, 64.822}, {61.010, 64.886}, {62.005, 64.936}, {63.002, 64.971}, {64.001, 64.993}, {65.000, 65.000}, {65.000, 55.000}, }\r\nMoveLUT.mediumBase.talonF[1].rotY = {0.000, 0.014, 0.055, 0.123, 0.219, 0.343, 0.495, 0.675, 0.884, 1.122, 1.390, 1.688, 2.016, 2.375, 2.766, 3.188, 3.644, 4.132, 4.655, 5.212, 5.803, 6.432, 7.100, 7.805, 8.547, 9.327, 10.146, 11.008, 11.912, 12.856, 13.838, 14.867, 15.940, 17.052, 18.207, 19.410, 20.651, 21.935, 23.265, 24.630, 26.040, 27.489, 28.971, 30.497, 32.050, 33.638, 35.256, 36.870, 38.433, 39.945, 41.410, 42.833, 44.220, 45.573, 46.895, 48.190, 49.458, 50.704, 51.927, 53.130, 54.315, 55.481, 56.631, 57.764, 58.880, 59.979, 61.062, 62.129, 63.179, 64.212, 65.229, 66.230, 67.213, 68.180, 69.129, 70.062, 70.977, 71.874, 72.753, 73.614, 74.457, 75.281, 76.086, 76.872, 77.639, 78.385, 79.112, 79.817, 80.502, 81.166, 81.809, 82.429, 83.028, 83.604, 84.157, 84.687, 85.193, 85.676, 86.135, 86.569, 86.978, 87.363, 87.722, 88.056, 88.364, 88.646, 88.902, 89.131, 89.334, 89.510, 89.660, 89.782, 89.877, 89.945, 89.986, 90.000, 180.000, }\r\n\r\n\r\nMoveLUT.mediumBase.talonF[2] = {}\r\nMoveLUT.mediumBase.talonF[2].dataNum = 161\r\nMoveLUT.mediumBase.talonF[2].length = 158.175\r\nMoveLUT.mediumBase.talonF[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 6.000}, {0.197, 6.999}, {0.257, 7.999}, {0.326, 8.998}, {0.403, 9.997}, {0.488, 10.996}, {0.581, 11.994}, {0.682, 12.992}, {0.792, 13.990}, {0.911, 14.986}, {1.037, 15.982}, {1.173, 16.977}, {1.316, 17.971}, {1.469, 18.964}, {1.629, 19.956}, {1.799, 20.946}, {1.977, 21.935}, {2.163, 22.922}, {2.358, 23.907}, {2.562, 24.890}, {2.775, 25.871}, {2.996, 26.850}, {3.225, 27.826}, {3.464, 28.799}, {3.711, 29.770}, {3.967, 30.737}, {4.231, 31.700}, {4.504, 32.660}, {4.785, 33.616}, {5.074, 34.568}, {5.371, 35.515}, {5.676, 36.458}, {5.989, 37.396}, {6.310, 38.329}, {6.639, 39.256}, {6.974, 40.178}, {7.317, 41.094}, {7.667, 42.004}, {8.024, 42.907}, {8.388, 43.804}, {8.758, 44.693}, {9.133, 45.576}, {9.514, 46.451}, {9.901, 47.319}, {10.292, 48.179}, {10.688, 49.031}, {11.089, 49.876}, {11.493, 50.711}, {11.901, 51.539}, {12.312, 52.357}, {12.725, 53.167}, {13.142, 53.968}, {13.560, 54.761}, {13.980, 55.544}, {14.400, 56.318}, {14.824, 57.078}, {15.260, 57.831}, {15.707, 58.577}, {16.166, 59.316}, {16.637, 60.047}, {17.120, 60.771}, {17.614, 61.487}, {18.119, 62.195}, {18.635, 62.895}, {19.163, 63.587}, {19.701, 64.270}, {20.250, 64.945}, {20.810, 65.611}, {21.380, 66.268}, {21.961, 66.916}, {22.552, 67.554}, {23.153, 68.184}, {23.763, 68.803}, {24.384, 69.413}, {25.014, 70.013}, {25.654, 70.602}, {26.302, 71.182}, {26.960, 71.751}, {27.627, 72.309}, {28.303, 72.857}, {28.987, 73.395}, {29.680, 73.921}, {30.381, 74.436}, {31.090, 74.940}, {31.807, 75.433}, {32.532, 75.914}, {33.264, 76.384}, {34.003, 76.842}, {34.750, 77.288}, {35.504, 77.722}, {36.264, 78.145}, {37.029, 78.560}, {37.796, 78.971}, {38.566, 79.377}, {39.340, 79.778}, {40.116, 80.175}, {40.896, 80.567}, {41.680, 80.955}, {42.468, 81.337}, {43.260, 81.714}, {44.056, 82.087}, {44.856, 82.453}, {45.660, 82.815}, {46.469, 83.171}, {47.283, 83.522}, {48.101, 83.867}, {48.924, 84.206}, {49.752, 84.540}, {50.584, 84.867}, {51.421, 85.189}, {52.263, 85.505}, {53.111, 85.814}, {53.963, 86.118}, {54.820, 86.415}, {55.682, 86.705}, {56.548, 86.990}, {57.420, 87.268}, {58.297, 87.539}, {59.179, 87.804}, {60.065, 88.062}, {60.956, 88.313}, {61.853, 88.558}, {62.753, 88.795}, {63.659, 89.026}, {64.569, 89.250}, {65.484, 89.466}, {66.403, 89.676}, {67.327, 89.878}, {68.255, 90.074}, {69.187, 90.261}, {70.124, 90.442}, {71.064, 90.615}, {72.009, 90.781}, {72.957, 90.940}, {73.909, 91.091}, {74.865, 91.234}, {75.824, 91.370}, {76.787, 91.498}, {77.752, 91.619}, {78.721, 91.732}, {79.692, 91.838}, {80.666, 91.935}, {81.643, 92.025}, {82.622, 92.107}, {83.604, 92.182}, {84.587, 92.249}, {85.572, 92.307}, {86.559, 92.358}, {87.547, 92.402}, {88.536, 92.437}, {89.526, 92.465}, {90.517, 92.484}, {91.508, 92.496}, {92.500, 92.500}, {92.500, 82.500}, }\r\nMoveLUT.mediumBase.talonF[2].rotY = {0.000, 0.008, 0.031, 0.069, 0.123, 0.192, 0.276, 0.376, 0.491, 0.622, 0.769, 0.931, 1.109, 1.303, 1.513, 1.740, 1.982, 2.240, 2.515, 2.806, 3.113, 3.437, 3.778, 4.135, 4.509, 4.899, 5.307, 5.731, 6.172, 6.630, 7.105, 7.598, 8.107, 8.634, 9.177, 9.737, 10.314, 10.907, 11.516, 12.142, 12.784, 13.443, 14.117, 14.808, 15.514, 16.236, 16.973, 17.724, 18.490, 19.270, 20.064, 20.872, 21.692, 22.525, 23.371, 24.229, 25.099, 25.980, 26.872, 27.774, 28.686, 29.595, 30.504, 31.414, 32.323, 33.232, 34.141, 35.050, 35.959, 36.868, 37.777, 38.686, 39.595, 40.504, 41.414, 42.323, 43.232, 44.141, 45.050, 45.959, 46.868, 47.777, 48.686, 49.595, 50.504, 51.414, 52.323, 53.232, 54.141, 55.050, 55.959, 56.868, 57.777, 58.686, 59.595, 60.504, 61.413, 62.311, 63.193, 64.059, 64.909, 65.743, 66.562, 67.366, 68.155, 68.929, 69.689, 70.434, 71.166, 71.883, 72.586, 73.275, 73.951, 74.612, 75.260, 75.895, 76.516, 77.123, 77.717, 78.297, 78.863, 79.416, 79.956, 80.482, 80.994, 81.493, 81.978, 82.449, 82.907, 83.350, 83.780, 84.196, 84.599, 84.987, 85.361, 85.721, 86.067, 86.398, 86.716, 87.019, 87.307, 87.582, 87.841, 88.087, 88.317, 88.533, 88.735, 88.921, 89.093, 89.250, 89.393, 89.520, 89.632, 89.730, 89.812, 89.880, 89.932, 89.970, 89.992, 90.000, 180.000, }\r\n\r\nMoveLUT.mediumBase.talonF[3] = {}\r\nMoveLUT.mediumBase.talonF[3].dataNum = 204\r\nMoveLUT.mediumBase.talonF[3].length = 201.372\r\nMoveLUT.mediumBase.talonF[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 7.999}, {0.226, 8.999}, {0.279, 9.999}, {0.337, 10.998}, {0.402, 11.997}, {0.472, 12.996}, {0.547, 13.995}, {0.629, 14.993}, {0.716, 15.991}, {0.808, 16.989}, {0.907, 17.986}, {1.011, 18.983}, {1.121, 19.979}, {1.237, 20.975}, {1.358, 21.969}, {1.485, 22.963}, {1.618, 23.956}, {1.757, 24.949}, {1.901, 25.940}, {2.051, 26.930}, {2.207, 27.919}, {2.369, 28.906}, {2.536, 29.893}, {2.710, 30.877}, {2.888, 31.861}, {3.073, 32.842}, {3.263, 33.822}, {3.459, 34.800}, {3.660, 35.776}, {3.867, 36.750}, {4.080, 37.721}, {4.298, 38.691}, {4.521, 39.657}, {4.750, 40.622}, {4.984, 41.583}, {5.223, 42.542}, {5.467, 43.498}, {5.717, 44.450}, {5.971, 45.400}, {6.231, 46.346}, {6.495, 47.288}, {6.764, 48.227}, {7.038, 49.163}, {7.316, 50.094}, {7.599, 51.022}, {7.885, 51.945}, {8.176, 52.864}, {8.471, 53.779}, {8.770, 54.689}, {9.072, 55.595}, {9.379, 56.496}, {9.688, 57.393}, {10.001, 58.284}, {10.318, 59.167}, {10.646, 60.047}, {10.983, 60.923}, {11.330, 61.795}, {11.687, 62.663}, {12.053, 63.528}, {12.428, 64.388}, {12.813, 65.244}, {13.208, 66.095}, {13.612, 66.943}, {14.025, 67.785}, {14.448, 68.623}, {14.880, 69.457}, {15.321, 70.285}, {15.771, 71.109}, {16.230, 71.928}, {16.699, 72.741}, {17.176, 73.549}, {17.662, 74.352}, {18.157, 75.150}, {18.661, 75.942}, {19.174, 76.728}, {19.695, 77.508}, {20.225, 78.283}, {20.763, 79.052}, {21.310, 79.815}, {21.865, 80.572}, {22.429, 81.322}, {23.000, 82.067}, {23.581, 82.805}, {24.169, 83.536}, {24.765, 84.261}, {25.369, 84.979}, {25.981, 85.691}, {26.601, 86.396}, {27.229, 87.094}, {27.864, 87.784}, {28.507, 88.468}, {29.158, 89.145}, {29.816, 89.814}, {30.481, 90.476}, {31.154, 91.131}, {31.834, 91.778}, {32.520, 92.418}, {33.214, 93.050}, {33.915, 93.674}, {34.623, 94.291}, {35.338, 94.899}, {36.059, 95.500}, {36.787, 96.093}, {37.521, 96.677}, {38.262, 97.254}, {39.009, 97.822}, {39.762, 98.382}, {40.522, 98.933}, {41.287, 99.476}, {42.059, 100.011}, {42.836, 100.537}, {43.619, 101.054}, {44.408, 101.563}, {45.203, 102.063}, {46.003, 102.554}, {46.808, 103.036}, {47.618, 103.510}, {48.434, 103.974}, {49.255, 104.429}, {50.081, 104.875}, {50.911, 105.312}, {51.747, 105.740}, {52.587, 106.159}, {53.432, 106.568}, {54.281, 106.968}, {55.135, 107.358}, {55.992, 107.739}, {56.854, 108.110}, {57.720, 108.472}, {58.590, 108.825}, {59.464, 109.167}, {60.342, 109.500}, {61.223, 109.823}, {62.107, 110.138}, {62.994, 110.447}, {63.882, 110.751}, {64.772, 111.051}, {65.663, 111.347}, {66.557, 111.638}, {67.452, 111.925}, {68.350, 112.207}, {69.249, 112.485}, {70.151, 112.758}, {71.055, 113.027}, {71.961, 113.291}, {72.869, 113.550}, {73.780, 113.804}, {74.693, 114.054}, {75.608, 114.299}, {76.525, 114.539}, {77.445, 114.774}, {78.368, 115.005}, {79.292, 115.230}, {80.220, 115.451}, {81.149, 115.666}, {82.081, 115.877}, {83.016, 116.083}, {83.952, 116.283}, {84.892, 116.479}, {85.833, 116.669}, {86.778, 116.855}, {87.724, 117.035}, {88.673, 117.210}, {89.624, 117.380}, {90.577, 117.545}, {91.533, 117.704}, {92.491, 117.859}, {93.451, 118.008}, {94.413, 118.152}, {95.378, 118.290}, {96.344, 118.423}, {97.313, 118.551}, {98.284, 118.674}, {99.256, 118.791}, {100.230, 118.903}, {101.207, 119.010}, {102.185, 119.111}, {103.164, 119.207}, {104.146, 119.297}, {105.128, 119.382}, {106.113, 119.461}, {107.098, 119.536}, {108.086, 119.604}, {109.074, 119.667}, {110.063, 119.725}, {111.054, 119.777}, {112.045, 119.824}, {113.038, 119.865}, {114.031, 119.901}, {115.025, 119.931}, {116.019, 119.956}, {117.014, 119.975}, {118.009, 119.989}, {119.004, 119.997}, {120.000, 120.000}, {120.000, 110.000}, }\r\nMoveLUT.mediumBase.talonF[3].rotY = {0.000, 0.005, 0.021, 0.048, 0.085, 0.133, 0.191, 0.260, 0.340, 0.431, 0.532, 0.644, 0.767, 0.901, 1.045, 1.201, 1.367, 1.544, 1.732, 1.931, 2.141, 2.362, 2.594, 2.838, 3.092, 3.357, 3.633, 3.921, 4.220, 4.529, 4.850, 5.182, 5.525, 5.879, 6.245, 6.621, 7.008, 7.407, 7.816, 8.236, 8.667, 9.109, 9.562, 10.026, 10.500, 10.985, 11.481, 11.987, 12.504, 13.031, 13.568, 14.115, 14.672, 15.239, 15.816, 16.402, 16.998, 17.603, 18.217, 18.840, 19.473, 20.106, 20.740, 21.374, 22.008, 22.642, 23.275, 23.909, 24.543, 25.177, 25.811, 26.444, 27.078, 27.712, 28.346, 28.980, 29.613, 30.247, 30.881, 31.515, 32.149, 32.782, 33.416, 34.050, 34.684, 35.318, 35.951, 36.585, 37.219, 37.853, 38.487, 39.120, 39.754, 40.388, 41.022, 41.656, 42.289, 42.923, 43.557, 44.191, 44.825, 45.459, 46.092, 46.726, 47.360, 47.994, 48.628, 49.261, 49.895, 50.529, 51.163, 51.797, 52.430, 53.064, 53.698, 54.332, 54.966, 55.599, 56.233, 56.867, 57.501, 58.135, 58.768, 59.402, 60.036, 60.670, 61.304, 61.937, 62.571, 63.205, 63.839, 64.473, 65.106, 65.740, 66.374, 67.008, 67.642, 68.275, 68.909, 69.543, 70.177, 70.808, 71.432, 72.044, 72.645, 73.236, 73.816, 74.386, 74.945, 75.493, 76.031, 76.559, 77.077, 77.584, 78.081, 78.568, 79.045, 79.511, 79.968, 80.415, 80.851, 81.278, 81.694, 82.100, 82.497, 82.883, 83.259, 83.625, 83.982, 84.328, 84.664, 84.990, 85.306, 85.611, 85.907, 86.192, 86.468, 86.733, 86.988, 87.232, 87.467, 87.691, 87.905, 88.108, 88.302, 88.485, 88.657, 88.820, 88.971, 89.113, 89.244, 89.365, 89.475, 89.574, 89.664, 89.742, 89.811, 89.869, 89.916, 89.953, 89.979, 89.995, 90.000, 180.000, }\r\n\r\nMoveLUT.mediumBase.talonB = {}\r\nMoveLUT.mediumBase.talonB[1] = {}\r\nMoveLUT.mediumBase.talonB[1].dataNum = 117\r\nMoveLUT.mediumBase.talonB[1].length = 114.978\r\nMoveLUT.mediumBase.talonB[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 4.999}, {0.259, 5.999}, {0.353, 6.998}, {0.463, 7.996}, {0.588, 8.994}, {0.728, 9.991}, {0.883, 10.987}, {1.055, 11.981}, {1.243, 12.974}, {1.448, 13.965}, {1.669, 14.954}, {1.907, 15.939}, {2.162, 16.922}, {2.435, 17.901}, {2.725, 18.876}, {3.033, 19.846}, {3.361, 20.811}, {3.708, 21.770}, {4.074, 22.722}, {4.459, 23.667}, {4.862, 24.603}, {5.285, 25.531}, {5.729, 26.448}, {6.192, 27.354}, {6.675, 28.248}, {7.176, 29.129}, {7.698, 29.996}, {8.239, 30.847}, {8.797, 31.681}, {9.373, 32.498}, {9.970, 33.295}, {10.580, 34.072}, {11.206, 34.828}, {11.849, 35.561}, {12.503, 36.270}, {13.170, 36.955}, {13.848, 37.613}, {14.531, 38.246}, {15.225, 38.850}, {15.920, 39.428}, {16.618, 39.976}, {17.317, 40.497}, {18.000, 41.000}, {18.648, 41.500}, {19.261, 42.000}, {19.843, 42.500}, {20.396, 43.000}, {20.922, 43.500}, {21.424, 44.000}, {21.903, 44.500}, {22.361, 45.000}, {22.798, 45.500}, {23.216, 46.000}, {23.617, 46.500}, {24.000, 47.000}, {24.367, 47.500}, {24.733, 48.000}, {25.111, 48.499}, {25.504, 48.998}, {25.911, 49.495}, {26.332, 49.991}, {26.767, 50.484}, {27.217, 50.975}, {27.682, 51.464}, {28.162, 51.949}, {28.657, 52.430}, {29.168, 52.908}, {29.694, 53.381}, {30.235, 53.849}, {30.792, 54.312}, {31.365, 54.770}, {31.953, 55.221}, {32.556, 55.667}, {33.175, 56.105}, {33.809, 56.537}, {34.459, 56.961}, {35.124, 57.378}, {35.804, 57.786}, {36.499, 58.186}, {37.210, 58.578}, {37.934, 58.960}, {38.674, 59.333}, {39.428, 59.696}, {40.196, 60.050}, {40.978, 60.393}, {41.774, 60.726}, {42.583, 61.047}, {43.405, 61.358}, {44.241, 61.658}, {45.089, 61.946}, {45.949, 62.222}, {46.821, 62.486}, {47.704, 62.738}, {48.598, 62.978}, {49.503, 63.204}, {50.419, 63.419}, {51.344, 63.620}, {52.278, 63.808}, {53.221, 63.982}, {54.172, 64.143}, {55.131, 64.291}, {56.097, 64.425}, {57.069, 64.545}, {58.047, 64.651}, {59.031, 64.744}, {60.018, 64.822}, {61.010, 64.886}, {62.005, 64.936}, {63.002, 64.971}, {64.001, 64.993}, {65.000, 65.000}, {65.000, 75.000}, }\r\nMoveLUT.mediumBase.talonB[1].rotY = {0.000, 0.014, 0.055, 0.123, 0.219, 0.343, 0.495, 0.675, 0.884, 1.122, 1.390, 1.688, 2.016, 2.375, 2.766, 3.188, 3.644, 4.132, 4.655, 5.212, 5.803, 6.432, 7.100, 7.805, 8.547, 9.327, 10.146, 11.008, 11.912, 12.856, 13.838, 14.867, 15.940, 17.052, 18.207, 19.410, 20.651, 21.935, 23.265, 24.630, 26.040, 27.489, 28.971, 30.497, 32.050, 33.638, 35.256, 36.870, 38.433, 39.945, 41.410, 42.833, 44.220, 45.573, 46.895, 48.190, 49.458, 50.704, 51.927, 53.130, 54.315, 55.481, 56.631, 57.764, 58.880, 59.979, 61.062, 62.129, 63.179, 64.212, 65.229, 66.230, 67.213, 68.180, 69.129, 70.062, 70.977, 71.874, 72.753, 73.614, 74.457, 75.281, 76.086, 76.872, 77.639, 78.385, 79.112, 79.817, 80.502, 81.166, 81.809, 82.429, 83.028, 83.604, 84.157, 84.687, 85.193, 85.676, 86.135, 86.569, 86.978, 87.363, 87.722, 88.056, 88.364, 88.646, 88.902, 89.131, 89.334, 89.510, 89.660, 89.782, 89.877, 89.945, 89.986, 90.000, 180.000, }\r\n\r\n\r\nMoveLUT.mediumBase.talonB[2] = {}\r\nMoveLUT.mediumBase.talonB[2].dataNum = 161\r\nMoveLUT.mediumBase.talonB[2].length = 158.175\r\nMoveLUT.mediumBase.talonB[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 6.000}, {0.197, 6.999}, {0.257, 7.999}, {0.326, 8.998}, {0.403, 9.997}, {0.488, 10.996}, {0.581, 11.994}, {0.682, 12.992}, {0.792, 13.990}, {0.911, 14.986}, {1.037, 15.982}, {1.173, 16.977}, {1.316, 17.971}, {1.469, 18.964}, {1.629, 19.956}, {1.799, 20.946}, {1.977, 21.935}, {2.163, 22.922}, {2.358, 23.907}, {2.562, 24.890}, {2.775, 25.871}, {2.996, 26.850}, {3.225, 27.826}, {3.464, 28.799}, {3.711, 29.770}, {3.967, 30.737}, {4.231, 31.700}, {4.504, 32.660}, {4.785, 33.616}, {5.074, 34.568}, {5.371, 35.515}, {5.676, 36.458}, {5.989, 37.396}, {6.310, 38.329}, {6.639, 39.256}, {6.974, 40.178}, {7.317, 41.094}, {7.667, 42.004}, {8.024, 42.907}, {8.388, 43.804}, {8.758, 44.693}, {9.133, 45.576}, {9.514, 46.451}, {9.901, 47.319}, {10.292, 48.179}, {10.688, 49.031}, {11.089, 49.876}, {11.493, 50.711}, {11.901, 51.539}, {12.312, 52.357}, {12.725, 53.167}, {13.142, 53.968}, {13.560, 54.761}, {13.980, 55.544}, {14.400, 56.318}, {14.824, 57.078}, {15.260, 57.831}, {15.707, 58.577}, {16.166, 59.316}, {16.637, 60.047}, {17.120, 60.771}, {17.614, 61.487}, {18.119, 62.195}, {18.635, 62.895}, {19.163, 63.587}, {19.701, 64.270}, {20.250, 64.945}, {20.810, 65.611}, {21.380, 66.268}, {21.961, 66.916}, {22.552, 67.554}, {23.153, 68.184}, {23.763, 68.803}, {24.384, 69.413}, {25.014, 70.013}, {25.654, 70.602}, {26.302, 71.182}, {26.960, 71.751}, {27.627, 72.309}, {28.303, 72.857}, {28.987, 73.395}, {29.680, 73.921}, {30.381, 74.436}, {31.090, 74.940}, {31.807, 75.433}, {32.532, 75.914}, {33.264, 76.384}, {34.003, 76.842}, {34.750, 77.288}, {35.504, 77.722}, {36.264, 78.145}, {37.029, 78.560}, {37.796, 78.971}, {38.566, 79.377}, {39.340, 79.778}, {40.116, 80.175}, {40.896, 80.567}, {41.680, 80.955}, {42.468, 81.337}, {43.260, 81.714}, {44.056, 82.087}, {44.856, 82.453}, {45.660, 82.815}, {46.469, 83.171}, {47.283, 83.522}, {48.101, 83.867}, {48.924, 84.206}, {49.752, 84.540}, {50.584, 84.867}, {51.421, 85.189}, {52.263, 85.505}, {53.111, 85.814}, {53.963, 86.118}, {54.820, 86.415}, {55.682, 86.705}, {56.548, 86.990}, {57.420, 87.268}, {58.297, 87.539}, {59.179, 87.804}, {60.065, 88.062}, {60.956, 88.313}, {61.853, 88.558}, {62.753, 88.795}, {63.659, 89.026}, {64.569, 89.250}, {65.484, 89.466}, {66.403, 89.676}, {67.327, 89.878}, {68.255, 90.074}, {69.187, 90.261}, {70.124, 90.442}, {71.064, 90.615}, {72.009, 90.781}, {72.957, 90.940}, {73.909, 91.091}, {74.865, 91.234}, {75.824, 91.370}, {76.787, 91.498}, {77.752, 91.619}, {78.721, 91.732}, {79.692, 91.838}, {80.666, 91.935}, {81.643, 92.025}, {82.622, 92.107}, {83.604, 92.182}, {84.587, 92.249}, {85.572, 92.307}, {86.559, 92.358}, {87.547, 92.402}, {88.536, 92.437}, {89.526, 92.465}, {90.517, 92.484}, {91.508, 92.496}, {92.500, 92.500}, {92.500, 102.500}, }\r\nMoveLUT.mediumBase.talonB[2].rotY = {0.000, 0.008, 0.031, 0.069, 0.123, 0.192, 0.276, 0.376, 0.491, 0.622, 0.769, 0.931, 1.109, 1.303, 1.513, 1.740, 1.982, 2.240, 2.515, 2.806, 3.113, 3.437, 3.778, 4.135, 4.509, 4.899, 5.307, 5.731, 6.172, 6.630, 7.105, 7.598, 8.107, 8.634, 9.177, 9.737, 10.314, 10.907, 11.516, 12.142, 12.784, 13.443, 14.117, 14.808, 15.514, 16.236, 16.973, 17.724, 18.490, 19.270, 20.064, 20.872, 21.692, 22.525, 23.371, 24.229, 25.099, 25.980, 26.872, 27.774, 28.686, 29.595, 30.504, 31.414, 32.323, 33.232, 34.141, 35.050, 35.959, 36.868, 37.777, 38.686, 39.595, 40.504, 41.414, 42.323, 43.232, 44.141, 45.050, 45.959, 46.868, 47.777, 48.686, 49.595, 50.504, 51.414, 52.323, 53.232, 54.141, 55.050, 55.959, 56.868, 57.777, 58.686, 59.595, 60.504, 61.413, 62.311, 63.193, 64.059, 64.909, 65.743, 66.562, 67.366, 68.155, 68.929, 69.689, 70.434, 71.166, 71.883, 72.586, 73.275, 73.951, 74.612, 75.260, 75.895, 76.516, 77.123, 77.717, 78.297, 78.863, 79.416, 79.956, 80.482, 80.994, 81.493, 81.978, 82.449, 82.907, 83.350, 83.780, 84.196, 84.599, 84.987, 85.361, 85.721, 86.067, 86.398, 86.716, 87.019, 87.307, 87.582, 87.841, 88.087, 88.317, 88.533, 88.735, 88.921, 89.093, 89.250, 89.393, 89.520, 89.632, 89.730, 89.812, 89.880, 89.932, 89.970, 89.992, 90.000, 180.000, }\r\n\r\nMoveLUT.mediumBase.talonB[3] = {}\r\nMoveLUT.mediumBase.talonB[3].dataNum = 204\r\nMoveLUT.mediumBase.talonB[3].length = 201.372\r\nMoveLUT.mediumBase.talonB[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 7.999}, {0.226, 8.999}, {0.279, 9.999}, {0.337, 10.998}, {0.402, 11.997}, {0.472, 12.996}, {0.547, 13.995}, {0.629, 14.993}, {0.716, 15.991}, {0.808, 16.989}, {0.907, 17.986}, {1.011, 18.983}, {1.121, 19.979}, {1.237, 20.975}, {1.358, 21.969}, {1.485, 22.963}, {1.618, 23.956}, {1.757, 24.949}, {1.901, 25.940}, {2.051, 26.930}, {2.207, 27.919}, {2.369, 28.906}, {2.536, 29.893}, {2.710, 30.877}, {2.888, 31.861}, {3.073, 32.842}, {3.263, 33.822}, {3.459, 34.800}, {3.660, 35.776}, {3.867, 36.750}, {4.080, 37.721}, {4.298, 38.691}, {4.521, 39.657}, {4.750, 40.622}, {4.984, 41.583}, {5.223, 42.542}, {5.467, 43.498}, {5.717, 44.450}, {5.971, 45.400}, {6.231, 46.346}, {6.495, 47.288}, {6.764, 48.227}, {7.038, 49.163}, {7.316, 50.094}, {7.599, 51.022}, {7.885, 51.945}, {8.176, 52.864}, {8.471, 53.779}, {8.770, 54.689}, {9.072, 55.595}, {9.379, 56.496}, {9.688, 57.393}, {10.001, 58.284}, {10.318, 59.167}, {10.646, 60.047}, {10.983, 60.923}, {11.330, 61.795}, {11.687, 62.663}, {12.053, 63.528}, {12.428, 64.388}, {12.813, 65.244}, {13.208, 66.095}, {13.612, 66.943}, {14.025, 67.785}, {14.448, 68.623}, {14.880, 69.457}, {15.321, 70.285}, {15.771, 71.109}, {16.230, 71.928}, {16.699, 72.741}, {17.176, 73.549}, {17.662, 74.352}, {18.157, 75.150}, {18.661, 75.942}, {19.174, 76.728}, {19.695, 77.508}, {20.225, 78.283}, {20.763, 79.052}, {21.310, 79.815}, {21.865, 80.572}, {22.429, 81.322}, {23.000, 82.067}, {23.581, 82.805}, {24.169, 83.536}, {24.765, 84.261}, {25.369, 84.979}, {25.981, 85.691}, {26.601, 86.396}, {27.229, 87.094}, {27.864, 87.784}, {28.507, 88.468}, {29.158, 89.145}, {29.816, 89.814}, {30.481, 90.476}, {31.154, 91.131}, {31.834, 91.778}, {32.520, 92.418}, {33.214, 93.050}, {33.915, 93.674}, {34.623, 94.291}, {35.338, 94.899}, {36.059, 95.500}, {36.787, 96.093}, {37.521, 96.677}, {38.262, 97.254}, {39.009, 97.822}, {39.762, 98.382}, {40.522, 98.933}, {41.287, 99.476}, {42.059, 100.011}, {42.836, 100.537}, {43.619, 101.054}, {44.408, 101.563}, {45.203, 102.063}, {46.003, 102.554}, {46.808, 103.036}, {47.618, 103.510}, {48.434, 103.974}, {49.255, 104.429}, {50.081, 104.875}, {50.911, 105.312}, {51.747, 105.740}, {52.587, 106.159}, {53.432, 106.568}, {54.281, 106.968}, {55.135, 107.358}, {55.992, 107.739}, {56.854, 108.110}, {57.720, 108.472}, {58.590, 108.825}, {59.464, 109.167}, {60.342, 109.500}, {61.223, 109.823}, {62.107, 110.138}, {62.994, 110.447}, {63.882, 110.751}, {64.772, 111.051}, {65.663, 111.347}, {66.557, 111.638}, {67.452, 111.925}, {68.350, 112.207}, {69.249, 112.485}, {70.151, 112.758}, {71.055, 113.027}, {71.961, 113.291}, {72.869, 113.550}, {73.780, 113.804}, {74.693, 114.054}, {75.608, 114.299}, {76.525, 114.539}, {77.445, 114.774}, {78.368, 115.005}, {79.292, 115.230}, {80.220, 115.451}, {81.149, 115.666}, {82.081, 115.877}, {83.016, 116.083}, {83.952, 116.283}, {84.892, 116.479}, {85.833, 116.669}, {86.778, 116.855}, {87.724, 117.035}, {88.673, 117.210}, {89.624, 117.380}, {90.577, 117.545}, {91.533, 117.704}, {92.491, 117.859}, {93.451, 118.008}, {94.413, 118.152}, {95.378, 118.290}, {96.344, 118.423}, {97.313, 118.551}, {98.284, 118.674}, {99.256, 118.791}, {100.230, 118.903}, {101.207, 119.010}, {102.185, 119.111}, {103.164, 119.207}, {104.146, 119.297}, {105.128, 119.382}, {106.113, 119.461}, {107.098, 119.536}, {108.086, 119.604}, {109.074, 119.667}, {110.063, 119.725}, {111.054, 119.777}, {112.045, 119.824}, {113.038, 119.865}, {114.031, 119.901}, {115.025, 119.931}, {116.019, 119.956}, {117.014, 119.975}, {118.009, 119.989}, {119.004, 119.997}, {120.000, 120.000}, {120.000, 130.000}, }\r\nMoveLUT.mediumBase.talonB[3].rotY = {0.000, 0.005, 0.021, 0.048, 0.085, 0.133, 0.191, 0.260, 0.340, 0.431, 0.532, 0.644, 0.767, 0.901, 1.045, 1.201, 1.367, 1.544, 1.732, 1.931, 2.141, 2.362, 2.594, 2.838, 3.092, 3.357, 3.633, 3.921, 4.220, 4.529, 4.850, 5.182, 5.525, 5.879, 6.245, 6.621, 7.008, 7.407, 7.816, 8.236, 8.667, 9.109, 9.562, 10.026, 10.500, 10.985, 11.481, 11.987, 12.504, 13.031, 13.568, 14.115, 14.672, 15.239, 15.816, 16.402, 16.998, 17.603, 18.217, 18.840, 19.473, 20.106, 20.740, 21.374, 22.008, 22.642, 23.275, 23.909, 24.543, 25.177, 25.811, 26.444, 27.078, 27.712, 28.346, 28.980, 29.613, 30.247, 30.881, 31.515, 32.149, 32.782, 33.416, 34.050, 34.684, 35.318, 35.951, 36.585, 37.219, 37.853, 38.487, 39.120, 39.754, 40.388, 41.022, 41.656, 42.289, 42.923, 43.557, 44.191, 44.825, 45.459, 46.092, 46.726, 47.360, 47.994, 48.628, 49.261, 49.895, 50.529, 51.163, 51.797, 52.430, 53.064, 53.698, 54.332, 54.966, 55.599, 56.233, 56.867, 57.501, 58.135, 58.768, 59.402, 60.036, 60.670, 61.304, 61.937, 62.571, 63.205, 63.839, 64.473, 65.106, 65.740, 66.374, 67.008, 67.642, 68.275, 68.909, 69.543, 70.177, 70.808, 71.432, 72.044, 72.645, 73.236, 73.816, 74.386, 74.945, 75.493, 76.031, 76.559, 77.077, 77.584, 78.081, 78.568, 79.045, 79.511, 79.968, 80.415, 80.851, 81.278, 81.694, 82.100, 82.497, 82.883, 83.259, 83.625, 83.982, 84.328, 84.664, 84.990, 85.306, 85.611, 85.907, 86.192, 86.468, 86.733, 86.988, 87.232, 87.467, 87.691, 87.905, 88.108, 88.302, 88.485, 88.657, 88.820, 88.971, 89.113, 89.244, 89.365, 89.475, 89.574, 89.664, 89.742, 89.811, 89.869, 89.916, 89.953, 89.979, 89.995, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talon = {}\r\nMoveLUT.largeBase.talon[1] = {}\r\nMoveLUT.largeBase.talon[1].dataNum = 137\r\nMoveLUT.largeBase.talon[1].length = 134.978\r\nMoveLUT.largeBase.talon[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 5.000}, {0.259, 5.999}, {0.354, 6.998}, {0.463, 7.997}, {0.588, 8.996}, {0.728, 9.993}, {0.885, 10.990}, {1.057, 11.986}, {1.246, 12.981}, {1.451, 13.974}, {1.674, 14.965}, {1.914, 15.954}, {2.172, 16.941}, {2.449, 17.925}, {2.744, 18.906}, {3.058, 19.883}, {3.394, 20.856}, {3.751, 21.824}, {4.128, 22.786}, {4.527, 23.743}, {4.947, 24.693}, {5.393, 25.635}, {5.863, 26.568}, {6.356, 27.492}, {6.876, 28.405}, {7.423, 29.305}, {7.995, 30.193}, {8.598, 31.065}, {9.229, 31.921}, {9.891, 32.758}, {10.584, 33.574}, {11.311, 34.367}, {12.069, 35.136}, {12.867, 35.874}, {13.700, 36.581}, {14.570, 37.252}, {15.481, 37.883}, {16.437, 38.467}, {17.437, 38.999}, {18.432, 39.500}, {19.365, 40.000}, {20.242, 40.500}, {21.071, 41.000}, {21.857, 41.500}, {22.605, 42.000}, {23.318, 42.500}, {24.000, 43.000}, {24.653, 43.500}, {25.278, 44.000}, {25.880, 44.500}, {26.458, 45.000}, {27.014, 45.500}, {27.550, 46.000}, {28.067, 46.500}, {28.566, 47.000}, {29.047, 47.500}, {29.513, 48.000}, {29.962, 48.500}, {30.397, 49.000}, {30.818, 49.500}, {31.225, 50.000}, {31.619, 50.500}, {32.000, 51.000}, {32.369, 51.500}, {32.726, 52.000}, {33.072, 52.500}, {33.407, 53.000}, {33.731, 53.500}, {34.044, 54.000}, {34.347, 54.500}, {34.641, 55.000}, {34.925, 55.500}, {35.199, 56.000}, {35.465, 56.500}, {35.721, 57.000}, {35.969, 57.500}, {36.222, 58.000}, {36.495, 58.499}, {36.788, 58.998}, {37.101, 59.495}, {37.433, 59.991}, {37.786, 60.484}, {38.158, 60.975}, {38.550, 61.464}, {38.961, 61.949}, {39.391, 62.430}, {39.841, 62.908}, {40.311, 63.381}, {40.799, 63.849}, {41.306, 64.312}, {41.833, 64.770}, {42.377, 65.221}, {42.941, 65.667}, {43.522, 66.105}, {44.122, 66.537}, {44.740, 66.961}, {45.376, 67.378}, {46.029, 67.786}, {46.699, 68.186}, {47.386, 68.578}, {48.090, 68.960}, {48.811, 69.333}, {49.547, 69.696}, {50.300, 70.050}, {51.068, 70.393}, {51.851, 70.726}, {52.649, 71.047}, {53.461, 71.358}, {54.288, 71.658}, {55.128, 71.946}, {55.981, 72.222}, {56.847, 72.486}, {57.725, 72.738}, {58.615, 72.978}, {59.517, 73.204}, {60.429, 73.419}, {61.352, 73.620}, {62.284, 73.808}, {63.225, 73.982}, {64.175, 74.143}, {65.133, 74.291}, {66.098, 74.425}, {67.070, 74.545}, {68.048, 74.651}, {69.031, 74.744}, {70.019, 74.822}, {71.010, 74.886}, {72.005, 74.936}, {73.002, 74.971}, {74.001, 74.993}, {75.000, 75.000}, {75.000, 75.000}, }\r\nMoveLUT.largeBase.talon[1].rotY = {0.000, 0.010, 0.041, 0.092, 0.164, 0.257, 0.371, 0.506, 0.663, 0.842, 1.043, 1.267, 1.514, 1.785, 2.079, 2.398, 2.743, 3.113, 3.509, 3.933, 4.384, 4.868, 5.381, 5.924, 6.498, 7.104, 7.749, 8.429, 9.143, 9.898, 10.694, 11.530, 12.413, 13.340, 14.316, 15.344, 16.426, 17.562, 18.765, 20.029, 21.361, 22.769, 24.263, 25.845, 27.439, 28.955, 30.402, 31.788, 33.123, 34.412, 35.659, 36.870, 38.048, 39.195, 40.315, 41.410, 42.481, 43.531, 44.561, 45.573, 46.567, 47.546, 48.509, 49.458, 50.394, 51.318, 52.230, 53.130, 54.020, 54.900, 55.771, 56.633, 57.486, 58.332, 59.170, 60.000, 60.824, 61.641, 62.451, 63.256, 64.056, 64.849, 65.637, 66.418, 67.193, 67.961, 68.722, 69.475, 70.220, 70.957, 71.685, 72.404, 73.113, 73.813, 74.503, 75.182, 75.850, 76.507, 77.152, 77.785, 78.406, 79.015, 79.610, 80.192, 80.761, 81.315, 81.855, 82.381, 82.891, 83.386, 83.866, 84.329, 84.776, 85.207, 85.621, 86.018, 86.397, 86.758, 87.102, 87.427, 87.734, 88.022, 88.292, 88.542, 88.773, 88.985, 89.176, 89.349, 89.501, 89.633, 89.745, 89.837, 89.908, 89.959, 89.990, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talon[2] = {}\r\nMoveLUT.largeBase.talon[2].dataNum = 181\r\nMoveLUT.largeBase.talon[2].length = 178.175\r\nMoveLUT.largeBase.talon[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 6.000}, {0.197, 7.000}, {0.257, 7.999}, {0.326, 8.999}, {0.403, 9.998}, {0.488, 10.997}, {0.581, 11.996}, {0.683, 12.994}, {0.793, 13.992}, {0.912, 14.990}, {1.039, 15.987}, {1.174, 16.983}, {1.318, 17.978}, {1.471, 18.973}, {1.633, 19.967}, {1.803, 20.959}, {1.983, 21.951}, {2.171, 22.941}, {2.368, 23.930}, {2.574, 24.917}, {2.789, 25.903}, {3.013, 26.886}, {3.246, 27.868}, {3.489, 28.848}, {3.741, 29.825}, {4.002, 30.799}, {4.273, 31.771}, {4.552, 32.740}, {4.841, 33.706}, {5.140, 34.668}, {5.447, 35.627}, {5.764, 36.583}, {6.089, 37.534}, {6.425, 38.481}, {6.770, 39.423}, {7.124, 40.360}, {7.487, 41.293}, {7.858, 42.220}, {8.239, 43.142}, {8.627, 44.059}, {9.026, 44.968}, {9.432, 45.872}, {9.847, 46.769}, {10.270, 47.659}, {10.700, 48.542}, {11.138, 49.418}, {11.584, 50.286}, {12.038, 51.146}, {12.498, 51.997}, {12.965, 52.841}, {13.437, 53.675}, {13.916, 54.501}, {14.400, 55.318}, {14.891, 56.125}, {15.386, 56.923}, {15.885, 57.711}, {16.388, 58.489}, {16.894, 59.257}, {17.404, 60.015}, {17.918, 60.763}, {18.433, 61.500}, {18.950, 62.226}, {19.468, 62.943}, {19.987, 63.649}, {20.505, 64.344}, {21.024, 65.029}, {21.542, 65.704}, {22.059, 66.367}, {22.575, 67.021}, {23.088, 67.664}, {23.598, 68.298}, {24.105, 68.921}, {24.608, 69.535}, {25.107, 70.139}, {25.601, 70.734}, {26.093, 71.316}, {26.595, 71.889}, {27.105, 72.455}, {27.625, 73.013}, {28.153, 73.562}, {28.690, 74.102}, {29.235, 74.635}, {29.789, 75.158}, {30.350, 75.673}, {30.921, 76.178}, {31.498, 76.675}, {32.083, 77.164}, {32.670, 77.650}, {33.258, 78.135}, {33.850, 78.617}, {34.443, 79.098}, {35.040, 79.577}, {35.640, 80.054}, {36.244, 80.529}, {36.852, 81.001}, {37.464, 81.471}, {38.080, 81.938}, {38.700, 82.403}, {39.326, 82.864}, {39.956, 83.323}, {40.592, 83.779}, {41.233, 84.232}, {41.879, 84.681}, {42.531, 85.127}, {43.188, 85.570}, {43.851, 86.008}, {44.520, 86.444}, {45.195, 86.875}, {45.876, 87.302}, {46.564, 87.726}, {47.257, 88.145}, {47.957, 88.560}, {48.663, 88.971}, {49.375, 89.377}, {50.094, 89.778}, {50.819, 90.175}, {51.550, 90.567}, {52.288, 90.955}, {53.033, 91.337}, {53.784, 91.714}, {54.542, 92.087}, {55.306, 92.453}, {56.076, 92.815}, {56.854, 93.171}, {57.637, 93.522}, {58.427, 93.867}, {59.224, 94.206}, {60.027, 94.540}, {60.836, 94.867}, {61.652, 95.189}, {62.474, 95.505}, {63.302, 95.814}, {64.137, 96.118}, {64.978, 96.415}, {65.825, 96.705}, {66.677, 96.990}, {67.536, 97.268}, {68.401, 97.539}, {69.272, 97.804}, {70.148, 98.062}, {71.030, 98.313}, {71.918, 98.558}, {72.811, 98.795}, {73.710, 99.026}, {74.614, 99.250}, {75.523, 99.466}, {76.437, 99.676}, {77.356, 99.878}, {78.280, 100.074}, {79.208, 100.261}, {80.142, 100.442}, {81.079, 100.615}, {82.021, 100.781}, {82.967, 100.940}, {83.918, 101.091}, {84.872, 101.234}, {85.829, 101.370}, {86.791, 101.498}, {87.755, 101.619}, {88.723, 101.732}, {89.694, 101.838}, {90.668, 101.935}, {91.644, 102.025}, {92.623, 102.107}, {93.604, 102.182}, {94.587, 102.249}, {95.572, 102.307}, {96.559, 102.358}, {97.547, 102.402}, {98.536, 102.437}, {99.526, 102.465}, {100.517, 102.484}, {101.508, 102.496}, {102.500, 102.500}, {102.500, 102.500}, }\r\nMoveLUT.largeBase.talon[2].rotY = {0.000, 0.006, 0.023, 0.052, 0.092, 0.144, 0.207, 0.282, 0.369, 0.467, 0.577, 0.699, 0.832, 0.978, 1.136, 1.306, 1.488, 1.682, 1.889, 2.108, 2.340, 2.584, 2.841, 3.111, 3.393, 3.689, 3.998, 4.319, 4.654, 5.003, 5.366, 5.742, 6.132, 6.535, 6.952, 7.382, 7.827, 8.285, 8.756, 9.243, 9.744, 10.259, 10.788, 11.330, 11.886, 12.456, 13.041, 13.639, 14.252, 14.877, 15.516, 16.168, 16.834, 17.514, 18.207, 18.912, 19.629, 20.358, 21.101, 21.856, 22.622, 23.398, 24.186, 24.984, 25.792, 26.612, 27.440, 28.278, 29.124, 29.978, 30.839, 31.708, 32.585, 33.469, 34.359, 35.253, 36.153, 37.058, 37.966, 38.878, 39.794, 40.703, 41.612, 42.521, 43.430, 44.339, 45.248, 46.157, 47.066, 47.975, 48.885, 49.794, 50.699, 51.593, 52.473, 53.340, 54.194, 55.036, 55.865, 56.682, 57.488, 58.283, 59.066, 59.839, 60.601, 61.353, 62.094, 62.825, 63.546, 64.258, 64.959, 65.651, 66.334, 67.007, 67.670, 68.324, 68.969, 69.604, 70.231, 70.848, 71.456, 72.054, 72.644, 73.224, 73.795, 74.357, 74.910, 75.454, 75.988, 76.513, 77.029, 77.536, 78.033, 78.521, 78.999, 79.468, 79.928, 80.378, 80.819, 81.249, 81.671, 82.082, 82.484, 82.876, 83.258, 83.630, 83.992, 84.344, 84.686, 85.018, 85.339, 85.651, 85.952, 86.242, 86.522, 86.792, 87.051, 87.300, 87.537, 87.764, 87.981, 88.187, 88.381, 88.565, 88.738, 88.900, 89.051, 89.191, 89.320, 89.438, 89.544, 89.640, 89.724, 89.797, 89.859, 89.910, 89.949, 89.977, 89.994, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talon[3] = {}\r\nMoveLUT.largeBase.talon[3].dataNum = 224\r\nMoveLUT.largeBase.talon[3].length = 221.372\r\nMoveLUT.largeBase.talon[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 8.000}, {0.226, 8.999}, {0.279, 9.999}, {0.337, 10.999}, {0.402, 11.998}, {0.472, 12.997}, {0.547, 13.996}, {0.629, 14.995}, {0.716, 15.994}, {0.809, 16.992}, {0.908, 17.990}, {1.012, 18.987}, {1.122, 19.984}, {1.238, 20.981}, {1.360, 21.977}, {1.488, 22.972}, {1.621, 23.967}, {1.760, 24.961}, {1.906, 25.955}, {2.057, 26.947}, {2.214, 27.939}, {2.377, 28.929}, {2.546, 29.919}, {2.721, 30.907}, {2.901, 31.895}, {3.088, 32.881}, {3.281, 33.865}, {3.479, 34.848}, {3.683, 35.830}, {3.894, 36.810}, {4.110, 37.788}, {4.332, 38.765}, {4.560, 39.739}, {4.795, 40.712}, {5.035, 41.682}, {5.281, 42.650}, {5.532, 43.616}, {5.789, 44.579}, {6.052, 45.539}, {6.321, 46.497}, {6.595, 47.453}, {6.875, 48.405}, {7.160, 49.354}, {7.451, 50.300}, {7.747, 51.243}, {8.048, 52.182}, {8.355, 53.118}, {8.667, 54.050}, {8.984, 54.978}, {9.306, 55.902}, {9.633, 56.823}, {9.964, 57.739}, {10.300, 58.651}, {10.641, 59.559}, {10.986, 60.462}, {11.335, 61.360}, {11.689, 62.254}, {12.046, 63.143}, {12.407, 64.027}, {12.772, 64.906}, {13.141, 65.780}, {13.513, 66.649}, {13.888, 67.512}, {14.266, 68.370}, {14.647, 69.222}, {15.031, 70.068}, {15.418, 70.909}, {15.806, 71.745}, {16.197, 72.574}, {16.590, 73.397}, {16.985, 74.215}, {17.381, 75.026}, {17.778, 75.832}, {18.179, 76.629}, {18.589, 77.421}, {19.007, 78.209}, {19.434, 78.992}, {19.870, 79.770}, {20.314, 80.543}, {20.767, 81.311}, {21.228, 82.075}, {21.697, 82.833}, {22.175, 83.586}, {22.662, 84.333}, {23.156, 85.076}, {23.659, 85.812}, {24.170, 86.543}, {24.689, 87.269}, {25.215, 87.988}, {25.750, 88.702}, {26.293, 89.410}, {26.843, 90.111}, {27.402, 90.807}, {27.967, 91.496}, {28.541, 92.179}, {29.122, 92.856}, {29.710, 93.526}, {30.306, 94.190}, {30.909, 94.847}, {31.519, 95.497}, {32.137, 96.140}, {32.761, 96.777}, {33.393, 97.407}, {34.031, 98.029}, {34.677, 98.645}, {35.329, 99.253}, {35.988, 99.855}, {36.653, 100.448}, {37.325, 101.035}, {38.003, 101.614}, {38.688, 102.185}, {39.379, 102.749}, {40.076, 103.305}, {40.780, 103.853}, {41.489, 104.394}, {42.204, 104.927}, {42.925, 105.451}, {43.652, 105.968}, {44.385, 106.477}, {45.123, 106.977}, {45.867, 107.470}, {46.616, 107.954}, {47.370, 108.429}, {48.129, 108.897}, {48.894, 109.356}, {49.664, 109.806}, {50.438, 110.248}, {51.218, 110.681}, {52.002, 111.106}, {52.791, 111.522}, {53.585, 111.929}, {54.382, 112.328}, {55.182, 112.722}, {55.984, 113.113}, {56.788, 113.500}, {57.594, 113.883}, {58.402, 114.263}, {59.213, 114.639}, {60.025, 115.012}, {60.841, 115.381}, {61.658, 115.747}, {62.478, 116.108}, {63.301, 116.466}, {64.127, 116.820}, {64.955, 117.170}, {65.786, 117.516}, {66.620, 117.858}, {67.456, 118.196}, {68.296, 118.530}, {69.139, 118.860}, {69.984, 119.186}, {70.833, 119.508}, {71.685, 119.825}, {72.540, 120.138}, {73.398, 120.447}, {74.259, 120.751}, {75.124, 121.051}, {75.991, 121.347}, {76.862, 121.638}, {77.736, 121.925}, {78.613, 122.207}, {79.494, 122.485}, {80.377, 122.758}, {81.264, 123.027}, {82.154, 123.291}, {83.047, 123.550}, {83.944, 123.804}, {84.843, 124.054}, {85.746, 124.299}, {86.652, 124.539}, {87.561, 124.774}, {88.473, 125.005}, {89.389, 125.230}, {90.307, 125.451}, {91.228, 125.666}, {92.153, 125.877}, {93.080, 126.083}, {94.011, 126.283}, {94.944, 126.479}, {95.880, 126.669}, {96.819, 126.855}, {97.761, 127.035}, {98.705, 127.210}, {99.653, 127.380}, {100.603, 127.545}, {101.555, 127.704}, {102.510, 127.859}, {103.468, 128.008}, {104.428, 128.152}, {105.390, 128.290}, {106.355, 128.423}, {107.322, 128.551}, {108.291, 128.674}, {109.262, 128.791}, {110.235, 128.903}, {111.211, 129.010}, {112.188, 129.111}, {113.167, 129.207}, {114.148, 129.297}, {115.130, 129.382}, {116.114, 129.461}, {117.099, 129.536}, {118.086, 129.604}, {119.074, 129.667}, {120.064, 129.725}, {121.054, 129.777}, {122.045, 129.824}, {123.038, 129.865}, {124.031, 129.901}, {125.025, 129.931}, {126.019, 129.956}, {127.014, 129.975}, {128.009, 129.989}, {129.004, 129.997}, {130.000, 130.000}, {130.000, 130.000}, }\r\nMoveLUT.largeBase.talon[3].rotY = {0.000, 0.004, 0.016, 0.036, 0.064, 0.100, 0.144, 0.195, 0.255, 0.323, 0.399, 0.483, 0.575, 0.676, 0.784, 0.901, 1.026, 1.159, 1.300, 1.450, 1.607, 1.774, 1.948, 2.131, 2.323, 2.522, 2.731, 2.948, 3.173, 3.407, 3.649, 3.900, 4.159, 4.428, 4.704, 4.990, 5.284, 5.586, 5.898, 6.218, 6.547, 6.884, 7.231, 7.586, 7.950, 8.322, 8.703, 9.092, 9.490, 9.897, 10.312, 10.736, 11.168, 11.608, 12.056, 12.514, 12.979, 13.453, 13.935, 14.425, 14.922, 15.428, 15.941, 16.462, 16.991, 17.527, 18.070, 18.621, 19.179, 19.744, 20.316, 20.894, 21.480, 22.072, 22.671, 23.276, 23.887, 24.504, 25.126, 25.755, 26.389, 27.022, 27.656, 28.290, 28.924, 29.558, 30.191, 30.825, 31.459, 32.093, 32.727, 33.360, 33.994, 34.628, 35.262, 35.896, 36.530, 37.163, 37.797, 38.431, 39.065, 39.699, 40.332, 40.966, 41.600, 42.234, 42.868, 43.501, 44.135, 44.769, 45.403, 46.037, 46.670, 47.304, 47.938, 48.572, 49.206, 49.839, 50.473, 51.107, 51.741, 52.375, 53.008, 53.642, 54.276, 54.910, 55.544, 56.177, 56.811, 57.445, 58.079, 58.713, 59.346, 59.980, 60.614, 61.248, 61.882, 62.515, 63.149, 63.782, 64.409, 65.027, 65.637, 66.239, 66.832, 67.417, 67.994, 68.563, 69.125, 69.678, 70.223, 70.761, 71.291, 71.814, 72.329, 72.837, 73.337, 73.829, 74.315, 74.793, 75.263, 75.727, 76.183, 76.631, 77.073, 77.507, 77.934, 78.354, 78.766, 79.171, 79.569, 79.960, 80.344, 80.720, 81.089, 81.451, 81.806, 82.153, 82.493, 82.826, 83.151, 83.469, 83.780, 84.084, 84.380, 84.668, 84.950, 85.223, 85.490, 85.749, 86.000, 86.244, 86.481, 86.710, 86.931, 87.145, 87.351, 87.550, 87.741, 87.925, 88.100, 88.268, 88.429, 88.581, 88.726, 88.864, 88.993, 89.115, 89.229, 89.335, 89.433, 89.523, 89.606, 89.681, 89.748, 89.807, 89.858, 89.901, 89.937, 89.965, 89.984, 89.996, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talonF = {}\r\nMoveLUT.largeBase.talonF[1] = {}\r\nMoveLUT.largeBase.talonF[1].dataNum = 137\r\nMoveLUT.largeBase.talonF[1].length = 134.978\r\nMoveLUT.largeBase.talonF[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 5.000}, {0.259, 5.999}, {0.354, 6.998}, {0.463, 7.997}, {0.588, 8.996}, {0.728, 9.993}, {0.885, 10.990}, {1.057, 11.986}, {1.246, 12.981}, {1.451, 13.974}, {1.674, 14.965}, {1.914, 15.954}, {2.172, 16.941}, {2.449, 17.925}, {2.744, 18.906}, {3.058, 19.883}, {3.394, 20.856}, {3.751, 21.824}, {4.128, 22.786}, {4.527, 23.743}, {4.947, 24.693}, {5.393, 25.635}, {5.863, 26.568}, {6.356, 27.492}, {6.876, 28.405}, {7.423, 29.305}, {7.995, 30.193}, {8.598, 31.065}, {9.229, 31.921}, {9.891, 32.758}, {10.584, 33.574}, {11.311, 34.367}, {12.069, 35.136}, {12.867, 35.874}, {13.700, 36.581}, {14.570, 37.252}, {15.481, 37.883}, {16.437, 38.467}, {17.437, 38.999}, {18.432, 39.500}, {19.365, 40.000}, {20.242, 40.500}, {21.071, 41.000}, {21.857, 41.500}, {22.605, 42.000}, {23.318, 42.500}, {24.000, 43.000}, {24.653, 43.500}, {25.278, 44.000}, {25.880, 44.500}, {26.458, 45.000}, {27.014, 45.500}, {27.550, 46.000}, {28.067, 46.500}, {28.566, 47.000}, {29.047, 47.500}, {29.513, 48.000}, {29.962, 48.500}, {30.397, 49.000}, {30.818, 49.500}, {31.225, 50.000}, {31.619, 50.500}, {32.000, 51.000}, {32.369, 51.500}, {32.726, 52.000}, {33.072, 52.500}, {33.407, 53.000}, {33.731, 53.500}, {34.044, 54.000}, {34.347, 54.500}, {34.641, 55.000}, {34.925, 55.500}, {35.199, 56.000}, {35.465, 56.500}, {35.721, 57.000}, {35.969, 57.500}, {36.222, 58.000}, {36.495, 58.499}, {36.788, 58.998}, {37.101, 59.495}, {37.433, 59.991}, {37.786, 60.484}, {38.158, 60.975}, {38.550, 61.464}, {38.961, 61.949}, {39.391, 62.430}, {39.841, 62.908}, {40.311, 63.381}, {40.799, 63.849}, {41.306, 64.312}, {41.833, 64.770}, {42.377, 65.221}, {42.941, 65.667}, {43.522, 66.105}, {44.122, 66.537}, {44.740, 66.961}, {45.376, 67.378}, {46.029, 67.786}, {46.699, 68.186}, {47.386, 68.578}, {48.090, 68.960}, {48.811, 69.333}, {49.547, 69.696}, {50.300, 70.050}, {51.068, 70.393}, {51.851, 70.726}, {52.649, 71.047}, {53.461, 71.358}, {54.288, 71.658}, {55.128, 71.946}, {55.981, 72.222}, {56.847, 72.486}, {57.725, 72.738}, {58.615, 72.978}, {59.517, 73.204}, {60.429, 73.419}, {61.352, 73.620}, {62.284, 73.808}, {63.225, 73.982}, {64.175, 74.143}, {65.133, 74.291}, {66.098, 74.425}, {67.070, 74.545}, {68.048, 74.651}, {69.031, 74.744}, {70.019, 74.822}, {71.010, 74.886}, {72.005, 74.936}, {73.002, 74.971}, {74.001, 74.993}, {75.000, 75.000}, {75.000, 65.000}, }\r\nMoveLUT.largeBase.talonF[1].rotY = {0.000, 0.010, 0.041, 0.092, 0.164, 0.257, 0.371, 0.506, 0.663, 0.842, 1.043, 1.267, 1.514, 1.785, 2.079, 2.398, 2.743, 3.113, 3.509, 3.933, 4.384, 4.868, 5.381, 5.924, 6.498, 7.104, 7.749, 8.429, 9.143, 9.898, 10.694, 11.530, 12.413, 13.340, 14.316, 15.344, 16.426, 17.562, 18.765, 20.029, 21.361, 22.769, 24.263, 25.845, 27.439, 28.955, 30.402, 31.788, 33.123, 34.412, 35.659, 36.870, 38.048, 39.195, 40.315, 41.410, 42.481, 43.531, 44.561, 45.573, 46.567, 47.546, 48.509, 49.458, 50.394, 51.318, 52.230, 53.130, 54.020, 54.900, 55.771, 56.633, 57.486, 58.332, 59.170, 60.000, 60.824, 61.641, 62.451, 63.256, 64.056, 64.849, 65.637, 66.418, 67.193, 67.961, 68.722, 69.475, 70.220, 70.957, 71.685, 72.404, 73.113, 73.813, 74.503, 75.182, 75.850, 76.507, 77.152, 77.785, 78.406, 79.015, 79.610, 80.192, 80.761, 81.315, 81.855, 82.381, 82.891, 83.386, 83.866, 84.329, 84.776, 85.207, 85.621, 86.018, 86.397, 86.758, 87.102, 87.427, 87.734, 88.022, 88.292, 88.542, 88.773, 88.985, 89.176, 89.349, 89.501, 89.633, 89.745, 89.837, 89.908, 89.959, 89.990, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talonF[2] = {}\r\nMoveLUT.largeBase.talonF[2].dataNum = 181\r\nMoveLUT.largeBase.talonF[2].length = 178.175\r\nMoveLUT.largeBase.talonF[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 6.000}, {0.197, 7.000}, {0.257, 7.999}, {0.326, 8.999}, {0.403, 9.998}, {0.488, 10.997}, {0.581, 11.996}, {0.683, 12.994}, {0.793, 13.992}, {0.912, 14.990}, {1.039, 15.987}, {1.174, 16.983}, {1.318, 17.978}, {1.471, 18.973}, {1.633, 19.967}, {1.803, 20.959}, {1.983, 21.951}, {2.171, 22.941}, {2.368, 23.930}, {2.574, 24.917}, {2.789, 25.903}, {3.013, 26.886}, {3.246, 27.868}, {3.489, 28.848}, {3.741, 29.825}, {4.002, 30.799}, {4.273, 31.771}, {4.552, 32.740}, {4.841, 33.706}, {5.140, 34.668}, {5.447, 35.627}, {5.764, 36.583}, {6.089, 37.534}, {6.425, 38.481}, {6.770, 39.423}, {7.124, 40.360}, {7.487, 41.293}, {7.858, 42.220}, {8.239, 43.142}, {8.627, 44.059}, {9.026, 44.968}, {9.432, 45.872}, {9.847, 46.769}, {10.270, 47.659}, {10.700, 48.542}, {11.138, 49.418}, {11.584, 50.286}, {12.038, 51.146}, {12.498, 51.997}, {12.965, 52.841}, {13.437, 53.675}, {13.916, 54.501}, {14.400, 55.318}, {14.891, 56.125}, {15.386, 56.923}, {15.885, 57.711}, {16.388, 58.489}, {16.894, 59.257}, {17.404, 60.015}, {17.918, 60.763}, {18.433, 61.500}, {18.950, 62.226}, {19.468, 62.943}, {19.987, 63.649}, {20.505, 64.344}, {21.024, 65.029}, {21.542, 65.704}, {22.059, 66.367}, {22.575, 67.021}, {23.088, 67.664}, {23.598, 68.298}, {24.105, 68.921}, {24.608, 69.535}, {25.107, 70.139}, {25.601, 70.734}, {26.093, 71.316}, {26.595, 71.889}, {27.105, 72.455}, {27.625, 73.013}, {28.153, 73.562}, {28.690, 74.102}, {29.235, 74.635}, {29.789, 75.158}, {30.350, 75.673}, {30.921, 76.178}, {31.498, 76.675}, {32.083, 77.164}, {32.670, 77.650}, {33.258, 78.135}, {33.850, 78.617}, {34.443, 79.098}, {35.040, 79.577}, {35.640, 80.054}, {36.244, 80.529}, {36.852, 81.001}, {37.464, 81.471}, {38.080, 81.938}, {38.700, 82.403}, {39.326, 82.864}, {39.956, 83.323}, {40.592, 83.779}, {41.233, 84.232}, {41.879, 84.681}, {42.531, 85.127}, {43.188, 85.570}, {43.851, 86.008}, {44.520, 86.444}, {45.195, 86.875}, {45.876, 87.302}, {46.564, 87.726}, {47.257, 88.145}, {47.957, 88.560}, {48.663, 88.971}, {49.375, 89.377}, {50.094, 89.778}, {50.819, 90.175}, {51.550, 90.567}, {52.288, 90.955}, {53.033, 91.337}, {53.784, 91.714}, {54.542, 92.087}, {55.306, 92.453}, {56.076, 92.815}, {56.854, 93.171}, {57.637, 93.522}, {58.427, 93.867}, {59.224, 94.206}, {60.027, 94.540}, {60.836, 94.867}, {61.652, 95.189}, {62.474, 95.505}, {63.302, 95.814}, {64.137, 96.118}, {64.978, 96.415}, {65.825, 96.705}, {66.677, 96.990}, {67.536, 97.268}, {68.401, 97.539}, {69.272, 97.804}, {70.148, 98.062}, {71.030, 98.313}, {71.918, 98.558}, {72.811, 98.795}, {73.710, 99.026}, {74.614, 99.250}, {75.523, 99.466}, {76.437, 99.676}, {77.356, 99.878}, {78.280, 100.074}, {79.208, 100.261}, {80.142, 100.442}, {81.079, 100.615}, {82.021, 100.781}, {82.967, 100.940}, {83.918, 101.091}, {84.872, 101.234}, {85.829, 101.370}, {86.791, 101.498}, {87.755, 101.619}, {88.723, 101.732}, {89.694, 101.838}, {90.668, 101.935}, {91.644, 102.025}, {92.623, 102.107}, {93.604, 102.182}, {94.587, 102.249}, {95.572, 102.307}, {96.559, 102.358}, {97.547, 102.402}, {98.536, 102.437}, {99.526, 102.465}, {100.517, 102.484}, {101.508, 102.496}, {102.500, 102.500}, {102.500, 92.500}, }\r\nMoveLUT.largeBase.talonF[2].rotY = {0.000, 0.006, 0.023, 0.052, 0.092, 0.144, 0.207, 0.282, 0.369, 0.467, 0.577, 0.699, 0.832, 0.978, 1.136, 1.306, 1.488, 1.682, 1.889, 2.108, 2.340, 2.584, 2.841, 3.111, 3.393, 3.689, 3.998, 4.319, 4.654, 5.003, 5.366, 5.742, 6.132, 6.535, 6.952, 7.382, 7.827, 8.285, 8.756, 9.243, 9.744, 10.259, 10.788, 11.330, 11.886, 12.456, 13.041, 13.639, 14.252, 14.877, 15.516, 16.168, 16.834, 17.514, 18.207, 18.912, 19.629, 20.358, 21.101, 21.856, 22.622, 23.398, 24.186, 24.984, 25.792, 26.612, 27.440, 28.278, 29.124, 29.978, 30.839, 31.708, 32.585, 33.469, 34.359, 35.253, 36.153, 37.058, 37.966, 38.878, 39.794, 40.703, 41.612, 42.521, 43.430, 44.339, 45.248, 46.157, 47.066, 47.975, 48.885, 49.794, 50.699, 51.593, 52.473, 53.340, 54.194, 55.036, 55.865, 56.682, 57.488, 58.283, 59.066, 59.839, 60.601, 61.353, 62.094, 62.825, 63.546, 64.258, 64.959, 65.651, 66.334, 67.007, 67.670, 68.324, 68.969, 69.604, 70.231, 70.848, 71.456, 72.054, 72.644, 73.224, 73.795, 74.357, 74.910, 75.454, 75.988, 76.513, 77.029, 77.536, 78.033, 78.521, 78.999, 79.468, 79.928, 80.378, 80.819, 81.249, 81.671, 82.082, 82.484, 82.876, 83.258, 83.630, 83.992, 84.344, 84.686, 85.018, 85.339, 85.651, 85.952, 86.242, 86.522, 86.792, 87.051, 87.300, 87.537, 87.764, 87.981, 88.187, 88.381, 88.565, 88.738, 88.900, 89.051, 89.191, 89.320, 89.438, 89.544, 89.640, 89.724, 89.797, 89.859, 89.910, 89.949, 89.977, 89.994, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talonF[3] = {}\r\nMoveLUT.largeBase.talonF[3].dataNum = 224\r\nMoveLUT.largeBase.talonF[3].length = 221.372\r\nMoveLUT.largeBase.talonF[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 8.000}, {0.226, 8.999}, {0.279, 9.999}, {0.337, 10.999}, {0.402, 11.998}, {0.472, 12.997}, {0.547, 13.996}, {0.629, 14.995}, {0.716, 15.994}, {0.809, 16.992}, {0.908, 17.990}, {1.012, 18.987}, {1.122, 19.984}, {1.238, 20.981}, {1.360, 21.977}, {1.488, 22.972}, {1.621, 23.967}, {1.760, 24.961}, {1.906, 25.955}, {2.057, 26.947}, {2.214, 27.939}, {2.377, 28.929}, {2.546, 29.919}, {2.721, 30.907}, {2.901, 31.895}, {3.088, 32.881}, {3.281, 33.865}, {3.479, 34.848}, {3.683, 35.830}, {3.894, 36.810}, {4.110, 37.788}, {4.332, 38.765}, {4.560, 39.739}, {4.795, 40.712}, {5.035, 41.682}, {5.281, 42.650}, {5.532, 43.616}, {5.789, 44.579}, {6.052, 45.539}, {6.321, 46.497}, {6.595, 47.453}, {6.875, 48.405}, {7.160, 49.354}, {7.451, 50.300}, {7.747, 51.243}, {8.048, 52.182}, {8.355, 53.118}, {8.667, 54.050}, {8.984, 54.978}, {9.306, 55.902}, {9.633, 56.823}, {9.964, 57.739}, {10.300, 58.651}, {10.641, 59.559}, {10.986, 60.462}, {11.335, 61.360}, {11.689, 62.254}, {12.046, 63.143}, {12.407, 64.027}, {12.772, 64.906}, {13.141, 65.780}, {13.513, 66.649}, {13.888, 67.512}, {14.266, 68.370}, {14.647, 69.222}, {15.031, 70.068}, {15.418, 70.909}, {15.806, 71.745}, {16.197, 72.574}, {16.590, 73.397}, {16.985, 74.215}, {17.381, 75.026}, {17.778, 75.832}, {18.179, 76.629}, {18.589, 77.421}, {19.007, 78.209}, {19.434, 78.992}, {19.870, 79.770}, {20.314, 80.543}, {20.767, 81.311}, {21.228, 82.075}, {21.697, 82.833}, {22.175, 83.586}, {22.662, 84.333}, {23.156, 85.076}, {23.659, 85.812}, {24.170, 86.543}, {24.689, 87.269}, {25.215, 87.988}, {25.750, 88.702}, {26.293, 89.410}, {26.843, 90.111}, {27.402, 90.807}, {27.967, 91.496}, {28.541, 92.179}, {29.122, 92.856}, {29.710, 93.526}, {30.306, 94.190}, {30.909, 94.847}, {31.519, 95.497}, {32.137, 96.140}, {32.761, 96.777}, {33.393, 97.407}, {34.031, 98.029}, {34.677, 98.645}, {35.329, 99.253}, {35.988, 99.855}, {36.653, 100.448}, {37.325, 101.035}, {38.003, 101.614}, {38.688, 102.185}, {39.379, 102.749}, {40.076, 103.305}, {40.780, 103.853}, {41.489, 104.394}, {42.204, 104.927}, {42.925, 105.451}, {43.652, 105.968}, {44.385, 106.477}, {45.123, 106.977}, {45.867, 107.470}, {46.616, 107.954}, {47.370, 108.429}, {48.129, 108.897}, {48.894, 109.356}, {49.664, 109.806}, {50.438, 110.248}, {51.218, 110.681}, {52.002, 111.106}, {52.791, 111.522}, {53.585, 111.929}, {54.382, 112.328}, {55.182, 112.722}, {55.984, 113.113}, {56.788, 113.500}, {57.594, 113.883}, {58.402, 114.263}, {59.213, 114.639}, {60.025, 115.012}, {60.841, 115.381}, {61.658, 115.747}, {62.478, 116.108}, {63.301, 116.466}, {64.127, 116.820}, {64.955, 117.170}, {65.786, 117.516}, {66.620, 117.858}, {67.456, 118.196}, {68.296, 118.530}, {69.139, 118.860}, {69.984, 119.186}, {70.833, 119.508}, {71.685, 119.825}, {72.540, 120.138}, {73.398, 120.447}, {74.259, 120.751}, {75.124, 121.051}, {75.991, 121.347}, {76.862, 121.638}, {77.736, 121.925}, {78.613, 122.207}, {79.494, 122.485}, {80.377, 122.758}, {81.264, 123.027}, {82.154, 123.291}, {83.047, 123.550}, {83.944, 123.804}, {84.843, 124.054}, {85.746, 124.299}, {86.652, 124.539}, {87.561, 124.774}, {88.473, 125.005}, {89.389, 125.230}, {90.307, 125.451}, {91.228, 125.666}, {92.153, 125.877}, {93.080, 126.083}, {94.011, 126.283}, {94.944, 126.479}, {95.880, 126.669}, {96.819, 126.855}, {97.761, 127.035}, {98.705, 127.210}, {99.653, 127.380}, {100.603, 127.545}, {101.555, 127.704}, {102.510, 127.859}, {103.468, 128.008}, {104.428, 128.152}, {105.390, 128.290}, {106.355, 128.423}, {107.322, 128.551}, {108.291, 128.674}, {109.262, 128.791}, {110.235, 128.903}, {111.211, 129.010}, {112.188, 129.111}, {113.167, 129.207}, {114.148, 129.297}, {115.130, 129.382}, {116.114, 129.461}, {117.099, 129.536}, {118.086, 129.604}, {119.074, 129.667}, {120.064, 129.725}, {121.054, 129.777}, {122.045, 129.824}, {123.038, 129.865}, {124.031, 129.901}, {125.025, 129.931}, {126.019, 129.956}, {127.014, 129.975}, {128.009, 129.989}, {129.004, 129.997}, {130.000, 130.000}, {130.000, 120.000}, }\r\nMoveLUT.largeBase.talonF[3].rotY = {0.000, 0.004, 0.016, 0.036, 0.064, 0.100, 0.144, 0.195, 0.255, 0.323, 0.399, 0.483, 0.575, 0.676, 0.784, 0.901, 1.026, 1.159, 1.300, 1.450, 1.607, 1.774, 1.948, 2.131, 2.323, 2.522, 2.731, 2.948, 3.173, 3.407, 3.649, 3.900, 4.159, 4.428, 4.704, 4.990, 5.284, 5.586, 5.898, 6.218, 6.547, 6.884, 7.231, 7.586, 7.950, 8.322, 8.703, 9.092, 9.490, 9.897, 10.312, 10.736, 11.168, 11.608, 12.056, 12.514, 12.979, 13.453, 13.935, 14.425, 14.922, 15.428, 15.941, 16.462, 16.991, 17.527, 18.070, 18.621, 19.179, 19.744, 20.316, 20.894, 21.480, 22.072, 22.671, 23.276, 23.887, 24.504, 25.126, 25.755, 26.389, 27.022, 27.656, 28.290, 28.924, 29.558, 30.191, 30.825, 31.459, 32.093, 32.727, 33.360, 33.994, 34.628, 35.262, 35.896, 36.530, 37.163, 37.797, 38.431, 39.065, 39.699, 40.332, 40.966, 41.600, 42.234, 42.868, 43.501, 44.135, 44.769, 45.403, 46.037, 46.670, 47.304, 47.938, 48.572, 49.206, 49.839, 50.473, 51.107, 51.741, 52.375, 53.008, 53.642, 54.276, 54.910, 55.544, 56.177, 56.811, 57.445, 58.079, 58.713, 59.346, 59.980, 60.614, 61.248, 61.882, 62.515, 63.149, 63.782, 64.409, 65.027, 65.637, 66.239, 66.832, 67.417, 67.994, 68.563, 69.125, 69.678, 70.223, 70.761, 71.291, 71.814, 72.329, 72.837, 73.337, 73.829, 74.315, 74.793, 75.263, 75.727, 76.183, 76.631, 77.073, 77.507, 77.934, 78.354, 78.766, 79.171, 79.569, 79.960, 80.344, 80.720, 81.089, 81.451, 81.806, 82.153, 82.493, 82.826, 83.151, 83.469, 83.780, 84.084, 84.380, 84.668, 84.950, 85.223, 85.490, 85.749, 86.000, 86.244, 86.481, 86.710, 86.931, 87.145, 87.351, 87.550, 87.741, 87.925, 88.100, 88.268, 88.429, 88.581, 88.726, 88.864, 88.993, 89.115, 89.229, 89.335, 89.433, 89.523, 89.606, 89.681, 89.748, 89.807, 89.858, 89.901, 89.937, 89.965, 89.984, 89.996, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talonB = {}\r\nMoveLUT.largeBase.talonB[1] = {}\r\nMoveLUT.largeBase.talonB[1].dataNum = 137\r\nMoveLUT.largeBase.talonB[1].length = 134.978\r\nMoveLUT.largeBase.talonB[1].posXZ = {{0.000, 0.000}, {0.007, 1.000}, {0.029, 2.000}, {0.064, 3.000}, {0.115, 4.000}, {0.180, 5.000}, {0.259, 5.999}, {0.354, 6.998}, {0.463, 7.997}, {0.588, 8.996}, {0.728, 9.993}, {0.885, 10.990}, {1.057, 11.986}, {1.246, 12.981}, {1.451, 13.974}, {1.674, 14.965}, {1.914, 15.954}, {2.172, 16.941}, {2.449, 17.925}, {2.744, 18.906}, {3.058, 19.883}, {3.394, 20.856}, {3.751, 21.824}, {4.128, 22.786}, {4.527, 23.743}, {4.947, 24.693}, {5.393, 25.635}, {5.863, 26.568}, {6.356, 27.492}, {6.876, 28.405}, {7.423, 29.305}, {7.995, 30.193}, {8.598, 31.065}, {9.229, 31.921}, {9.891, 32.758}, {10.584, 33.574}, {11.311, 34.367}, {12.069, 35.136}, {12.867, 35.874}, {13.700, 36.581}, {14.570, 37.252}, {15.481, 37.883}, {16.437, 38.467}, {17.437, 38.999}, {18.432, 39.500}, {19.365, 40.000}, {20.242, 40.500}, {21.071, 41.000}, {21.857, 41.500}, {22.605, 42.000}, {23.318, 42.500}, {24.000, 43.000}, {24.653, 43.500}, {25.278, 44.000}, {25.880, 44.500}, {26.458, 45.000}, {27.014, 45.500}, {27.550, 46.000}, {28.067, 46.500}, {28.566, 47.000}, {29.047, 47.500}, {29.513, 48.000}, {29.962, 48.500}, {30.397, 49.000}, {30.818, 49.500}, {31.225, 50.000}, {31.619, 50.500}, {32.000, 51.000}, {32.369, 51.500}, {32.726, 52.000}, {33.072, 52.500}, {33.407, 53.000}, {33.731, 53.500}, {34.044, 54.000}, {34.347, 54.500}, {34.641, 55.000}, {34.925, 55.500}, {35.199, 56.000}, {35.465, 56.500}, {35.721, 57.000}, {35.969, 57.500}, {36.222, 58.000}, {36.495, 58.499}, {36.788, 58.998}, {37.101, 59.495}, {37.433, 59.991}, {37.786, 60.484}, {38.158, 60.975}, {38.550, 61.464}, {38.961, 61.949}, {39.391, 62.430}, {39.841, 62.908}, {40.311, 63.381}, {40.799, 63.849}, {41.306, 64.312}, {41.833, 64.770}, {42.377, 65.221}, {42.941, 65.667}, {43.522, 66.105}, {44.122, 66.537}, {44.740, 66.961}, {45.376, 67.378}, {46.029, 67.786}, {46.699, 68.186}, {47.386, 68.578}, {48.090, 68.960}, {48.811, 69.333}, {49.547, 69.696}, {50.300, 70.050}, {51.068, 70.393}, {51.851, 70.726}, {52.649, 71.047}, {53.461, 71.358}, {54.288, 71.658}, {55.128, 71.946}, {55.981, 72.222}, {56.847, 72.486}, {57.725, 72.738}, {58.615, 72.978}, {59.517, 73.204}, {60.429, 73.419}, {61.352, 73.620}, {62.284, 73.808}, {63.225, 73.982}, {64.175, 74.143}, {65.133, 74.291}, {66.098, 74.425}, {67.070, 74.545}, {68.048, 74.651}, {69.031, 74.744}, {70.019, 74.822}, {71.010, 74.886}, {72.005, 74.936}, {73.002, 74.971}, {74.001, 74.993}, {75.000, 75.000}, {75.000, 85.000}, }\r\nMoveLUT.largeBase.talonB[1].rotY = {0.000, 0.010, 0.041, 0.092, 0.164, 0.257, 0.371, 0.506, 0.663, 0.842, 1.043, 1.267, 1.514, 1.785, 2.079, 2.398, 2.743, 3.113, 3.509, 3.933, 4.384, 4.868, 5.381, 5.924, 6.498, 7.104, 7.749, 8.429, 9.143, 9.898, 10.694, 11.530, 12.413, 13.340, 14.316, 15.344, 16.426, 17.562, 18.765, 20.029, 21.361, 22.769, 24.263, 25.845, 27.439, 28.955, 30.402, 31.788, 33.123, 34.412, 35.659, 36.870, 38.048, 39.195, 40.315, 41.410, 42.481, 43.531, 44.561, 45.573, 46.567, 47.546, 48.509, 49.458, 50.394, 51.318, 52.230, 53.130, 54.020, 54.900, 55.771, 56.633, 57.486, 58.332, 59.170, 60.000, 60.824, 61.641, 62.451, 63.256, 64.056, 64.849, 65.637, 66.418, 67.193, 67.961, 68.722, 69.475, 70.220, 70.957, 71.685, 72.404, 73.113, 73.813, 74.503, 75.182, 75.850, 76.507, 77.152, 77.785, 78.406, 79.015, 79.610, 80.192, 80.761, 81.315, 81.855, 82.381, 82.891, 83.386, 83.866, 84.329, 84.776, 85.207, 85.621, 86.018, 86.397, 86.758, 87.102, 87.427, 87.734, 88.022, 88.292, 88.542, 88.773, 88.985, 89.176, 89.349, 89.501, 89.633, 89.745, 89.837, 89.908, 89.959, 89.990, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talonB[2] = {}\r\nMoveLUT.largeBase.talonB[2].dataNum = 181\r\nMoveLUT.largeBase.talonB[2].length = 178.175\r\nMoveLUT.largeBase.talonB[2].posXZ = {{0.000, 0.000}, {0.004, 1.000}, {0.016, 2.000}, {0.036, 3.000}, {0.064, 4.000}, {0.100, 5.000}, {0.145, 6.000}, {0.197, 7.000}, {0.257, 7.999}, {0.326, 8.999}, {0.403, 9.998}, {0.488, 10.997}, {0.581, 11.996}, {0.683, 12.994}, {0.793, 13.992}, {0.912, 14.990}, {1.039, 15.987}, {1.174, 16.983}, {1.318, 17.978}, {1.471, 18.973}, {1.633, 19.967}, {1.803, 20.959}, {1.983, 21.951}, {2.171, 22.941}, {2.368, 23.930}, {2.574, 24.917}, {2.789, 25.903}, {3.013, 26.886}, {3.246, 27.868}, {3.489, 28.848}, {3.741, 29.825}, {4.002, 30.799}, {4.273, 31.771}, {4.552, 32.740}, {4.841, 33.706}, {5.140, 34.668}, {5.447, 35.627}, {5.764, 36.583}, {6.089, 37.534}, {6.425, 38.481}, {6.770, 39.423}, {7.124, 40.360}, {7.487, 41.293}, {7.858, 42.220}, {8.239, 43.142}, {8.627, 44.059}, {9.026, 44.968}, {9.432, 45.872}, {9.847, 46.769}, {10.270, 47.659}, {10.700, 48.542}, {11.138, 49.418}, {11.584, 50.286}, {12.038, 51.146}, {12.498, 51.997}, {12.965, 52.841}, {13.437, 53.675}, {13.916, 54.501}, {14.400, 55.318}, {14.891, 56.125}, {15.386, 56.923}, {15.885, 57.711}, {16.388, 58.489}, {16.894, 59.257}, {17.404, 60.015}, {17.918, 60.763}, {18.433, 61.500}, {18.950, 62.226}, {19.468, 62.943}, {19.987, 63.649}, {20.505, 64.344}, {21.024, 65.029}, {21.542, 65.704}, {22.059, 66.367}, {22.575, 67.021}, {23.088, 67.664}, {23.598, 68.298}, {24.105, 68.921}, {24.608, 69.535}, {25.107, 70.139}, {25.601, 70.734}, {26.093, 71.316}, {26.595, 71.889}, {27.105, 72.455}, {27.625, 73.013}, {28.153, 73.562}, {28.690, 74.102}, {29.235, 74.635}, {29.789, 75.158}, {30.350, 75.673}, {30.921, 76.178}, {31.498, 76.675}, {32.083, 77.164}, {32.670, 77.650}, {33.258, 78.135}, {33.850, 78.617}, {34.443, 79.098}, {35.040, 79.577}, {35.640, 80.054}, {36.244, 80.529}, {36.852, 81.001}, {37.464, 81.471}, {38.080, 81.938}, {38.700, 82.403}, {39.326, 82.864}, {39.956, 83.323}, {40.592, 83.779}, {41.233, 84.232}, {41.879, 84.681}, {42.531, 85.127}, {43.188, 85.570}, {43.851, 86.008}, {44.520, 86.444}, {45.195, 86.875}, {45.876, 87.302}, {46.564, 87.726}, {47.257, 88.145}, {47.957, 88.560}, {48.663, 88.971}, {49.375, 89.377}, {50.094, 89.778}, {50.819, 90.175}, {51.550, 90.567}, {52.288, 90.955}, {53.033, 91.337}, {53.784, 91.714}, {54.542, 92.087}, {55.306, 92.453}, {56.076, 92.815}, {56.854, 93.171}, {57.637, 93.522}, {58.427, 93.867}, {59.224, 94.206}, {60.027, 94.540}, {60.836, 94.867}, {61.652, 95.189}, {62.474, 95.505}, {63.302, 95.814}, {64.137, 96.118}, {64.978, 96.415}, {65.825, 96.705}, {66.677, 96.990}, {67.536, 97.268}, {68.401, 97.539}, {69.272, 97.804}, {70.148, 98.062}, {71.030, 98.313}, {71.918, 98.558}, {72.811, 98.795}, {73.710, 99.026}, {74.614, 99.250}, {75.523, 99.466}, {76.437, 99.676}, {77.356, 99.878}, {78.280, 100.074}, {79.208, 100.261}, {80.142, 100.442}, {81.079, 100.615}, {82.021, 100.781}, {82.967, 100.940}, {83.918, 101.091}, {84.872, 101.234}, {85.829, 101.370}, {86.791, 101.498}, {87.755, 101.619}, {88.723, 101.732}, {89.694, 101.838}, {90.668, 101.935}, {91.644, 102.025}, {92.623, 102.107}, {93.604, 102.182}, {94.587, 102.249}, {95.572, 102.307}, {96.559, 102.358}, {97.547, 102.402}, {98.536, 102.437}, {99.526, 102.465}, {100.517, 102.484}, {101.508, 102.496}, {102.500, 102.500}, {102.500, 112.500}, }\r\nMoveLUT.largeBase.talonB[2].rotY = {0.000, 0.006, 0.023, 0.052, 0.092, 0.144, 0.207, 0.282, 0.369, 0.467, 0.577, 0.699, 0.832, 0.978, 1.136, 1.306, 1.488, 1.682, 1.889, 2.108, 2.340, 2.584, 2.841, 3.111, 3.393, 3.689, 3.998, 4.319, 4.654, 5.003, 5.366, 5.742, 6.132, 6.535, 6.952, 7.382, 7.827, 8.285, 8.756, 9.243, 9.744, 10.259, 10.788, 11.330, 11.886, 12.456, 13.041, 13.639, 14.252, 14.877, 15.516, 16.168, 16.834, 17.514, 18.207, 18.912, 19.629, 20.358, 21.101, 21.856, 22.622, 23.398, 24.186, 24.984, 25.792, 26.612, 27.440, 28.278, 29.124, 29.978, 30.839, 31.708, 32.585, 33.469, 34.359, 35.253, 36.153, 37.058, 37.966, 38.878, 39.794, 40.703, 41.612, 42.521, 43.430, 44.339, 45.248, 46.157, 47.066, 47.975, 48.885, 49.794, 50.699, 51.593, 52.473, 53.340, 54.194, 55.036, 55.865, 56.682, 57.488, 58.283, 59.066, 59.839, 60.601, 61.353, 62.094, 62.825, 63.546, 64.258, 64.959, 65.651, 66.334, 67.007, 67.670, 68.324, 68.969, 69.604, 70.231, 70.848, 71.456, 72.054, 72.644, 73.224, 73.795, 74.357, 74.910, 75.454, 75.988, 76.513, 77.029, 77.536, 78.033, 78.521, 78.999, 79.468, 79.928, 80.378, 80.819, 81.249, 81.671, 82.082, 82.484, 82.876, 83.258, 83.630, 83.992, 84.344, 84.686, 85.018, 85.339, 85.651, 85.952, 86.242, 86.522, 86.792, 87.051, 87.300, 87.537, 87.764, 87.981, 88.187, 88.381, 88.565, 88.738, 88.900, 89.051, 89.191, 89.320, 89.438, 89.544, 89.640, 89.724, 89.797, 89.859, 89.910, 89.949, 89.977, 89.994, 90.000, 180.000, }\r\n\r\nMoveLUT.largeBase.talonB[3] = {}\r\nMoveLUT.largeBase.talonB[3].dataNum = 224\r\nMoveLUT.largeBase.talonB[3].length = 221.372\r\nMoveLUT.largeBase.talonB[3].posXZ = {{0.000, 0.000}, {0.003, 1.000}, {0.011, 2.000}, {0.025, 3.000}, {0.045, 4.000}, {0.070, 5.000}, {0.100, 6.000}, {0.136, 7.000}, {0.178, 8.000}, {0.226, 8.999}, {0.279, 9.999}, {0.337, 10.999}, {0.402, 11.998}, {0.472, 12.997}, {0.547, 13.996}, {0.629, 14.995}, {0.716, 15.994}, {0.809, 16.992}, {0.908, 17.990}, {1.012, 18.987}, {1.122, 19.984}, {1.238, 20.981}, {1.360, 21.977}, {1.488, 22.972}, {1.621, 23.967}, {1.760, 24.961}, {1.906, 25.955}, {2.057, 26.947}, {2.214, 27.939}, {2.377, 28.929}, {2.546, 29.919}, {2.721, 30.907}, {2.901, 31.895}, {3.088, 32.881}, {3.281, 33.865}, {3.479, 34.848}, {3.683, 35.830}, {3.894, 36.810}, {4.110, 37.788}, {4.332, 38.765}, {4.560, 39.739}, {4.795, 40.712}, {5.035, 41.682}, {5.281, 42.650}, {5.532, 43.616}, {5.789, 44.579}, {6.052, 45.539}, {6.321, 46.497}, {6.595, 47.453}, {6.875, 48.405}, {7.160, 49.354}, {7.451, 50.300}, {7.747, 51.243}, {8.048, 52.182}, {8.355, 53.118}, {8.667, 54.050}, {8.984, 54.978}, {9.306, 55.902}, {9.633, 56.823}, {9.964, 57.739}, {10.300, 58.651}, {10.641, 59.559}, {10.986, 60.462}, {11.335, 61.360}, {11.689, 62.254}, {12.046, 63.143}, {12.407, 64.027}, {12.772, 64.906}, {13.141, 65.780}, {13.513, 66.649}, {13.888, 67.512}, {14.266, 68.370}, {14.647, 69.222}, {15.031, 70.068}, {15.418, 70.909}, {15.806, 71.745}, {16.197, 72.574}, {16.590, 73.397}, {16.985, 74.215}, {17.381, 75.026}, {17.778, 75.832}, {18.179, 76.629}, {18.589, 77.421}, {19.007, 78.209}, {19.434, 78.992}, {19.870, 79.770}, {20.314, 80.543}, {20.767, 81.311}, {21.228, 82.075}, {21.697, 82.833}, {22.175, 83.586}, {22.662, 84.333}, {23.156, 85.076}, {23.659, 85.812}, {24.170, 86.543}, {24.689, 87.269}, {25.215, 87.988}, {25.750, 88.702}, {26.293, 89.410}, {26.843, 90.111}, {27.402, 90.807}, {27.967, 91.496}, {28.541, 92.179}, {29.122, 92.856}, {29.710, 93.526}, {30.306, 94.190}, {30.909, 94.847}, {31.519, 95.497}, {32.137, 96.140}, {32.761, 96.777}, {33.393, 97.407}, {34.031, 98.029}, {34.677, 98.645}, {35.329, 99.253}, {35.988, 99.855}, {36.653, 100.448}, {37.325, 101.035}, {38.003, 101.614}, {38.688, 102.185}, {39.379, 102.749}, {40.076, 103.305}, {40.780, 103.853}, {41.489, 104.394}, {42.204, 104.927}, {42.925, 105.451}, {43.652, 105.968}, {44.385, 106.477}, {45.123, 106.977}, {45.867, 107.470}, {46.616, 107.954}, {47.370, 108.429}, {48.129, 108.897}, {48.894, 109.356}, {49.664, 109.806}, {50.438, 110.248}, {51.218, 110.681}, {52.002, 111.106}, {52.791, 111.522}, {53.585, 111.929}, {54.382, 112.328}, {55.182, 112.722}, {55.984, 113.113}, {56.788, 113.500}, {57.594, 113.883}, {58.402, 114.263}, {59.213, 114.639}, {60.025, 115.012}, {60.841, 115.381}, {61.658, 115.747}, {62.478, 116.108}, {63.301, 116.466}, {64.127, 116.820}, {64.955, 117.170}, {65.786, 117.516}, {66.620, 117.858}, {67.456, 118.196}, {68.296, 118.530}, {69.139, 118.860}, {69.984, 119.186}, {70.833, 119.508}, {71.685, 119.825}, {72.540, 120.138}, {73.398, 120.447}, {74.259, 120.751}, {75.124, 121.051}, {75.991, 121.347}, {76.862, 121.638}, {77.736, 121.925}, {78.613, 122.207}, {79.494, 122.485}, {80.377, 122.758}, {81.264, 123.027}, {82.154, 123.291}, {83.047, 123.550}, {83.944, 123.804}, {84.843, 124.054}, {85.746, 124.299}, {86.652, 124.539}, {87.561, 124.774}, {88.473, 125.005}, {89.389, 125.230}, {90.307, 125.451}, {91.228, 125.666}, {92.153, 125.877}, {93.080, 126.083}, {94.011, 126.283}, {94.944, 126.479}, {95.880, 126.669}, {96.819, 126.855}, {97.761, 127.035}, {98.705, 127.210}, {99.653, 127.380}, {100.603, 127.545}, {101.555, 127.704}, {102.510, 127.859}, {103.468, 128.008}, {104.428, 128.152}, {105.390, 128.290}, {106.355, 128.423}, {107.322, 128.551}, {108.291, 128.674}, {109.262, 128.791}, {110.235, 128.903}, {111.211, 129.010}, {112.188, 129.111}, {113.167, 129.207}, {114.148, 129.297}, {115.130, 129.382}, {116.114, 129.461}, {117.099, 129.536}, {118.086, 129.604}, {119.074, 129.667}, {120.064, 129.725}, {121.054, 129.777}, {122.045, 129.824}, {123.038, 129.865}, {124.031, 129.901}, {125.025, 129.931}, {126.019, 129.956}, {127.014, 129.975}, {128.009, 129.989}, {129.004, 129.997}, {130.000, 130.000}, {130.000, 140.000}, }\r\nMoveLUT.largeBase.talonB[3].rotY = {0.000, 0.004, 0.016, 0.036, 0.064, 0.100, 0.144, 0.195, 0.255, 0.323, 0.399, 0.483, 0.575, 0.676, 0.784, 0.901, 1.026, 1.159, 1.300, 1.450, 1.607, 1.774, 1.948, 2.131, 2.323, 2.522, 2.731, 2.948, 3.173, 3.407, 3.649, 3.900, 4.159, 4.428, 4.704, 4.990, 5.284, 5.586, 5.898, 6.218, 6.547, 6.884, 7.231, 7.586, 7.950, 8.322, 8.703, 9.092, 9.490, 9.897, 10.312, 10.736, 11.168, 11.608, 12.056, 12.514, 12.979, 13.453, 13.935, 14.425, 14.922, 15.428, 15.941, 16.462, 16.991, 17.527, 18.070, 18.621, 19.179, 19.744, 20.316, 20.894, 21.480, 22.072, 22.671, 23.276, 23.887, 24.504, 25.126, 25.755, 26.389, 27.022, 27.656, 28.290, 28.924, 29.558, 30.191, 30.825, 31.459, 32.093, 32.727, 33.360, 33.994, 34.628, 35.262, 35.896, 36.530, 37.163, 37.797, 38.431, 39.065, 39.699, 40.332, 40.966, 41.600, 42.234, 42.868, 43.501, 44.135, 44.769, 45.403, 46.037, 46.670, 47.304, 47.938, 48.572, 49.206, 49.839, 50.473, 51.107, 51.741, 52.375, 53.008, 53.642, 54.276, 54.910, 55.544, 56.177, 56.811, 57.445, 58.079, 58.713, 59.346, 59.980, 60.614, 61.248, 61.882, 62.515, 63.149, 63.782, 64.409, 65.027, 65.637, 66.239, 66.832, 67.417, 67.994, 68.563, 69.125, 69.678, 70.223, 70.761, 71.291, 71.814, 72.329, 72.837, 73.337, 73.829, 74.315, 74.793, 75.263, 75.727, 76.183, 76.631, 77.073, 77.507, 77.934, 78.354, 78.766, 79.171, 79.569, 79.960, 80.344, 80.720, 81.089, 81.451, 81.806, 82.153, 82.493, 82.826, 83.151, 83.469, 83.780, 84.084, 84.380, 84.668, 84.950, 85.223, 85.490, 85.749, 86.000, 86.244, 86.481, 86.710, 86.931, 87.145, 87.351, 87.550, 87.741, 87.925, 88.100, 88.268, 88.429, 88.581, 88.726, 88.864, 88.993, 89.115, 89.229, 89.335, 89.433, 89.523, 89.606, 89.681, 89.748, 89.807, 89.858, 89.901, 89.937, 89.965, 89.984, 89.996, 90.000, 180.000, }\r\n\r\n-- END AUTO-GENERATED PART\r\n---------------------------",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "eaca1b",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.28,
          "posY": 1.06,
          "posZ": -9.53,
          "rotX": -1.10158105E-07,
          "rotY": 179.997345,
          "rotZ": 2.38033772E-06,
          "scaleX": 0.9499995,
          "scaleY": 0.9499995,
          "scaleZ": 0.9499995
        },
        "Nickname": "Calculate",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/calculate.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "372d38",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.37867081,
              "posY": 1.201471,
              "posZ": -9.630814,
              "rotX": 5.36042035E-06,
              "rotY": -0.0052038487,
              "rotZ": -1.59664319E-06,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Calculate",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/calculate.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'calculate'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "8d45a9",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.36,
          "posY": 1.06,
          "posZ": -9.56,
          "rotX": 2.041219E-07,
          "rotY": 180.024124,
          "rotZ": 4.66444271E-06,
          "scaleX": 0.94999963,
          "scaleY": 0.94999963,
          "scaleZ": 0.94999963
        },
        "Nickname": "Reinforce",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/830199836523210430/725644DA3EB593D6C7FF7AE77040CE8F07495C4D/",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/reinforce.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "2907b3",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 1.52087951,
              "posY": 1.2014389,
              "posZ": -9.142024,
              "rotX": 9.785413E-07,
              "rotY": 134.959824,
              "rotZ": 180.0,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "http://cloud-3.steamusercontent.com/ugc/830199836523210430/725644DA3EB593D6C7FF7AE77040CE8F07495C4D/",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/reinforce.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'reinforce'\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "RotationValues": [
              {
                "Value": "Reinforce (fore)",
                "Rotation": {
                  "x": 0.0,
                  "y": 0.0,
                  "z": 180.0
                }
              },
              {
                "Value": "Reinforce (aft)",
                "Rotation": {
                  "x": 0.0,
                  "y": 0.0,
                  "z": 0.0
                }
              }
            ]
          }
        ]
      },
      {
        "GUID": "9611d6",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.4,
          "posY": 1.06,
          "posZ": -7.02,
          "rotX": -1.88001422E-06,
          "rotY": 179.990067,
          "rotZ": 1.69318741E-06,
          "scaleX": 0.95,
          "scaleY": 0.95,
          "scaleZ": 0.95
        },
        "Nickname": "Evade",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/evade.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "a74f68",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.714675248,
              "posY": 1.20143747,
              "posZ": -6.70958328,
              "rotX": 1.44957141E-06,
              "rotY": -0.004239473,
              "rotZ": 4.72741164E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Evade",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/evade.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'evade'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "339681",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.32,
          "posY": 1.06,
          "posZ": -7.07,
          "rotX": 5.273582E-07,
          "rotY": 179.997345,
          "rotZ": 7.909573E-08,
          "scaleX": 0.95,
          "scaleY": 0.95,
          "scaleZ": 0.95
        },
        "Nickname": "Focus",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/focus.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "2be770",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.45393848,
              "posY": 1.20149124,
              "posZ": -6.8729825,
              "rotX": 1.993017E-06,
              "rotY": -0.003983628,
              "rotZ": 6.297235E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Focus",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/focus.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'focus'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "95141a",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.34,
          "posY": 1.06,
          "posZ": -12.2,
          "rotX": -1.12384023E-05,
          "rotY": 180.0001,
          "rotZ": -4.326845E-06,
          "scaleX": 0.94999963,
          "scaleY": 0.94999963,
          "scaleZ": 0.94999963
        },
        "Nickname": "Disarm",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/disarm.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "d28a30",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 1.312591,
              "posY": 1.20141542,
              "posZ": -12.002964,
              "rotX": 4.45558271E-06,
              "rotY": 0.0008105867,
              "rotZ": 2.00603381E-06,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Disarm",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/disarm.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'disarm'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "5806cd",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": 1.06,
          "posZ": -14.66,
          "rotX": 8.992164E-06,
          "rotY": 179.980316,
          "rotZ": -8.305332E-07,
          "scaleX": 0.9499995,
          "scaleY": 0.9499995,
          "scaleZ": 0.9499995
        },
        "Nickname": "Jam",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/jam.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "44385d",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -0.468286723,
              "posY": 1.20146012,
              "posZ": -14.3681507,
              "rotX": -5.354497E-07,
              "rotY": 0.0335569456,
              "rotZ": -3.38761E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Jam",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/jam.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'jam'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "e1c2fa",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.36,
          "posY": 1.06,
          "posZ": -12.2,
          "rotX": -5.936132E-07,
          "rotY": 179.980209,
          "rotZ": -5.064005E-06,
          "scaleX": 0.94999963,
          "scaleY": 0.94999963,
          "scaleZ": 0.94999963
        },
        "Nickname": "Tractor",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/tractor.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "ec28ad",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.65459585,
              "posY": 1.202873,
              "posZ": -12.4641361,
              "rotX": 1.0520514E-06,
              "rotY": 15.0197926,
              "rotZ": 180.0,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Tractor",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/tractor.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Target lock color and name script\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'tractor'\r\n\r\n-- Was this lock tinted and named already?\r\nset = false\r\n\r\n-- Colors for tinting on pickup\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if set  then\r\n        local state = {set=set}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(save_state)\r\n    if save_state ~= '' and save_state ~= 'null' and save_state ~= nil then\r\n        set = JSON.decode(save_state).set\r\n        --[[\r\n        assetTable = {\r\n            {name=\"BoostS\", url=\"http://cloud-3.steamusercontent.com/ugc/816750219423811083/7C1C7A560593EDFF93D9D5DA5A79B44ADF504860/\"},\r\n            {name=\"BarrelL\", url=\"http://cloud-3.steamusercontent.com/ugc/816750219423807162/1DA310CD1B412508B5213EE37476F2A2EB9B4A38/\"},\r\n            {name=\"BarrelLF\", url=\"http://cloud-3.steamusercontent.com/ugc/816750219423808004/8BEBBB8A447DA3F335AE361885BD3E8599C95490/\"},\r\n            {name=\"BarrelLB\", url=\"http://cloud-3.steamusercontent.com/ugc/816750219423808688/985FC18E99432A2C05B54F2B0E5C151BD6B582D2/\"},\r\n            {name=\"BarrelR\", url=\"http://cloud-3.steamusercontent.com/ugc/816750219423809409/5196FEE75132E292D9E22F7B3054F396CC4EB04A/\"},\r\n            {name=\"BarrelRF\", url=\"http://cloud-3.steamusercontent.com/ugc/816750219423809765/75916DF74C1B0A8AC752204D20622EAC349D7723/\"},\r\n            {name=\"BarrelRB\", url=\"http://cloud-3.steamusercontent.com/ugc/816750219423810373/C796629CCC0BE925B9CCFF9090439C21534EB9EC/\"}}\r\n\r\n        self.UI.setCustomAssets(assetTable)--]]\r\n    end\r\nend\r\n\r\n-- Set function for external calls\r\nfunction manualSet(arg)\r\n    ship=arg.ref\r\n    set = true\r\n    self.UI.setAttribute(\"Center\", \"active\", \"true\")\r\nend\r\n\r\n-- Set name on drop near a ship\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ship.type== 'Figurine' and ship.getName() ~= '' then\r\n            local pos = ship.getPosition()\r\n            local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n            if dist < minDist then\r\n                nearest = ship\r\n                minDist = dist\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        ship = nearest\r\n        set = true\r\n\r\n        self.setRotation(nearest.getRotation())\r\n\r\n        printToAll(ship.getName()..\" takes a tractor token\")\r\n    else\r\n        ship = nil\r\n        set = false\r\n    end\r\nend\r\n\r\nstat=false\r\n\r\nfunction onContextOpen(player_color)\r\n    showBtn()\r\nend\r\n\r\nfunction showBtn()\r\n    if stat==false and ship~=nil then\r\n        if self.is_face_down then\r\n            self.UI.setAttribute(\"btnPanel\", \"rotation\", \"180 0 0\")\r\n            self.UI.setAttribute(\"btnPanel\", \"position\", \"0 0 30\")\r\n        else\r\n            self.UI.setAttribute(\"btnPanel\", \"rotation\", \"0 0 180\")\r\n            self.UI.setAttribute(\"btnPanel\", \"position\", \"0 0 -30\")\r\n        end\r\n        self.UI.show(\"btnPanel\")\r\n        stat=true\r\n    end\r\nend\r\n\r\nfunction hideBtn()\r\n    if stat==true then\r\n        self.UI.hide(\"btnPanel\")\r\n        stat=false\r\n    end\r\nend\r\n\r\nfunction BstS()\r\n    ship.setDescription('s1b')\r\nend\r\n\r\nfunction BlF()\r\n    ship.setDescription('rl1')\r\nend\r\n\r\nfunction Bl()\r\n    ship.setDescription('rl2')\r\nend\r\n\r\nfunction BlB()\r\n    ship.setDescription('rl3')\r\nend\r\n\r\nfunction BrF()\r\n    ship.setDescription('rr1')\r\nend\r\n\r\nfunction Br()\r\n    ship.setDescription('rr2')\r\nend\r\n\r\nfunction BrB()\r\n    ship.setDescription('rr3')\r\nend\r\n\r\nfunction RotL()\r\n    ship.setDescription('tl4')\r\nend\r\n\r\nfunction RotR()\r\n    ship.setDescription('tr4')\r\nend\r\n\r\nfunction Delete()\r\n    self.destruct()\r\nend",
            "LuaScriptState": "{\"set\":true}",
            "XmlUI": "<Panel id=\"BtnPanel\"\r\n    width=\"400\"\r\n    height=\"400\"\r\n    position=\"0 0 -30\"\r\n    rotation=\"0 0 180\"\r\n    color=\"#aaffaa00\"\r\n    onMouseExit=\"hideBtn\"\r\n    showAnimation=\"Grow\"\r\n    hideAnimation=\"Shrink\"\r\n    active=\"false\"\r\n    raycastTarget='true'>\r\n    <Button id=\"BoostSbtn\" offsetXY=\"0 150\" width=\"80\" height=\"80\" active=\"true\" onClick=\"BstS\" color=\"#aaffaa00\">\r\n        <Image id=\"BoostSIcon\" image=\"BoostS\" preserveAspect=\"true\"></Image></Button>\r\n    <Button id=\"BarrelLFbtn\" offsetXY=\"-150 100\" width=\"80\" height=\"80\" active=\"true\" onClick=\"BlF\" color=\"#aaffaa00\">\r\n        <Image id=\"BLFIcon\" image=\"BarrelLF\" preserveAspect=\"true\"></Image></Button>\r\n    <Button id=\"BarrelLbtn\" offsetXY=\"-150 0\" width=\"80\" height=\"80\" active=\"true\" onClick=\"Bl\" color=\"#aaffaa00\">\r\n        <Image id=\"BLIcon\" image=\"BarrelL\" preserveAspect=\"true\"></Image></Button>\r\n    <Button id=\"BarrelLBbtn\" offsetXY=\"-150 -100\" width=\"80\" height=\"80\" active=\"true\" onClick=\"BlB\" color=\"#aaffaa00\">\r\n        <Image id=\"BLBIcon\" image=\"BarrelLB\" preserveAspect=\"true\"></Image></Button>\r\n    <Button id=\"BarrelRFbtn\" offsetXY=\"150 100\" width=\"80\" height=\"80\" active=\"true\" onClick=\"BrF\" color=\"#aaffaa00\">\r\n        <Image id=\"BRFIcon\" image=\"BarrelRF\" preserveAspect=\"true\"></Image></Button>\r\n    <Button id=\"BarrelRbtn\" offsetXY=\"150 0\" width=\"80\" height=\"80\" active=\"true\" onClick=\"Br\" color=\"#aaffaa00\">\r\n        <Image id=\"BRIcon\" image=\"BarrelR\" preserveAspect=\"true\"></Image></Button>\r\n    <Button id=\"BarrelRBbtn\" offsetXY=\"150 -100\" width=\"80\" height=\"80\" active=\"true\" onClick=\"BrB\" color=\"#aaffaa00\">\r\n        <Image id=\"BRBIcon\" image=\"BarrelRB\" preserveAspect=\"true\"></Image></Button>\r\n    <Button id=\"Delbtn\" offsetXY=\"0 -50\" width=\"100\" height=\"60\" active=\"true\" onClick=\"Delete\" color=\"white\" fontStyle='Bold' fontSize='25'>DEL</Button>\r\n    <Button id=\"RotLbtn\" offsetXY=\"-45 40\" width=\"70\" height=\"70\" active=\"true\" onClick=\"RotL\" color=\"white\" fontStyle='Bold' fontSize='25'>90°L</Button>\r\n    <Button id=\"RotRbtn\" offsetXY=\"45 40\" width=\"70\" height=\"70\" active=\"true\" onClick=\"RotR\" color=\"white\" fontStyle='Bold' fontSize='25'>90°R</Button>\r\n\r\n</Panel>",
            "CustomUIAssets": [
              {
                "Name": "BoostS",
                "URL": "http://cloud-3.steamusercontent.com/ugc/816750219423811083/7C1C7A560593EDFF93D9D5DA5A79B44ADF504860/"
              },
              {
                "Name": "BarrelL",
                "URL": "http://cloud-3.steamusercontent.com/ugc/816750219423807162/1DA310CD1B412508B5213EE37476F2A2EB9B4A38/"
              },
              {
                "Name": "BarrelLF",
                "URL": "http://cloud-3.steamusercontent.com/ugc/816750219423808004/8BEBBB8A447DA3F335AE361885BD3E8599C95490/"
              },
              {
                "Name": "BarrelLB",
                "URL": "http://cloud-3.steamusercontent.com/ugc/816750219423808688/985FC18E99432A2C05B54F2B0E5C151BD6B582D2/"
              },
              {
                "Name": "BarrelR",
                "URL": "http://cloud-3.steamusercontent.com/ugc/816750219423809409/5196FEE75132E292D9E22F7B3054F396CC4EB04A/"
              },
              {
                "Name": "BarrelRF",
                "URL": "http://cloud-3.steamusercontent.com/ugc/816750219423809765/75916DF74C1B0A8AC752204D20622EAC349D7723/"
              },
              {
                "Name": "BarrelRB",
                "URL": "http://cloud-3.steamusercontent.com/ugc/816750219423810373/C796629CCC0BE925B9CCFF9090439C21534EB9EC/"
              }
            ]
          }
        ]
      },
      {
        "GUID": "765252",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.93,
          "posY": 1.06,
          "posZ": -0.06,
          "rotX": 2.8415235E-07,
          "rotY": 180.0,
          "rotZ": 180.0,
          "scaleX": 0.94999963,
          "scaleY": 0.94999963,
          "scaleZ": 0.94999963
        },
        "Nickname": "Target Locks",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/TL.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/TL.png",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "function onLoad(save_state)\r\n    self.addContextMenuItem(\"Color by player color\",\r\n        function(player_color)\r\n            Global.call(\"API_SetPlayerConfig\", {player_color=player_color, param_name=\"TargetLockColorMode\", value=\"PlayerColor\"})\r\n        end , false)\r\n    self.addContextMenuItem(\"Color by ship color id\",\r\n        function(player_color)\r\n            Global.call(\"API_SetPlayerConfig\", {player_color=player_color, param_name=\"TargetLockColorMode\", value=\"ShipColorId\"})\r\n        end , false)\r\n    self.addContextMenuItem(\"Display name off\",\r\n        function(player_color)\r\n            Global.call(\"API_SetPlayerConfig\", {player_color=player_color, param_name=\"TargetLockDisplayName\", value=\"false\"})\r\n        end , false)\r\n    self.addContextMenuItem(\"Display name on\",\r\n        function(player_color)\r\n            Global.call(\"API_SetPlayerConfig\", {player_color=player_color, param_name=\"TargetLockDisplayName\", value=\"true\"})\r\n        end , false)\r\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b088a2",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.88053215,
              "posY": 1.19711483,
              "posZ": -0.179068,
              "rotX": 359.959625,
              "rotY": 0.008054567,
              "rotZ": 180.015823,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Target Lock",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/TL.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/TL.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Target lock color and name script\r\n-- ~~~~~~\r\n\r\n-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'targetLock'\r\n\r\n-- Was this lock tinted and named already?\r\nset = false\r\n\r\n-- Colors for tinting on pickup\r\ncolorTable = {}\r\ncolorTable['Red']= {1, 0, 0}\r\ncolorTable['Brown']= {0.6, 0.4, 0}\r\ncolorTable['White']= {1, 1, 1}\r\ncolorTable['Pink']= {1, 0.4, 0.8}\r\ncolorTable['Purple']= {0.8, 0, 0.8}\r\ncolorTable['Blue']= {0, 0, 1}\r\ncolorTable['Teal']= {0.2, 1, 0.8}\r\ncolorTable['Green']= {0, 1, 0}\r\ncolorTable['Yellow']= {1, 1, 0}\r\ncolorTable['Orange']= {1, 0.4, 0}\r\ncolorTable['Black']= {0.2, 0.2, 0.2}\r\n\r\n-- Save self state\r\nfunction onSave()\r\n    if set  then\r\n        local state = {set=set}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Restore self state\r\nfunction onLoad(save_state)\r\n    if save_state ~= '' and save_state ~= 'null' and save_state ~= nil then\r\n        set = JSON.decode(save_state).set\r\n    end\r\nend\r\n\r\n-- Set function for external calls\r\nfunction manualSet(arg)\r\n    set = true\r\n    if arg.color then\r\n      self.setColorTint(colorTable[arg.color])\r\n    end\r\nend\r\n\r\n-- Tint on pick up\r\nfunction onPickedUp()\r\n    if not set and self.held_by_color ~= nil then\r\n      self.setColorTint(colorTable[self.held_by_color])\r\n    end\r\nend\r\n\r\n-- Set name on drop near a ship\r\nfunction onDropped(player_color)\r\n    local spos = self.getPosition()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n    for k,ship in pairs(getAllObjects()) do\r\n        local name = ship.getName()\r\n        if ship.type== 'Figurine' and name ~= '' then\r\n            local pos = ship.getPosition()\r\n            local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n            if dist < minDist then\r\n                nearest = ship\r\n                minDist = dist\r\n            end\r\n        elseif set and (name:find('Asteroid') or name:find('Debris') or name:find('Chute debris') or name:find('Cloud') or name:find('Spare') or name:find('Obstacle')) ~= nil then\r\n            local pos = ship.getPosition()\r\n            local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n            if dist < minDist then\r\n                nearest = ship\r\n                minDist = dist\r\n            end\r\n        end\r\n    end\r\n\r\n    if not set then\r\n        if nearest ~= nil then\r\n            setOwner({ship=nearest,player=player_color})\r\n\r\n        end\r\n    else -- Allready set, now Assign to target\r\n        assignToShip({ship=nearest})\r\n    end\r\nend\r\n\r\n-- Sets the owner of the token. This is the ship responsible for the target\r\n-- lock, and who it is named after. Externally accessible.\r\nfunction setOwner(args)\r\n    local ship = args.ship\r\n    self.setName(ship.getName())\r\n    printToAll('Target lock named for ' .. ship.getName(), {0.2, 0.2, 1})\r\n    local displayName = true\r\n    if args.player then\r\n        if Global.call(\"API_GetPlayerConfig\", {player_color=args.player, param_name=\"TargetLockColorMode\"}) == \"ShipColorId\" then\r\n            local ColorId = ship.getTable(\"Data\").ColorId or nil\r\n            if ColorId and ColorId.a > 0 then\r\n                self.setColorTint(ColorId)\r\n            end\r\n        end\r\n        displayName = Global.call(\"API_GetPlayerConfig\", {player_color=args.player, param_name=\"TargetLockDisplayName\"}) == \"true\"\r\n    end\r\n    if displayName then\r\n        self.UI.setAttribute(\"IdLabel\", \"text\", getIdText(ship.getName()))\r\n    end\r\n    self.setRotationSmooth(ship.getRotation(),false,true)\r\n    set = true\r\nend\r\n\r\n-- Assigns the token to a ship. This is the ship being target locked, and which\r\n-- the token sits beside. Externally accessible\r\nfunction assignToShip(args)\r\n    local ship = args.ship\r\n    Global.call(\"API_AssignToken\", {token=self, ship=ship})\r\nend\r\n\r\nfunction getIdText(fullName)\r\n    trimmedname = fullName:match'^%s*\"(.*%S)\"' or fullName\r\n    if #trimmedname < 20 then\r\n        return trimmedname\r\n    end\r\n    initials = trimmedname:sub(1,1)\r\n    for m in string.gmatch(trimmedname, \"%s(%w)\") do\r\n        initials = initials .. m\r\n    end\r\n    return initials\r\nend",
            "LuaScriptState": "",
            "XmlUI": "<Panel id=\"IdPanel\"\r\n    active=\"true\"\r\n    width=\"200\"\r\n    height=\"200\"\r\n    position=\"0 0 -11\"\r\n    rotation=\"180 180 180\"\r\n    color=\"#aaffaa00\">\r\n\r\n    <Text id=\"IdLabel\" resizeTextForBestFit=\"true\" resizeTextMinSize=\"30\" resizeTextMaxSize=\"70\" color=\"#FFFFFF\" rotation=\"180 180 0\" fontSize=\"50\" fontStyle=\"Bold\"></Text>\r\n</Panel>"
          }
        ]
      },
      {
        "GUID": "ffb783",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -48.30383,
          "posY": 0.9652229,
          "posZ": -9.711333,
          "rotX": -8.356441E-07,
          "rotY": 270.006073,
          "rotZ": -4.14812973E-07,
          "scaleX": 3.63,
          "scaleY": 3.63,
          "scaleZ": 3.63
        },
        "Nickname": "Epic Objectives",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective1.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CustomShader": {
            "SpecularColor": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "544f9e",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -48.35316,
              "posY": 1.05794632,
              "posZ": -9.74276352,
              "rotX": 0.00202465872,
              "rotY": -0.00289938878,
              "rotZ": 0.00149536273,
              "scaleX": 3.63,
              "scaleY": 3.63,
              "scaleZ": 3.63
            },
            "Nickname": "Objective 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective1.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
              "Convex": true,
              "MaterialIndex": 3,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "SpecularIntensity": 0.0,
                "SpecularSharpness": 2.0,
                "FresnelStrength": 0.0
              },
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "60ca39",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -48.37217,
                  "posY": 0.9652231,
                  "posZ": -9.694238,
                  "rotX": -3.21418355E-07,
                  "rotY": 270.0019,
                  "rotZ": 1.22121966E-08,
                  "scaleX": 3.63,
                  "scaleY": 3.63,
                  "scaleZ": 3.63
                },
                "Nickname": "Objective 2",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective2.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "d8bd26",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -48.37217,
                  "posY": 0.9652232,
                  "posZ": -9.694238,
                  "rotX": 4.924878E-07,
                  "rotY": 270.0019,
                  "rotZ": 6.83318831E-07,
                  "scaleX": 3.63,
                  "scaleY": 3.63,
                  "scaleZ": 3.63
                },
                "Nickname": "Objective 3",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective3.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "ff423c",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -48.37217,
                  "posY": 0.9652232,
                  "posZ": -9.694238,
                  "rotX": 3.3479003E-07,
                  "rotY": 270.0019,
                  "rotZ": 7.114067E-07,
                  "scaleX": 3.63,
                  "scaleY": 3.63,
                  "scaleZ": 3.63
                },
                "Nickname": "Objective 4",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective4.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "1a075c",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -48.3894424,
                  "posY": 0.9652232,
                  "posZ": -9.852478,
                  "rotX": -8.057319E-07,
                  "rotY": 270.001862,
                  "rotZ": 1.13368174E-06,
                  "scaleX": 3.63,
                  "scaleY": 3.63,
                  "scaleZ": 3.63
                },
                "Nickname": "Objective 5",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective5.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/epic/objective.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "717749",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 2.91,
          "posY": 1.01,
          "posZ": 1.6,
          "rotX": -1.00788238E-05,
          "rotY": -0.00170310133,
          "rotZ": -1.259284E-05,
          "scaleX": 0.38,
          "scaleY": 0.38,
          "scaleZ": 0.38
        },
        "Nickname": "Energy",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/energy.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "97421f",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 3.05749822,
              "posY": 1.09430444,
              "posZ": 1.68757725,
              "rotX": -3.899491E-07,
              "rotY": 0.002251422,
              "rotZ": 2.62382036E-06,
              "scaleX": 0.3750001,
              "scaleY": 0.3750001,
              "scaleZ": 0.3750001
            },
            "Nickname": "Energy",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/energy.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Energy'",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "07d45b",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.46,
          "posY": 1.06,
          "posZ": 3.81,
          "rotX": 1.38231655E-06,
          "rotY": 0.017445188,
          "rotZ": 2.55085024E-06,
          "scaleX": 0.94999963,
          "scaleY": 0.94999963,
          "scaleZ": 0.94999963
        },
        "Nickname": "Shield",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/shield.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "dc0633",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 1.58953667,
              "posY": 1.197146,
              "posZ": 3.79610634,
              "rotX": 6.02068837E-07,
              "rotY": 269.9911,
              "rotZ": 1.12261353E-06,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Shield",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/shield.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Shield'",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "6": {
                "GUID": "63f190",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -7.293832,
                  "posY": 0.96437484,
                  "posZ": 22.2829266,
                  "rotX": -6.10254647E-05,
                  "rotY": 329.9859,
                  "rotZ": 4.755629E-06,
                  "scaleX": 0.35000062,
                  "scaleY": 0.35000062,
                  "scaleZ": 0.35000062
                },
                "Nickname": "Shield",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.8554007,
                  "g": 0.8554007,
                  "b": 0.8554007
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "http://cloud-3.steamusercontent.com/ugc/955216889273528548/1833BD1A88780DFA4CC00A64EC42E6C083D0DF8D/",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/955216889273195551/1412A95DA6B1BE149B81583DAF55D910C9D54546/",
                  "NormalURL": "",
                  "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/955216889273187149/6C7E26DAB844854D19A8B83BC2FDB50AB6D8DA41/",
                  "Convex": true,
                  "MaterialIndex": 0,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 2.0,
                    "SpecularSharpness": 8.0,
                    "FresnelStrength": 1.0
                  },
                  "CastShadows": false
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "7": {
                "GUID": "7d4c92",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -5.729154,
                  "posY": 0.9643754,
                  "posZ": 22.2893562,
                  "rotX": -1.67342444E-06,
                  "rotY": 329.985016,
                  "rotZ": -1.185585E-05,
                  "scaleX": 0.35000062,
                  "scaleY": 0.35000062,
                  "scaleZ": 0.35000062
                },
                "Nickname": "Shield",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.8554007,
                  "g": 0.8554007,
                  "b": 0.8554007
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "http://cloud-3.steamusercontent.com/ugc/955216889273564722/3275564AA36F450398CF1F5EDBE3B148AD19CDA0/",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/955216889273195551/1412A95DA6B1BE149B81583DAF55D910C9D54546/",
                  "NormalURL": "",
                  "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/955216889273187149/6C7E26DAB844854D19A8B83BC2FDB50AB6D8DA41/",
                  "Convex": true,
                  "MaterialIndex": 0,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 2.0,
                    "SpecularSharpness": 8.0,
                    "FresnelStrength": 1.0
                  },
                  "CastShadows": false
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "2": {
                "GUID": "bc648a",
                "Name": "Custom_Token",
                "Transform": {
                  "posX": -18.4722252,
                  "posY": 1.01000011,
                  "posZ": 23.4346733,
                  "rotX": -7.863257E-06,
                  "rotY": 255.009033,
                  "rotZ": 1.01406313E-05,
                  "scaleX": 0.7577285,
                  "scaleY": 1.0,
                  "scaleZ": 0.7577285
                },
                "Nickname": "Shield",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "http://cloud-3.steamusercontent.com/ugc/925923491973051905/D25FDF340E6315C7DDAA0D62FEE0CE02E99BA38D/",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomToken": {
                    "Thickness": 0.1,
                    "MergeDistancePixels": 15.0,
                    "StandUp": false,
                    "Stackable": false
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "f79c05",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -18.4722271,
                  "posY": 1.0685904,
                  "posZ": 23.4346733,
                  "rotX": 7.774508E-06,
                  "rotY": 255.009155,
                  "rotZ": -0.000117079588,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Shield",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "http://cloud-3.steamusercontent.com/ugc/932677203701185577/DEAFE51105EAB019E7148F0B2360F362973C7276/",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/932677203701009790/4D2DE401590ECCBDA2441A246498FF00EC5E96F0/",
                  "NormalURL": "http://cloud-3.steamusercontent.com/ugc/932677203701172352/71A213D77DE0E6B7D270A5996304E6FA1DE5CDCA/",
                  "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/932677203701185577/DEAFE51105EAB019E7148F0B2360F362973C7276/",
                  "Convex": false,
                  "MaterialIndex": 2,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.674216032,
                      "g": 0.8262486,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.3,
                    "SpecularSharpness": 6.6666646,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "ae5208",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -18.4722271,
                  "posY": 0.9600003,
                  "posZ": 23.4346733,
                  "rotX": 1.17915843E-05,
                  "rotY": 255.009155,
                  "rotZ": -1.15054145E-05,
                  "scaleX": 0.424999952,
                  "scaleY": 0.424999952,
                  "scaleZ": 0.424999952
                },
                "Nickname": "Shield",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": false,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://gist.githubusercontent.com/LokiTricksterGod/a6d25a65c04d816a1320/raw/d78fb5497856f5dd7cee6551cad5eecf11dece3d/XWTTS%20-%20Shields",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/863982204121348273/ECF262AAEB1D20764F34B4497F5F6ACAE1653109/",
                  "NormalURL": "",
                  "ColliderURL": "https://gist.githubusercontent.com/LokiTricksterGod/a6d25a65c04d816a1320/raw/d78fb5497856f5dd7cee6551cad5eecf11dece3d/XWTTS%20-%20Shields",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "5": {
                "GUID": "8811e4",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -18.4722271,
                  "posY": 0.95999974,
                  "posZ": 23.4346733,
                  "rotX": 3.08541967E-05,
                  "rotY": 255.009155,
                  "rotZ": -7.655489E-06,
                  "scaleX": 0.424999952,
                  "scaleY": 0.424999952,
                  "scaleZ": 0.424999952
                },
                "Nickname": "Shield",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": false,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://gist.githubusercontent.com/LokiTricksterGod/a6d25a65c04d816a1320/raw/d78fb5497856f5dd7cee6551cad5eecf11dece3d/XWTTS%20-%20Shields",
                  "DiffuseURL": "http://i.imgur.com/8xEtHov.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://gist.githubusercontent.com/LokiTricksterGod/a6d25a65c04d816a1320/raw/d78fb5497856f5dd7cee6551cad5eecf11dece3d/XWTTS%20-%20Shields",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "224816",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.45,
          "posY": 1.06,
          "posZ": 3.81,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 0.94999963,
          "scaleY": 0.94999963,
          "scaleZ": 0.94999963
        },
        "Nickname": "Charge",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/charge.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "5f667e",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.38520455,
              "posY": 1.19714594,
              "posZ": 3.885899,
              "rotX": 2.57861957E-05,
              "rotY": 135.015961,
              "rotZ": -1.15313367E-06,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Charge",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/charge.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Charge'",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "66e0e0",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -7.98941326,
                  "posY": 1.04942024,
                  "posZ": 3.508211,
                  "rotX": -3.010628E-07,
                  "rotY": 225.0932,
                  "rotZ": 3.62955149E-07,
                  "scaleX": 0.375,
                  "scaleY": 0.375,
                  "scaleZ": 0.375
                },
                "Nickname": "Charge",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.9999998,
                  "g": 0.992160261,
                  "b": 0.9999998
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "http://cloud-3.steamusercontent.com/ugc/955216889273691074/AC67928BB121904A6F9C71DC607765E7117EF477/",
                  "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/955216889273716845/A0D221F06C537D01207D66D050BBD35E12609914/",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Charge'",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "ebb247",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -1.44,
          "posY": 1.06,
          "posZ": 6.01,
          "rotX": 4.07111E-13,
          "rotY": 89.9903946,
          "rotZ": 1.26732057E-05,
          "scaleX": 0.94999963,
          "scaleY": 0.94999963,
          "scaleZ": 0.94999963
        },
        "Nickname": "Force",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/force.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "c47de0",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -1.76297331,
              "posY": 1.20124638,
              "posZ": 6.17812,
              "rotX": 1.18873027E-06,
              "rotY": 0.009623736,
              "rotZ": -4.648346E-06,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "Force",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/flipToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/flip/force.jpg",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'Force'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "4f88fa",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -41.0,
          "posY": 1.0,
          "posZ": 0.0,
          "rotX": 2.32523371E-06,
          "rotY": 89.99447,
          "rotZ": -2.08197639E-06,
          "scaleX": 0.63,
          "scaleY": 0.63,
          "scaleZ": 0.63
        },
        "Nickname": "Range 1-3 Rulers",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj",
          "Convex": false,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "93e119",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -40.9049149,
              "posY": 1.087839,
              "posZ": -0.07940626,
              "rotX": -2.74423473E-06,
              "rotY": 359.990631,
              "rotZ": -5.48110449E-07,
              "scaleX": 0.625,
              "scaleY": 0.625,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj",
              "Convex": false,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "2bca1d",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 2.49,
          "posY": 1.0,
          "posZ": -1.95,
          "rotX": 5.7378594E-07,
          "rotY": 45.0070343,
          "rotZ": -1.03292791E-06,
          "scaleX": 0.44,
          "scaleY": 0.42,
          "scaleZ": 0.44
        },
        "Nickname": "Huge Ship Damage Deck",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.6480837,
          "g": 0.6480837,
          "b": 0.6480837
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786353138697578305/AD03FDE67DAD4C8ADD8586A1BBD1C09CA9F781AA/",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/HugeCritBack.png",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "74698a",
            "Name": "DeckCustom",
            "Transform": {
              "posX": 2.789965,
              "posY": 1.24253058,
              "posZ": -1.70344722,
              "rotX": 357.0393,
              "rotY": 224.869125,
              "rotZ": 183.0147,
              "scaleX": 0.607489169,
              "scaleY": 1.0,
              "scaleZ": 0.607489169
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": false,
            "SidewaysCard": false,
            "DeckIDs": [
              28400,
              28401,
              28402,
              28403,
              28404,
              28405,
              28406,
              28407,
              28408,
              28409,
              28410,
              28411,
              28412,
              28413,
              28414,
              28415,
              28416,
              28417,
              28418,
              28419,
              28420,
              28421,
              28422,
              28423,
              28424,
              28425,
              28426,
              28427,
              28428,
              28429
            ],
            "CustomDeck": {
              "284": {
                "FaceURL": "https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/textures/CritDecks/Huge%20Ship%20Crit%20Deck%20Front.png",
                "BackURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/HugeCritBack.png",
                "NumWidth": 10,
                "NumHeight": 3,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "61f793",
                "Name": "Card",
                "Transform": {
                  "posX": 9.153547,
                  "posY": 1.303785,
                  "posZ": -6.81129026,
                  "rotX": 0.004015987,
                  "rotY": 180.012878,
                  "rotZ": 180.0012,
                  "scaleX": 0.7152412,
                  "scaleY": 1.0,
                  "scaleZ": 0.7152412
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": true,
                "CardID": 28400,
                "SidewaysCard": false,
                "CustomDeck": {
                  "284": {
                    "FaceURL": "https://github.com/JohnnyCheese/TTS_X-Wing2.0/raw/master/assets/textures/CritDecks/Huge%20Ship%20Crit%20Deck%20Front.png",
                    "BackURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/cardback/HugeCritBack.png",
                    "NumWidth": 10,
                    "NumHeight": 3,
                    "BackIsHidden": false,
                    "UniqueBack": false,
                    "Type": 0
                  }
                },
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              {
                "GUID": "41b559",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28401,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "734d49",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28402,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "db2e17",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28403,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "ca9dfc",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28404,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "ee600e",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28405,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "669e26",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28406,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "2424f5",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28407,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "851a51",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28408,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "e1ee7b",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28409,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "9f00cd",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28410,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "e2a0ba",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28411,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "df3ab9",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28412,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "743aef",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28413,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "dd6859",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28414,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "3835df",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28415,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "22dd30",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28416,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "c5691d",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28417,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "ff4f68",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28418,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "a5f197",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28419,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "f759fc",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28420,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "d28afe",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28421,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "ff7a58",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28422,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "9325e8",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28423,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "6c1a79",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28424,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "42b6c3",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28425,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "2c3f92",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28426,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "3d2228",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28427,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "e54a51",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28428,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              },
              {
                "GUID": "5ebe5a",
                "Name": "Card",
                "Transform": {
                  "posX": 9.178259,
                  "posY": 0.9976616,
                  "posZ": -6.92169237,
                  "rotX": 5.751284E-06,
                  "rotY": 180.0,
                  "rotZ": 180.0,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 0.713235259,
                  "g": 0.713235259,
                  "b": 0.713235259
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "Hands": true,
                "CardID": 28429,
                "SidewaysCard": false,
                "LuaScript": "",
                "LuaScriptState": "",
                "XmlUI": "",
                "ContainedObjects": []
              }
            ]
          }
        ]
      },
      {
        "GUID": "9d500c",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -1.88001866E-06,
          "rotY": 179.990067,
          "rotZ": 1.693192E-06,
          "scaleX": 0.095,
          "scaleY": 0.095,
          "scaleZ": 0.095
        },
        "Nickname": "IN 1",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN1.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.714675248,
              "posY": 1.20143747,
              "posZ": -6.70958328,
              "rotX": 1.44957141E-06,
              "rotY": -0.004239473,
              "rotZ": 4.72741164E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "IN 1",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN1.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'in1'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "61784f",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -1.88001866E-06,
          "rotY": 179.990067,
          "rotZ": 1.693192E-06,
          "scaleX": 0.095,
          "scaleY": 0.095,
          "scaleZ": 0.095
        },
        "Nickname": "IN 2",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN2.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.714675248,
              "posY": 1.20143747,
              "posZ": -6.70958328,
              "rotX": 1.44957141E-06,
              "rotY": -0.004239473,
              "rotZ": 4.72741164E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "IN 2",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN2.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'in2'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "7d52df",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -1.88001866E-06,
          "rotY": 179.990067,
          "rotZ": 1.693192E-06,
          "scaleX": 0.095,
          "scaleY": 0.095,
          "scaleZ": 0.095
        },
        "Nickname": "IN 3",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN3.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.714675248,
              "posY": 1.20143747,
              "posZ": -6.70958328,
              "rotX": 1.44957141E-06,
              "rotY": -0.004239473,
              "rotZ": 4.72741164E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "IN 3",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN3.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'in3'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "940e76",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -1.88001866E-06,
          "rotY": 179.990067,
          "rotZ": 1.693192E-06,
          "scaleX": 0.095,
          "scaleY": 0.095,
          "scaleZ": 0.095
        },
        "Nickname": "IN 4",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN4.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.714675248,
              "posY": 1.20143747,
              "posZ": -6.70958328,
              "rotX": 1.44957141E-06,
              "rotY": -0.004239473,
              "rotZ": 4.72741164E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "IN 4",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN4.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'in4'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "961d4e",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -1.88001866E-06,
          "rotY": 179.990067,
          "rotZ": 1.693192E-06,
          "scaleX": 0.095,
          "scaleY": 0.095,
          "scaleZ": 0.095
        },
        "Nickname": "IN 5",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN5.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.714675248,
              "posY": 1.20143747,
              "posZ": -6.70958328,
              "rotX": 1.44957141E-06,
              "rotY": -0.004239473,
              "rotZ": 4.72741164E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "IN 5",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN5.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'in5'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "fea3d1",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -1.88001866E-06,
          "rotY": 179.990067,
          "rotZ": 1.693192E-06,
          "scaleX": 0.095,
          "scaleY": 0.095,
          "scaleZ": 0.095
        },
        "Nickname": "IN 6",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN6.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.714675248,
              "posY": 1.20143747,
              "posZ": -6.70958328,
              "rotX": 1.44957141E-06,
              "rotY": -0.004239473,
              "rotZ": 4.72741164E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "IN 6",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN6.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'in6'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "637366",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -1.88001866E-06,
          "rotY": 179.990067,
          "rotZ": 1.693192E-06,
          "scaleX": 0.095,
          "scaleY": 0.095,
          "scaleZ": 0.095
        },
        "Nickname": "IN 7",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN7.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "",
            "Name": "Custom_Model",
            "Transform": {
              "posX": 0.714675248,
              "posY": 1.20143747,
              "posZ": -6.70958328,
              "rotX": 1.44957141E-06,
              "rotY": -0.004239473,
              "rotZ": 4.72741164E-07,
              "scaleX": 0.375,
              "scaleY": 0.375,
              "scaleZ": 0.375
            },
            "Nickname": "IN 7",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/round/RoundToken.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Tokens/IN7.png",
              "NormalURL": "",
              "ColliderURL": "",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "-- Scripted token properties\r\n__XW_Token = true\r\n__XW_TokenIdle = true\r\n__XW_TokenType = 'in7'\r\n",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "203cb8",
        "Name": "Bag",
        "Transform": {
          "posX": -46.7370377,
          "posY": -3.0,
          "posZ": 16.3311386,
          "rotX": -4.168853E-08,
          "rotY": -2.85947481E-05,
          "rotZ": -1.45908587E-06,
          "scaleX": 1.0,
          "scaleY": 1.0,
          "scaleZ": 1.0
        },
        "Nickname": "Obstacles",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.7058823,
          "g": 0.366520882,
          "b": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "Bag": {
          "Order": 0
        },
        "LuaScript": "local surface = false\n\r\nfunction onLoad(save_state)\r\n    if surface == false then\r\n        local sPos = self.getPosition()\r\n        self.setPosition({sPos[1], -3, sPos[3]})\r\n        self.interactable = false\r\n        self.tooltip = false\r\n        self.lock()\r\n    else\r\n        local sPos = self.getPosition()\r\n        self.setPosition({sPos[1], 3, sPos[3]})\r\n        self.interactable = true\r\n        self.tooltip = true\r\n        self.lock()\r\n    end\r\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "71adbc",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.7555962,
              "posY": 5.274766,
              "posZ": 16.6015968,
              "rotX": 358.955872,
              "rotY": 120.022438,
              "rotZ": 1.40750408,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Asteroid 6",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "95f5ae",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.8139229,
              "posY": 5.27677727,
              "posZ": 16.7128448,
              "rotX": 359.6244,
              "rotY": 119.967873,
              "rotZ": 0.8827371,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Asteroid 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "8c92c6",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -47.01846,
              "posY": 5.278534,
              "posZ": 15.9270124,
              "rotX": 359.813965,
              "rotY": 120.017311,
              "rotZ": 359.5828,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Asteroid 5",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "e10469",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -47.2183075,
              "posY": 5.2772727,
              "posZ": 15.8575268,
              "rotX": 359.727936,
              "rotY": 120.02462,
              "rotZ": 359.696381,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Asteroid 4",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "ce7293",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -47.5107956,
              "posY": 5.273216,
              "posZ": 15.8672762,
              "rotX": 0.000200719645,
              "rotY": 120.014854,
              "rotZ": -2.011906E-05,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Asteroid 3",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "509d1f",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.9363823,
              "posY": 5.275473,
              "posZ": 16.3041821,
              "rotX": 359.720428,
              "rotY": 120.019455,
              "rotZ": 0.0498859063,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "Asteroid 2",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Core%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Core2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "be2b20",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -47.13291,
              "posY": 5.277409,
              "posZ": 16.5761585,
              "rotX": 359.665558,
              "rotY": 120.0058,
              "rotZ": 0.160337731,
              "scaleX": 1.0,
              "scaleY": 1.51633251,
              "scaleZ": 1.0
            },
            "Nickname": "TFA Asteroid 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "60fd4f",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.94653,
              "posY": 5.27593,
              "posZ": 16.9212418,
              "rotX": 359.780334,
              "rotY": 120.015045,
              "rotZ": 0.197495043,
              "scaleX": 1.0,
              "scaleY": 1.0,
              "scaleZ": 1.0
            },
            "Nickname": "TFA Asteroid 2",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "55d063",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -47.296917,
              "posY": 5.254771,
              "posZ": 16.54947,
              "rotX": 359.6406,
              "rotY": 119.941589,
              "rotZ": 359.733337,
              "scaleX": 1.0,
              "scaleY": 3.04350567,
              "scaleZ": 1.0
            },
            "Nickname": "TFA Asteroid 3",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "def865",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -47.06785,
              "posY": 5.256015,
              "posZ": 16.361311,
              "rotX": 359.670166,
              "rotY": 119.882454,
              "rotZ": 359.498657,
              "scaleX": 1.0,
              "scaleY": 2.3043952,
              "scaleZ": 1.0
            },
            "Nickname": "TFA Asteroid 4",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "60fe7a",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.67639,
              "posY": 5.257682,
              "posZ": 16.6392651,
              "rotX": 359.774719,
              "rotY": 120.053223,
              "rotZ": 0.148045927,
              "scaleX": 1.0,
              "scaleY": 3.59584236,
              "scaleZ": 1.0
            },
            "Nickname": "TFA Asteroid 5",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b13038",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.976757,
              "posY": 5.25640345,
              "posZ": 16.18561,
              "rotX": 359.866119,
              "rotY": 119.832115,
              "rotZ": 359.470581,
              "scaleX": 1.0,
              "scaleY": 3.020417,
              "scaleZ": 1.0
            },
            "Nickname": "TFA Asteroid 6",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/TFA%20Astroids%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'asteroid'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/TFA6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "9817be",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.21998,
              "posY": 5.299361,
              "posZ": 16.4534512,
              "rotX": 359.982422,
              "rotY": 359.965363,
              "rotZ": 179.6938,
              "scaleX": 1.1,
              "scaleY": 1.0,
              "scaleZ": 1.1
            },
            "Nickname": "Debrisfield 5",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b28658",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -45.1994629,
              "posY": 5.29133654,
              "posZ": -3.01112175,
              "rotX": -3.70080144E-08,
              "rotY": 30.02,
              "rotZ": 1.42286014E-08,
              "scaleX": 1.0999999,
              "scaleY": 1.0,
              "scaleZ": 1.0999999
            },
            "Nickname": "Debrisfield 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "90b786",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -52.8871765,
              "posY": 5.292435,
              "posZ": -3.14416075,
              "rotX": 6.341932E-07,
              "rotY": 359.965973,
              "rotZ": 180.0,
              "scaleX": 1.1,
              "scaleY": 1.0,
              "scaleZ": 1.1
            },
            "Nickname": "Debrisfield 2",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "9c693e",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -44.0602074,
              "posY": 5.29703569,
              "posZ": 6.68894,
              "rotX": 9.40371251E-07,
              "rotY": 359.969482,
              "rotZ": 180.0,
              "scaleX": 1.1,
              "scaleY": 1.0,
              "scaleZ": 1.1
            },
            "Nickname": "Debrisfield 3",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "fc9546",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -50.9807167,
              "posY": 5.29703569,
              "posZ": 8.341031,
              "rotX": -5.831293E-08,
              "rotY": 359.966583,
              "rotZ": 180.0,
              "scaleX": 1.1,
              "scaleY": 1.0,
              "scaleZ": 1.1
            },
            "Nickname": "Debrisfield 4",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "6490e0",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -52.52962,
              "posY": 5.26555634,
              "posZ": 22.5440235,
              "rotX": 1.11181319,
              "rotY": 359.973,
              "rotZ": 180.086258,
              "scaleX": 1.1,
              "scaleY": 1.0,
              "scaleZ": 1.1
            },
            "Nickname": "Debrisfield 6",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/Debrisfield%20All.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'debrisfield'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/Debris6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "16fbcc",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -46.4340553,
              "posY": 5.28374767,
              "posZ": 16.300684,
              "rotX": 0.102981508,
              "rotY": 179.997269,
              "rotZ": 181.3566,
              "scaleX": 0.975,
              "scaleY": 0.975,
              "scaleZ": 0.975
            },
            "Nickname": "Gas Cloud 3",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud3-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend\n",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "c2ca21",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -59.4988823,
              "posY": 5.299467,
              "posZ": -1.400852,
              "rotX": -2.60874622E-05,
              "rotY": 165.01828,
              "rotZ": 179.999985,
              "scaleX": 0.975,
              "scaleY": 0.975,
              "scaleZ": 0.975
            },
            "Nickname": "Gas Cloud 1",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud1-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "828534",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -58.29555,
              "posY": 5.272128,
              "posZ": 6.837344,
              "rotX": 8.911896E-07,
              "rotY": 74.996,
              "rotZ": 2.77333947E-06,
              "scaleX": 0.975,
              "scaleY": 0.975,
              "scaleZ": 0.975
            },
            "Nickname": "Gas Cloud 2",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud2-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "41adf5",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -63.4424934,
              "posY": 5.28494167,
              "posZ": 15.1954231,
              "rotX": 1.09637428E-08,
              "rotY": 165.0217,
              "rotZ": 180.0,
              "scaleX": 0.975,
              "scaleY": 0.975,
              "scaleZ": 0.975
            },
            "Nickname": "Gas Cloud 4",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud4-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "e39e26",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -56.8837547,
              "posY": 5.24027443,
              "posZ": 17.5044212,
              "rotX": -2.97182523E-05,
              "rotY": 270.044739,
              "rotZ": 1.59000265E-05,
              "scaleX": 0.975,
              "scaleY": 0.975,
              "scaleZ": 0.975
            },
            "Nickname": "Gas Cloud 5",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud5-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "79504a",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -48.70273,
              "posY": 5.271717,
              "posZ": -1.24916387,
              "rotX": -3.77579257E-09,
              "rotY": 195.010208,
              "rotZ": 180.0,
              "scaleX": 0.975,
              "scaleY": 0.975,
              "scaleZ": 0.975
            },
            "Nickname": "Gas Cloud 6",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-model.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/obstacles/GasCloudAll.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-col.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\n\n__XW_Obstacle = 'gascloud'\n\nr1_visible = false\nheld = false\nwaiting = false\nwaitduration = 0.1\n\nfunction onLoad(save_state)\n    self.addContextMenuItem(\"Toggle Range 1\", toggleR1, false)\nend\n\nfunction toggleR1()\n    if spawnedRuler ~= nil then\n        spawnedRuler.destruct()\n        spawnedRuler = nil\n        return false\n    end\n    local params = {\n        type = 'Custom_Model',\n        position = self.positionToWorld({0, 0, 0}),\n        rotation = self.getRotation(),\n        scale = self.getScale()\n    }\n    local custom = {\n        mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-r1.obj',\n        collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/GasCloud6-r1.obj'\n    }\n    spawnedRuler = spawnObject(params)\n    spawnedRuler.setCustomObject(custom)\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\n    vector_lines = {}\n    for k,obj in pairs(getAllObjects()) do\n        if obj ~= nil and obj.type== 'Figurine' and obj.getVar('__XW_Ship') == true then\n            my_pos = self.getNearestPointFromObject(obj)\n            \n\n            closest = Global.call('API_GetClosestPointToShip', {ship=obj,point=my_pos})\n            distance = Convert_igu_mm(closest.length)\n            if distance < 100 then\n                table.insert(vector_lines, {\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\n                    color = {1,1,1},\n                    thickness = 0.1,\n                    rotation = vector(0,0,0)\n                })\n            end\n        end\n    end\n    spawnedRuler.setVectorLines(vector_lines)\n    spawnedRuler.lock()\nend\n\nfunction onUpdate()\n    if not waiting and held then\n        vector_lines = {}\n        for k,obj in pairs(getAllObjects()) do\n            if obj ~= nil and obj ~= self and obj.getVar(\"__XW_Obstacle\") ~= nil then\n                my_pos = self.getNearestPointFromObject(obj)\n                other_pos = obj.getNearestPointFromObject(self)\n                other_pos.y = my_pos.y\n\n                distance = Convert_igu_mm(math.sqrt(math.pow(my_pos.x - other_pos.x,2) + math.pow(my_pos.z - other_pos.z,2)))\n                if distance < 100 then\n                    table.insert(vector_lines, {\n                        points = {self.positionToLocal(my_pos), self.positionToLocal(other_pos)},\n                        color = {1,1,1},\n                        thickness = 0.1,\n                        rotation = vector(0,0,0)\n                    })\n                end\n            end\n        end\n        self.setVectorLines(vector_lines)\n        waiting = true\n        Wait.time(function() waiting = false end, waitduration)\n    end\nend\n\nfunction onPickUp(player_color)\n    held = true\nend\n\nfunction onDrop(player_color)\n    held = false\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "47b216",
        "Name": "Deck",
        "Transform": {
          "posX": -40.00067,
          "posY": 1.13979387,
          "posZ": -14.999999,
          "rotX": -6.18125569E-06,
          "rotY": 179.966553,
          "rotZ": 180.0,
          "scaleX": 0.625,
          "scaleY": 1.0,
          "scaleZ": 0.625
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": false,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "SidewaysCard": false,
        "DeckIDs": [
          27326,
          27315,
          27316,
          27320,
          27328,
          27314,
          27318,
          27308,
          27306,
          27324,
          27321,
          27312,
          27309,
          27332,
          27319,
          27303,
          27322,
          27323,
          27300,
          27301,
          27310,
          27302,
          27325,
          27329,
          27313,
          27304,
          27305,
          27330,
          27331,
          27307,
          27327,
          27311,
          27317
        ],
        "CustomDeck": {
          "273": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
            "NumWidth": 10,
            "NumHeight": 7,
            "BackIsHidden": false,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0877724,
              "posY": 1.1982491,
              "posZ": -14.7376652,
              "rotX": -0.000459030125,
              "rotY": 180.006439,
              "rotZ": 179.8747,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27326,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1200237,
              "posY": 1.24557686,
              "posZ": -15.0046253,
              "rotX": 0.846033156,
              "rotY": 180.001816,
              "rotZ": 178.834076,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27315,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -39.4068,
              "posY": 1.3832283,
              "posZ": 15.1159315,
              "rotX": -0.00445320876,
              "rotY": -8.743666E-05,
              "rotZ": 179.997208,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27316,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9374256,
              "posY": 1.20072138,
              "posZ": -14.9719687,
              "rotX": 359.985779,
              "rotY": 179.996231,
              "rotZ": 180.095947,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27320,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0841236,
              "posY": 1.1887486,
              "posZ": -14.7821283,
              "rotX": 359.9891,
              "rotY": 180.01416,
              "rotZ": 179.896774,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27328,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3201027,
              "posY": 1.283002,
              "posZ": -14.8662338,
              "rotX": 359.9886,
              "rotY": 179.906631,
              "rotZ": 174.226288,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27314,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1777973,
              "posY": 1.17282784,
              "posZ": -14.9190617,
              "rotX": 0.00567509932,
              "rotY": 180.120071,
              "rotZ": 177.113358,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27318,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1156273,
              "posY": 1.31639373,
              "posZ": -14.88042,
              "rotX": 359.9801,
              "rotY": 180.004318,
              "rotZ": 180.093658,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27308,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3394318,
              "posY": 1.3346808,
              "posZ": -14.8861456,
              "rotX": 359.946472,
              "rotY": 180.020081,
              "rotZ": 180.326141,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27306,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.208046,
              "posY": 1.154962,
              "posZ": -15.00407,
              "rotX": 1.3402,
              "rotY": 179.954422,
              "rotZ": 177.657043,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27324,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.2181187,
              "posY": 1.18458879,
              "posZ": -14.9534225,
              "rotX": 1.26854324,
              "rotY": 179.962616,
              "rotZ": 177.705322,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27321,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.8708477,
              "posY": 1.27626753,
              "posZ": -15.0637293,
              "rotX": 359.950073,
              "rotY": 179.992081,
              "rotZ": 179.8795,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27312,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0808849,
              "posY": 1.30458915,
              "posZ": -15.2483444,
              "rotX": 0.005381643,
              "rotY": 179.994919,
              "rotZ": 179.952011,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27309,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9222851,
              "posY": 1.04363167,
              "posZ": -14.8758707,
              "rotX": 0.116052985,
              "rotY": 180.084122,
              "rotZ": 180.080948,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27332,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3711777,
              "posY": 1.20989215,
              "posZ": -14.7242508,
              "rotX": -0.00246225647,
              "rotY": 180.008026,
              "rotZ": 179.7812,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27319,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.2981453,
              "posY": 1.36408007,
              "posZ": -14.776823,
              "rotX": 359.973846,
              "rotY": 180.002029,
              "rotZ": 179.75354,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27303,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3581181,
              "posY": 1.18124413,
              "posZ": -14.8689175,
              "rotX": 359.976135,
              "rotY": 179.994461,
              "rotZ": 179.877792,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27322,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9020119,
              "posY": 1.17187977,
              "posZ": -14.9643621,
              "rotX": -0.00151585531,
              "rotY": 179.995956,
              "rotZ": 179.798019,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27323,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.041008,
              "posY": 1.46709239,
              "posZ": -14.7143946,
              "rotX": 359.94458,
              "rotY": 179.988571,
              "rotZ": 187.359848,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27300,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0680256,
              "posY": 1.38450289,
              "posZ": -14.86122,
              "rotX": 359.990479,
              "rotY": 180.002747,
              "rotZ": 179.921738,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27301,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0448189,
              "posY": 1.294558,
              "posZ": -14.896224,
              "rotX": -0.0007581746,
              "rotY": 179.994934,
              "rotZ": 179.96257,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27310,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.078949,
              "posY": 1.37467217,
              "posZ": -14.69785,
              "rotX": -0.00331702456,
              "rotY": 180.005859,
              "rotZ": 179.830627,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27302,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.31078,
              "posY": 1.20398641,
              "posZ": -14.9565,
              "rotX": 359.9483,
              "rotY": 179.982986,
              "rotZ": 179.786346,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27325,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0335884,
              "posY": 1.19101191,
              "posZ": -14.8647919,
              "rotX": 359.9818,
              "rotY": 180.0282,
              "rotZ": 179.908844,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27329,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0090847,
              "posY": 1.38730085,
              "posZ": -15.0050545,
              "rotX": 0.09710596,
              "rotY": 180.142349,
              "rotZ": 192.027786,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27313,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9438686,
              "posY": 1.35246217,
              "posZ": -15.0534849,
              "rotX": 359.9734,
              "rotY": 179.997162,
              "rotZ": 179.976364,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27304,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9614067,
              "posY": 1.34314823,
              "posZ": -14.9299164,
              "rotX": 0.00328693725,
              "rotY": 180.001083,
              "rotZ": 179.989731,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27305,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.7053413,
              "posY": 1.38432038,
              "posZ": -15.1872559,
              "rotX": 1.6758846,
              "rotY": 180.053619,
              "rotZ": 182.415131,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27330,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "9e3603",
            "Name": "Card",
            "Transform": {
              "posX": -24.6307755,
              "posY": 1.176079,
              "posZ": -14.8001871,
              "rotX": 0.0527719669,
              "rotY": 180.215286,
              "rotZ": 180.032867,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27331,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.8914776,
              "posY": 1.324815,
              "posZ": -15.1227493,
              "rotX": 359.9307,
              "rotY": 180.013474,
              "rotZ": 180.139374,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27307,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9126759,
              "posY": 1.1927259,
              "posZ": -14.8184252,
              "rotX": 359.9886,
              "rotY": 180.1045,
              "rotZ": 179.913681,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27327,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.17766,
              "posY": 1.28723741,
              "posZ": -15.0604887,
              "rotX": 359.949036,
              "rotY": 179.97966,
              "rotZ": 179.795181,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27311,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.91434,
              "posY": 1.22775316,
              "posZ": -15.0358944,
              "rotX": 359.9582,
              "rotY": 179.9605,
              "rotZ": 179.956436,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27317,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "0b0843",
        "Name": "Deck",
        "Transform": {
          "posX": -40.00067,
          "posY": 1.13979375,
          "posZ": 14.999999,
          "rotX": 4.44312974E-07,
          "rotY": 359.97702,
          "rotZ": 180.0,
          "scaleX": 0.625,
          "scaleY": 1.0,
          "scaleZ": 0.625
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": false,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "SidewaysCard": false,
        "DeckIDs": [
          27330,
          27304,
          27311,
          27305,
          27316,
          27328,
          27315,
          27301,
          27313,
          27325,
          27302,
          27322,
          27307,
          27314,
          27317,
          27320,
          27321,
          27323,
          27329,
          27300,
          27327,
          27331,
          27318,
          27332,
          27306,
          27309,
          27310,
          27308,
          27324,
          27326,
          27319,
          27312,
          27303
        ],
        "CustomDeck": {
          "273": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
            "NumWidth": 10,
            "NumHeight": 7,
            "BackIsHidden": false,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.7053413,
              "posY": 1.38432038,
              "posZ": -15.1872559,
              "rotX": 1.6758846,
              "rotY": 180.053619,
              "rotZ": 182.415131,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27330,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9438686,
              "posY": 1.35246217,
              "posZ": -15.0534849,
              "rotX": 359.9734,
              "rotY": 179.997162,
              "rotZ": 179.976364,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27304,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.17766,
              "posY": 1.28723741,
              "posZ": -15.0604887,
              "rotX": 359.949036,
              "rotY": 179.97966,
              "rotZ": 179.795181,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27311,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9614067,
              "posY": 1.34314823,
              "posZ": -14.9299164,
              "rotX": 0.00328693725,
              "rotY": 180.001083,
              "rotZ": 179.989731,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27305,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -39.4068,
              "posY": 1.3832283,
              "posZ": 15.1159315,
              "rotX": -0.00445320876,
              "rotY": -8.743666E-05,
              "rotZ": 179.997208,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27316,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0841236,
              "posY": 1.1887486,
              "posZ": -14.7821283,
              "rotX": 359.9891,
              "rotY": 180.01416,
              "rotZ": 179.896774,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27328,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1200237,
              "posY": 1.24557686,
              "posZ": -15.0046253,
              "rotX": 0.846033156,
              "rotY": 180.001816,
              "rotZ": 178.834076,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27315,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0680256,
              "posY": 1.38450289,
              "posZ": -14.86122,
              "rotX": 359.990479,
              "rotY": 180.002747,
              "rotZ": 179.921738,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27301,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0090847,
              "posY": 1.38730085,
              "posZ": -15.0050545,
              "rotX": 0.09710596,
              "rotY": 180.142349,
              "rotZ": 192.027786,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27313,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.31078,
              "posY": 1.20398641,
              "posZ": -14.9565,
              "rotX": 359.9483,
              "rotY": 179.982986,
              "rotZ": 179.786346,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27325,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.078949,
              "posY": 1.37467217,
              "posZ": -14.69785,
              "rotX": -0.00331702456,
              "rotY": 180.005859,
              "rotZ": 179.830627,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27302,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3581181,
              "posY": 1.18124413,
              "posZ": -14.8689175,
              "rotX": 359.976135,
              "rotY": 179.994461,
              "rotZ": 179.877792,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27322,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.8914776,
              "posY": 1.324815,
              "posZ": -15.1227493,
              "rotX": 359.9307,
              "rotY": 180.013474,
              "rotZ": 180.139374,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27307,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3201027,
              "posY": 1.283002,
              "posZ": -14.8662338,
              "rotX": 359.9886,
              "rotY": 179.906631,
              "rotZ": 174.226288,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27314,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.91434,
              "posY": 1.22775316,
              "posZ": -15.0358944,
              "rotX": 359.9582,
              "rotY": 179.9605,
              "rotZ": 179.956436,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27317,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9374256,
              "posY": 1.20072138,
              "posZ": -14.9719687,
              "rotX": 359.985779,
              "rotY": 179.996231,
              "rotZ": 180.095947,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27320,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.2181187,
              "posY": 1.18458879,
              "posZ": -14.9534225,
              "rotX": 1.26854324,
              "rotY": 179.962616,
              "rotZ": 177.705322,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27321,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9020119,
              "posY": 1.17187977,
              "posZ": -14.9643621,
              "rotX": -0.00151585531,
              "rotY": 179.995956,
              "rotZ": 179.798019,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27323,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0335884,
              "posY": 1.19101191,
              "posZ": -14.8647919,
              "rotX": 359.9818,
              "rotY": 180.0282,
              "rotZ": 179.908844,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27329,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.041008,
              "posY": 1.46709239,
              "posZ": -14.7143946,
              "rotX": 359.94458,
              "rotY": 179.988571,
              "rotZ": 187.359848,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27300,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9126759,
              "posY": 1.1927259,
              "posZ": -14.8184252,
              "rotX": 359.9886,
              "rotY": 180.1045,
              "rotZ": 179.913681,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27327,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "9e3603",
            "Name": "Card",
            "Transform": {
              "posX": -24.6307755,
              "posY": 1.176079,
              "posZ": -14.8001871,
              "rotX": 0.0527719669,
              "rotY": 180.215286,
              "rotZ": 180.032867,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27331,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1777973,
              "posY": 1.17282784,
              "posZ": -14.9190617,
              "rotX": 0.00567509932,
              "rotY": 180.120071,
              "rotZ": 177.113358,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27318,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9222851,
              "posY": 1.04363167,
              "posZ": -14.8758707,
              "rotX": 0.116052985,
              "rotY": 180.084122,
              "rotZ": 180.080948,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27332,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3394318,
              "posY": 1.3346808,
              "posZ": -14.8861456,
              "rotX": 359.946472,
              "rotY": 180.020081,
              "rotZ": 180.326141,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27306,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0808849,
              "posY": 1.30458915,
              "posZ": -15.2483444,
              "rotX": 0.005381643,
              "rotY": 179.994919,
              "rotZ": 179.952011,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27309,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0448189,
              "posY": 1.294558,
              "posZ": -14.896224,
              "rotX": -0.0007581746,
              "rotY": 179.994934,
              "rotZ": 179.96257,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27310,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1156273,
              "posY": 1.31639373,
              "posZ": -14.88042,
              "rotX": 359.9801,
              "rotY": 180.004318,
              "rotZ": 180.093658,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27308,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.208046,
              "posY": 1.154962,
              "posZ": -15.00407,
              "rotX": 1.3402,
              "rotY": 179.954422,
              "rotZ": 177.657043,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27324,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0877724,
              "posY": 1.1982491,
              "posZ": -14.7376652,
              "rotX": -0.000459030125,
              "rotY": 180.006439,
              "rotZ": 179.8747,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27326,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3711777,
              "posY": 1.20989215,
              "posZ": -14.7242508,
              "rotX": -0.00246225647,
              "rotY": 180.008026,
              "rotZ": 179.7812,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27319,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.8708477,
              "posY": 1.27626753,
              "posZ": -15.0637293,
              "rotX": 359.950073,
              "rotY": 179.992081,
              "rotZ": 179.8795,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27312,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.2981453,
              "posY": 1.36408007,
              "posZ": -14.776823,
              "rotX": 359.973846,
              "rotY": 180.002029,
              "rotZ": 179.75354,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27303,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "aae8f1",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 1.43,
          "posY": 1.07,
          "posZ": 8.12,
          "rotX": -3.992098E-06,
          "rotY": 179.999847,
          "rotZ": -5.57206974E-08,
          "scaleX": 0.84,
          "scaleY": 1.08,
          "scaleZ": 0.84
        },
        "Nickname": "Critical Hit Tokens",
        "Description": "by Joeshmoe",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1017194853900822818/FBCDC3FF46CDD3BFCE5D2E3F3019BE682D4656D6/",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon-collider.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "-------------------------------------------------------------\r\n--- Orginal Script and Art by Joshmoe554---------------------\r\n-------------------------------------------------------------\r\n\r\n-- Check if this is a crit token and destroy it.  Nice way to return\r\n-- tokens that have been updated since leaving the container.\r\nfunction onCollisionEnter(collisionInfo)\r\n    local obj = collisionInfo.collision_object\r\n    local dmgToken = obj.getVar(\"IsCritToken\")\r\n\r\n    if dmgToken ~= nil then\r\n        obj.destruct()\r\n    end\r\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "4445ff",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -29.6382351,
              "posY": 1.18330884,
              "posZ": -20.2327862,
              "rotX": 0.001901542,
              "rotY": 45.01397,
              "rotZ": 0.00165365031,
              "scaleX": 0.31175524,
              "scaleY": 0.400419265,
              "scaleZ": 0.31175524
            },
            "Nickname": "Critical Hit",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon.obj",
              "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1017194853900822818/FBCDC3FF46CDD3BFCE5D2E3F3019BE682D4656D6/",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/squared/Hexagon-collider.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 5,
              "CastShadows": true
            },
            "LuaScript": "-------------------------------------------------------------\r\n--- Orginal Script and Art by Joshmoe554---------------------\r\n-------------------------------------------------------------\r\n---Adapted to work with Custom Damage Decks by Crazy Vulcan--\r\n-------------------------------------------------------------\r\n\r\n-- The images for each individual crit.\r\nImages =\r\n{\r\n    CriticalHit = 'http://cloud-3.steamusercontent.com/ugc/1017194853900822818/FBCDC3FF46CDD3BFCE5D2E3F3019BE682D4656D6/',\r\n    BlindedPilot = 'http://cloud-3.steamusercontent.com/ugc/1017194853900831678/EB80F1EFB24BD1D2A19FDA566297E96F54EB18FB/',\r\n    ConsoleFire = 'http://cloud-3.steamusercontent.com/ugc/1017194853900841247/4EAB9AFF4F73ED463CB2A9BE972A0F975581C9DF/',\r\n    DamagedEngine = 'http://cloud-3.steamusercontent.com/ugc/1017194853900846085/F0A18A9E6181782FBB3D93767C2B405EFF7D718F/',\r\n    DamagedSensorArray = 'http://cloud-3.steamusercontent.com/ugc/1017194853900847700/FAFB80301297A40001A0913509253528EC8A0749/',\r\n    DisabledPowerRegulator = 'http://cloud-3.steamusercontent.com/ugc/1017194853900848990/96A11517CF861E7135BC96FEA1AEA3EB75AA8D1E/',\r\n    FuelLeak = 'http://cloud-3.steamusercontent.com/ugc/1017194853900850869/592384D4BE032B5FE772C10B87A538BA44EE574E/',\r\n    HullBreach = 'http://cloud-3.steamusercontent.com/ugc/1017194853900852244/741E571E2C3B61F1A3D2DB7EF5345F7161E8DB44/',\r\n    LooseStabilizer = 'http://cloud-3.steamusercontent.com/ugc/1017194853900853454/DD25852419E960F0F25837F7F037468C5752E526/',\r\n    StructuralDamage = 'http://cloud-3.steamusercontent.com/ugc/1017194853900854946/12B5247AEA9D457D4568BC34C30C61328CDC0DC9/',\r\n    StunnedPilot = 'http://cloud-3.steamusercontent.com/ugc/1017194853900855951/CBF054AF3E3313902C6F863FCED2CC185D9859AB/',\r\n    WeaponsFailure = 'http://cloud-3.steamusercontent.com/ugc/1017194853900857431/98C766CA3827FA1F94E6B0062D47AC3FF4C01141/',\r\n    WoundedPilot = 'http://cloud-3.steamusercontent.com/ugc/1017194853900859087/C2DED547D22D44E76CB005250E32BAB0D8B9D9C0/'\r\n}\r\n\r\n-- Removed for now.  For now, this will just assume a card is a damage card.  The damage card backs are only\r\n-- used to identify decks that are using a different crit order.\r\n--DamageCardBack = 'http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/'\r\n\r\n-- The backs of the faction damage decks.\r\nREB_DamageCardBack = 'http://cloud-3.steamusercontent.com/ugc/1021700505297731217/E90648B79A41C9422866EAEEB61091E8AAC18A17/'\r\nIMP_DamageCardBack = 'http://cloud-3.steamusercontent.com/ugc/1021700308760157467/0FCF207040A77E7CD02D83A543F4968499F530D4/'\r\nSCUM_DamageCardBack = 'http://cloud-3.steamusercontent.com/ugc/1021700505297740500/413E9084E880E86ABE297C05D05F56E5BA01BAF6/'\r\nRIS_DamageCardBack = 'http://cloud-3.steamusercontent.com/ugc/1021700308760233507/8DC53DF987FDD4A47FA25ABF8E55FED045557FD6/'\r\nFO_DamageCardBack = 'http://cloud-3.steamusercontent.com/ugc/1021700505297719267/01067DDCA8602EF038050E79573A15408F04B9FA/'\r\nGRP_DamageCardBack = 'http://cloud-3.steamusercontent.com/ugc/1021700308760057332/D053AF6145BAAE2AE39E04D205128D6A7A4FEC03/'\r\nCIS_DamageCardBack = 'http://cloud-3.steamusercontent.com/ugc/1021700308759725288/38037546D88D2CD0E2B91FB5EE6261CC83E00136/'\r\n\r\n-- The indexed crit names used to name the tokens and adjust the image.\r\nCritNames =\r\n{\r\n    ['00'] = 'CriticalHit', -- Panicked Pilot\r\n    ['01'] = 'CriticalHit',\r\n    ['02'] = 'BlindedPilot',\r\n    ['03'] = 'BlindedPilot',\r\n    ['04'] = 'WoundedPilot',\r\n    ['05'] = 'WoundedPilot',\r\n    ['06'] = 'StunnedPilot',\r\n    ['07'] = 'StunnedPilot',\r\n    ['08'] = 'ConsoleFire',\r\n    ['09'] = 'ConsoleFire',\r\n    ['10'] = 'DamagedEngine',\r\n    ['11'] = 'DamagedEngine',\r\n    ['12'] = 'WeaponsFailure',\r\n    ['13'] = 'WeaponsFailure',\r\n    ['14'] = 'HullBreach',\r\n    ['15'] = 'HullBreach',\r\n    ['16'] = 'StructuralDamage',\r\n    ['17'] = 'StructuralDamage',\r\n    ['18'] = 'DamagedSensorArray',\r\n    ['19'] = 'DamagedSensorArray',\r\n    ['20'] = 'LooseStabilizer',\r\n    ['21'] = 'LooseStabilizer',\r\n    ['22'] = 'DisabledPowerRegulator',\r\n    ['23'] = 'DisabledPowerRegulator',\r\n    ['24'] = 'FuelLeak',\r\n    ['25'] = 'FuelLeak',\r\n    ['26'] = 'FuelLeak',\r\n    ['27'] = 'FuelLeak',\r\n    ['28'] = 'CriticalHit', -- Direct Hit\r\n    ['29'] = 'CriticalHit',\r\n    ['30'] = 'CriticalHit',\r\n    ['31'] = 'CriticalHit',\r\n    ['32'] = 'CriticalHit',\r\n}\r\n\r\nAltCritNames =\r\n{\r\n    ['00'] = 'BlindedPilot', \r\n    ['01'] = 'BlindedPilot',\r\n    ['02'] = 'ConsoleFire',\r\n    ['03'] = 'ConsoleFire',\r\n    ['04'] = 'DamagedEngine',\r\n    ['05'] = 'DamagedEngine',\r\n    ['06'] = 'DamagedSensorArray',\r\n    ['07'] = 'DamagedSensorArray',\r\n    ['08'] = 'CriticalHit', -- Direct Hit\r\n    ['09'] = 'CriticalHit',\r\n    ['10'] = 'CriticalHit',\r\n    ['11'] = 'CriticalHit',\r\n    ['12'] = 'CriticalHit',\r\n    ['13'] = 'DisabledPowerRegulator',\r\n    ['14'] = 'DisabledPowerRegulator',\r\n    ['15'] = 'FuelLeak',\r\n    ['16'] = 'FuelLeak',\r\n    ['17'] = 'FuelLeak',\r\n    ['18'] = 'FuelLeak',\r\n    ['19'] = 'HullBreach',\r\n    ['20'] = 'HullBreach',\r\n    ['21'] = 'LooseStabilizer',\r\n    ['22'] = 'LooseStabilizer',\r\n    ['23'] = 'CriticalHit', -- Panicked Pilot\r\n    ['24'] = 'CriticalHit',\r\n    ['25'] = 'StructuralDamage',\r\n    ['26'] = 'StructuralDamage',\r\n    ['27'] = 'StunnedPilot',\r\n    ['28'] = 'StunnedPilot', \r\n    ['29'] = 'WeaponsFailure',\r\n    ['30'] = 'WeaponsFailure',\r\n    ['31'] = 'WoundedPilot',\r\n    ['32'] = 'WoundedPilot',\r\n}\r\n\r\nAltCritNamesCIS =\r\n{\r\n    ['00'] = 'CriticalHit', -- Panicked Pilot\r\n    ['01'] = 'CriticalHit', -- Direct Hit\r\n    ['02'] = 'CriticalHit',\r\n    ['03'] = 'CriticalHit',\r\n    ['04'] = 'CriticalHit',\r\n    ['05'] = 'CriticalHit',\r\n    ['06'] = 'FuelLeak',\r\n    ['07'] = 'FuelLeak',\r\n    ['08'] = 'FuelLeak', \r\n    ['09'] = 'FuelLeak',\r\n    ['10'] = 'DisabledPowerRegulator',\r\n    ['11'] = 'DisabledPowerRegulator',\r\n    ['12'] = 'LooseStabilizer',\r\n    ['13'] = 'LooseStabilizer',\r\n    ['14'] = 'DamagedSensorArray',\r\n    ['15'] = 'DamagedSensorArray',\r\n    ['16'] = 'StructuralDamage',\r\n    ['17'] = 'StructuralDamage',\r\n    ['18'] = 'HullBreach',\r\n    ['19'] = 'HullBreach',\r\n    ['20'] = 'WeaponsFailure',\r\n    ['21'] = 'WeaponsFailure',\r\n    ['22'] = 'DamagedEngine',\r\n    ['23'] = 'DamagedEngine',\r\n    ['24'] = 'ConsoleFire',\r\n    ['25'] = 'ConsoleFire',\r\n    ['26'] = 'StunnedPilot',\r\n    ['27'] = 'StunnedPilot',\r\n    ['28'] = 'WoundedPilot', \r\n    ['29'] = 'WoundedPilot',\r\n    ['30'] = 'BlindedPilot',\r\n    ['31'] = 'BlindedPilot',\r\n    ['32'] = 'CriticalHit', -- Panicked Pilot\r\n}\r\n\r\n-- Variable to prevent it from updating multiple times on a collision.\r\nsetToken = false\r\n\r\n-- Variable to check if this is one of the crit tokens.\r\nIsCritToken = true\r\n\r\nfunction onPickUp(color)\r\n    setToken = true\r\nend\r\n\r\n-- When this collides with a damage card, check what card it is and\r\n-- update the image and name.\r\nfunction onCollisionEnter(collisionInfo)\r\n    if setToken then\r\n        local obj = collisionInfo.collision_object\r\n        \r\n        local critNameTable = CritNames\r\n        \r\n        local objData = obj.getCustomObject()\r\n        if objData.back ~= nil and obj.is_face_down == false then\r\n            -- If this is Crazy Vulcan's faction damage decks, they use a different card order\r\n            -- then the crit order so we are using different tables for those decks.\r\n            if objData.back == REB_DamageCardBack or objData.back == IMP_DamageCardBack or\r\n                objData.back == SCUM_DamageCardBack or objData.back == RIS_DamageCardBack or\r\n                objData.back == FO_DamageCardBack or objData.back == GRP_DamageCardBack then\r\n                critNameTable = AltCritNames\r\n            elseif objData.back == CIS_DamageCardBack then\r\n                critNameTable = AltCritNamesCIS\r\n            end\r\n\r\n            local cardId = getCardID(obj)\r\n\r\n            if cardId ~= nil then\r\n                local critName = critNameTable[string.sub(cardId, -2)]\r\n                \r\n                if critName ~= nil then\r\n                    -- Set token name\r\n                    self.setName(splitCamel(critName))\r\n                    \r\n                    -- Set token image\r\n                    local customTable = self.getCustomObject()\r\n                    customTable.diffuse = Images[critName]\r\n                    self.setCustomObject(customTable)\r\n                    self.reload()\r\n                    \r\n                    setToken = false\r\n                end\r\n            end\r\n\t\tend\r\n\tend\r\nend\r\n\r\n-- Convert the camelcase name to a multi-word name.\r\nfunction splitCamel(s)\r\n    local function split(char)\r\n        return \" \" .. char\r\n    end\r\n\r\n    return (s:gsub(\"[A-Z]\", split):gsub(\"^.\", string.upper))\r\nend\r\n\r\n-- Get the card's ID to figure out which crit it is.\r\nfunction getCardID(card)\r\n    local cardData = JSON.decode(card.getJSON())\r\n    return cardData['CardID']\r\nend\r\n\r\n-- Debug function to display the values of a table into the chat.\r\nfunction displayTable(arg)\r\n    output = \"\"\r\n    for key, value in pairs(arg) do\r\n        output = output .. \"\\n\" .. key .. \": \";\r\n        if type(value) == \"table\" then\r\n            output = output .. displayTable(value)\r\n        elseif type(value) == 'boolean' then\r\n            if value then\r\n                output = output .. \"true\"\r\n            else\r\n                output = output .. \"false\"\r\n            end\r\n        else\r\n            output = output .. value\r\n        end\r\n    end\r\n\r\n    return output\r\nend",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "f0e7b9",
        "Name": "Bag",
        "Transform": {
          "posX": -46.6022949,
          "posY": -3.0,
          "posZ": -15.5975933,
          "rotX": 352.541473,
          "rotY": 359.869568,
          "rotZ": -0.00202290015,
          "scaleX": 1.0,
          "scaleY": 1.0,
          "scaleZ": 1.0
        },
        "Nickname": "Dice Bag",
        "Description": "",
        "GMNotes": "dicebag1",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.09802546,
          "g": 0.09802546,
          "b": 0.09802546
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "Bag": {
          "Order": 0
        },
        "LuaScript": "local surface = false\r\n\r\nfunction onLoad(save_state)\r\n    if surface == false then\r\n        local sPos = self.getPosition()\r\n        self.setPosition({sPos[1], -3, sPos[3]})\r\n        self.interactable = false\r\n        self.tooltip = false\r\n        self.lock()\r\n    else\r\n        local sPos = self.getPosition()\r\n        self.setPosition({sPos[1], 3, sPos[3]})\r\n        self.interactable = true\r\n        self.tooltip = true\r\n        self.lock()\r\n    end\r\nend",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "efa41b",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": -22.8327637,
              "posY": 1.17,
              "posZ": 11.0920744,
              "rotX": 4.26886572E-07,
              "rotY": -0.000152025037,
              "rotZ": -1.06722254E-07,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Attack Die",
            "Description": "",
            "GMNotes": "atkBLACK1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/Black%20Attack/BlackAtkInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "5c3446",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -16.3570766,
                  "posY": 2.96347713,
                  "posZ": 15.3253956,
                  "rotX": 338.213776,
                  "rotY": 57.3790474,
                  "rotZ": 77.291,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/Black%20Attack/BlackAtk.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Red\"\ndiceValues = {\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\n    }\n\nfunction onNumberTyped(playerColor, number)\n    if not self.resting then\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\n    else\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\n    end\nend\n",
                "LuaScriptState": "",
                "XmlUI": "diceValues = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"}\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[number])\r\n    end\r\nend",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Crit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "e1f548",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": -22.8327637,
              "posY": 1.17,
              "posZ": 11.0920744,
              "rotX": -2.1344259E-07,
              "rotY": -0.000118247626,
              "rotZ": 7.47052E-07,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Attack Die",
            "Description": "",
            "GMNotes": "atkGOLD1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/Gold%20Attack/GoldAtkInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "cd57df",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -14.0096931,
                  "posY": 2.958176,
                  "posZ": 16.7238216,
                  "rotX": 359.31897,
                  "rotY": 86.58306,
                  "rotZ": 313.651581,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/Gold%20Attack/GoldAtk.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Red\"\ndiceValues = {\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\n    }\n\nfunction onNumberTyped(playerColor, number)\n    if not self.resting then\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\n    else\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\n    end\nend\n\n",
                "LuaScriptState": "",
                "XmlUI": "diceValues = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"}\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[number])\r\n    end\r\nend",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Crit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "836fce",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": -22.80999,
              "posY": 1.17,
              "posZ": 7.26780462,
              "rotX": 4.90919774E-06,
              "rotY": -7.433165E-05,
              "rotZ": 7.470486E-07,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Defense Die",
            "Description": "",
            "GMNotes": "defBLACK1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/Black%20Defence/BlackDefInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "cb4f5e",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -11.7402954,
                  "posY": 2.94992638,
                  "posZ": 14.0096493,
                  "rotX": 9.91304,
                  "rotY": 345.252777,
                  "rotZ": 119.672386,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/Black%20Defence/BlackDef.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Green\"\r\ndiceValues = {\r\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\r\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\r\n    }\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\r\n    end\r\nend\n",
                "LuaScriptState": "",
                "XmlUI": "",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "038505",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": -22.80999,
              "posY": 1.17,
              "posZ": 7.26780462,
              "rotX": 1.92099083E-06,
              "rotY": -6.50468646E-05,
              "rotZ": 7.470507E-07,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Defense Die",
            "Description": "",
            "GMNotes": "defWHITE1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/White%20Defence/WhiteDefInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "a562d1",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -9.565291,
                  "posY": 2.95684648,
                  "posZ": 11.1091747,
                  "rotX": 78.28262,
                  "rotY": 51.1056976,
                  "rotZ": 266.129456,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/White%20Defence/WhiteDef.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Green\"\r\ndiceValues = {\r\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\r\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\r\n    }\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\r\n    end\r\nend\n",
                "LuaScriptState": "",
                "XmlUI": "",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "97864c",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": -22.80999,
              "posY": 1.17,
              "posZ": 7.26780462,
              "rotX": 3.20165E-06,
              "rotY": -5.528183E-05,
              "rotZ": -6.403316E-07,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Defense Die",
            "Description": "",
            "GMNotes": "defSILVER1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/Silver%20Defence/SilverDefInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "d5630d",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -9.440332,
                  "posY": 2.97292352,
                  "posZ": 10.6628466,
                  "rotX": 13.3759842,
                  "rotY": 344.854919,
                  "rotZ": 119.256813,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/Silver%20Defence/SilverDef.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Green\"\r\ndiceValues = {\r\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\r\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\r\n    }\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\r\n    end\r\nend\n",
                "LuaScriptState": "",
                "XmlUI": "",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "04f463",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": -22.80999,
              "posY": 1.17,
              "posZ": 7.26780462,
              "rotX": -6.403293E-07,
              "rotY": -4.97856636E-05,
              "rotZ": 1.9209906E-06,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Defense Die",
            "Description": "",
            "GMNotes": "defSPARKLY1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/Glitter%20Defence/GreenGlitterDefInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "cfdcc8",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -13.533432,
                  "posY": 2.97019029,
                  "posZ": 16.76577,
                  "rotX": 339.512115,
                  "rotY": 138.507309,
                  "rotZ": 177.773972,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/Glitter%20Defence/GreenGlitterDef.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Green\"\r\ndiceValues = {\r\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\r\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\r\n    }\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\r\n    end\r\nend\n",
                "LuaScriptState": "",
                "XmlUI": "",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "ba8f5c",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": -0.03,
              "posY": 1.17,
              "posZ": 1.488566,
              "rotX": 352.5415,
              "rotY": 359.869568,
              "rotZ": -0.002053949,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Defense Die",
            "Description": "",
            "GMNotes": "defMARBLE1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/Marbled%20Defence/MarbledDefInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "1e5911",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -11.2488928,
                  "posY": 2.95776939,
                  "posZ": 15.5421257,
                  "rotX": 17.997694,
                  "rotY": 307.000122,
                  "rotZ": 81.29775,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Defence%20Dice/Marbled%20Defence/MarbledDef.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Green\"\r\ndiceValues = {\r\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\r\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\r\n    }\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\r\n    end\r\nend\n",
                "LuaScriptState": "",
                "XmlUI": "",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Evade",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "5502f9",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": 0.0325789377,
              "posY": 1.17,
              "posZ": -1.72443676,
              "rotX": 352.5415,
              "rotY": 359.869568,
              "rotZ": -0.00205222517,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Attack Die",
            "Description": "",
            "GMNotes": "atkWHITE1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/White%20Attack/WhiteAtkInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "a31bc6",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -16.8096485,
                  "posY": 2.93198,
                  "posZ": 14.5460806,
                  "rotX": 21.31293,
                  "rotY": 197.44017,
                  "rotZ": 212.910065,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/White%20Attack/WhiteAtk.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Red\"\ndiceValues = {\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\n    }\n\nfunction onNumberTyped(playerColor, number)\n    if not self.resting then\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\n    else\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\n    end\nend\n",
                "LuaScriptState": "",
                "XmlUI": "diceValues = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"}\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[number])\r\n    end\r\nend",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Crit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "1b7f44",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": 0.0325789377,
              "posY": 1.17,
              "posZ": -1.72443676,
              "rotX": 352.5415,
              "rotY": 359.869568,
              "rotZ": -0.00205222517,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Attack Die",
            "Description": "",
            "GMNotes": "atkSPARKLY1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/Glitter%20Attack/RedGliterAtkInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "172e66",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -16.8333549,
                  "posY": 3.04332757,
                  "posZ": 14.8117857,
                  "rotX": 357.7797,
                  "rotY": 223.37178,
                  "rotZ": 125.271683,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/Glitter%20Attack/RedGliterAtk.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Red\"\ndiceValues = {\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\n    }\n\nfunction onNumberTyped(playerColor, number)\n    if not self.resting then\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\n    else\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\n    end\nend\n",
                "LuaScriptState": "",
                "XmlUI": "diceValues = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"}\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[number])\r\n    end\r\nend",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Crit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          },
          {
            "GUID": "5baa83",
            "Name": "Custom_Model_Infinite_Bag",
            "Transform": {
              "posX": 0.0325789377,
              "posY": 1.17,
              "posZ": -1.72443676,
              "rotX": 352.5415,
              "rotY": 359.869568,
              "rotZ": -0.00205222517,
              "scaleX": 3.0,
              "scaleY": 3.0,
              "scaleZ": 3.0
            },
            "Nickname": "X-Wing Attack Die",
            "Description": "",
            "GMNotes": "atkMARBLE1",
            "ColorDiffuse": {
              "r": 0.9999998,
              "g": 0.992160261,
              "b": 0.9999998
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": false,
            "Snap": false,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "MaterialIndex": -1,
            "MeshIndex": -1,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/Marbled%20Attack/MarbledAtkInfinite.jpg",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 7,
              "CastShadows": true
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": "",
            "ContainedObjects": [
              {
                "GUID": "05a309",
                "Name": "Custom_Dice",
                "Transform": {
                  "posX": -13.5693464,
                  "posY": 2.96824622,
                  "posZ": 15.4531212,
                  "rotX": 358.743317,
                  "rotY": 5.34584141,
                  "rotZ": 138.172592,
                  "scaleX": 1.52400017,
                  "scaleY": 1.52400017,
                  "scaleZ": 1.52400017
                },
                "Nickname": "",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomImage": {
                  "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/textures/Dice/Attack%20Dice/Marbled%20Attack/MarbledAtk.jpg",
                  "ImageSecondaryURL": "",
                  "ImageScalar": 1.0,
                  "WidthScale": 0.0,
                  "CustomDice": {
                    "Type": 2
                  }
                },
                "LuaScript": "dicecolor = \"Red\"\ndiceValues = {\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\n    }\n\nfunction onNumberTyped(playerColor, number)\n    if not self.resting then\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\n    else\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\n    end\nend\n",
                "LuaScriptState": "",
                "XmlUI": "diceValues = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"}\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[number])\r\n    end\r\nend",
                "PhysicsMaterial": {
                  "StaticFriction": 0.6,
                  "DynamicFriction": 0.6,
                  "Bounciness": 0.5,
                  "FrictionCombine": 0,
                  "BounceCombine": 0
                },
                "Rigidbody": {
                  "Mass": 0.5,
                  "Drag": 0.1,
                  "AngularDrag": 0.0,
                  "UseGravity": true
                },
                "RotationValues": [
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -180.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 90.0
                    }
                  },
                  {
                    "Value": "Blank",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": -90.0
                    }
                  },
                  {
                    "Value": "Eye",
                    "Rotation": {
                      "x": 33.0,
                      "y": 180.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Hit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": 0.0
                    }
                  },
                  {
                    "Value": "Crit",
                    "Rotation": {
                      "x": -33.0,
                      "y": 0.0,
                      "z": -90.0
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "GUID": "d9a9fa",
        "Name": "BlockSquare",
        "Transform": {
          "posX": -0.03,
          "posY": 1.01,
          "posZ": 1.49,
          "rotX": 1.43993162E-07,
          "rotY": 137.1298,
          "rotZ": 7.34618141E-07,
          "scaleX": 2.5,
          "scaleY": 0.1,
          "scaleZ": 2.5
        },
        "Nickname": "Original",
        "Description": "",
        "GMNotes": "defPlat01",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.188220054,
          "g": 0.698039234,
          "b": 0.164690733,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "States": {
          "2": {
            "GUID": "6a2265",
            "Name": "BlockSquare",
            "Transform": {
              "posX": -22.80999,
              "posY": 1.00999987,
              "posZ": 7.26780462,
              "rotX": -3.94493981E-07,
              "rotY": 180.021347,
              "rotZ": 6.362166E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "Black",
            "Description": "",
            "GMNotes": "defPlat02",
            "ColorDiffuse": {
              "r": 0.188234568,
              "g": 0.698039234,
              "b": 0.164705247,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          "5": {
            "GUID": "fed57d",
            "Name": "BlockSquare",
            "Transform": {
              "posX": -22.80999,
              "posY": 1.00999987,
              "posZ": 7.26780462,
              "rotX": -3.94494151E-07,
              "rotY": 180.021347,
              "rotZ": 6.362166E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "Glitter",
            "Description": "",
            "GMNotes": "defPlat05",
            "ColorDiffuse": {
              "r": 0.188234776,
              "g": 0.698039234,
              "b": 0.164705455,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          "3": {
            "GUID": "11e325",
            "Name": "BlockSquare",
            "Transform": {
              "posX": -7.06329727,
              "posY": 1.00999987,
              "posZ": 7.26194,
              "rotX": -3.94494435E-07,
              "rotY": 180.021347,
              "rotZ": 6.362166E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "White",
            "Description": "",
            "GMNotes": "defPlat03",
            "ColorDiffuse": {
              "r": 0.188234627,
              "g": 0.698039234,
              "b": 0.1647053,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          "4": {
            "GUID": "d8cb40",
            "Name": "BlockSquare",
            "Transform": {
              "posX": -7.06329727,
              "posY": 1.00999987,
              "posZ": 7.26194,
              "rotX": -3.944945E-07,
              "rotY": 180.021347,
              "rotZ": 6.362166E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "Silver",
            "Description": "",
            "GMNotes": "defPlat04",
            "ColorDiffuse": {
              "r": 0.188234419,
              "g": 0.698039234,
              "b": 0.1647051,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          "6": {
            "GUID": "973e55",
            "Name": "BlockSquare",
            "Transform": {
              "posX": -0.03,
              "posY": 1.00999987,
              "posZ": 1.488566,
              "rotX": 1.43993162E-07,
              "rotY": 137.1298,
              "rotZ": 7.34618141E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "Marble",
            "Description": "",
            "GMNotes": "defPlat06",
            "ColorDiffuse": {
              "r": 0.180392087,
              "g": 0.698039234,
              "b": 0.160784274,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        }
      },
      {
        "GUID": "edbe72",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": 1.08,
          "posZ": 1.53,
          "rotX": 90.0,
          "rotY": 89.9999542,
          "rotZ": 0.0,
          "scaleX": 3.0,
          "scaleY": 3.0,
          "scaleZ": 3.0
        },
        "Nickname": "X-Wing Defense Die",
        "Description": "",
        "GMNotes": "defOG1",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/GreenDiceInfinite.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "890802",
            "Name": "Custom_Dice",
            "Transform": {
              "posX": -0.25464496,
              "posY": 2.851028,
              "posZ": 1.9994092,
              "rotX": 327.196442,
              "rotY": 50.6356964,
              "rotZ": 294.389618,
              "scaleX": 1.52400017,
              "scaleY": 1.52400017,
              "scaleZ": 1.52400017
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomImage": {
              "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/GreenDice.jpg",
              "ImageSecondaryURL": "",
              "ImageScalar": 1.0,
              "WidthScale": 0.0,
              "CustomDice": {
                "Type": 2
              }
            },
            "LuaScript": "dicecolor = \"Green\"\r\ndiceValues = {\r\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\r\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\r\n    }\r\n\r\nfunction onNumberTyped(playerColor, number)\r\n    if not self.resting then\r\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\r\n    else\r\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\r\n    end\r\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "PhysicsMaterial": {
              "StaticFriction": 0.6,
              "DynamicFriction": 0.6,
              "Bounciness": 0.5,
              "FrictionCombine": 0,
              "BounceCombine": 0
            },
            "Rigidbody": {
              "Mass": 0.5,
              "Drag": 0.1,
              "AngularDrag": 0.0,
              "UseGravity": true
            },
            "RotationValues": [
              {
                "Value": "Blank",
                "Rotation": {
                  "x": -33.0,
                  "y": 0.0,
                  "z": 90.0
                }
              },
              {
                "Value": "Eye",
                "Rotation": {
                  "x": -33.0,
                  "y": 0.0,
                  "z": 180.0
                }
              },
              {
                "Value": "Evade",
                "Rotation": {
                  "x": 33.0,
                  "y": 180.0,
                  "z": -180.0
                }
              },
              {
                "Value": "Evade",
                "Rotation": {
                  "x": 33.0,
                  "y": 180.0,
                  "z": 90.0
                }
              },
              {
                "Value": "Blank",
                "Rotation": {
                  "x": 33.0,
                  "y": 180.0,
                  "z": -90.0
                }
              },
              {
                "Value": "Eye",
                "Rotation": {
                  "x": 33.0,
                  "y": 180.0,
                  "z": 0.0
                }
              },
              {
                "Value": "Evade",
                "Rotation": {
                  "x": -33.0,
                  "y": 0.0,
                  "z": 0.0
                }
              },
              {
                "Value": "Blank",
                "Rotation": {
                  "x": -33.0,
                  "y": 0.0,
                  "z": -90.0
                }
              }
            ]
          }
        ]
      },
      {
        "GUID": "e51a16",
        "Name": "BlockSquare",
        "Transform": {
          "posX": 0.03,
          "posY": 1.01,
          "posZ": -1.72,
          "rotX": -1.34677251E-07,
          "rotY": 315.550934,
          "rotZ": -1.04252322E-07,
          "scaleX": 2.5,
          "scaleY": 0.1,
          "scaleZ": 2.5
        },
        "Nickname": "Original",
        "Description": "",
        "GMNotes": "atkPlat01",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.712543547,
          "g": 0.712543547,
          "b": 0.712543547,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "States": {
          "4": {
            "GUID": "ca5cce",
            "Name": "BlockSquare",
            "Transform": {
              "posX": -22.8327637,
              "posY": 1.00999987,
              "posZ": 11.0920744,
              "rotX": -2.31326567E-08,
              "rotY": 0.00154948584,
              "rotZ": -1.687345E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "Gold",
            "Description": "",
            "GMNotes": "atkPlat04",
            "ColorDiffuse": {
              "r": 0.9254902,
              "g": 0.0,
              "b": 0.0,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          "2": {
            "GUID": "0f92e7",
            "Name": "BlockSquare",
            "Transform": {
              "posX": 0.0325789377,
              "posY": 1.00999987,
              "posZ": -1.72443676,
              "rotX": -1.34677251E-07,
              "rotY": 315.550934,
              "rotZ": -1.04252322E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "Black",
            "Description": "",
            "GMNotes": "atkPlat02",
            "ColorDiffuse": {
              "r": 0.9254902,
              "g": 0.0,
              "b": 0.0,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          "3": {
            "GUID": "11e325",
            "Name": "BlockSquare",
            "Transform": {
              "posX": 0.0325789377,
              "posY": 1.00999987,
              "posZ": -1.72443676,
              "rotX": -1.34677251E-07,
              "rotY": 315.550934,
              "rotZ": -1.04252322E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "White",
            "Description": "",
            "GMNotes": "atkPlat03",
            "ColorDiffuse": {
              "r": 0.9254902,
              "g": 0.0,
              "b": 0.0,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          "5": {
            "GUID": "2ad8fb",
            "Name": "BlockSquare",
            "Transform": {
              "posX": 0.0325789377,
              "posY": 1.00999987,
              "posZ": -1.72443676,
              "rotX": -1.34677251E-07,
              "rotY": 315.550934,
              "rotZ": -1.04252322E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "Glitter",
            "Description": "",
            "GMNotes": "atkPlat05",
            "ColorDiffuse": {
              "r": 0.9254902,
              "g": 0.0,
              "b": 0.0,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          "6": {
            "GUID": "b33a7e",
            "Name": "BlockSquare",
            "Transform": {
              "posX": 0.0325789377,
              "posY": 1.00999987,
              "posZ": -1.72443676,
              "rotX": -1.34677251E-07,
              "rotY": 315.550934,
              "rotZ": -1.04252322E-07,
              "scaleX": 2.5,
              "scaleY": 0.1,
              "scaleZ": 2.5
            },
            "Nickname": "Marble",
            "Description": "",
            "GMNotes": "atkPlat06",
            "ColorDiffuse": {
              "r": 0.9254902,
              "g": 0.0,
              "b": 0.0,
              "a": 0.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": true,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        }
      },
      {
        "GUID": "8a49f4",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": 0.0,
          "posY": 1.08,
          "posZ": -1.67,
          "rotX": -0.000886217051,
          "rotY": 89.99986,
          "rotZ": 89.99966,
          "scaleX": 3.0,
          "scaleY": 3.0,
          "scaleZ": 3.0
        },
        "Nickname": "X-Wing Attack Die",
        "Description": "",
        "GMNotes": "atkOG1",
        "Memo": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/InfiniteDice.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/RedDiceInfinite.jpg",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/d8.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "f38d9d",
            "Name": "Custom_Dice",
            "Transform": {
              "posX": -0.3377278,
              "posY": 2.813215,
              "posZ": -1.33617127,
              "rotX": 309.703,
              "rotY": 60.38662,
              "rotZ": 216.455948,
              "scaleX": 1.52400017,
              "scaleY": 1.52400017,
              "scaleZ": 1.52400017
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomImage": {
              "ImageURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/RedDice.jpg",
              "ImageSecondaryURL": "",
              "ImageScalar": 1.0,
              "WidthScale": 0.0,
              "CustomDice": {
                "Type": 2
              }
            },
            "LuaScript": "dicecolor = \"Red\"\ndiceValues = {\n        Red = {\"Blank\", \"Eye\", \"Hit\", \"Hit\", \"Blank\", \"Eye\", \"Hit\", \"Crit\"},\n        Green = {\"Blank\", \"Eye\", \"Evade\", \"Evade\", \"Blank\", \"Eye\", \"Evade\", \"Blank\"}\n    }\n\nfunction onNumberTyped(playerColor, number)\n    if not self.resting then\n        printToAll(\"WARNING! \" .. playerColor .. \" modified a dice to \" .. diceValues[dicecolor][number] .. \" while rolling!\", color(1,0,0,1))\n    else\n        printToAll(playerColor .. \" modified a dice from \" .. self.getRotationValue() .. \" to \" .. diceValues[dicecolor][number])\n    end\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "PhysicsMaterial": {
              "StaticFriction": 0.6,
              "DynamicFriction": 0.6,
              "Bounciness": 0.5,
              "FrictionCombine": 0,
              "BounceCombine": 0
            },
            "Rigidbody": {
              "Mass": 0.5,
              "Drag": 0.1,
              "AngularDrag": 0.0,
              "UseGravity": true
            },
            "RotationValues": [
              {
                "Value": "Blank",
                "Rotation": {
                  "x": -33.0,
                  "y": 0.0,
                  "z": 90.0
                }
              },
              {
                "Value": "Eye",
                "Rotation": {
                  "x": -33.0,
                  "y": 0.0,
                  "z": 180.0
                }
              },
              {
                "Value": "Hit",
                "Rotation": {
                  "x": 33.0,
                  "y": 180.0,
                  "z": -180.0
                }
              },
              {
                "Value": "Hit",
                "Rotation": {
                  "x": 33.0,
                  "y": 180.0,
                  "z": 90.0
                }
              },
              {
                "Value": "Blank",
                "Rotation": {
                  "x": 33.0,
                  "y": 180.0,
                  "z": -90.0
                }
              },
              {
                "Value": "Eye",
                "Rotation": {
                  "x": 33.0,
                  "y": 180.0,
                  "z": 0.0
                }
              },
              {
                "Value": "Hit",
                "Rotation": {
                  "x": -33.0,
                  "y": 0.0,
                  "z": 0.0
                }
              },
              {
                "Value": "Crit",
                "Rotation": {
                  "x": -33.0,
                  "y": 0.0,
                  "z": -90.0
                }
              }
            ]
          }
        ]
      },
      {
        "GUID": "fab25d",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -48.0,
          "posY": 1.00022316,
          "posZ": 14.67,
          "rotX": 2.672589E-07,
          "rotY": 90.0,
          "rotZ": -2.392522E-06,
          "scaleX": 0.7,
          "scaleY": 0.7,
          "scaleZ": 0.7
        },
        "Nickname": "Attachable Arc Indicator",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverde.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "5ab115",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -74.66246,
              "posY": -0.0160545036,
              "posZ": 0.361631483,
              "rotX": 0.303979218,
              "rotY": 0.234458283,
              "rotZ": 358.373077,
              "scaleX": 0.375000864,
              "scaleY": 0.375000864,
              "scaleZ": 0.375000864
            },
            "Nickname": "Attachable Arc Indicator",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverde.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "35e405",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -70.7158,
                  "posY": -0.0487500057,
                  "posZ": -5.32514763,
                  "rotX": -2.86103045E-07,
                  "rotY": 89.99862,
                  "rotZ": 1.06839332E-06,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "eee513",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.23273,
                  "posY": -0.0487500168,
                  "posZ": -3.52580047,
                  "rotX": 8.59102158E-08,
                  "rotY": 89.99864,
                  "rotZ": 7.896271E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "b497b1",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -71.0561142,
                  "posY": -0.0487500168,
                  "posZ": -0.8609211,
                  "rotX": 4.95535232E-07,
                  "rotY": 89.9986,
                  "rotZ": -6.116059E-07,
                  "scaleX": 0.5250009,
                  "scaleY": 0.5250009,
                  "scaleZ": 0.5250009
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"frontback\"\r\ndouble_arc = true\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "7ca037",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -48.07,
          "posY": 1.00022316,
          "posZ": 12.0613842,
          "rotX": -8.57602345E-07,
          "rotY": 90.00001,
          "rotZ": 1.20606762E-06,
          "scaleX": 0.7,
          "scaleY": 0.7,
          "scaleZ": 0.7
        },
        "Nickname": "Attachable Arc Indicator",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
          "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadorverde.png",
          "NormalURL": "",
          "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/DualArcIndicator.obj",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 7,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "d08efd",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -74.57183,
              "posY": -0.0148683628,
              "posZ": -1.62809885,
              "rotX": 359.7655,
              "rotY": 0.135948479,
              "rotZ": 359.9716,
              "scaleX": 0.325000852,
              "scaleY": 0.325000852,
              "scaleZ": 0.325000852
            },
            "Nickname": "Attachable Arc Indicator",
            "Description": "Unassigned",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.png",
              "NormalURL": "",
              "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
              "Convex": true,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CastShadows": true
            },
            "LuaScript": "\r\ncolor_by_id = false\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "433752",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.2192,
                  "posY": -0.05375001,
                  "posZ": -4.527721,
                  "rotX": -1.5780968E-07,
                  "rotY": 89.99864,
                  "rotZ": 1.92761675E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "3": {
                "GUID": "fbb72f",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.29284,
                  "posY": -0.05375001,
                  "posZ": -2.24745917,
                  "rotX": -4.1764423E-07,
                  "rotY": 89.99845,
                  "rotZ": -3.321118E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator2.obj",
                  "DiffuseURL": "",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              },
              "4": {
                "GUID": "bd9ec5",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -66.0567551,
                  "posY": -0.05375001,
                  "posZ": 0.8938017,
                  "rotX": -1.22919431E-07,
                  "rotY": 89.99971,
                  "rotZ": 9.0460037E-07,
                  "scaleX": 0.425000846,
                  "scaleY": 0.425000846,
                  "scaleZ": 0.425000846
                },
                "Nickname": "Attachable Arc Indicator",
                "Description": "Unassigned",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator3.obj",
                  "DiffuseURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/indicadoramar.jpg",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/tokens/arcindicators/SingleArcIndicator.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CastShadows": true
                },
                "LuaScript": "\r\ncolor_by_id = true\r\ndefault_arc_direction = \"front\"\r\ndouble_arc = false\r\n\r\n\r\nfunction onDropped()\r\n    local spos = self.getPosition()\r\n    local nearest = nil\r\n    local nearest_mount = nil\r\n    local nearest_mount_position = nil\r\n    local minDist = 3.6125 -- 100 mm\r\n\r\n    local turretname = \"singleturret\"\r\n    if double_arc then\r\n      turretname = \"doubleturret\"\r\n    end\r\n    for k,ship in pairs(getAllObjects()) do\r\n        if ((ship.type== 'Figurine') and (ship.getVar('__XW_Ship') == true)) then\r\n            local turret = ship.getTable('Data').arcs.turret or {}\r\n            for mount, turret in pairs(turret) do\r\n                if turret and mount then\r\n                  if (double_arc and (turret.type[1] == 'doubleturret')) or\r\n                     (not double_arc) and (turret.type[1] ~= 'doubleturret') then\r\n                    local pos = ship.call('GetMountingPosition', {mount=mount})\r\n                    --print(\"GetMountingPosition \" .. mount .. \" \" .. turret.name .. \" \" .. tostring(pos))\r\n                    local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                    if dist < minDist then\r\n                        nearest = ship\r\n                        nearest_mount = mount\r\n                        minDist = dist\r\n                        nearest_mount_position = pos\r\n                    end\r\n                  end\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if nearest ~= nil then\r\n        local colorId = nearest.getTable('Data').ColorId\r\n        if color_by_id and (colorId ~= nil) and (colorId.a > 0) then\r\n          self.setColorTint(nearest.getTable('Data').ColorId)\r\n        end\r\n        self.setDescription(nearest_mount)\r\n        self.setPosition(nearest_mount_position + vector(0,0.15,0))\r\n        nearest.call(\"AttachArcIndicator\", {indicator=self, mount = nearest_mount})\r\n        --local mount_name = \"\"\r\n        --if mount ~= \"main\" then\r\n        --  mount_name = \" \" .. nearest_mount\r\n        --end\r\n        --if double_arc then\r\n        --  nearest.AddContextMenuItem(\"Rotate arc\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount} }) end, false)\r\n        --else\r\n        --  nearest.AddContextMenuItem(\"Rotate arc left\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateleft', player_color, {mount = nearest_mount}}) end, false)\r\n        --  nearest.AddContextMenuItem(\"Rotate arc right\" .. mount_name, function(player_color) Global.call(\"proxyPerformAction\", {nearest, 'rotateright', player_color, {mount = nearest_mount}}) end, false)\r\n        --end\r\n        --self.setRotation(nearest.getRotation())\r\n        nearest.addAttachment(self)\r\n    end\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "a48a48",
        "Name": "Custom_PDF",
        "Transform": {
          "posX": 65.13549,
          "posY": 6.03830433,
          "posZ": 17.5741749,
          "rotX": 49.9898949,
          "rotY": 270.017151,
          "rotZ": 5.57741878E-05,
          "scaleX": 3.77516055,
          "scaleY": 1.0,
          "scaleZ": 3.77516055
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomPDF": {
          "PDFUrl": "https://static1.squarespace.com/static/5ce432b1f9d2be000134d8ae/t/6050f2d21ff73a6ab7d05ae0/1615917782779/Star+Wars+X-Wing+UW_v2.pdf",
          "PDFPassword": "",
          "PDFPage": 0,
          "PDFPageOffset": 0
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "ac7594",
        "Name": "Custom_PDF",
        "Transform": {
          "posX": 61.7865143,
          "posY": 2.29460883,
          "posZ": 6.768494,
          "rotX": 50.2451973,
          "rotY": 270.113831,
          "rotZ": -1.33505719E-05,
          "scaleX": 1.23747551,
          "scaleY": 1.0,
          "scaleZ": 1.23747551
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomPDF": {
          "PDFUrl": "https://static1.squarespace.com/static/5ce432b1f9d2be000134d8ae/t/6056027df2e79040b7a6cc73/1616249470015/SW_OP_PerksChart_2021_v4_09.pdf",
          "PDFPassword": "",
          "PDFPage": 0,
          "PDFPageOffset": 0
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "d458e4",
        "Name": "Custom_PDF",
        "Transform": {
          "posX": 64.99215,
          "posY": 6.252853,
          "posZ": -12.0420942,
          "rotX": 49.9898949,
          "rotY": 270.017151,
          "rotZ": 5.57741878E-05,
          "scaleX": 3.77516055,
          "scaleY": 1.0,
          "scaleZ": 3.77516055
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomPDF": {
          "PDFUrl": "https://images-cdn.fantasyflightgames.com/filer_public/d4/14/d41434fe-79e8-4ed2-aa73-11ba2fb1208f/_swzrulesreference_v130_book_wq_12420.pdf",
          "PDFPassword": "",
          "PDFPage": 0,
          "PDFPageOffset": 0
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "3279a8",
        "Name": "Custom_Model_Infinite_Bag",
        "Transform": {
          "posX": -2.39,
          "posY": 1.06,
          "posZ": 15.55,
          "rotX": 6.299769E-09,
          "rotY": 270.0,
          "rotZ": -2.79983272E-08,
          "scaleX": 0.95,
          "scaleY": 1.71,
          "scaleZ": 0.95
        },
        "Nickname": "Remotes",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "CustomMesh": {
          "MeshURL": "http://cloud-3.steamusercontent.com/ugc/915827513484636009/0A5156A328E7DB0C758590A0E7C5906A7831DF47/",
          "DiffuseURL": "http://nnxwing.com/Content/TTS/AnimatedDevices/remotes/remotecontainer.png",
          "NormalURL": "",
          "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/915827513484636009/0A5156A328E7DB0C758590A0E7C5906A7831DF47/",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 7,
          "CustomShader": {
            "SpecularColor": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "7a5dc2",
            "Name": "Custom_Model",
            "Transform": {
              "posX": -2.329166,
              "posY": 1.23349154,
              "posZ": 15.8082275,
              "rotX": 359.9834,
              "rotY": 89.95791,
              "rotZ": 0.0209093,
              "scaleX": 0.6174997,
              "scaleY": 1.10499966,
              "scaleZ": 0.6174997
            },
            "Nickname": "Buzz Droid Swarm",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 1.0,
              "g": 1.0,
              "b": 1.0
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": false,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": false,
            "CustomMesh": {
              "MeshURL": "{verifycache}http://nnxwing.com/Content/TTS/DeviceBorders/Models/BuzzDroidBorder.obj",
              "DiffuseURL": "{verifycache}http://nnxwing.com/Content/TTS/DeviceBorders/Images/BuzzDroidTexture.png",
              "NormalURL": "",
              "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/959738243815475075/42143FBB04326122B40FE07D96F0973FB645CB77/",
              "Convex": false,
              "MaterialIndex": 1,
              "TypeIndex": 0,
              "CustomShader": {
                "SpecularColor": {
                  "r": 0.8745098,
                  "g": 0.8117647,
                  "b": 0.745098054
                },
                "SpecularIntensity": 0.15,
                "SpecularSharpness": 3.0,
                "FresnelStrength": 0.1
              },
              "CastShadows": true
            },
            "LuaScript": "Buzz = self\r\nAttach = false\r\nassignedShip = nil\r\n\r\n\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n        local state = {assignedShipGUID=assignedShip.getGUID()}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped(color)\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.tag == 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil and Attach == false then\r\n            printToAll('Buzz Droids Preparing to Launch')\r\n            initialP = self.getPosition()\r\n            assignedShip = nearest\r\n            local pos = assignedShip.getPosition()\r\n            local rot = assignedShip.getRotation()\r\n            local newPos = {}\r\n            local newRot = {}\r\n            newPos[1] = pos[1]\r\n            newPos[2] = 1.5\r\n            newPos[3] = pos[3]\r\n            newRot[1] = rot[1]\r\n            newRot[2] = rot[2]-90\r\n            newRot[3] = rot[3]\r\n            self.setPositionSmooth(newPos, false, false)\r\n            self.setRotationSmooth(newRot, false, false)\r\n            self.lock()\r\n            Launch()\r\n        elseif nearest ~= nil and Attach ==  true then\r\n            assignedShip = nearest\r\n           size = assignedShip.getTable('Data').Size\r\n            AttachSetting(assignedShip)\r\n        end\r\n    end\r\n    self.setColorTint(Color.fromString(color))\r\nend\r\n\r\nfunction onPickUp(color)\r\n    self.setColorTint(Color.fromString(color))\r\nend\r\n\r\nfunction AttachSetting(assignedShip)\r\n    local pos = assignedShip.getPosition()\r\n    local rot = assignedShip.getRotation()\r\n    local newPos = {}\r\n    local newRot = {}\r\n    newPos[1] = pos[1]\r\n    newPos[2] = 1.5\r\n    newPos[3] = pos[3]\r\n    newRot[1] = rot[1]\r\n    newRot[2] = rot[2]-90\r\n    newRot[3] = rot[3]\r\n    self.setPositionSmooth(newPos, false, false)\r\n    self.setRotationSmooth(newRot, false, false)\r\n    self.lock()\r\n    self.createButton({\r\n      click_function = \"AttachFront\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0.9,0.1,0},\r\n      rotation       = {0,90,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"AttachBack\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {-0.9,0.1,0},\r\n      rotation       = {0,-90,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\nend\r\n\r\nfunction AttachFront()\r\n    if size == 'small' then\r\n        pos = LocalPos(self,{-1.46, -0.5, 0})\r\n    elseif size == 'medium' then\r\n        pos = LocalPos(self,{-1.84, -0.5, 0})\r\n    elseif size == 'large' then\r\n        pos = LocalPos(self,{-2.2, -0.5, 0})\r\n    end\r\n    self.clearButtons()    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1] = rot[1]\r\n    newRot[2] = rot[2]+180\r\n    newRot[3] = rot[3]\r\n    buzzMove(self, pos, newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction AttachBack()\r\n    if size == 'small' then\r\n        pos = LocalPos(self,{1.46, -0.5, 0})\r\n    elseif size == 'medium' then\r\n        pos = LocalPos(self,{1.84, -0.5, 0})\r\n    elseif size == 'large' then\r\n        pos = LocalPos(self,{2.2, -0.5, 0})\r\n    end\r\n    self.clearButtons()    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1] = rot[1]\r\n    newRot[2] = rot[2]\r\n    newRot[3] = rot[3]\r\n    buzzMove(self, pos, newRot)\r\n    mainSet()\r\nend\r\n\r\n-- Init\r\n-- x -13.7\r\n-- z -5.36\r\n\r\n-- Bank3\r\n-- x -16.15\r\n-- z 0.48\r\n\r\n-- Dx = 2.45\r\n-- Dz = 5.84\r\n\r\n\r\n-- Straigth\r\n-- -6.14\r\n-- -11.88\r\n-- Dz = 5.74\r\n\r\nfunction Launch()\r\n    self.createButton({\r\n      click_function = \"BuzzLaunchBR\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0.9,0.1,0.5 },\r\n      rotation       = {0,135,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"BuzzLaunchS\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0.9,0.1,0},\r\n      rotation       = {0,90,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"BuzzLaunchBL\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0.9,0.1,-0.5 },\r\n      rotation       = {0,45,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"BuzzCancel\",\r\n      function_owner = self,\r\n      label          = \"Cancel\",\r\n      position       = {0,0.1,0.5},\r\n      rotation       = {0,90,0},\r\n      width          = 400,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\nend\r\n\r\nfunction BuzzCancel()\r\n    self.unlock()\r\n    self.clearButtons()\r\n    self.setPositionSmooth(initialP, false, false)\r\n    assignedShip = nil\r\nend\r\n\r\nfunction BuzzLaunchBL()\r\n    self.clearButtons()\r\n    buzz=self\r\n    pos = LocalPos(buzz,{-5.84, -0.5, -2.45})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]-45\r\n    newRot[3]=rot[3]\r\n    buzzMove(buzz,pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction BuzzLaunchS()\r\n    self.clearButtons()\r\n    buzz=self\r\n    pos = LocalPos(buzz,{-5.74, -0.5, 0})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]\r\n    newRot[3]=rot[3]\r\n    buzzMove(buzz,pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction BuzzLaunchBR()\r\n    self.clearButtons()\r\n    buzz=self\r\n    pos = LocalPos(buzz,{-5.84, -0.5, 2.45})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+45\r\n    newRot[3]=rot[3]\r\n    buzzMove(buzz,pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction buzzMove(buzz,pos,rot)\r\n  self.setPositionSmooth(pos, false, false)\r\n  self.setRotationSmooth(rot, false, false)\r\nend\r\n\r\nfunction mainSet()\r\n    self.clearButtons()\r\n    self.createButton({\r\n      click_function = \"BuzzAttach\",\r\n      function_owner = self,\r\n      label          = \"Attach\",\r\n      position       = {0,0.1,0},\r\n      rotation       = {0,90,0},\r\n      width          = 600,\r\n      height         = 200,\r\n      font_size      = 180,\r\n    })\r\nend\r\n\r\nfunction BuzzAttach()\r\n    self.clearButtons()\r\n    self.unlock()\r\n    backupPos=self.getPosition()\r\n    backupRot=self.getRotation()\r\n    Attach = true\r\n    assignedShip = nil\r\n    self.createButton({\r\n      click_function = \"Restore\",\r\n      function_owner = self,\r\n      label          = \"Back\",\r\n      position       = {0,0.1,0},\r\n      rotation       = {0,90,0},\r\n      width          = 600,\r\n      height         = 200,\r\n      font_size      = 180,\r\n    })\r\nend\r\n\r\nfunction Restore()\r\n    self.setPositionSmooth(backupPos, false, false)\r\n    self.setRotationSmooth(backupRot, false, false)\r\n    self.clearButtons()\r\n    mainSet()\r\nend\r\n\r\nfunction RotMatrix(axis, angDeg)\r\n    local ang = math.rad(angDeg)\r\n    local cs = math.cos\r\n    local sn = math.sin\r\n\r\n    if axis == 'x' then\r\n        return {\r\n                    { 1,        0,             0 },\r\n                    { 0,   cs(ang),   -1*sn(ang) },\r\n                    { 0,   sn(ang),      cs(ang) }\r\n               }\r\n    elseif axis == 'y' then\r\n        return {\r\n                    {    cs(ang),   0,   sn(ang) },\r\n                    {          0,   1,         0 },\r\n                    { -1*sn(ang),   0,   cs(ang) }\r\n               }\r\n    elseif axis == 'z' then\r\n        return {\r\n                    { cs(ang),   -1*sn(ang),   0 },\r\n                    { sn(ang),      cs(ang),   0 },\r\n                    { 0,                  0,   1 }\r\n               }\r\n    end\r\nend\r\n\r\n-- Apply given rotation matrix on given vector\r\n-- (multiply matrix and column vector)\r\nfunction RotateVector(rotMat, vect)\r\n    local out = {0, 0, 0}\r\n    for i=1,3,1 do\r\n        for j=1,3,1 do\r\n            out[i] = out[i] + rotMat[i][j]*vect[j]\r\n        end\r\n    end\r\n    return out\r\nend\r\n\r\n-- Sum of two vectors (of any size)\r\nfunction Vect_Sum(vec1, vec2)\r\n    local out = {}\r\n    local k = 1\r\n    while vec1[k] ~= nil and vec2[k] ~= nil do\r\n        out[k] = vec1[k] + vec2[k]\r\n        k = k+1\r\n    end\r\n    return out\r\nend\r\n\r\nfunction LocalPos(object, position)\r\n    local rot = object.getRotation()\r\n    local lPos = {position[1], position[2], position[3]}\r\n    -- Z-X-Y extrinsic\r\n    local zRot = RotMatrix('z', rot['z'])\r\n    lPos = RotateVector(zRot, lPos)\r\n    local xRot = RotMatrix('x', rot['x'])\r\n    lPos = RotateVector(xRot, lPos)\r\n    local yRot = RotMatrix('y', rot['y'])\r\n    lPos = RotateVector(yRot, lPos)\r\n\r\n    return Vect_Sum(lPos, object.getPosition())\r\nend",
            "LuaScriptState": "",
            "XmlUI": "",
            "States": {
              "2": {
                "GUID": "75da37",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -12.9123468,
                  "posY": 1.05570972,
                  "posZ": -0.7699307,
                  "rotX": -6.910105E-05,
                  "rotY": 0.0675576255,
                  "rotZ": -1.46214161E-05,
                  "scaleX": 0.6174997,
                  "scaleY": 1.10499966,
                  "scaleZ": 0.6174997
                },
                "Nickname": "DRK-1 Probe Droid",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": false,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "{verifycache}http://nnxwing.com/Content/TTS/DeviceBorders/Models/ProbeDroidBorder.obj",
                  "DiffuseURL": "{verifycache}http://nnxwing.com/Content/TTS/DeviceBorders/Images/ProbeDroidTexture.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/BuoyCollider.obj",
                  "Convex": true,
                  "MaterialIndex": 1,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 0.8745098,
                      "g": 0.8117647,
                      "b": 0.745098054
                    },
                    "SpecularIntensity": 0.15,
                    "SpecularSharpness": 3.0,
                    "FresnelStrength": 0.1
                  },
                  "CastShadows": true
                },
                "LuaScript": "----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\ndork = self\r\n\r\nassignedShip = nil\r\ndrop_offset = 0.78\r\nlocal spawnedRuler = nil\r\n\r\nfunction update()\r\n    if self.getDescription() == 'r' then\r\n        if ToggleRuler3() then\r\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\r\n        end\r\n        self.setDescription('')\r\n    end\r\nend\r\n\r\nfunction ToggleRuler1()\r\n    return ToggleRuler(1)\r\nend\r\n\r\nfunction ToggleRuler3()\r\n    return ToggleRuler(3)\r\nend\r\n\r\nfunction DeleteRuler()\r\n    if spawnedRuler  then\r\n        spawnedRuler.destruct()\r\n        spawnedRuler = nil\r\n    end\r\nend\r\n\r\nfunction ToggleRuler(range)\r\n    if spawnedRuler  then\r\n        spawnedRuler.destruct()\r\n        spawnedRuler = nil\r\n        if spawnedRulerRange == range then\r\n            return false\r\n        end\r\n    end\r\n    local params = {\r\n        type = 'Custom_Model',\r\n        position = self.positionToWorld({0, 0, 0}),\r\n        rotation = self.getRotation(),\r\n        scale = vector(1,1,1)\r\n    }\r\n    local custom = {\r\n        mesh = '{verifycache}https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/arcranges/DRK1/R' .. tostring(range) .. '.obj',\r\n        collider = 'http://pastebin.com/raw.php?i=UK3Urmw1'\r\n    }\r\n    local removeButton = {\r\n        click_function = 'DeleteRuler',\r\n        label = 'DEL',\r\n        function_owner = self,\r\n        position = {0, 0.1, 0},\r\n        rotation = {0, 270, 0},\r\n        width = 750,\r\n        height = 750,\r\n        font_size = 250,\r\n        color = {0.7, 0.7, 0.7}\r\n    }\r\n    spawnedRuler = spawnObject(params)\r\n    spawnedRuler.setCustomObject(custom)\r\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\r\n    spawnedRuler.createButton(removeButton)\r\n    local vector_lines = {}\r\n    for k,obj in pairs(getAllObjects()) do\r\n        if obj ~= nil and obj.tag == 'Figurine' and obj.getVar('__XW_Ship') == true then\r\n            my_pos = self.getNearestPointFromObject(obj)\r\n            closest = Global.call(\"API_GetClosestPointToShip\", {ship=obj,point=my_pos})\r\n            distance = Convert_igu_mm(closest.length)\r\n            if distance < 100*range then\r\n                table.insert(vector_lines, {\r\n                    points = {self.positionToLocal(closest.A)*self.getScale().x, self.positionToLocal(closest.B)*self.getScale().x},\r\n                    color = {1,1,1},\r\n                    thickness = 0.1,\r\n                    rotation = vector(0,0,0)\r\n                })\r\n            end\r\n        end\r\n    end\r\n    spawnedRuler.setVectorLines(vector_lines)\r\n\r\n    spawnedRuler.lock()\r\n    spawnedRulerRange = range\r\n    return true\r\nend\r\n\r\nfunction onPickUp(color)\r\n    self.setColorTint(Color.fromString(color))\r\nend\r\n\r\nfunction onSave()\r\n    if assignedShip ~= nil then\r\n        local state = {assignedShipGUID=assignedShip.getGUID()}\r\n        return JSON.encode(state)\r\n    end\r\nend\r\n\r\nfunction onLoad(save_state)\r\n    self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler1, false)\r\n    self.addContextMenuItem(\"Toggle Range 3\", ToggleRuler3, false)\r\nend\r\n\r\n\r\n-- Assign on drop near a small base ship\r\nfunction onDropped(color)\r\n    if assignedShip == nil then\r\n        local spos = self.getPosition()\r\n        local nearest = nil\r\n        local minDist = 2.89 -- 80mm\r\n        for k,ship in pairs(getAllObjects()) do\r\n            if ship.tag == 'Figurine' and ship.name ~= '' then\r\n                local pos = ship.getPosition()\r\n                local dist = math.sqrt(math.pow((spos[1]-pos[1]),2) + math.pow((spos[3]-pos[3]),2))\r\n                if dist < minDist then\r\n                    nearest = ship\r\n                    minDist = dist\r\n                end\r\n            end\r\n        end\r\n        if nearest ~= nil then\r\n            printToAll('DRK-1 Probe preparing to drop/lauch')\r\n            initialP = self.getPosition()\r\n            assignedShip = nearest\r\n            local pos = assignedShip.getPosition()\r\n            local rot = assignedShip.getRotation()\r\n            local newPos = {}\r\n            newPos[1] = pos[1]\r\n            newPos[2] = 1.21\r\n            newPos[3] = pos[3]\r\n            self.setPosition(newPos)\r\n            self.setRotation(rot)\r\n            launchDrop()\r\n        end\r\n    end\r\n    self.setColorTint(Color.fromString(color))\r\nend\r\n\r\nfunction launchDrop()\r\n    self.lock()\r\n    self.createButton({\r\n      click_function = \"prepareDrop\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      rotation       = {0,180,0},\r\n      position       = {0,0.1,0.7},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"prepareLaunch\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0,0.1,-0.7 },\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"cancelDrop\",\r\n      function_owner = self,\r\n      label          = \"Cancel\",\r\n      position       = {1,0.1,0},\r\n      width          = 500,\r\n      height         = 180,\r\n      font_size      = 150\r\n    })\r\nend\r\n\r\nfunction prepareDrop()\r\n    self.clearButtons()\r\n    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+180\r\n    newRot[3]=rot[3]\r\n    self.setRotation(newRot)\r\n    prepareLaunch()\r\nend\r\n\r\nfunction prepareLaunch()\r\n    self.lock()\r\n    local pos = LocalPos(self,{0,0,-drop_offset})\r\n    self.setPosition(pos)\r\n    self.clearButtons()\r\n    dorkDrop()\r\nend\r\n\r\n\r\nfunction dorkDrop()\r\n    self.createButton({\r\n      click_function = \"dorkDropTR\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0.8,0.1,-0.7 },\r\n      rotation       = {0,90,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dorkDropBR\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0.4,0.1,-0.7 },\r\n      rotation       = {0,45,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dorkDropS\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0,0.1,-0.7 },\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dorkDropBL\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {-0.4,0.1,-0.7 },\r\n      rotation       = {0,-45,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dorkDropTL\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {-0.8,0.1,-0.7 },\r\n      rotation       = {0,-90,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\nend\r\n\r\nfunction cancelDrop()\r\n    self.unlock()\r\n    self.clearButtons()\r\n    self.setPosition(initialP)\r\n    assignedShip = nil\r\nend\r\n\r\n\r\n--[[\r\nNeutral\r\nx=27.36\r\nz=-6.92\r\n\r\nbank\r\nx=24.94\r\nz=-1.23\r\n\r\nDx=2.42\r\nDz=5.76\r\n\r\nTurn\r\nx=31.27\r\nz=2.99\r\n\r\nDx=3.96\r\nDz=3.93\r\n\r\n]]\r\n\r\nfunction dorkDropTL()\r\n    print(\"TL\")\r\n    self.clearButtons()\r\n    dork=self\r\n    local pos = LocalPos(dork,{3.93, -0.21, -3.98 + drop_offset})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+90\r\n    newRot[3]=rot[3]\r\n    dorkMove(pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction dorkDropBL()\r\n    print(\"BL\")\r\n    self.clearButtons()\r\n    dork=self\r\n    pos = LocalPos(dork,{2.39, -0.21, -5.82 + drop_offset})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+135\r\n    newRot[3]=rot[3]\r\n    dorkMove(pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction dorkDropS()\r\n    print(\"S\")\r\n    self.clearButtons()\r\n    dork=self\r\n    pos = LocalPos(dork,{0, -0.21, -5.7 + drop_offset})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+180\r\n    newRot[3]=rot[3]\r\n    dorkMove(pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction dorkDropBR()\r\n    print(\"BR\")\r\n    self.clearButtons()\r\n    dork=self\r\n    pos = LocalPos(dork,{-2.39, -0.21, -5.82 + drop_offset})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+225\r\n    newRot[3]=rot[3]\r\n    dorkMove(pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction dorkDropTR()\r\n    print(\"TR\")\r\n    self.clearButtons()\r\n    dork=self\r\n    pos = LocalPos(dork,{-3.93, -0.21, -3.98 + drop_offset})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+270\r\n    newRot[3]=rot[3]\r\n    dorkMove(pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction mainSet()\r\n    self.clearButtons()\r\n    self.createButton({\r\n      click_function = \"dir1\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0,0.1,-0.7 },\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dir2\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0.7,0.1,-0.24 },\r\n      rotation       = {0,72,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dir3\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0.5,0.1,0.5},\r\n      rotation       = {0,144,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dir4\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {-0.5,0.1,0.5},\r\n      rotation       = {0,216,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dir5\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {-0.7,0.1,-0.24},\r\n      rotation       = {0,288,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\nend\r\n\r\nfunction dir1()\r\n    moveSet()\r\nend\r\n\r\nfunction dir2()\r\n    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+72\r\n    newRot[3]=rot[3]\r\n    self.setRotation(newRot)\r\n    moveSet()\r\nend\r\n\r\nfunction dir3()\r\n    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+144\r\n    newRot[3]=rot[3]\r\n    self.setRotation(newRot)\r\n    moveSet()\r\nend\r\n\r\nfunction dir4()\r\n    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+216\r\n    newRot[3]=rot[3]\r\n    self.setRotation(newRot)\r\n    moveSet()\r\nend\r\n\r\nfunction dir5()\r\n    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+288\r\n    newRot[3]=rot[3]\r\n    self.setRotation(newRot)\r\n    moveSet()\r\nend\r\n\r\nfunction moveSet()\r\n    self.clearButtons()\r\n    self.createButton({\r\n      click_function = \"dorkMoveS\",\r\n      function_owner = self,\r\n      label          = \"^\",\r\n      position       = {0,0.1,-0.7 },\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dorkMoveL\",\r\n      function_owner = self,\r\n      label          = \"<\",\r\n      position       = {-0.4,0.1,-0.7 },\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"dorkMoveR\",\r\n      function_owner = self,\r\n      label          = \">\",\r\n      position       = {0.4,0.1,-0.7 },\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\n    self.createButton({\r\n      click_function = \"mainSet\",\r\n      function_owner = self,\r\n      label          = \"B\",\r\n      position       = {0,0.1,0},\r\n      width          = 200,\r\n      height         = 200,\r\n      font_size      = 150\r\n    })\r\nend\r\n\r\nfunction dorkMoveS()\r\n    dork=self\r\n    pos = LocalPos(dork,{0, 0, -4.22})\r\n    local rot = self.getRotation()\r\n    newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+180\r\n    newRot[3]=rot[3]\r\n    dorkMove(pos,newRot)\r\n    mainSet()\r\nend\r\n\r\n\r\nfunction dorkMoveL()\r\n    dork=self\r\n    pos = LocalPos(dork,{1.84, 0, -4.44})\r\n    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+135\r\n    newRot[3]=rot[3]\r\n    dorkMove(pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction dorkMoveR()\r\n    dork=self\r\n    pos = LocalPos(dork,{-1.84, 0, -4.44})\r\n    local rot = self.getRotation()\r\n    local newRot={}\r\n    newRot[1]=rot[1]\r\n    newRot[2]=rot[2]+225\r\n    newRot[3]=rot[3]\r\n    dorkMove(pos,newRot)\r\n    mainSet()\r\nend\r\n\r\nfunction dorkMove(pos,rot)\r\n    self.setPosition(pos)\r\n    self.setRotation(rot)\r\nend\r\n\r\n\r\n\r\nfunction RotMatrix(axis, angDeg)\r\n    local ang = math.rad(angDeg)\r\n    local cs = math.cos\r\n    local sn = math.sin\r\n\r\n    if axis == 'x' then\r\n        return {\r\n                    { 1,        0,             0 },\r\n                    { 0,   cs(ang),   -1*sn(ang) },\r\n                    { 0,   sn(ang),      cs(ang) }\r\n               }\r\n    elseif axis == 'y' then\r\n        return {\r\n                    {    cs(ang),   0,   sn(ang) },\r\n                    {          0,   1,         0 },\r\n                    { -1*sn(ang),   0,   cs(ang) }\r\n               }\r\n    elseif axis == 'z' then\r\n        return {\r\n                    { cs(ang),   -1*sn(ang),   0 },\r\n                    { sn(ang),      cs(ang),   0 },\r\n                    { 0,                  0,   1 }\r\n               }\r\n    end\r\nend\r\n\r\n-- Apply given rotation matrix on given vector\r\n-- (multiply matrix and column vector)\r\nfunction RotateVector(rotMat, vect)\r\n    local out = {0, 0, 0}\r\n    for i=1,3,1 do\r\n        for j=1,3,1 do\r\n            out[i] = out[i] + rotMat[i][j]*vect[j]\r\n        end\r\n    end\r\n    return out\r\nend\r\n\r\n-- Sum of two vectors (of any size)\r\nfunction Vect_Sum(vec1, vec2)\r\n    local out = {}\r\n    local k = 1\r\n    while vec1[k] ~= nil and vec2[k] ~= nil do\r\n        out[k] = vec1[k] + vec2[k]\r\n        k = k+1\r\n    end\r\n    return out\r\nend\r\n\r\nfunction LocalPos(object, position)\r\n    local rot = object.getRotation()\r\n    local lPos = {position[1], position[2], position[3]}\r\n    -- Z-X-Y extrinsic\r\n    local zRot = RotMatrix('z', rot['z'])\r\n    lPos = RotateVector(zRot, lPos)\r\n    local xRot = RotMatrix('x', rot['x'])\r\n    lPos = RotateVector(xRot, lPos)\r\n    local yRot = RotMatrix('y', rot['y'])\r\n    lPos = RotateVector(yRot, lPos)\r\n\r\n    return Vect_Sum(lPos, object.getPosition())\r\nend",
                "LuaScriptState": "{\"assignedShipGUID\":\"2494cd\"}",
                "XmlUI": ""
              },
              "3": {
                "GUID": "21755a",
                "Name": "Custom_Model",
                "Transform": {
                  "posX": -13.8882551,
                  "posY": 1.05155623,
                  "posZ": 6.66319847,
                  "rotX": -3.59822625E-05,
                  "rotY": 0.025394747,
                  "rotZ": 2.13725548E-06,
                  "scaleX": 1.0,
                  "scaleY": 1.0,
                  "scaleZ": 1.0
                },
                "Nickname": "Sensor Buoy",
                "Description": "",
                "GMNotes": "",
                "ColorDiffuse": {
                  "r": 1.0,
                  "g": 1.0,
                  "b": 1.0
                },
                "LayoutGroupSortIndex": 0,
                "Value": 0,
                "Locked": false,
                "Grid": true,
                "Snap": true,
                "IgnoreFoW": false,
                "MeasureMovement": false,
                "DragSelectable": true,
                "Autoraise": true,
                "Sticky": true,
                "Tooltip": true,
                "GridProjection": false,
                "HideWhenFaceDown": false,
                "Hands": false,
                "CustomMesh": {
                  "MeshURL": "{verifycache}http://nnxwing.com/Content/TTS/DeviceBorders/Models/SensorBuoyBorder.obj",
                  "DiffuseURL": "{verifycache}http://nnxwing.com/Content/TTS/DeviceBorders/Images/SensorBuoys.png",
                  "NormalURL": "",
                  "ColliderURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/obstacles/BuoyCollider.obj",
                  "Convex": true,
                  "MaterialIndex": 3,
                  "TypeIndex": 0,
                  "CustomShader": {
                    "SpecularColor": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0
                    },
                    "SpecularIntensity": 0.0,
                    "SpecularSharpness": 2.0,
                    "FresnelStrength": 0.0
                  },
                  "CastShadows": true
                },
                "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Buoy ruler modeled by CrazyVulcan\r\n-- ~~~~~~\r\n--modded to work with a FO Buoy and not a bomb\r\n-- Call buoy drop stick\r\n\r\n----#include TTS_xwing/src/Dimensions\n-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: http://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- X-Wing related measurements for TTS\r\n-- ~~~~~~\r\n\r\n-- adjusted length = 40mm = 1.4536igu\r\n-- 1mm = 0.03634igu\r\nmm_igu_ratio = 0.03637\r\n\r\n-- 40mm = 1.445igu\r\n-- (s1 length / small base size)\r\n\r\n-- 1mm = 0.036125igu\r\n--mm_igu_ratio = 0.036125\r\n\r\n-- Milimeter dimensions of ship bases\r\nmm_smallBase = 40\r\nmm_mediumBase = 60\r\nmm_largeBase = 80\r\n\r\nmm_baseSize = {}\r\nmm_baseSize.small = 40\r\nmm_baseSize.smallBase = 40\r\nmm_baseSize.medium = 60\r\nmm_baseSize.mediumBase = 60\r\nmm_baseSize.large = 80\r\nmm_baseSize.largeBase = 80\r\nmm_baseSize.huge = 80\r\nmm_baseSize.hugeBase = 80\r\n\r\n-- Milimeter dimensions for cards\r\nmm_upgrade_width = 41\r\nmm_upgrade_height = 63\r\nmm_pilot_width = 63.5\r\nmm_pilot_height = 88\r\n\r\nmm_ship_scale = vector(0.629, 0.629, 0.629)\r\n\r\nmm_cardSize = {}\r\nmm_cardSize.upgrade = {width = 41, height = 63}\r\nmm_cardSize.pilot = {width = 63.5, height = 88}\r\n\r\n-- Milimeter dimension for dial cards\r\nmm_dialSize = 54\r\n\r\n-- Convert argument from MILIMETERS to IN-GAME UNITS\r\nfunction Convert_mm_igu(milimeters)\r\n    return milimeters*mm_igu_ratio\r\nend\r\n\r\n-- Convert argument from IN-GAME UNITS to MILIMETERS\r\nfunction Convert_igu_mm(in_game_units)\r\n    return in_game_units/mm_igu_ratio\r\nend\r\n\n----#include TTS_xwing/src/Dimensions\n\r\nfunction onDropped(color)\r\n    Global.call('API_BombTokenDrop', {token=self})\r\n    self.setColorTint(Color.fromString(color))\r\nend\r\n\r\nfunction onPickUp(color)\r\n    self.setColorTint(Color.fromString(color))\r\nend\r\n\r\nlocal spawnedRuler = nil\r\nfunction update()\r\n    if self.getDescription() == 'r' then\r\n        if ToggleRuler() then\r\n            printToAll('Spawning ' .. self.getName() .. ' guide', {0, 1, 1})\r\n        end\r\n        self.setDescription('')\r\n    end\r\nend\r\n\r\nfunction ToggleRuler()\r\n    if spawnedRuler then\r\n        spawnedRuler.destruct()\r\n        spawnedRuler = nil\r\n        return false\r\n    end\r\n    local params = {\r\n        type = 'Custom_Model',\r\n        position = self.positionToWorld({0, 0.0, 0}),\r\n        rotation = self.getRotation(),\r\n        scale = self.getScale()\r\n    }\r\n    local custom = {\r\n        mesh = 'http://cloud-3.steamusercontent.com/ugc/1591414635586906061/A71FFBC75ADA0980F4124BCB96516F72D694489C/',\r\n        collider = 'http://pastebin.com/raw.php?i=UK3Urmw1'\r\n    }\r\n    local removeButton = {\r\n        click_function = 'ToggleRuler',\r\n        label = 'DEL',\r\n        function_owner = self,\r\n        position = {0, 0.25, 0},\r\n        rotation = {0, 270, 0},\r\n        width = 750,\r\n        height = 750,\r\n        font_size = 250,\r\n        color = {0.7, 0.7, 0.7}\r\n    }\r\n    spawnedRuler = spawnObject(params)\r\n    spawnedRuler.setCustomObject(custom)\r\n    spawnedRuler.setColorTint(color(1,1,0,0.2))\r\n    spawnedRuler.createButton(removeButton)\r\n    local vector_lines = {}\r\n    for k,obj in pairs(getAllObjects()) do\r\n        if obj ~= nil and obj.tag == 'Figurine' and obj.getVar('__XW_Ship') == true then\r\n            my_pos = self.getNearestPointFromObject(obj)\r\n            closest = Global.call(\"API_GetClosestPointToShip\", {ship=obj,point=my_pos})\r\n            distance = Convert_igu_mm(closest.length)\r\n            if distance < 100 then\r\n                table.insert(vector_lines, {\r\n                    points = {self.positionToLocal(closest.A), self.positionToLocal(closest.B)},\r\n                    color = {1,1,1},\r\n                    thickness = 0.1,\r\n                    rotation = vector(0,0,0)\r\n                })\r\n            end\r\n        end\r\n    end\r\n    spawnedRuler.setVectorLines(vector_lines)\r\n    spawnedRuler.lock()\r\n    return true\r\nend\r\n\r\n\r\nfunction onLoad()\r\n    if self.getName() == 'AoE Bomb source' then\r\n        self.setPosition({0, -3, 18.28})\r\n        self.setRotation({0, 0, 0})\r\n        self.lock()\r\n        self.tooltip = false\r\n        self.interactable = false\r\n        update = nil\r\n    else\r\n        self.addContextMenuItem(\"Toggle Range 1\", ToggleRuler, false)\r\n    end\r\n\r\nend\r\n",
                "LuaScriptState": "",
                "XmlUI": ""
              }
            }
          }
        ]
      },
      {
        "GUID": "224031",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 20.5142,
          "posY": 1.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 1.63,
          "scaleY": 1.2,
          "scaleZ": 1.63
        },
        "Nickname": "Purple-Orange",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/basicmat.obj",
          "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/1760324221436739587/059F900D0ABE33682825A2F0F7D00737E8327B1A/",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 4,
          "CustomShader": {
            "SpecularColor": {
              "r": 0.875,
              "g": 0.812880337,
              "b": 0.7463235
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: https://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Script applicable to playmats\r\n-- ~~~~~~\r\n\r\n-- TO ADD NEW IMAGES TO THE SET\r\n-- Just add their links to the table below in the same fashion\r\n\r\n-- Table of all images to be cycled through with NextImage()\r\nimageSet = {    'http://i.imgur.com/6IkNucB.jpg',\r\n                'http://cloud-3.steamusercontent.com/ugc/1483326815456337025/EB436BA5C3D1B0BAF4ED3325456E7211A669E3BF/',\r\n                'http://cloud-3.steamusercontent.com/ugc/1483326815456320038/68F5C582DBCBDC1070ACD4CE12091BFA73AE93F4/',\r\n                'http://cloud-3.steamusercontent.com/ugc/1760324221436739587/059F900D0ABE33682825A2F0F7D00737E8327B1A/',\r\n                'http://cloud-3.steamusercontent.com/ugc/1760324221436914449/FDE3C20CE192980B8176964A41D3A03851D0CB5C/',\r\n                'https://i.imgur.com/siDMVxH.mp4',\r\n                'https://i.imgur.com/HXUBMXE.mp4',\r\n                'http://i.imgur.com/dczrasC.jpg',\r\n                'http://i.imgur.com/dKYBJMX.png',\r\n                'https://i.imgur.com/1veiNk9.jpg',\r\n                'http://i.imgur.com/8tDK0x8.png',\r\n                'http://i.imgur.com/sb2AJOz.png',\r\n                'https://i.imgur.com/KPtozCm.png',\r\n                'http://i.imgur.com/V7pWVak.png',\r\n                'http://i.imgur.com/spWTWy7.png',\r\n                'http://i.imgur.com/YdIAcvP.png',\r\n                'http://i.imgur.com/5CcjDzM.jpg',\r\n                'http://i.imgur.com/4WMSCSV.jpg',\r\n                'http://i.imgur.com/0FWrq21.jpg',\r\n                'http://i.imgur.com/x4LEk1A.jpg',\r\n                'http://i.imgur.com/fy6kooO.png',   }\r\n\r\n-- Mat flag for layouts\r\n__XW_Mat = true\r\n-- Parent layout name\r\n__XW_MatLayout = 'Standard'\r\n-- This mat identifier\r\n__XW_MatID = 'Purple-Orange'\r\n\r\nfunction onLoad()\r\n    -- Restore current image index\r\n    currImage = tonumber(self.script_state) or 1\r\n    self.lock()\r\n    self.interactable = false\r\n    self.tooltip = false\r\n\r\nend\r\n\r\n-- Change image to the next from the list, wrap around to 1\r\n-- Reloads self to actually reflect the change\r\nfunction NextImage()\r\n    deleteAll()\r\n    -- Increment image index\r\n    local nextImage = currImage + 1\r\n    if nextImage > #imageSet then\r\n        nextImage = 1\r\n    end\r\n\r\n    -- Reload self with the new image and save the index\r\n    local custom = self.getCustomObject()\r\n    custom.diffuse = imageSet[nextImage]\r\n    self.setCustomObject(custom)\r\n    local newSelf = self.reload()\r\n    newSelf.script_state = nextImage\r\nend\r\n\r\n-- Please update me\r\n\r\n\r\ncorrScale = {0.625, 0.625, 0.625}\r\n\r\nfunction ToggleRulers()\r\n    deleteAll()\r\n    rulersState = rulersState + 1\r\n    if rulersState == 1 then\r\n      spawnSet(roidPos, roidRot)\r\n    elseif rulersState == 2 then\r\n      spawnSet(setupPos, setupRot)\r\n    elseif rulersState == 3 then\r\n      rulersState = 0\r\n    end\r\nend\r\n\r\nfunction spawnSet(posTable, rotTable)\r\n    -- please kill me\r\n    local function sPos(tab)\r\n        if self.getPosition()[1] < 0 then\r\n            return {-1*tab[1], tab[2], tab[3]}\r\n        else\r\n            return tab\r\n        end\r\n    end\r\n    local initPos = self.getPosition()\r\n    initPos.y = initPos.y - 3\r\n    for k,pos in pairs(posTable) do\r\n        local params = {} -- 50\r\n        params.type = 'Custom_Model'\r\n        params.position = initPos\r\n        --params.position = sPos(posTable[k])\r\n        --params.rotation = rotTable[k]\r\n        obj = spawnObject(params)\r\n        obj.setCustomObject(rulerData)\r\n        obj.setScale(corrScale)\r\n        obj.lock()\r\n        obj.setPositionSmooth(sPos(posTable[k]), false, true)\r\n        obj.setRotationSmooth(rotTable[k], false, true)\r\n        obj.addTag('TempLayoutElement')\r\n        rulers[obj] = true\r\n    end\r\nend\r\n\r\nfunction deleteAll()\r\n    for ruler in pairs(rulers) do ruler.destruct() end\r\n    rulers = {}\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\r\n    if rulers[obj] then\r\n        rulers[obj] = nil\r\n    end\r\nend\r\n\r\nrulers = {}\r\nrulersState = 0\r\nrulerData = {}\r\nrulerData.mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj'\r\nrulerData.collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj'\r\nrulerData.diffuse = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg'\r\nrulerData.material = 1\r\n\r\nroidRot = {\r\n    { 0, 270, 180},\r\n      { 0, 270, 180},\r\n    { 0, 180, 180},\r\n      { 0, 180, 180},\r\n    { 0, 270, 180},\r\n      { 0, 270, 180},\r\n    { 0, 0, 180},\r\n    { 0, 0, 180},\r\n    { 0, 90, 180},\r\n    { 0, 90, 180},\r\n    { 0, 180, 180},\r\n      { 0, 180, 180}\r\n}\r\n\r\nsetupRot = {\r\n    {0, 270, 0},\r\n    {0, 0, 0},\r\n    {0, 270, 0},\r\n    {0, 0, 0},\r\n    {0, 0, 0},\r\n    {0, 90, 0},\r\n    {0, 180, 0},\r\n    {0, 90, 0},\r\n    {0, 180, 0},\r\n    {0, 180, 0}\r\n}\r\n\r\nroidPos = {\r\n    { 29.872200088501, 0.99871951341629, -10.8846182632446}, -- pio\r\n      { 29.872200088501, 0.99871951341629, 0},\r\n    { 31.382360534668, 0.998719453811646, -9.37833354949951}, -- poz\r\n      { 20.5, 0.998719453811646, -9.37833354949951},\r\n    { 11.1684393310547, 0.998719573020935, -10.8876889038086},\r\n      { 11.1684393310547, 0.998719573020935, 0},\r\n    { 9.64546291351318, 0.998719453811646, -9.37820747375488},\r\n    { 9.64722316741943, 0.99871951341629, 9.37365325927734},\r\n    { 11.1658749008179, 0.998719453811646, 10.8807905578613},\r\n    { 29.8585949707031, 0.998719394207001, 10.8395362091064}, -- pio\r\n    { 31.3808876037598, 0.998719453811646, 9.32834770202637}, -- poz\r\n      { 20.5, 0.998719453811646, 9.32834770202637}\r\n}\r\n\r\nsetupPos = {\r\n    { 3.97240991592407, 1.00172388553619, -10.8451750564575}, --pio\r\n    { 9.67806907653809, 1.00172448158264, -12.4075313186646},\r\n    { 37.0594985961914, 1.00172400474548, -10.8700817108154}, --pio\r\n    { 20.5256023406982, 1.0017237663269, -12.4035499572754},\r\n    { 31.3721223449707, 1.00172340869904, -12.4002779006958},\r\n\r\n    { 3.97240991592407, 1.00172388553619, 10.8451750564575}, --pio\r\n    { 9.67806907653809, 1.00172448158264, 12.4075313186646},\r\n    { 37.0594985961914, 1.00172400474548, 10.8700817108154}, --pio\r\n    { 20.5256023406982, 1.0017237663269, 12.4035499572754},\r\n    { 31.3721223449707, 1.00172340869904, 12.4002779006958},\r\n}",
        "LuaScriptState": "4",
        "XmlUI": ""
      },
      {
        "GUID": "ab7dfe",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 3.41000055E-06,
          "scaleY": 1.2E-06,
          "scaleZ": 1.63999994E-06
        },
        "Nickname": "Epic mat",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/basicmat.obj",
          "DiffuseURL": "https://i.imgur.com/hGzGwY3.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 4,
          "CustomShader": {
            "SpecularColor": {
              "r": 0.875,
              "g": 0.812880337,
              "b": 0.7463235
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: https://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Script applicable to playmats\r\n-- ~~~~~~\r\n\r\n-- TO ADD NEW IMAGES TO THE SET\r\n-- Just add their links to the table below in the same fashion\r\n\r\n-- Table of all images to be cycled through with NextImage()\r\nimageSet = {    'https://i.imgur.com/aCxRouI.jpg',\r\n                'https://i.imgur.com/X3luGQr.jpg',\r\n                'https://i.imgur.com/hGzGwY3.jpg',\r\n                'https://i.imgur.com/W5AuCVd.jpg',  }\r\n\r\n-- Mat flag for layouts\r\n__XW_Mat = true\r\n-- Parent layout name\r\n__XW_MatLayout = 'Epic'\r\n-- This mat identifier\r\n__XW_MatID = 'Main'\r\n\r\nfunction onLoad()\r\n    -- Restore current image index\r\n    currImage = tonumber(self.script_state) or 1\r\n    self.lock()\r\n    self.interactable = false\r\n    self.tooltip = false\r\nend\r\n\r\n-- Change image to the next from the list, wrap around to 1\r\n-- Reloads self to actually reflect the change\r\nfunction NextImage()\r\n    deleteAll()\r\n    -- Increment image index\r\n    local nextImage = currImage + 1\r\n    if nextImage > #imageSet then\r\n        nextImage = 1\r\n    end\r\n\r\n    -- Reload self with the new image and save the index\r\n    local custom = self.getCustomObject()\r\n    custom.diffuse = imageSet[nextImage]\r\n    self.setCustomObject(custom)\r\n    local newSelf = self.reload()\r\n    newSelf.script_state = nextImage\r\nend\r\n\r\n-- Please update me\r\n\r\n\r\ncorrScale = {0.625, 0.625, 0.625}\r\n\r\nfunction ToggleRulers()\r\n    deleteAll()\r\n    rulersState = rulersState + 1\r\n    if rulersState == 1 then\r\n      spawnSet(setupPos, setupRot)\r\n    elseif rulersState == 2 then\r\n      rulersState = 0\r\n    end\r\nend\r\n\r\nfunction spawnSet(posTable, rotTable)\r\n    -- please kill me\r\n    local function sPos(tab)\r\n        if self.getPosition()[1] < 0 then\r\n            return {-1*tab[1], tab[2], tab[3]}\r\n        else\r\n            return tab\r\n        end\r\n    end\r\n    local initPos = self.getPosition()\r\n    initPos.y = initPos.y - 3\r\n    for k,pos in pairs(posTable) do\r\n        local params = {} -- 50\r\n        params.type = 'Custom_Model'\r\n        params.position = initPos\r\n        --params.position = sPos(posTable[k])\r\n        --params.rotation = rotTable[k]\r\n        obj = spawnObject(params)\r\n        obj.setCustomObject(rulerData)\r\n        obj.setScale(corrScale)\r\n        obj.lock()\r\n        obj.setPositionSmooth(sPos(posTable[k]), false, true)\r\n        obj.setRotationSmooth(rotTable[k], false, true)\r\n        obj.addTag('TempLayoutElement')\r\n        rulers[obj] = true\r\n    end\r\nend\r\n\r\nfunction deleteAll()\r\n    for ruler in pairs(rulers) do ruler.destruct() end\r\n    rulers = {}\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\r\n    if rulers[obj] then\r\n        rulers[obj] = nil\r\n    end\r\nend\r\n\r\nrulers = {}\r\nrulersState = 0\r\nrulerData = {}\r\nrulerData.mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj'\r\nrulerData.collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj'\r\nrulerData.diffuse = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg'\r\nrulerData.material = 1\r\n\r\nsetupRot = {\r\n    {0, 270, 0},\r\n    {0, 0, 0},\r\n    {0, 270, 0},\r\n    {0, 0, 0},\r\n    {0, 0, 0},\r\n    {0, 90, 0},\r\n    {0, 180, 0},\r\n    {0, 90, 0},\r\n    {0, 180, 0},\r\n    {0, 180, 0}\r\n}\r\n\r\nsetupPos = {\r\n    { 3.97240991592407, 1.00172388553619, -10.8451750564575}, --pio\r\n    { 9.67806907653809, 1.00172448158264, -12.4075313186646},\r\n    { 37.0594985961914, 1.00172400474548, -10.8700817108154}, --pio\r\n    { 20.5256023406982, 1.0017237663269, -12.4035499572754},\r\n    { 31.3721223449707, 1.00172340869904, -12.4002779006958},\r\n\r\n    { 3.97240991592407, 1.00172388553619, 10.8451750564575}, --pio\r\n    { 9.67806907653809, 1.00172448158264, 12.4075313186646},\r\n    { 37.0594985961914, 1.00172400474548, 10.8700817108154}, --pio\r\n    { 20.5256023406982, 1.0017237663269, 12.4035499572754},\r\n    { 31.3721223449707, 1.00172340869904, 12.4002779006958},\r\n}",
        "LuaScriptState": "3",
        "XmlUI": ""
      },
      {
        "GUID": "463dd8",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 1.091116E-05,
          "rotY": 180.0222,
          "rotZ": -5.677642E-05,
          "scaleX": 0.35799998,
          "scaleY": 1.0,
          "scaleZ": 0.35799998
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": true,
        "CardID": 170700,
        "SidewaysCard": false,
        "CustomDeck": {
          "1707": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1655594918123292382/2F34FCA98C91F8F62BD8C1F09D8C0711030304CE/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/1655594918123292382/2F34FCA98C91F8F62BD8C1F09D8C0711030304CE/",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "05d16e",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 9.185609E-05,
          "rotY": 179.993073,
          "rotZ": 0.328616828,
          "scaleX": 0.35799998,
          "scaleY": 1.0,
          "scaleZ": 0.35799998
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": true,
        "CardID": 170800,
        "SidewaysCard": false,
        "CustomDeck": {
          "1708": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1655594918123293173/C6B4218CE5FE211204D20E0219BEF8A374D53818/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/1655594918123293173/C6B4218CE5FE211204D20E0219BEF8A374D53818/",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "9c1c58",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 1.00926485E-07,
          "rotY": 180.014282,
          "rotZ": 8.838766E-09,
          "scaleX": 0.35799998,
          "scaleY": 1.0,
          "scaleZ": 0.35799998
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": true,
        "CardID": 155200,
        "SidewaysCard": false,
        "CustomDeck": {
          "1552": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1180454178338241062/152526E558DAEEC1BB277AE3F3DD785854907B5E/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/1180454178338241062/152526E558DAEEC1BB277AE3F3DD785854907B5E/",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "0ab824",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.139707923,
          "rotY": 179.989914,
          "rotZ": 2.43688237E-06,
          "scaleX": 0.35799998,
          "scaleY": 1.0,
          "scaleZ": 0.35799998
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": true,
        "CardID": 155400,
        "SidewaysCard": false,
        "CustomDeck": {
          "1554": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1180454178338262578/42722590656455581226B59FE6AAECE7E86BCB7E/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/1180454178338262578/42722590656455581226B59FE6AAECE7E86BCB7E/",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "ac9104",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 5.112921E-08,
          "rotY": 179.983978,
          "rotZ": -2.50507544E-08,
          "scaleX": 0.35799998,
          "scaleY": 1.0,
          "scaleZ": 0.35799998
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": true,
        "CardID": 155300,
        "SidewaysCard": false,
        "CustomDeck": {
          "1553": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1180454178338266788/EEE10C8C2A45A0F3B8141A123D21495847BA5085/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/1180454178338266788/EEE10C8C2A45A0F3B8141A123D21495847BA5085/",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "ed1a41",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 1.65115353E-06,
          "rotY": 179.9883,
          "rotZ": -1.50336882E-06,
          "scaleX": 0.35799998,
          "scaleY": 1.0,
          "scaleZ": 0.35799998
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": true,
        "CardID": 155100,
        "SidewaysCard": false,
        "CustomDeck": {
          "1551": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/1180454178338242521/33B7D67D30EE8BE4AFDFBFACBF43A848FFFEB414/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/1180454178338242521/33B7D67D30EE8BE4AFDFBFACBF43A848FFFEB414/",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "ad6b64",
        "Name": "Custom_Token",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -0.00115349283,
          "rotY": 180.010925,
          "rotZ": -0.000418298441,
          "scaleX": 0.067,
          "scaleY": 1.0,
          "scaleZ": 0.067
        },
        "Nickname": "Turn Marker",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomImage": {
          "ImageURL": "http://i.imgur.com/q1TnaW9.png",
          "ImageSecondaryURL": "",
          "ImageScalar": 1.0,
          "WidthScale": 0.0,
          "CustomToken": {
            "Thickness": 0.1,
            "MergeDistancePixels": 5.0,
            "StandUp": false,
            "Stackable": false
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "9b8faf",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -2.608163E-07,
          "rotY": 180.001663,
          "rotZ": -1.15657076E-06,
          "scaleX": 0.097,
          "scaleY": 0.1,
          "scaleZ": 0.097
        },
        "Nickname": "End Marker",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.9999998,
          "g": 0.992160261,
          "b": 0.9999998
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": false,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://paste.ee/r/sqwrA",
          "DiffuseURL": "https://i.imgur.com/2c8yB4h.png",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 3,
          "TypeIndex": 0,
          "CastShadows": true
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "6c59d6",
        "Name": "Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 2.23282632E-06,
          "rotY": -0.000291897,
          "rotZ": 3.77693982E-06,
          "scaleX": 0.1,
          "scaleY": 0.1,
          "scaleZ": 0.1
        },
        "Nickname": "Rebel AI Sheets",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.854901969,
          "g": 0.09803861,
          "b": 0.09411699
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "Bag": {
          "Order": 0
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "5fa9c3",
            "Name": "CardCustom",
            "Transform": {
              "posX": -13.2657022,
              "posY": 3.0666337,
              "posZ": 31.2797184,
              "rotX": 0.00165144,
              "rotY": 179.992722,
              "rotZ": 0.5934616,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 173300,
            "SidewaysCard": false,
            "CustomDeck": {
              "1733": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/YT-2400-Light-Freighter.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/YT-2400-Light-Freighter.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "cadd50",
            "Name": "CardCustom",
            "Transform": {
              "posX": -28.064045,
              "posY": 3.07966232,
              "posZ": 32.60303,
              "rotX": 359.990967,
              "rotY": 180.027756,
              "rotZ": 0.728350759,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 171000,
            "SidewaysCard": false,
            "CustomDeck": {
              "1710": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/BTL-A4-Y-Wing-R.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/BTL-A4-Y-Wing-R.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "449020",
            "Name": "CardCustom",
            "Transform": {
              "posX": -30.17133,
              "posY": 3.056419,
              "posZ": 32.62666,
              "rotX": 359.9915,
              "rotY": 179.986969,
              "rotZ": 0.728356242,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 170900,
            "SidewaysCard": false,
            "CustomDeck": {
              "1709": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/master/assets/Items/aisheets/A-SF-01-B-Wing.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/master/assets/Items/aisheets/A-SF-01-B-Wing.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "4efca1",
            "Name": "CardCustom",
            "Transform": {
              "posX": -25.0964489,
              "posY": 3.081138,
              "posZ": 31.94771,
              "rotX": 0.003038476,
              "rotY": 179.993225,
              "rotZ": 0.821814954,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171900,
            "SidewaysCard": false,
            "CustomDeck": {
              "1719": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Modified-YT-1300.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Modified-YT-1300.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "0c97c8",
            "Name": "CardCustom",
            "Transform": {
              "posX": -22.1133461,
              "posY": 3.073138,
              "posZ": 33.4553947,
              "rotX": 0.00242040912,
              "rotY": 179.985184,
              "rotZ": 0.720184445,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172000,
            "SidewaysCard": false,
            "CustomDeck": {
              "1720": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/RZ-1-A-Wing.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/RZ-1-A-Wing.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "8ac539",
            "Name": "CardCustom",
            "Transform": {
              "posX": -18.36334,
              "posY": 3.080397,
              "posZ": 32.944313,
              "rotX": 0.00321888574,
              "rotY": 180.002731,
              "rotZ": 0.4624002,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172200,
            "SidewaysCard": false,
            "CustomDeck": {
              "1722": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/T-65-X-Wing.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/T-65-X-Wing.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "7f7f66",
            "Name": "CardCustom",
            "Transform": {
              "posX": -16.0406475,
              "posY": 3.12992382,
              "posZ": 32.2743263,
              "rotX": 0.0604478419,
              "rotY": 179.974533,
              "rotZ": 0.620552242,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 173100,
            "SidewaysCard": false,
            "CustomDeck": {
              "1731": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/VCX-100.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/VCX-100.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "d8586b",
            "Name": "CardCustom",
            "Transform": {
              "posX": -11.0268841,
              "posY": 3.10154128,
              "posZ": 29.4420586,
              "rotX": 0.0440607145,
              "rotY": 180.006241,
              "rotZ": 0.6908161,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 173400,
            "SidewaysCard": false,
            "CustomDeck": {
              "1734": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Z-95-AF4-Headhunter-R.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Z-95-AF4-Headhunter-R.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "0c4ffb",
        "Name": "Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 7.670618E-08,
          "rotY": -2.728072E-06,
          "rotZ": 8.504381E-08,
          "scaleX": 0.1,
          "scaleY": 0.1,
          "scaleZ": 0.1
        },
        "Nickname": "Imperial AI Sheets",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.117999353,
          "g": 0.53,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "Bag": {
          "Order": 0
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "391959",
            "Name": "CardCustom",
            "Transform": {
              "posX": 2.02015,
              "posY": 3.052327,
              "posZ": 33.223362,
              "rotX": 359.800354,
              "rotY": 179.983139,
              "rotZ": 1.19206023,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172600,
            "SidewaysCard": false,
            "CustomDeck": {
              "1726": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-d-Defender.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-d-Defender.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "8df7fc",
            "Name": "CardCustom",
            "Transform": {
              "posX": -8.393597,
              "posY": 2.94585013,
              "posZ": 33.58873,
              "rotX": 359.98584,
              "rotY": 180.0117,
              "rotZ": 0.217881247,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171600,
            "SidewaysCard": false,
            "CustomDeck": {
              "1716": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Lambda-Class-T-4A-Shuttle.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Lambda-Class-T-4A-Shuttle.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "6c052b",
            "Name": "CardCustom",
            "Transform": {
              "posX": -6.2244854,
              "posY": 3.020752,
              "posZ": 33.9285049,
              "rotX": 359.985535,
              "rotY": 179.98761,
              "rotZ": 0.217887789,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172300,
            "SidewaysCard": false,
            "CustomDeck": {
              "1723": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-Advanced-x1.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-Advanced-x1.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "38ebc5",
            "Name": "CardCustom",
            "Transform": {
              "posX": -4.207431,
              "posY": 3.10347033,
              "posZ": 33.6311264,
              "rotX": 359.795715,
              "rotY": 180.024643,
              "rotZ": 0.7631628,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172400,
            "SidewaysCard": false,
            "CustomDeck": {
              "1724": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-Interceptor.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-Interceptor.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "73ab71",
            "Name": "CardCustom",
            "Transform": {
              "posX": -1.64919138,
              "posY": 3.06352639,
              "posZ": 34.08026,
              "rotX": 359.7848,
              "rotY": 180.020081,
              "rotZ": 0.7759503,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172500,
            "SidewaysCard": false,
            "CustomDeck": {
              "1725": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-Ln-Fighter.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-Ln-Fighter.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "8ea566",
            "Name": "CardCustom",
            "Transform": {
              "posX": 4.084689,
              "posY": 3.087309,
              "posZ": 32.67569,
              "rotX": 359.8641,
              "rotY": 179.88942,
              "rotZ": 1.21401811,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172800,
            "SidewaysCard": false,
            "CustomDeck": {
              "1728": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-ph-Phantom.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-ph-Phantom.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "366fad",
            "Name": "CardCustom",
            "Transform": {
              "posX": 5.44536,
              "posY": 3.12960482,
              "posZ": 31.5402088,
              "rotX": 359.878448,
              "rotY": 179.990311,
              "rotZ": 1.20066273,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172900,
            "SidewaysCard": false,
            "CustomDeck": {
              "1729": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-sa-Bomber.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-sa-Bomber.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "17f0a7",
            "Name": "CardCustom",
            "Transform": {
              "posX": 8.317983,
              "posY": 3.03279,
              "posZ": 30.3082237,
              "rotX": 359.868164,
              "rotY": 179.990509,
              "rotZ": 1.19753218,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 173200,
            "SidewaysCard": false,
            "CustomDeck": {
              "1732": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/VT-49-Decimator.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/VT-49-Decimator.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "6efc66",
            "Name": "CardCustom",
            "Transform": {
              "posX": -11.9842186,
              "posY": 3.04828143,
              "posZ": 33.71982,
              "rotX": 359.742676,
              "rotY": 179.974228,
              "rotZ": 0.2053964,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 173000,
            "SidewaysCard": false,
            "CustomDeck": {
              "1730": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-sf-Fighter.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-sf-Fighter.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "2bc55c",
            "Name": "CardCustom",
            "Transform": {
              "posX": -13.5585909,
              "posY": 3.05041647,
              "posZ": 32.5934525,
              "rotX": 0.0237971563,
              "rotY": 179.999908,
              "rotZ": 359.702148,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172700,
            "SidewaysCard": false,
            "CustomDeck": {
              "1727": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-fo-Fighter.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/TIE-fo-Fighter.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "f8a85b",
        "Name": "Bag",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": -3.001548E-07,
          "rotY": 1.04520532E-05,
          "rotZ": 1.1689358E-06,
          "scaleX": 0.1,
          "scaleY": 0.1,
          "scaleZ": 0.1
        },
        "Nickname": "Scum AI Sheets",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.7058823,
          "g": 0.366520882,
          "b": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "MaterialIndex": -1,
        "MeshIndex": -1,
        "Bag": {
          "Order": 0
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "cd01f6",
            "Name": "CardCustom",
            "Transform": {
              "posX": 15.3986921,
              "posY": 3.08265328,
              "posZ": 31.7104836,
              "rotX": 359.965149,
              "rotY": 180.024582,
              "rotZ": 359.200928,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171400,
            "SidewaysCard": false,
            "CustomDeck": {
              "1714": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/HWK-290-Light-Freighter.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/HWK-290-Light-Freighter.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "06ba09",
            "Name": "CardCustom",
            "Transform": {
              "posX": 24.8177967,
              "posY": 3.017147,
              "posZ": 31.0558586,
              "rotX": 0.000118591634,
              "rotY": 179.9998,
              "rotZ": 359.9766,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171100,
            "SidewaysCard": false,
            "CustomDeck": {
              "1711": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/BTL-A4-Y-Wing-S.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/BTL-A4-Y-Wing-S.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "3dd706",
            "Name": "CardCustom",
            "Transform": {
              "posX": 21.9302063,
              "posY": 3.05457258,
              "posZ": 31.4220829,
              "rotX": 359.9939,
              "rotY": 179.999863,
              "rotZ": 359.499878,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171200,
            "SidewaysCard": false,
            "CustomDeck": {
              "1712": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Fang-Fighter.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Fang-Fighter.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "731acd",
            "Name": "CardCustom",
            "Transform": {
              "posX": 18.788044,
              "posY": 3.06930542,
              "posZ": 31.35673,
              "rotX": 359.972473,
              "rotY": 180.000122,
              "rotZ": 359.677521,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171300,
            "SidewaysCard": false,
            "CustomDeck": {
              "1713": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Firespray-Class-Patrol-Craft.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Firespray-Class-Patrol-Craft.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "ffaf55",
            "Name": "CardCustom",
            "Transform": {
              "posX": 12.6271687,
              "posY": 3.07168436,
              "posZ": 32.87043,
              "rotX": 359.959534,
              "rotY": 179.998917,
              "rotZ": 359.132233,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171500,
            "SidewaysCard": false,
            "CustomDeck": {
              "1715": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Kihraxz-Fighter.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Kihraxz-Fighter.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "add7f3",
            "Name": "CardCustom",
            "Transform": {
              "posX": 10.5047817,
              "posY": 3.10961246,
              "posZ": 32.4174538,
              "rotX": 359.96814,
              "rotY": 180.003784,
              "rotZ": 359.136353,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171700,
            "SidewaysCard": false,
            "CustomDeck": {
              "1717": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/M3-A-Interceptor.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/M3-A-Interceptor.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "e6f288",
            "Name": "CardCustom",
            "Transform": {
              "posX": 7.11304331,
              "posY": 3.10034966,
              "posZ": 31.845108,
              "rotX": 0.00726843951,
              "rotY": 180.004929,
              "rotZ": 359.245361,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 171800,
            "SidewaysCard": false,
            "CustomDeck": {
              "1718": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Modified-TIE-Ln-Fighter.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Modified-TIE-Ln-Fighter.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "72a330",
            "Name": "CardCustom",
            "Transform": {
              "posX": 2.76986837,
              "posY": 3.07173228,
              "posZ": 31.47346,
              "rotX": 0.00783905853,
              "rotY": 180.007935,
              "rotZ": 359.264282,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": true,
            "Hands": true,
            "CardID": 172100,
            "SidewaysCard": false,
            "CustomDeck": {
              "1721": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/StarViper.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/StarViper.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "bdbe5e",
            "Name": "CardCustom",
            "Transform": {
              "posX": 15.128233,
              "posY": 3.05510664,
              "posZ": 31.7259464,
              "rotX": 359.97,
              "rotY": 180.000015,
              "rotZ": 359.965546,
              "scaleX": 3.0,
              "scaleY": 1.0,
              "scaleZ": 3.0
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 173500,
            "SidewaysCard": false,
            "CustomDeck": {
              "1735": {
                "FaceURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Z-95-AF4-Headhunter-S.JPG?raw=true",
                "BackURL": "https://github.com/reinaurre/TTS_X-Wing2.0/blob/master/assets/Items/aisheets/Z-95-AF4-Headhunter-S.JPG?raw=true",
                "NumWidth": 1,
                "NumHeight": 1,
                "BackIsHidden": true,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "ce0e09",
        "Name": "BlockRectangle",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": -2.5051595E-05,
          "rotZ": 0.015222501,
          "scaleX": 0.05,
          "scaleY": 0.05,
          "scaleZ": 1.675
        },
        "Nickname": "",
        "Description": "Obstacle",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.294424683,
          "g": 0.151931226,
          "b": 0.0569356456
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "e77d03",
        "Name": "BlockRectangle",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 359.992981,
          "rotZ": -8.5519E-06,
          "scaleX": 0.05,
          "scaleY": 0.05,
          "scaleZ": 1.675
        },
        "Nickname": "",
        "Description": "Obstacle",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.294424683,
          "g": 0.151931226,
          "b": 0.0569356456
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "85f1b7",
        "Name": "BlockRectangle",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 0.05,
          "scaleY": 0.05,
          "scaleZ": 1.65
        },
        "Nickname": "",
        "Description": "Obstacle",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.294424683,
          "g": 0.151931226,
          "b": 0.0569356456
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "9500ad",
        "Name": "BlockRectangle",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 0.05,
          "scaleY": 0.05,
          "scaleZ": 1.65
        },
        "Nickname": "",
        "Description": "Obstacle",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.294424683,
          "g": 0.151931226,
          "b": 0.0569356456
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "c43087",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.237217039,
          "rotY": 179.999985,
          "rotZ": -4.70361E-06,
          "scaleX": 0.3,
          "scaleY": 1.0,
          "scaleZ": 0.5
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": true,
        "Hands": true,
        "CardID": 170900,
        "SidewaysCard": false,
        "CustomDeck": {
          "1709": {
            "FaceURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-red.jpg",
            "BackURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-red.jpg",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 1
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "af6cec",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.213377967,
          "rotY": 180.000946,
          "rotZ": -4.227827E-06,
          "scaleX": 0.3,
          "scaleY": 1.0,
          "scaleZ": 0.5
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": true,
        "Hands": true,
        "CardID": 171000,
        "SidewaysCard": false,
        "CustomDeck": {
          "1710": {
            "FaceURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-orange.jpg",
            "BackURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-orange.jpg",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 1
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "58600e",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.213370711,
          "rotY": 180.000092,
          "rotZ": 5.075544E-06,
          "scaleX": 0.3,
          "scaleY": 1.0,
          "scaleZ": 0.5
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": true,
        "Hands": true,
        "CardID": 171100,
        "SidewaysCard": false,
        "CustomDeck": {
          "1711": {
            "FaceURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-yellow.jpg",
            "BackURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-yellow.jpg",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 1
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "e9b60d",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.213395059,
          "rotY": 180.000778,
          "rotZ": 4.205556E-06,
          "scaleX": 0.3,
          "scaleY": 1.0,
          "scaleZ": 0.5
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": true,
        "Hands": true,
        "CardID": 171200,
        "SidewaysCard": false,
        "CustomDeck": {
          "1712": {
            "FaceURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-green.jpg",
            "BackURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-green.jpg",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 1
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "f645b4",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.213388279,
          "rotY": 180.000076,
          "rotZ": 1.12906639E-06,
          "scaleX": 0.3,
          "scaleY": 1.0,
          "scaleZ": 0.5
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": true,
        "Hands": true,
        "CardID": 171300,
        "SidewaysCard": false,
        "CustomDeck": {
          "1713": {
            "FaceURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-blue.jpg",
            "BackURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-blue.jpg",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 1
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "bef52a",
        "Name": "CardCustom",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.213378191,
          "rotY": 179.999985,
          "rotZ": -5.955032E-07,
          "scaleX": 0.3,
          "scaleY": 1.0,
          "scaleZ": 0.5
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": true,
        "Hands": true,
        "CardID": 171400,
        "SidewaysCard": false,
        "CustomDeck": {
          "1714": {
            "FaceURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-purple.jpg",
            "BackURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/player-purple.jpg",
            "NumWidth": 1,
            "NumHeight": 1,
            "BackIsHidden": true,
            "UniqueBack": false,
            "Type": 1
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "83259b",
        "Name": "Custom_Tile",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.003203894,
          "rotY": 179.969879,
          "rotZ": 0.00276097469,
          "scaleX": 0.0655,
          "scaleY": 1.0,
          "scaleZ": 0.08
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomImage": {
          "ImageURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/Turn%20Tracker.png",
          "ImageSecondaryURL": "https://raw.githubusercontent.com/reinaurre/TTS_X-Wing2.0/master/assets/HotAC/Table/Turn%20Tracker.png",
          "ImageScalar": 1.0,
          "WidthScale": 0.0,
          "CustomTile": {
            "Type": 0,
            "Thickness": 0.1,
            "Stackable": false,
            "Stretch": true
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "79e109",
        "Name": "Custom_Model",
        "Transform": {
          "posX": 0.0,
          "posY": -5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 0.163,
          "scaleY": 0.120000005,
          "scaleZ": 0.163
        },
        "Nickname": "HotAC mat",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/basicmat.obj",
          "DiffuseURL": "http://i.imgur.com/dczrasC.jpg",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 4,
          "CustomShader": {
            "SpecularColor": {
              "r": 0.875,
              "g": 0.812880337,
              "b": 0.7463235
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: https://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Script applicable to playmats\r\n-- ~~~~~~\r\n\r\n-- TO ADD NEW IMAGES TO THE SET\r\n-- Just add their links to the table below in the same fashion\r\n\r\n-- Table of all images to be cycled through with NextImage()\r\nimageSet = {    'http://i.imgur.com/6IkNucB.jpg',\r\n                'http://cloud-3.steamusercontent.com/ugc/1483326815456337025/EB436BA5C3D1B0BAF4ED3325456E7211A669E3BF/',\r\n                'http://cloud-3.steamusercontent.com/ugc/1483326815456320038/68F5C582DBCBDC1070ACD4CE12091BFA73AE93F4/',\r\n                'https://i.imgur.com/siDMVxH.mp4',\r\n                'https://i.imgur.com/HXUBMXE.mp4',\r\n                'http://i.imgur.com/dczrasC.jpg',\r\n                'http://i.imgur.com/dKYBJMX.png',\r\n                'https://i.imgur.com/1veiNk9.jpg',\r\n                'http://i.imgur.com/8tDK0x8.png',\r\n                'http://i.imgur.com/sb2AJOz.png',\r\n                'https://i.imgur.com/KPtozCm.png',\r\n                'http://i.imgur.com/V7pWVak.png',\r\n                'http://i.imgur.com/spWTWy7.png',\r\n                'http://i.imgur.com/YdIAcvP.png',\r\n                'http://i.imgur.com/5CcjDzM.jpg',\r\n                'http://i.imgur.com/4WMSCSV.jpg',\r\n                'http://i.imgur.com/0FWrq21.jpg',\r\n                'http://i.imgur.com/x4LEk1A.jpg',\r\n                'http://i.imgur.com/fy6kooO.png',   }\r\n\r\n-- Mat flag for layouts\r\n__XW_Mat = true\r\n-- Parent layout name\r\n__XW_MatLayout = 'HotAC'\r\n-- This mat identifier\r\n__XW_MatID = 'Main'\r\n\r\nfunction onLoad()\r\n    -- Restore current image index\r\n    currImage = tonumber(self.script_state) or 1\r\n    self.lock()\r\n    self.interactable = false\r\n    self.tooltip = false\r\nend\r\n\r\n-- Change image to the next from the list, wrap around to 1\r\n-- Reloads self to actually reflect the change\r\nfunction NextImage()\r\n    deleteAll()\r\n    -- Increment image index\r\n    local nextImage = currImage + 1\r\n    if nextImage > #imageSet then\r\n        nextImage = 1\r\n    end\r\n\r\n    -- Reload self with the new image and save the index\r\n    local custom = self.getCustomObject()\r\n    custom.diffuse = imageSet[nextImage]\r\n    self.setCustomObject(custom)\r\n    local newSelf = self.reload()\r\n    newSelf.script_state = nextImage\r\nend\r\n\r\n-- Please update me\r\n\r\n\r\ncorrScale = {0.625, 0.625, 0.625}\r\n\r\nfunction ToggleRulers()\r\n    deleteAll()\r\n    rulersState = rulersState + 1\r\n    if rulersState == 1 then\r\n      spawnSet(roidPos, roidRot)\r\n    elseif rulersState == 2 then\r\n      spawnSet(setupPos, setupRot)\r\n    elseif rulersState == 3 then\r\n      rulersState = 0\r\n    end\r\nend\r\n\r\nfunction spawnSet(posTable, rotTable)\r\n    -- please kill me\r\n    local function sPos(tab)\r\n        if self.getPosition()[1] < 0 then\r\n            return {-1*tab[1], tab[2], tab[3]}\r\n        else\r\n            return tab\r\n        end\r\n    end\r\n    local initPos = self.getPosition()\r\n    initPos.y = initPos.y - 3\r\n    for k,pos in pairs(posTable) do\r\n        local params = {} -- 50\r\n        params.type = 'Custom_Model'\r\n        params.position = initPos\r\n        --params.position = sPos(posTable[k])\r\n        --params.rotation = rotTable[k]\r\n        obj = spawnObject(params)\r\n        obj.setCustomObject(rulerData)\r\n        obj.setScale(corrScale)\r\n        obj.lock()\r\n        obj.setPositionSmooth(sPos(posTable[k]), false, true)\r\n        obj.setRotationSmooth(rotTable[k], false, true)\r\n        obj.addTag('TempLayoutElement')\r\n        rulers[obj] = true\r\n    end\r\nend\r\n\r\nfunction deleteAll()\r\n    for ruler in pairs(rulers) do ruler.destruct() end\r\n    rulers = {}\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\r\n    if rulers[obj] then\r\n        rulers[obj] = nil\r\n    end\r\nend\r\n\r\nrulers = {}\r\nrulersState = 0\r\nrulerData = {}\r\nrulerData.mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj'\r\nrulerData.collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj'\r\nrulerData.diffuse = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg'\r\nrulerData.material = 1\r\n\r\nroidRot = {\r\n    { 0, 270, 180},\r\n      { 0, 270, 180},\r\n    { 0, 180, 180},\r\n      { 0, 180, 180},\r\n    { 0, 270, 180},\r\n      { 0, 270, 180},\r\n    { 0, 0, 180},\r\n    { 0, 0, 180},\r\n    { 0, 90, 180},\r\n    { 0, 90, 180},\r\n    { 0, 180, 180},\r\n      { 0, 180, 180}\r\n}\r\n\r\nsetupRot = {\r\n    {0, 270, 0},\r\n    {0, 0, 0},\r\n    {0, 270, 0},\r\n    {0, 0, 0},\r\n    {0, 0, 0},\r\n    {0, 90, 0},\r\n    {0, 180, 0},\r\n    {0, 90, 0},\r\n    {0, 180, 0},\r\n    {0, 180, 0}\r\n}\r\n\r\nroidPos = {\r\n    { 29.872200088501, 0.99871951341629, -10.8846182632446}, -- pio\r\n      { 29.872200088501, 0.99871951341629, 0},\r\n    { 31.382360534668, 0.998719453811646, -9.37833354949951}, -- poz\r\n      { 20.5, 0.998719453811646, -9.37833354949951},\r\n    { 11.1684393310547, 0.998719573020935, -10.8876889038086},\r\n      { 11.1684393310547, 0.998719573020935, 0},\r\n    { 9.64546291351318, 0.998719453811646, -9.37820747375488},\r\n    { 9.64722316741943, 0.99871951341629, 9.37365325927734},\r\n    { 11.1658749008179, 0.998719453811646, 10.8807905578613},\r\n    { 29.8585949707031, 0.998719394207001, 10.8395362091064}, -- pio\r\n    { 31.3808876037598, 0.998719453811646, 9.32834770202637}, -- poz\r\n      { 20.5, 0.998719453811646, 9.32834770202637}\r\n}\r\n\r\nsetupPos = {\r\n    { 3.97240991592407, 1.00172388553619, -10.8451750564575}, --pio\r\n    { 9.67806907653809, 1.00172448158264, -12.4075313186646},\r\n    { 37.0594985961914, 1.00172400474548, -10.8700817108154}, --pio\r\n    { 20.5256023406982, 1.0017237663269, -12.4035499572754},\r\n    { 31.3721223449707, 1.00172340869904, -12.4002779006958},\r\n\r\n    { 3.97240991592407, 1.00172388553619, 10.8451750564575}, --pio\r\n    { 9.67806907653809, 1.00172448158264, 12.4075313186646},\r\n    { 37.0594985961914, 1.00172400474548, 10.8700817108154}, --pio\r\n    { 20.5256023406982, 1.0017237663269, 12.4035499572754},\r\n    { 31.3721223449707, 1.00172340869904, 12.4002779006958},\r\n}",
        "LuaScriptState": "6",
        "XmlUI": ""
      },
      {
        "GUID": "afafd4",
        "Name": "HandTrigger",
        "Transform": {
          "posX": -22.5,
          "posY": 5.0,
          "posZ": 40.0,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 5.0,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.117999978,
          "g": 0.53,
          "b": 1.0,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Blue",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "a9389f",
        "Name": "HandTrigger",
        "Transform": {
          "posX": 50.0,
          "posY": 5.0,
          "posZ": 15.0,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 5.01,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.442999959,
          "g": 0.230999947,
          "b": 0.0899999961,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Brown",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "d3a631",
        "Name": "HandTrigger",
        "Transform": {
          "posX": -52.0,
          "posY": 5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 5.01,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.191999972,
          "g": 0.701,
          "b": 0.167999953,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Green",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "751e66",
        "Name": "HandTrigger",
        "Transform": {
          "posX": 22.5,
          "posY": 5.0,
          "posZ": 40.0,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 5.0,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.9559999,
          "g": 0.39199996,
          "b": 0.112999953,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Orange",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "5ee9b2",
        "Name": "HandTrigger",
        "Transform": {
          "posX": 52.0,
          "posY": 5.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 5.01,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.96,
          "g": 0.438999981,
          "b": 0.807,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Pink",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "c3799c",
        "Name": "HandTrigger",
        "Transform": {
          "posX": 22.5,
          "posY": 5.0,
          "posZ": -40.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 5.0,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.627,
          "g": 0.124999978,
          "b": 0.941,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Purple",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "5fa67d",
        "Name": "HandTrigger",
        "Transform": {
          "posX": -22.5,
          "posY": 5.0,
          "posZ": -40.0,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 5.0,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.856,
          "g": 0.09999997,
          "b": 0.09399996,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Red",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "e94b61",
        "Name": "HandTrigger",
        "Transform": {
          "posX": -50.0,
          "posY": 5.0,
          "posZ": -15.0,
          "rotX": 0.0,
          "rotY": 90.28,
          "rotZ": 0.0,
          "scaleX": 5.0,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.128999949,
          "g": 0.694,
          "b": 0.606999934,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Teal",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "e074f6",
        "Name": "HandTrigger",
        "Transform": {
          "posX": 50.0,
          "posY": 5.0,
          "posZ": -15.0,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 5.01,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "White",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "d07048",
        "Name": "HandTrigger",
        "Transform": {
          "posX": -50.0,
          "posY": 5.0,
          "posZ": 15.0,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 5.01,
          "scaleY": 5.0,
          "scaleZ": 1.0
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.905,
          "g": 0.898,
          "b": 0.171999961,
          "a": 0.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": false,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "FogColor": "Yellow",
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": ""
      },
      {
        "GUID": "4782b4",
        "Name": "Deck",
        "Transform": {
          "posX": 40.0,
          "posY": 1.139794,
          "posZ": 15.0,
          "rotX": -8.881244E-08,
          "rotY": 5.01987233E-06,
          "rotZ": 180.0,
          "scaleX": 0.625,
          "scaleY": 1.0,
          "scaleZ": 0.625
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": false,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "SidewaysCard": false,
        "DeckIDs": [
          27332,
          27320,
          27303,
          27328,
          27331,
          27304,
          27327,
          27309,
          27305,
          27326,
          27317,
          27319,
          27312,
          27300,
          27318,
          27316,
          27310,
          27321,
          27325,
          27314,
          27306,
          27302,
          27313,
          27307,
          27323,
          27322,
          27315,
          27329,
          27330,
          27301,
          27324,
          27311,
          27308
        ],
        "CustomDeck": {
          "273": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
            "NumWidth": 10,
            "NumHeight": 7,
            "BackIsHidden": false,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9222851,
              "posY": 1.04363167,
              "posZ": -14.8758707,
              "rotX": 0.116052985,
              "rotY": 180.084122,
              "rotZ": 180.080948,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27332,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9374256,
              "posY": 1.20072138,
              "posZ": -14.9719687,
              "rotX": 359.985779,
              "rotY": 179.996231,
              "rotZ": 180.095947,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27320,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.2981453,
              "posY": 1.36408007,
              "posZ": -14.776823,
              "rotX": 359.973846,
              "rotY": 180.002029,
              "rotZ": 179.75354,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27303,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0841236,
              "posY": 1.1887486,
              "posZ": -14.7821283,
              "rotX": 359.9891,
              "rotY": 180.01416,
              "rotZ": 179.896774,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27328,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "9e3603",
            "Name": "Card",
            "Transform": {
              "posX": -24.6307755,
              "posY": 1.176079,
              "posZ": -14.8001871,
              "rotX": 0.0527719669,
              "rotY": 180.215286,
              "rotZ": 180.032867,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27331,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9438686,
              "posY": 1.35246217,
              "posZ": -15.0534849,
              "rotX": 359.9734,
              "rotY": 179.997162,
              "rotZ": 179.976364,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27304,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9126759,
              "posY": 1.1927259,
              "posZ": -14.8184252,
              "rotX": 359.9886,
              "rotY": 180.1045,
              "rotZ": 179.913681,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27327,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0808849,
              "posY": 1.30458915,
              "posZ": -15.2483444,
              "rotX": 0.005381643,
              "rotY": 179.994919,
              "rotZ": 179.952011,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27309,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9614067,
              "posY": 1.34314823,
              "posZ": -14.9299164,
              "rotX": 0.00328693725,
              "rotY": 180.001083,
              "rotZ": 179.989731,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27305,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0877724,
              "posY": 1.1982491,
              "posZ": -14.7376652,
              "rotX": -0.000459030125,
              "rotY": 180.006439,
              "rotZ": 179.8747,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27326,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.91434,
              "posY": 1.22775316,
              "posZ": -15.0358944,
              "rotX": 359.9582,
              "rotY": 179.9605,
              "rotZ": 179.956436,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27317,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3711777,
              "posY": 1.20989215,
              "posZ": -14.7242508,
              "rotX": -0.00246225647,
              "rotY": 180.008026,
              "rotZ": 179.7812,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27319,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.8708477,
              "posY": 1.27626753,
              "posZ": -15.0637293,
              "rotX": 359.950073,
              "rotY": 179.992081,
              "rotZ": 179.8795,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27312,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.041008,
              "posY": 1.46709239,
              "posZ": -14.7143946,
              "rotX": 359.94458,
              "rotY": 179.988571,
              "rotZ": 187.359848,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27300,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1777973,
              "posY": 1.17282784,
              "posZ": -14.9190617,
              "rotX": 0.00567509932,
              "rotY": 180.120071,
              "rotZ": 177.113358,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27318,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -39.4068,
              "posY": 1.3832283,
              "posZ": 15.1159315,
              "rotX": -0.00445320876,
              "rotY": -8.743666E-05,
              "rotZ": 179.997208,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27316,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0448189,
              "posY": 1.294558,
              "posZ": -14.896224,
              "rotX": -0.0007581746,
              "rotY": 179.994934,
              "rotZ": 179.96257,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27310,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.2181187,
              "posY": 1.18458879,
              "posZ": -14.9534225,
              "rotX": 1.26854324,
              "rotY": 179.962616,
              "rotZ": 177.705322,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27321,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.31078,
              "posY": 1.20398641,
              "posZ": -14.9565,
              "rotX": 359.9483,
              "rotY": 179.982986,
              "rotZ": 179.786346,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27325,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3201027,
              "posY": 1.283002,
              "posZ": -14.8662338,
              "rotX": 359.9886,
              "rotY": 179.906631,
              "rotZ": 174.226288,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27314,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3394318,
              "posY": 1.3346808,
              "posZ": -14.8861456,
              "rotX": 359.946472,
              "rotY": 180.020081,
              "rotZ": 180.326141,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27306,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.078949,
              "posY": 1.37467217,
              "posZ": -14.69785,
              "rotX": -0.00331702456,
              "rotY": 180.005859,
              "rotZ": 179.830627,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27302,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0090847,
              "posY": 1.38730085,
              "posZ": -15.0050545,
              "rotX": 0.09710596,
              "rotY": 180.142349,
              "rotZ": 192.027786,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27313,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.8914776,
              "posY": 1.324815,
              "posZ": -15.1227493,
              "rotX": 359.9307,
              "rotY": 180.013474,
              "rotZ": 180.139374,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27307,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9020119,
              "posY": 1.17187977,
              "posZ": -14.9643621,
              "rotX": -0.00151585531,
              "rotY": 179.995956,
              "rotZ": 179.798019,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27323,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3581181,
              "posY": 1.18124413,
              "posZ": -14.8689175,
              "rotX": 359.976135,
              "rotY": 179.994461,
              "rotZ": 179.877792,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27322,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1200237,
              "posY": 1.24557686,
              "posZ": -15.0046253,
              "rotX": 0.846033156,
              "rotY": 180.001816,
              "rotZ": 178.834076,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27315,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0335884,
              "posY": 1.19101191,
              "posZ": -14.8647919,
              "rotX": 359.9818,
              "rotY": 180.0282,
              "rotZ": 179.908844,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27329,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.7053413,
              "posY": 1.38432038,
              "posZ": -15.1872559,
              "rotX": 1.6758846,
              "rotY": 180.053619,
              "rotZ": 182.415131,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27330,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0680256,
              "posY": 1.38450289,
              "posZ": -14.86122,
              "rotX": 359.990479,
              "rotY": 180.002747,
              "rotZ": 179.921738,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27301,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.208046,
              "posY": 1.154962,
              "posZ": -15.00407,
              "rotX": 1.3402,
              "rotY": 179.954422,
              "rotZ": 177.657043,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27324,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.17766,
              "posY": 1.28723741,
              "posZ": -15.0604887,
              "rotX": 359.949036,
              "rotY": 179.97966,
              "rotZ": 179.795181,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27311,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1156273,
              "posY": 1.31639373,
              "posZ": -14.88042,
              "rotX": 359.9801,
              "rotY": 180.004318,
              "rotZ": 180.093658,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27308,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "9be6f5",
        "Name": "Deck",
        "Transform": {
          "posX": 40.0,
          "posY": 1.13979411,
          "posZ": -15.0,
          "rotX": -2.944847E-07,
          "rotY": 180.0,
          "rotZ": 180.0,
          "scaleX": 0.625,
          "scaleY": 1.0,
          "scaleZ": 0.625
        },
        "Nickname": "",
        "Description": "",
        "GMNotes": "",
        "ColorDiffuse": {
          "r": 0.713235259,
          "g": 0.713235259,
          "b": 0.713235259
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": false,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": true,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "SidewaysCard": false,
        "DeckIDs": [
          27313,
          27310,
          27301,
          27309,
          27331,
          27327,
          27318,
          27328,
          27322,
          27320,
          27303,
          27314,
          27315,
          27325,
          27311,
          27304,
          27326,
          27321,
          27305,
          27323,
          27319,
          27306,
          27307,
          27308,
          27324,
          27317,
          27332,
          27300,
          27312,
          27316,
          27302,
          27329,
          27330
        ],
        "CustomDeck": {
          "273": {
            "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
            "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
            "NumWidth": 10,
            "NumHeight": 7,
            "BackIsHidden": false,
            "UniqueBack": false,
            "Type": 0
          }
        },
        "LuaScript": "",
        "LuaScriptState": "",
        "XmlUI": "",
        "ContainedObjects": [
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0090847,
              "posY": 1.38730085,
              "posZ": -15.0050545,
              "rotX": 0.09710596,
              "rotY": 180.142349,
              "rotZ": 192.027786,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27313,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0448189,
              "posY": 1.294558,
              "posZ": -14.896224,
              "rotX": -0.0007581746,
              "rotY": 179.994934,
              "rotZ": 179.96257,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27310,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0680256,
              "posY": 1.38450289,
              "posZ": -14.86122,
              "rotX": 359.990479,
              "rotY": 180.002747,
              "rotZ": 179.921738,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27301,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0808849,
              "posY": 1.30458915,
              "posZ": -15.2483444,
              "rotX": 0.005381643,
              "rotY": 179.994919,
              "rotZ": 179.952011,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27309,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "9e3603",
            "Name": "Card",
            "Transform": {
              "posX": -24.6307755,
              "posY": 1.176079,
              "posZ": -14.8001871,
              "rotX": 0.0527719669,
              "rotY": 180.215286,
              "rotZ": 180.032867,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27331,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9126759,
              "posY": 1.1927259,
              "posZ": -14.8184252,
              "rotX": 359.9886,
              "rotY": 180.1045,
              "rotZ": 179.913681,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27327,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1777973,
              "posY": 1.17282784,
              "posZ": -14.9190617,
              "rotX": 0.00567509932,
              "rotY": 180.120071,
              "rotZ": 177.113358,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27318,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0841236,
              "posY": 1.1887486,
              "posZ": -14.7821283,
              "rotX": 359.9891,
              "rotY": 180.01416,
              "rotZ": 179.896774,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27328,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3581181,
              "posY": 1.18124413,
              "posZ": -14.8689175,
              "rotX": 359.976135,
              "rotY": 179.994461,
              "rotZ": 179.877792,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27322,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9374256,
              "posY": 1.20072138,
              "posZ": -14.9719687,
              "rotX": 359.985779,
              "rotY": 179.996231,
              "rotZ": 180.095947,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27320,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.2981453,
              "posY": 1.36408007,
              "posZ": -14.776823,
              "rotX": 359.973846,
              "rotY": 180.002029,
              "rotZ": 179.75354,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27303,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3201027,
              "posY": 1.283002,
              "posZ": -14.8662338,
              "rotX": 359.9886,
              "rotY": 179.906631,
              "rotZ": 174.226288,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27314,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1200237,
              "posY": 1.24557686,
              "posZ": -15.0046253,
              "rotX": 0.846033156,
              "rotY": 180.001816,
              "rotZ": 178.834076,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27315,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.31078,
              "posY": 1.20398641,
              "posZ": -14.9565,
              "rotX": 359.9483,
              "rotY": 179.982986,
              "rotZ": 179.786346,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27325,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.17766,
              "posY": 1.28723741,
              "posZ": -15.0604887,
              "rotX": 359.949036,
              "rotY": 179.97966,
              "rotZ": 179.795181,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27311,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9438686,
              "posY": 1.35246217,
              "posZ": -15.0534849,
              "rotX": 359.9734,
              "rotY": 179.997162,
              "rotZ": 179.976364,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27304,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0877724,
              "posY": 1.1982491,
              "posZ": -14.7376652,
              "rotX": -0.000459030125,
              "rotY": 180.006439,
              "rotZ": 179.8747,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27326,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.2181187,
              "posY": 1.18458879,
              "posZ": -14.9534225,
              "rotX": 1.26854324,
              "rotY": 179.962616,
              "rotZ": 177.705322,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27321,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9614067,
              "posY": 1.34314823,
              "posZ": -14.9299164,
              "rotX": 0.00328693725,
              "rotY": 180.001083,
              "rotZ": 179.989731,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27305,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9020119,
              "posY": 1.17187977,
              "posZ": -14.9643621,
              "rotX": -0.00151585531,
              "rotY": 179.995956,
              "rotZ": 179.798019,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27323,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3711777,
              "posY": 1.20989215,
              "posZ": -14.7242508,
              "rotX": -0.00246225647,
              "rotY": 180.008026,
              "rotZ": 179.7812,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27319,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.3394318,
              "posY": 1.3346808,
              "posZ": -14.8861456,
              "rotX": 359.946472,
              "rotY": 180.020081,
              "rotZ": 180.326141,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27306,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.8914776,
              "posY": 1.324815,
              "posZ": -15.1227493,
              "rotX": 359.9307,
              "rotY": 180.013474,
              "rotZ": 180.139374,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27307,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.1156273,
              "posY": 1.31639373,
              "posZ": -14.88042,
              "rotX": 359.9801,
              "rotY": 180.004318,
              "rotZ": 180.093658,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27308,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.208046,
              "posY": 1.154962,
              "posZ": -15.00407,
              "rotX": 1.3402,
              "rotY": 179.954422,
              "rotZ": 177.657043,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27324,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.91434,
              "posY": 1.22775316,
              "posZ": -15.0358944,
              "rotX": 359.9582,
              "rotY": 179.9605,
              "rotZ": 179.956436,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27317,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.9222851,
              "posY": 1.04363167,
              "posZ": -14.8758707,
              "rotX": 0.116052985,
              "rotY": 180.084122,
              "rotZ": 180.080948,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27332,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.041008,
              "posY": 1.46709239,
              "posZ": -14.7143946,
              "rotX": 359.94458,
              "rotY": 179.988571,
              "rotZ": 187.359848,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27300,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.8708477,
              "posY": 1.27626753,
              "posZ": -15.0637293,
              "rotX": 359.950073,
              "rotY": 179.992081,
              "rotZ": 179.8795,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27312,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -39.4068,
              "posY": 1.3832283,
              "posZ": 15.1159315,
              "rotX": -0.00445320876,
              "rotY": -8.743666E-05,
              "rotZ": 179.997208,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27316,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.078949,
              "posY": 1.37467217,
              "posZ": -14.69785,
              "rotX": -0.00331702456,
              "rotY": 180.005859,
              "rotZ": 179.830627,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27302,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -25.0335884,
              "posY": 1.19101191,
              "posZ": -14.8647919,
              "rotX": 359.9818,
              "rotY": 180.0282,
              "rotZ": 179.908844,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27329,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          },
          {
            "GUID": "b04eb1",
            "Name": "Card",
            "Transform": {
              "posX": -24.7053413,
              "posY": 1.38432038,
              "posZ": -15.1872559,
              "rotX": 1.6758846,
              "rotY": 180.053619,
              "rotZ": 182.415131,
              "scaleX": 0.625,
              "scaleY": 1.0,
              "scaleZ": 0.625
            },
            "Nickname": "",
            "Description": "",
            "GMNotes": "",
            "ColorDiffuse": {
              "r": 0.713235259,
              "g": 0.713235259,
              "b": 0.713235259
            },
            "LayoutGroupSortIndex": 0,
            "Value": 0,
            "Locked": false,
            "Grid": true,
            "Snap": true,
            "IgnoreFoW": false,
            "MeasureMovement": false,
            "DragSelectable": true,
            "Autoraise": true,
            "Sticky": true,
            "Tooltip": true,
            "GridProjection": false,
            "HideWhenFaceDown": false,
            "Hands": true,
            "CardID": 27330,
            "SidewaysCard": false,
            "CustomDeck": {
              "211": {
                "FaceURL": "http://cloud-3.steamusercontent.com/ugc/994640213021265380/5955A2DD3407B5205FEE43DFE90C86685B5C5E35/",
                "BackURL": "http://cloud-3.steamusercontent.com/ugc/919176040734153013/698D86D59D895E81014C563124F02588FC9C7F41/",
                "NumWidth": 10,
                "NumHeight": 7,
                "BackIsHidden": false,
                "UniqueBack": false,
                "Type": 0
              }
            },
            "LuaScript": "",
            "LuaScriptState": "",
            "XmlUI": ""
          }
        ]
      },
      {
        "GUID": "0db84a",
        "Name": "Custom_Model",
        "Transform": {
          "posX": -20.5142,
          "posY": 1.0,
          "posZ": 0.0,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 1.63,
          "scaleY": 1.2,
          "scaleZ": 1.63
        },
        "Nickname": "Red-Blue",
        "Description": "",
        "GMNotes": "",
        "Memo": "",
        "ColorDiffuse": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "LayoutGroupSortIndex": 0,
        "Value": 0,
        "Locked": true,
        "Grid": true,
        "Snap": true,
        "IgnoreFoW": false,
        "MeasureMovement": false,
        "DragSelectable": true,
        "Autoraise": true,
        "Sticky": true,
        "Tooltip": false,
        "GridProjection": false,
        "HideWhenFaceDown": false,
        "Hands": false,
        "CustomMesh": {
          "MeshURL": "https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/models/basicmat.obj",
          "DiffuseURL": "http://i.imgur.com/dKYBJMX.png",
          "NormalURL": "",
          "ColliderURL": "",
          "Convex": true,
          "MaterialIndex": 1,
          "TypeIndex": 4,
          "CustomShader": {
            "SpecularColor": {
              "r": 0.875,
              "g": 0.812880337,
              "b": 0.7463235
            },
            "SpecularIntensity": 0.0,
            "SpecularSharpness": 2.0,
            "FresnelStrength": 0.0
          },
          "CastShadows": true
        },
        "LuaScript": "-- ~~~~~~\r\n-- Script by dzikakulka\r\n-- Issues, history at: https://github.com/tjakubo2/TTS_xwing\r\n--\r\n-- Script applicable to playmats\r\n-- ~~~~~~\r\n\r\n-- TO ADD NEW IMAGES TO THE SET\r\n-- Just add their links to the table below in the same fashion\r\n\r\n-- Table of all images to be cycled through with NextImage()\r\nimageSet = {    'http://i.imgur.com/6IkNucB.jpg',\r\n                'http://cloud-3.steamusercontent.com/ugc/1483326815456337025/EB436BA5C3D1B0BAF4ED3325456E7211A669E3BF/',\r\n                'http://cloud-3.steamusercontent.com/ugc/1483326815456320038/68F5C582DBCBDC1070ACD4CE12091BFA73AE93F4/',\r\n                'https://i.imgur.com/siDMVxH.mp4',\r\n                'https://i.imgur.com/HXUBMXE.mp4',\r\n                'http://i.imgur.com/dczrasC.jpg',\r\n                'http://i.imgur.com/dKYBJMX.png',\r\n                'https://i.imgur.com/1veiNk9.jpg',\r\n                'http://i.imgur.com/8tDK0x8.png',\r\n                'http://i.imgur.com/sb2AJOz.png',\r\n                'https://i.imgur.com/KPtozCm.png',\r\n                'http://i.imgur.com/V7pWVak.png',\r\n                'http://i.imgur.com/spWTWy7.png',\r\n                'http://i.imgur.com/YdIAcvP.png',\r\n                'http://i.imgur.com/5CcjDzM.jpg',\r\n                'http://i.imgur.com/4WMSCSV.jpg',\r\n                'http://i.imgur.com/0FWrq21.jpg',\r\n                'http://i.imgur.com/x4LEk1A.jpg',\r\n                'http://i.imgur.com/fy6kooO.png',   }\r\n\r\n-- Mat flag for layouts\r\n__XW_Mat = true\r\n-- Parent layout name\r\n__XW_MatLayout = 'Standard'\r\n-- This mat identifier\r\n__XW_MatID = 'Red-Blue'\r\n\r\nfunction onLoad()\r\n    -- Restore current image index\r\n    currImage = tonumber(self.script_state) or 1\r\n    self.lock()\r\n    self.interactable = false\r\n    self.tooltip = false\r\nend\r\n\r\n-- Change image to the next from the list, wrap around to 1\r\n-- Reloads self to actually reflect the change\r\nfunction NextImage()\r\n    deleteAll()\r\n    -- Increment image index\r\n    local nextImage = currImage + 1\r\n    if nextImage > #imageSet then\r\n        nextImage = 1\r\n    end\r\n\r\n    -- Reload self with the new image and save the index\r\n    local custom = self.getCustomObject()\r\n    custom.diffuse = imageSet[nextImage]\r\n    self.setCustomObject(custom)\r\n    local newSelf = self.reload()\r\n    newSelf.script_state = nextImage\r\nend\r\n\r\n-- Please update me\r\n\r\n\r\ncorrScale = {0.625, 0.625, 0.625}\r\n\r\nfunction ToggleRulers()\r\n    deleteAll()\r\n    rulersState = rulersState + 1\r\n    if rulersState == 1 then\r\n      spawnSet(roidPos, roidRot)\r\n    elseif rulersState == 2 then\r\n      spawnSet(setupPos, setupRot)\r\n    elseif rulersState == 3 then\r\n      rulersState = 0\r\n    end\r\nend\r\n\r\nfunction spawnSet(posTable, rotTable)\r\n    -- please kill me\r\n    local function sPos(tab)\r\n        if self.getPosition()[1] < 0 then\r\n            return {-1*tab[1], tab[2], tab[3]}\r\n        else\r\n            return tab\r\n        end\r\n    end\r\n    local initPos = self.getPosition()\r\n    initPos.y = initPos.y - 3\r\n    for k,pos in pairs(posTable) do\r\n        local params = {} -- 50\r\n        params.type = 'Custom_Model'\r\n        params.position = initPos\r\n        --params.position = sPos(posTable[k])\r\n        --params.rotation = rotTable[k]\r\n        obj = spawnObject(params)\r\n        obj.setCustomObject(rulerData)\r\n        obj.setScale(corrScale)\r\n        obj.lock()\r\n        obj.setPositionSmooth(sPos(posTable[k]), false, true)\r\n        obj.setRotationSmooth(rotTable[k], false, true)\r\n        obj.addTag('TempLayoutElement')\r\n        rulers[obj] = true\r\n    end\r\nend\r\n\r\nfunction deleteAll()\r\n    for ruler in pairs(rulers) do ruler.destruct() end\r\n    rulers = {}\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\r\n    if rulers[obj] then\r\n        rulers[obj] = nil\r\n    end\r\nend\r\n\r\nrulers = {}\r\nrulersState = 0\r\nrulerData = {}\r\nrulerData.mesh = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj'\r\nrulerData.collider = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range13.obj'\r\nrulerData.diffuse = 'https://raw.githubusercontent.com/JohnnyCheese/TTS_X-Wing2.0/master/assets/Items/rulers/range.jpg'\r\nrulerData.material = 1\r\n\r\nroidRot = {\r\n    { 0, 270, 180},\r\n      { 0, 270, 180},\r\n    { 0, 180, 180},\r\n      { 0, 180, 180},\r\n    { 0, 270, 180},\r\n      { 0, 270, 180},\r\n    { 0, 0, 180},\r\n    { 0, 0, 180},\r\n    { 0, 90, 180},\r\n    { 0, 90, 180},\r\n    { 0, 180, 180},\r\n      { 0, 180, 180}\r\n}\r\n\r\nsetupRot = {\r\n    {0, 270, 0},\r\n    {0, 0, 0},\r\n    {0, 270, 0},\r\n    {0, 0, 0},\r\n    {0, 0, 0},\r\n    {0, 90, 0},\r\n    {0, 180, 0},\r\n    {0, 90, 0},\r\n    {0, 180, 0},\r\n    {0, 180, 0}\r\n}\r\n\r\nroidPos = {\r\n    { 29.872200088501, 0.99871951341629, -10.8846182632446}, -- pio\r\n      { 29.872200088501, 0.99871951341629, 0},\r\n    { 31.382360534668, 0.998719453811646, -9.37833354949951}, -- poz\r\n      { 20.5, 0.998719453811646, -9.37833354949951},\r\n    { 11.1684393310547, 0.998719573020935, -10.8876889038086},\r\n      { 11.1684393310547, 0.998719573020935, 0},\r\n    { 9.64546291351318, 0.998719453811646, -9.37820747375488},\r\n    { 9.64722316741943, 0.99871951341629, 9.37365325927734},\r\n    { 11.1658749008179, 0.998719453811646, 10.8807905578613},\r\n    { 29.8585949707031, 0.998719394207001, 10.8395362091064}, -- pio\r\n    { 31.3808876037598, 0.998719453811646, 9.32834770202637}, -- poz\r\n      { 20.5, 0.998719453811646, 9.32834770202637}\r\n}\r\n\r\nsetupPos = {\r\n    { 3.97240991592407, 1.00172388553619, -10.8451750564575}, --pio\r\n    { 9.67806907653809, 1.00172448158264, -12.4075313186646},\r\n    { 37.0594985961914, 1.00172400474548, -10.8700817108154}, --pio\r\n    { 20.5256023406982, 1.0017237663269, -12.4035499572754},\r\n    { 31.3721223449707, 1.00172340869904, -12.4002779006958},\r\n\r\n    { 3.97240991592407, 1.00172388553619, 10.8451750564575}, --pio\r\n    { 9.67806907653809, 1.00172448158264, 12.4075313186646},\r\n    { 37.0594985961914, 1.00172400474548, 10.8700817108154}, --pio\r\n    { 20.5256023406982, 1.0017237663269, 12.4035499572754},\r\n    { 31.3721223449707, 1.00172340869904, 12.4002779006958},\r\n}",
        "LuaScriptState": "7",
        "XmlUI": ""
      }
    ]
  }